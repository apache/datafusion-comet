== Physical Plan ==
TakeOrderedAndProject (78)
+- * Filter (77)
   +- * HashAggregate (76)
      +- * HashAggregate (75)
         +- * Project (74)
            +- * BroadcastHashJoin Inner BuildRight (73)
               :- Window (66)
               :  +- * CometColumnarToRow (65)
               :     +- CometSort (64)
               :        +- CometExchange (63)
               :           +- CometProject (62)
               :              +- CometFilter (61)
               :                 +- CometSortMergeJoin (60)
               :                    :- CometSort (31)
               :                    :  +- CometColumnarExchange (30)
               :                    :     +- * HashAggregate (29)
               :                    :        +- * CometColumnarToRow (28)
               :                    :           +- CometColumnarExchange (27)
               :                    :              +- * HashAggregate (26)
               :                    :                 +- * Project (25)
               :                    :                    +- * BroadcastHashJoin Inner BuildRight (24)
               :                    :                       :- * Project (17)
               :                    :                       :  +- Window (16)
               :                    :                       :     +- * CometColumnarToRow (15)
               :                    :                       :        +- CometSort (14)
               :                    :                       :           +- CometColumnarExchange (13)
               :                    :                       :              +- * HashAggregate (12)
               :                    :                       :                 +- * CometColumnarToRow (11)
               :                    :                       :                    +- CometExchange (10)
               :                    :                       :                       +- CometHashAggregate (9)
               :                    :                       :                          +- CometProject (8)
               :                    :                       :                             +- CometBroadcastHashJoin (7)
               :                    :                       :                                :- CometFilter (2)
               :                    :                       :                                :  +- CometNativeScan parquet spark_catalog.default.web_sales (1)
               :                    :                       :                                +- CometBroadcastExchange (6)
               :                    :                       :                                   +- CometProject (5)
               :                    :                       :                                      +- CometFilter (4)
               :                    :                       :                                         +- CometNativeScan parquet spark_catalog.default.date_dim (3)
               :                    :                       +- BroadcastExchange (23)
               :                    :                          +- * Project (22)
               :                    :                             +- Window (21)
               :                    :                                +- * CometColumnarToRow (20)
               :                    :                                   +- CometSort (19)
               :                    :                                      +- ReusedExchange (18)
               :                    +- CometSort (59)
               :                       +- CometColumnarExchange (58)
               :                          +- * HashAggregate (57)
               :                             +- * CometColumnarToRow (56)
               :                                +- CometColumnarExchange (55)
               :                                   +- * HashAggregate (54)
               :                                      +- * Project (53)
               :                                         +- * BroadcastHashJoin Inner BuildRight (52)
               :                                            :- * Project (45)
               :                                            :  +- Window (44)
               :                                            :     +- * CometColumnarToRow (43)
               :                                            :        +- CometSort (42)
               :                                            :           +- CometColumnarExchange (41)
               :                                            :              +- * HashAggregate (40)
               :                                            :                 +- * CometColumnarToRow (39)
               :                                            :                    +- CometExchange (38)
               :                                            :                       +- CometHashAggregate (37)
               :                                            :                          +- CometProject (36)
               :                                            :                             +- CometBroadcastHashJoin (35)
               :                                            :                                :- CometFilter (33)
               :                                            :                                :  +- CometNativeScan parquet spark_catalog.default.store_sales (32)
               :                                            :                                +- ReusedExchange (34)
               :                                            +- BroadcastExchange (51)
               :                                               +- * Project (50)
               :                                                  +- Window (49)
               :                                                     +- * CometColumnarToRow (48)
               :                                                        +- CometSort (47)
               :                                                           +- ReusedExchange (46)
               +- BroadcastExchange (72)
                  +- * Project (71)
                     +- Window (70)
                        +- * CometColumnarToRow (69)
                           +- CometSort (68)
                              +- ReusedExchange (67)


(1) CometNativeScan parquet spark_catalog.default.web_sales
Output [3]: [ws_item_sk#1, ws_sales_price#2, ws_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#3)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_sales_price:decimal(7,2)>

(2) CometFilter
Input [3]: [ws_item_sk#1, ws_sales_price#2, ws_sold_date_sk#3]
Condition : isnotnull(ws_item_sk#1)

(3) CometNativeScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#4, d_date#5, d_month_seq#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>

(4) CometFilter
Input [3]: [d_date_sk#4, d_date#5, d_month_seq#6]
Condition : (((isnotnull(d_month_seq#6) AND (d_month_seq#6 >= 1212)) AND (d_month_seq#6 <= 1223)) AND isnotnull(d_date_sk#4))

(5) CometProject
Input [3]: [d_date_sk#4, d_date#5, d_month_seq#6]
Arguments: [d_date_sk#4, d_date#5], [d_date_sk#4, d_date#5]

(6) CometBroadcastExchange
Input [2]: [d_date_sk#4, d_date#5]
Arguments: [d_date_sk#4, d_date#5]

(7) CometBroadcastHashJoin
Left output [3]: [ws_item_sk#1, ws_sales_price#2, ws_sold_date_sk#3]
Right output [2]: [d_date_sk#4, d_date#5]
Arguments: [ws_sold_date_sk#3], [d_date_sk#4], Inner, BuildRight

(8) CometProject
Input [5]: [ws_item_sk#1, ws_sales_price#2, ws_sold_date_sk#3, d_date_sk#4, d_date#5]
Arguments: [ws_item_sk#1, ws_sales_price#2, d_date#5], [ws_item_sk#1, ws_sales_price#2, d_date#5]

(9) CometHashAggregate
Input [3]: [ws_item_sk#1, ws_sales_price#2, d_date#5]
Keys [2]: [ws_item_sk#1, d_date#5]
Functions [1]: [partial_sum(UnscaledValue(ws_sales_price#2))]

(10) CometExchange
Input [3]: [ws_item_sk#1, d_date#5, sum#7]
Arguments: hashpartitioning(ws_item_sk#1, d_date#5, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(11) CometColumnarToRow [codegen id : 1]
Input [3]: [ws_item_sk#1, d_date#5, sum#7]

(12) HashAggregate [codegen id : 1]
Input [3]: [ws_item_sk#1, d_date#5, sum#7]
Keys [2]: [ws_item_sk#1, d_date#5]
Functions [1]: [sum(UnscaledValue(ws_sales_price#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_sales_price#2))#8]
Results [4]: [ws_item_sk#1 AS item_sk#9, d_date#5, MakeDecimal(sum(UnscaledValue(ws_sales_price#2))#8,17,2) AS sumws#10, ws_item_sk#1]

(13) CometColumnarExchange
Input [4]: [item_sk#9, d_date#5, sumws#10, ws_item_sk#1]
Arguments: hashpartitioning(ws_item_sk#1, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=2]

(14) CometSort
Input [4]: [item_sk#9, d_date#5, sumws#10, ws_item_sk#1]
Arguments: [item_sk#9, d_date#5, sumws#10, ws_item_sk#1], [ws_item_sk#1 ASC NULLS FIRST, d_date#5 ASC NULLS FIRST]

(15) CometColumnarToRow [codegen id : 2]
Input [4]: [item_sk#9, d_date#5, sumws#10, ws_item_sk#1]

(16) Window
Input [4]: [item_sk#9, d_date#5, sumws#10, ws_item_sk#1]
Arguments: [row_number() windowspecdefinition(ws_item_sk#1, d_date#5 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#11], [ws_item_sk#1], [d_date#5 ASC NULLS FIRST]

(17) Project [codegen id : 6]
Output [4]: [item_sk#9, d_date#5, sumws#10, rk#11]
Input [5]: [item_sk#9, d_date#5, sumws#10, ws_item_sk#1, rk#11]

(18) ReusedExchange [Reuses operator id: 13]
Output [4]: [item_sk#12, d_date#13, sumws#14, ws_item_sk#15]

(19) CometSort
Input [4]: [item_sk#12, d_date#13, sumws#14, ws_item_sk#15]
Arguments: [item_sk#12, d_date#13, sumws#14, ws_item_sk#15], [ws_item_sk#15 ASC NULLS FIRST, d_date#13 ASC NULLS FIRST]

(20) CometColumnarToRow [codegen id : 4]
Input [4]: [item_sk#12, d_date#13, sumws#14, ws_item_sk#15]

(21) Window
Input [4]: [item_sk#12, d_date#13, sumws#14, ws_item_sk#15]
Arguments: [row_number() windowspecdefinition(ws_item_sk#15, d_date#13 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#16], [ws_item_sk#15], [d_date#13 ASC NULLS FIRST]

(22) Project [codegen id : 5]
Output [3]: [item_sk#12, sumws#14, rk#16]
Input [5]: [item_sk#12, d_date#13, sumws#14, ws_item_sk#15, rk#16]

(23) BroadcastExchange
Input [3]: [item_sk#12, sumws#14, rk#16]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=3]

(24) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [item_sk#9]
Right keys [1]: [item_sk#12]
Join type: Inner
Join condition: (rk#11 >= rk#16)

(25) Project [codegen id : 6]
Output [4]: [item_sk#9, d_date#5, sumws#10, sumws#14]
Input [7]: [item_sk#9, d_date#5, sumws#10, rk#11, item_sk#12, sumws#14, rk#16]

(26) HashAggregate [codegen id : 6]
Input [4]: [item_sk#9, d_date#5, sumws#10, sumws#14]
Keys [3]: [item_sk#9, d_date#5, sumws#10]
Functions [1]: [partial_sum(sumws#14)]
Aggregate Attributes [2]: [sum#17, isEmpty#18]
Results [5]: [item_sk#9, d_date#5, sumws#10, sum#19, isEmpty#20]

(27) CometColumnarExchange
Input [5]: [item_sk#9, d_date#5, sumws#10, sum#19, isEmpty#20]
Arguments: hashpartitioning(item_sk#9, d_date#5, sumws#10, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=4]

(28) CometColumnarToRow [codegen id : 7]
Input [5]: [item_sk#9, d_date#5, sumws#10, sum#19, isEmpty#20]

(29) HashAggregate [codegen id : 7]
Input [5]: [item_sk#9, d_date#5, sumws#10, sum#19, isEmpty#20]
Keys [3]: [item_sk#9, d_date#5, sumws#10]
Functions [1]: [sum(sumws#14)]
Aggregate Attributes [1]: [sum(sumws#14)#21]
Results [3]: [item_sk#9, d_date#5, sum(sumws#14)#21 AS cume_sales#22]

(30) CometColumnarExchange
Input [3]: [item_sk#9, d_date#5, cume_sales#22]
Arguments: hashpartitioning(item_sk#9, d_date#5, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=5]

(31) CometSort
Input [3]: [item_sk#9, d_date#5, cume_sales#22]
Arguments: [item_sk#9, d_date#5, cume_sales#22], [item_sk#9 ASC NULLS FIRST, d_date#5 ASC NULLS FIRST]

(32) CometNativeScan parquet spark_catalog.default.store_sales
Output [3]: [ss_item_sk#23, ss_sales_price#24, ss_sold_date_sk#25]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#25)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_sales_price:decimal(7,2)>

(33) CometFilter
Input [3]: [ss_item_sk#23, ss_sales_price#24, ss_sold_date_sk#25]
Condition : isnotnull(ss_item_sk#23)

(34) ReusedExchange [Reuses operator id: 6]
Output [2]: [d_date_sk#26, d_date#27]

(35) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#23, ss_sales_price#24, ss_sold_date_sk#25]
Right output [2]: [d_date_sk#26, d_date#27]
Arguments: [ss_sold_date_sk#25], [d_date_sk#26], Inner, BuildRight

(36) CometProject
Input [5]: [ss_item_sk#23, ss_sales_price#24, ss_sold_date_sk#25, d_date_sk#26, d_date#27]
Arguments: [ss_item_sk#23, ss_sales_price#24, d_date#27], [ss_item_sk#23, ss_sales_price#24, d_date#27]

(37) CometHashAggregate
Input [3]: [ss_item_sk#23, ss_sales_price#24, d_date#27]
Keys [2]: [ss_item_sk#23, d_date#27]
Functions [1]: [partial_sum(UnscaledValue(ss_sales_price#24))]

(38) CometExchange
Input [3]: [ss_item_sk#23, d_date#27, sum#28]
Arguments: hashpartitioning(ss_item_sk#23, d_date#27, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(39) CometColumnarToRow [codegen id : 8]
Input [3]: [ss_item_sk#23, d_date#27, sum#28]

(40) HashAggregate [codegen id : 8]
Input [3]: [ss_item_sk#23, d_date#27, sum#28]
Keys [2]: [ss_item_sk#23, d_date#27]
Functions [1]: [sum(UnscaledValue(ss_sales_price#24))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_sales_price#24))#29]
Results [4]: [ss_item_sk#23 AS item_sk#30, d_date#27, MakeDecimal(sum(UnscaledValue(ss_sales_price#24))#29,17,2) AS sumss#31, ss_item_sk#23]

(41) CometColumnarExchange
Input [4]: [item_sk#30, d_date#27, sumss#31, ss_item_sk#23]
Arguments: hashpartitioning(ss_item_sk#23, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=7]

(42) CometSort
Input [4]: [item_sk#30, d_date#27, sumss#31, ss_item_sk#23]
Arguments: [item_sk#30, d_date#27, sumss#31, ss_item_sk#23], [ss_item_sk#23 ASC NULLS FIRST, d_date#27 ASC NULLS FIRST]

(43) CometColumnarToRow [codegen id : 9]
Input [4]: [item_sk#30, d_date#27, sumss#31, ss_item_sk#23]

(44) Window
Input [4]: [item_sk#30, d_date#27, sumss#31, ss_item_sk#23]
Arguments: [row_number() windowspecdefinition(ss_item_sk#23, d_date#27 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#32], [ss_item_sk#23], [d_date#27 ASC NULLS FIRST]

(45) Project [codegen id : 13]
Output [4]: [item_sk#30, d_date#27, sumss#31, rk#32]
Input [5]: [item_sk#30, d_date#27, sumss#31, ss_item_sk#23, rk#32]

(46) ReusedExchange [Reuses operator id: 41]
Output [4]: [item_sk#33, d_date#34, sumss#35, ss_item_sk#36]

(47) CometSort
Input [4]: [item_sk#33, d_date#34, sumss#35, ss_item_sk#36]
Arguments: [item_sk#33, d_date#34, sumss#35, ss_item_sk#36], [ss_item_sk#36 ASC NULLS FIRST, d_date#34 ASC NULLS FIRST]

(48) CometColumnarToRow [codegen id : 11]
Input [4]: [item_sk#33, d_date#34, sumss#35, ss_item_sk#36]

(49) Window
Input [4]: [item_sk#33, d_date#34, sumss#35, ss_item_sk#36]
Arguments: [row_number() windowspecdefinition(ss_item_sk#36, d_date#34 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#37], [ss_item_sk#36], [d_date#34 ASC NULLS FIRST]

(50) Project [codegen id : 12]
Output [3]: [item_sk#33, sumss#35, rk#37]
Input [5]: [item_sk#33, d_date#34, sumss#35, ss_item_sk#36, rk#37]

(51) BroadcastExchange
Input [3]: [item_sk#33, sumss#35, rk#37]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=8]

(52) BroadcastHashJoin [codegen id : 13]
Left keys [1]: [item_sk#30]
Right keys [1]: [item_sk#33]
Join type: Inner
Join condition: (rk#32 >= rk#37)

(53) Project [codegen id : 13]
Output [4]: [item_sk#30, d_date#27, sumss#31, sumss#35]
Input [7]: [item_sk#30, d_date#27, sumss#31, rk#32, item_sk#33, sumss#35, rk#37]

(54) HashAggregate [codegen id : 13]
Input [4]: [item_sk#30, d_date#27, sumss#31, sumss#35]
Keys [3]: [item_sk#30, d_date#27, sumss#31]
Functions [1]: [partial_sum(sumss#35)]
Aggregate Attributes [2]: [sum#38, isEmpty#39]
Results [5]: [item_sk#30, d_date#27, sumss#31, sum#40, isEmpty#41]

(55) CometColumnarExchange
Input [5]: [item_sk#30, d_date#27, sumss#31, sum#40, isEmpty#41]
Arguments: hashpartitioning(item_sk#30, d_date#27, sumss#31, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=9]

(56) CometColumnarToRow [codegen id : 14]
Input [5]: [item_sk#30, d_date#27, sumss#31, sum#40, isEmpty#41]

(57) HashAggregate [codegen id : 14]
Input [5]: [item_sk#30, d_date#27, sumss#31, sum#40, isEmpty#41]
Keys [3]: [item_sk#30, d_date#27, sumss#31]
Functions [1]: [sum(sumss#35)]
Aggregate Attributes [1]: [sum(sumss#35)#42]
Results [3]: [item_sk#30, d_date#27, sum(sumss#35)#42 AS cume_sales#43]

(58) CometColumnarExchange
Input [3]: [item_sk#30, d_date#27, cume_sales#43]
Arguments: hashpartitioning(item_sk#30, d_date#27, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=10]

(59) CometSort
Input [3]: [item_sk#30, d_date#27, cume_sales#43]
Arguments: [item_sk#30, d_date#27, cume_sales#43], [item_sk#30 ASC NULLS FIRST, d_date#27 ASC NULLS FIRST]

(60) CometSortMergeJoin
Left output [3]: [item_sk#9, d_date#5, cume_sales#22]
Right output [3]: [item_sk#30, d_date#27, cume_sales#43]
Arguments: [item_sk#9, d_date#5], [item_sk#30, d_date#27], FullOuter

(61) CometFilter
Input [6]: [item_sk#9, d_date#5, cume_sales#22, item_sk#30, d_date#27, cume_sales#43]
Condition : isnotnull(CASE WHEN isnotnull(item_sk#9) THEN item_sk#9 ELSE item_sk#30 END)

(62) CometProject
Input [6]: [item_sk#9, d_date#5, cume_sales#22, item_sk#30, d_date#27, cume_sales#43]
Arguments: [item_sk#44, d_date#45, web_sales#46, store_sales#47], [CASE WHEN isnotnull(item_sk#9) THEN item_sk#9 ELSE item_sk#30 END AS item_sk#44, CASE WHEN isnotnull(d_date#5) THEN d_date#5 ELSE d_date#27 END AS d_date#45, cume_sales#22 AS web_sales#46, cume_sales#43 AS store_sales#47]

(63) CometExchange
Input [4]: [item_sk#44, d_date#45, web_sales#46, store_sales#47]
Arguments: hashpartitioning(item_sk#44, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=11]

(64) CometSort
Input [4]: [item_sk#44, d_date#45, web_sales#46, store_sales#47]
Arguments: [item_sk#44, d_date#45, web_sales#46, store_sales#47], [item_sk#44 ASC NULLS FIRST, d_date#45 ASC NULLS FIRST]

(65) CometColumnarToRow [codegen id : 15]
Input [4]: [item_sk#44, d_date#45, web_sales#46, store_sales#47]

(66) Window
Input [4]: [item_sk#44, d_date#45, web_sales#46, store_sales#47]
Arguments: [row_number() windowspecdefinition(item_sk#44, d_date#45 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#48], [item_sk#44], [d_date#45 ASC NULLS FIRST]

(67) ReusedExchange [Reuses operator id: 63]
Output [4]: [item_sk#49, d_date#50, web_sales#51, store_sales#52]

(68) CometSort
Input [4]: [item_sk#49, d_date#50, web_sales#51, store_sales#52]
Arguments: [item_sk#49, d_date#50, web_sales#51, store_sales#52], [item_sk#49 ASC NULLS FIRST, d_date#50 ASC NULLS FIRST]

(69) CometColumnarToRow [codegen id : 30]
Input [4]: [item_sk#49, d_date#50, web_sales#51, store_sales#52]

(70) Window
Input [4]: [item_sk#49, d_date#50, web_sales#51, store_sales#52]
Arguments: [row_number() windowspecdefinition(item_sk#49, d_date#50 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#53], [item_sk#49], [d_date#50 ASC NULLS FIRST]

(71) Project [codegen id : 31]
Output [4]: [item_sk#49, web_sales#51, store_sales#52, rk#53]
Input [5]: [item_sk#49, d_date#50, web_sales#51, store_sales#52, rk#53]

(72) BroadcastExchange
Input [4]: [item_sk#49, web_sales#51, store_sales#52, rk#53]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=12]

(73) BroadcastHashJoin [codegen id : 32]
Left keys [1]: [item_sk#44]
Right keys [1]: [item_sk#49]
Join type: Inner
Join condition: (rk#48 >= rk#53)

(74) Project [codegen id : 32]
Output [6]: [item_sk#44, d_date#45, web_sales#46, store_sales#47, web_sales#51, store_sales#52]
Input [9]: [item_sk#44, d_date#45, web_sales#46, store_sales#47, rk#48, item_sk#49, web_sales#51, store_sales#52, rk#53]

(75) HashAggregate [codegen id : 32]
Input [6]: [item_sk#44, d_date#45, web_sales#46, store_sales#47, web_sales#51, store_sales#52]
Keys [4]: [item_sk#44, d_date#45, web_sales#46, store_sales#47]
Functions [2]: [partial_max(web_sales#51), partial_max(store_sales#52)]
Aggregate Attributes [2]: [max#54, max#55]
Results [6]: [item_sk#44, d_date#45, web_sales#46, store_sales#47, max#56, max#57]

(76) HashAggregate [codegen id : 32]
Input [6]: [item_sk#44, d_date#45, web_sales#46, store_sales#47, max#56, max#57]
Keys [4]: [item_sk#44, d_date#45, web_sales#46, store_sales#47]
Functions [2]: [max(web_sales#51), max(store_sales#52)]
Aggregate Attributes [2]: [max(web_sales#51)#58, max(store_sales#52)#59]
Results [6]: [item_sk#44, d_date#45, web_sales#46, store_sales#47, max(web_sales#51)#58 AS web_cumulative#60, max(store_sales#52)#59 AS store_cumulative#61]

(77) Filter [codegen id : 32]
Input [6]: [item_sk#44, d_date#45, web_sales#46, store_sales#47, web_cumulative#60, store_cumulative#61]
Condition : ((isnotnull(web_cumulative#60) AND isnotnull(store_cumulative#61)) AND (web_cumulative#60 > store_cumulative#61))

(78) TakeOrderedAndProject
Input [6]: [item_sk#44, d_date#45, web_sales#46, store_sales#47, web_cumulative#60, store_cumulative#61]
Arguments: 100, [item_sk#44 ASC NULLS FIRST, d_date#45 ASC NULLS FIRST], [item_sk#44, d_date#45, web_sales#46, store_sales#47, web_cumulative#60, store_cumulative#61]

