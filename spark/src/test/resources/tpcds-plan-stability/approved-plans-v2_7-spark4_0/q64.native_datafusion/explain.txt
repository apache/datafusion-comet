== Physical Plan ==
* CometColumnarToRow (183)
+- CometSort (182)
   +- CometExchange (181)
      +- CometProject (180)
         +- CometSortMergeJoin (179)
            :- CometSort (115)
            :  +- CometColumnarExchange (114)
            :     +- * HashAggregate (113)
            :        +- * HashAggregate (112)
            :           +- * Project (111)
            :              +- * BroadcastHashJoin Inner BuildRight (110)
            :                 :- * Project (104)
            :                 :  +- * BroadcastHashJoin Inner BuildRight (103)
            :                 :     :- * Project (101)
            :                 :     :  +- * BroadcastHashJoin Inner BuildRight (100)
            :                 :     :     :- * Project (95)
            :                 :     :     :  +- * BroadcastHashJoin Inner BuildRight (94)
            :                 :     :     :     :- * Project (92)
            :                 :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (91)
            :                 :     :     :     :     :- * Project (85)
            :                 :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (84)
            :                 :     :     :     :     :     :- * Project (82)
            :                 :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (81)
            :                 :     :     :     :     :     :     :- * Project (76)
            :                 :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (75)
            :                 :     :     :     :     :     :     :     :- * Project (70)
            :                 :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (69)
            :                 :     :     :     :     :     :     :     :     :- * Project (67)
            :                 :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (66)
            :                 :     :     :     :     :     :     :     :     :     :- * Project (60)
            :                 :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (59)
            :                 :     :     :     :     :     :     :     :     :     :     :- * Project (57)
            :                 :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (56)
            :                 :     :     :     :     :     :     :     :     :     :     :     :- * Project (51)
            :                 :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (50)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (45)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (44)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (38)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (37)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (32)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- * SortMergeJoin Inner (31)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- * CometColumnarToRow (11)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- CometSort (10)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- CometExchange (9)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- CometProject (8)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- CometBroadcastHashJoin (7)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              :- CometBroadcastExchange (3)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              :  +- CometFilter (2)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              :     +- CometNativeScan parquet spark_catalog.default.store_sales (1)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- CometProject (6)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- CometFilter (5)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                    +- CometNativeScan parquet spark_catalog.default.store_returns (4)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- * Sort (30)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- * Project (29)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- * Filter (28)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- * HashAggregate (27)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- * CometColumnarToRow (26)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                    +- CometExchange (25)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                       +- CometHashAggregate (24)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                          +- CometProject (23)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                             +- CometSortMergeJoin (22)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                :- CometSort (16)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                :  +- CometExchange (15)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                :     +- CometProject (14)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                :        +- CometFilter (13)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                :           +- CometNativeScan parquet spark_catalog.default.catalog_sales (12)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                +- CometSort (21)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                   +- CometExchange (20)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                      +- CometProject (19)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                         +- CometFilter (18)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                                            +- CometNativeScan parquet spark_catalog.default.catalog_returns (17)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange (36)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- * CometColumnarToRow (35)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- CometFilter (34)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- CometNativeScan parquet spark_catalog.default.date_dim (33)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange (43)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :        +- * CometColumnarToRow (42)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :           +- CometProject (41)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :              +- CometFilter (40)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     :                 +- CometNativeScan parquet spark_catalog.default.store (39)
            :                 :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange (49)
            :                 :     :     :     :     :     :     :     :     :     :     :     :        +- * CometColumnarToRow (48)
            :                 :     :     :     :     :     :     :     :     :     :     :     :           +- CometFilter (47)
            :                 :     :     :     :     :     :     :     :     :     :     :     :              +- CometNativeScan parquet spark_catalog.default.customer (46)
            :                 :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange (55)
            :                 :     :     :     :     :     :     :     :     :     :     :        +- * CometColumnarToRow (54)
            :                 :     :     :     :     :     :     :     :     :     :     :           +- CometFilter (53)
            :                 :     :     :     :     :     :     :     :     :     :     :              +- CometNativeScan parquet spark_catalog.default.date_dim (52)
            :                 :     :     :     :     :     :     :     :     :     :     +- ReusedExchange (58)
            :                 :     :     :     :     :     :     :     :     :     +- BroadcastExchange (65)
            :                 :     :     :     :     :     :     :     :     :        +- * CometColumnarToRow (64)
            :                 :     :     :     :     :     :     :     :     :           +- CometProject (63)
            :                 :     :     :     :     :     :     :     :     :              +- CometFilter (62)
            :                 :     :     :     :     :     :     :     :     :                 +- CometNativeScan parquet spark_catalog.default.customer_demographics (61)
            :                 :     :     :     :     :     :     :     :     +- ReusedExchange (68)
            :                 :     :     :     :     :     :     :     +- BroadcastExchange (74)
            :                 :     :     :     :     :     :     :        +- * CometColumnarToRow (73)
            :                 :     :     :     :     :     :     :           +- CometFilter (72)
            :                 :     :     :     :     :     :     :              +- CometNativeScan parquet spark_catalog.default.promotion (71)
            :                 :     :     :     :     :     :     +- BroadcastExchange (80)
            :                 :     :     :     :     :     :        +- * CometColumnarToRow (79)
            :                 :     :     :     :     :     :           +- CometFilter (78)
            :                 :     :     :     :     :     :              +- CometNativeScan parquet spark_catalog.default.household_demographics (77)
            :                 :     :     :     :     :     +- ReusedExchange (83)
            :                 :     :     :     :     +- BroadcastExchange (90)
            :                 :     :     :     :        +- * CometColumnarToRow (89)
            :                 :     :     :     :           +- CometProject (88)
            :                 :     :     :     :              +- CometFilter (87)
            :                 :     :     :     :                 +- CometNativeScan parquet spark_catalog.default.customer_address (86)
            :                 :     :     :     +- ReusedExchange (93)
            :                 :     :     +- BroadcastExchange (99)
            :                 :     :        +- * CometColumnarToRow (98)
            :                 :     :           +- CometFilter (97)
            :                 :     :              +- CometNativeScan parquet spark_catalog.default.income_band (96)
            :                 :     +- ReusedExchange (102)
            :                 +- BroadcastExchange (109)
            :                    +- * CometColumnarToRow (108)
            :                       +- CometProject (107)
            :                          +- CometFilter (106)
            :                             +- CometNativeScan parquet spark_catalog.default.item (105)
            +- CometSort (178)
               +- CometColumnarExchange (177)
                  +- * HashAggregate (176)
                     +- * HashAggregate (175)
                        +- * Project (174)
                           +- * BroadcastHashJoin Inner BuildRight (173)
                              :- * Project (171)
                              :  +- * BroadcastHashJoin Inner BuildRight (170)
                              :     :- * Project (168)
                              :     :  +- * BroadcastHashJoin Inner BuildRight (167)
                              :     :     :- * Project (165)
                              :     :     :  +- * BroadcastHashJoin Inner BuildRight (164)
                              :     :     :     :- * Project (162)
                              :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (161)
                              :     :     :     :     :- * Project (159)
                              :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (158)
                              :     :     :     :     :     :- * Project (156)
                              :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (155)
                              :     :     :     :     :     :     :- * Project (153)
                              :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (152)
                              :     :     :     :     :     :     :     :- * Project (150)
                              :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (149)
                              :     :     :     :     :     :     :     :     :- * Project (147)
                              :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (146)
                              :     :     :     :     :     :     :     :     :     :- * Project (144)
                              :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (143)
                              :     :     :     :     :     :     :     :     :     :     :- * Project (141)
                              :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (140)
                              :     :     :     :     :     :     :     :     :     :     :     :- * Project (138)
                              :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (137)
                              :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (135)
                              :     :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (134)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (132)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (131)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- * Project (126)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- * SortMergeJoin Inner (125)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :- * CometColumnarToRow (118)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :  +- CometSort (117)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange (116)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- * Sort (124)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- * Project (123)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- * Filter (122)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- * HashAggregate (121)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                 +- * CometColumnarToRow (120)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :     :                    +- ReusedExchange (119)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :     +- BroadcastExchange (130)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :        +- * CometColumnarToRow (129)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :           +- CometFilter (128)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     :              +- CometNativeScan parquet spark_catalog.default.date_dim (127)
                              :     :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange (133)
                              :     :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange (136)
                              :     :     :     :     :     :     :     :     :     :     :     +- ReusedExchange (139)
                              :     :     :     :     :     :     :     :     :     :     +- ReusedExchange (142)
                              :     :     :     :     :     :     :     :     :     +- ReusedExchange (145)
                              :     :     :     :     :     :     :     :     +- ReusedExchange (148)
                              :     :     :     :     :     :     :     +- ReusedExchange (151)
                              :     :     :     :     :     :     +- ReusedExchange (154)
                              :     :     :     :     :     +- ReusedExchange (157)
                              :     :     :     :     +- ReusedExchange (160)
                              :     :     :     +- ReusedExchange (163)
                              :     :     +- ReusedExchange (166)
                              :     +- ReusedExchange (169)
                              +- ReusedExchange (172)


(1) CometNativeScan parquet spark_catalog.default.store_sales
Output [12]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_ticket_number#8, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#12)]
PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_store_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_cdemo_sk), IsNotNull(ss_promo_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:decimal(7,2)>

(2) CometFilter
Input [12]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_ticket_number#8, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12]
Condition : (((((((isnotnull(ss_item_sk#1) AND isnotnull(ss_ticket_number#8)) AND isnotnull(ss_store_sk#6)) AND isnotnull(ss_customer_sk#2)) AND isnotnull(ss_cdemo_sk#3)) AND isnotnull(ss_promo_sk#7)) AND isnotnull(ss_hdemo_sk#4)) AND isnotnull(ss_addr_sk#5))

(3) CometBroadcastExchange
Input [12]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_ticket_number#8, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12]
Arguments: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_ticket_number#8, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12]

(4) CometNativeScan parquet spark_catalog.default.store_returns
Output [3]: [sr_item_sk#13, sr_ticket_number#14, sr_returned_date_sk#15]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_returns]
PushedFilters: [IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number)]
ReadSchema: struct<sr_item_sk:int,sr_ticket_number:int>

(5) CometFilter
Input [3]: [sr_item_sk#13, sr_ticket_number#14, sr_returned_date_sk#15]
Condition : (isnotnull(sr_item_sk#13) AND isnotnull(sr_ticket_number#14))

(6) CometProject
Input [3]: [sr_item_sk#13, sr_ticket_number#14, sr_returned_date_sk#15]
Arguments: [sr_item_sk#13, sr_ticket_number#14], [sr_item_sk#13, sr_ticket_number#14]

(7) CometBroadcastHashJoin
Left output [12]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_ticket_number#8, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12]
Right output [2]: [sr_item_sk#13, sr_ticket_number#14]
Arguments: [ss_item_sk#1, ss_ticket_number#8], [sr_item_sk#13, sr_ticket_number#14], Inner, BuildLeft

(8) CometProject
Input [14]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_ticket_number#8, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12, sr_item_sk#13, sr_ticket_number#14]
Arguments: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12], [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12]

(9) CometExchange
Input [11]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12]
Arguments: hashpartitioning(ss_item_sk#1, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(10) CometSort
Input [11]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12]
Arguments: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12], [ss_item_sk#1 ASC NULLS FIRST]

(11) CometColumnarToRow [codegen id : 1]
Input [11]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12]

(12) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [4]: [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18, cs_sold_date_sk#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_order_number)]
ReadSchema: struct<cs_item_sk:int,cs_order_number:int,cs_ext_list_price:decimal(7,2)>

(13) CometFilter
Input [4]: [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18, cs_sold_date_sk#19]
Condition : (isnotnull(cs_item_sk#16) AND isnotnull(cs_order_number#17))

(14) CometProject
Input [4]: [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18, cs_sold_date_sk#19]
Arguments: [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18], [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18]

(15) CometExchange
Input [3]: [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18]
Arguments: hashpartitioning(cs_item_sk#16, cs_order_number#17, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(16) CometSort
Input [3]: [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18]
Arguments: [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18], [cs_item_sk#16 ASC NULLS FIRST, cs_order_number#17 ASC NULLS FIRST]

(17) CometNativeScan parquet spark_catalog.default.catalog_returns
Output [6]: [cr_item_sk#20, cr_order_number#21, cr_refunded_cash#22, cr_reversed_charge#23, cr_store_credit#24, cr_returned_date_sk#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_returns]
PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)]
ReadSchema: struct<cr_item_sk:int,cr_order_number:int,cr_refunded_cash:decimal(7,2),cr_reversed_charge:decimal(7,2),cr_store_credit:decimal(7,2)>

(18) CometFilter
Input [6]: [cr_item_sk#20, cr_order_number#21, cr_refunded_cash#22, cr_reversed_charge#23, cr_store_credit#24, cr_returned_date_sk#25]
Condition : (isnotnull(cr_item_sk#20) AND isnotnull(cr_order_number#21))

(19) CometProject
Input [6]: [cr_item_sk#20, cr_order_number#21, cr_refunded_cash#22, cr_reversed_charge#23, cr_store_credit#24, cr_returned_date_sk#25]
Arguments: [cr_item_sk#20, cr_order_number#21, cr_refunded_cash#22, cr_reversed_charge#23, cr_store_credit#24], [cr_item_sk#20, cr_order_number#21, cr_refunded_cash#22, cr_reversed_charge#23, cr_store_credit#24]

(20) CometExchange
Input [5]: [cr_item_sk#20, cr_order_number#21, cr_refunded_cash#22, cr_reversed_charge#23, cr_store_credit#24]
Arguments: hashpartitioning(cr_item_sk#20, cr_order_number#21, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(21) CometSort
Input [5]: [cr_item_sk#20, cr_order_number#21, cr_refunded_cash#22, cr_reversed_charge#23, cr_store_credit#24]
Arguments: [cr_item_sk#20, cr_order_number#21, cr_refunded_cash#22, cr_reversed_charge#23, cr_store_credit#24], [cr_item_sk#20 ASC NULLS FIRST, cr_order_number#21 ASC NULLS FIRST]

(22) CometSortMergeJoin
Left output [3]: [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18]
Right output [5]: [cr_item_sk#20, cr_order_number#21, cr_refunded_cash#22, cr_reversed_charge#23, cr_store_credit#24]
Arguments: [cs_item_sk#16, cs_order_number#17], [cr_item_sk#20, cr_order_number#21], Inner

(23) CometProject
Input [8]: [cs_item_sk#16, cs_order_number#17, cs_ext_list_price#18, cr_item_sk#20, cr_order_number#21, cr_refunded_cash#22, cr_reversed_charge#23, cr_store_credit#24]
Arguments: [cs_item_sk#16, cs_ext_list_price#18, cr_refunded_cash#22, cr_reversed_charge#23, cr_store_credit#24], [cs_item_sk#16, cs_ext_list_price#18, cr_refunded_cash#22, cr_reversed_charge#23, cr_store_credit#24]

(24) CometHashAggregate
Input [5]: [cs_item_sk#16, cs_ext_list_price#18, cr_refunded_cash#22, cr_reversed_charge#23, cr_store_credit#24]
Keys [1]: [cs_item_sk#16]
Functions [2]: [partial_sum(UnscaledValue(cs_ext_list_price#18)), partial_sum(((cr_refunded_cash#22 + cr_reversed_charge#23) + cr_store_credit#24))]

(25) CometExchange
Input [4]: [cs_item_sk#16, sum#26, sum#27, isEmpty#28]
Arguments: hashpartitioning(cs_item_sk#16, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(26) CometColumnarToRow [codegen id : 2]
Input [4]: [cs_item_sk#16, sum#26, sum#27, isEmpty#28]

(27) HashAggregate [codegen id : 2]
Input [4]: [cs_item_sk#16, sum#26, sum#27, isEmpty#28]
Keys [1]: [cs_item_sk#16]
Functions [2]: [sum(UnscaledValue(cs_ext_list_price#18)), sum(((cr_refunded_cash#22 + cr_reversed_charge#23) + cr_store_credit#24))]
Aggregate Attributes [2]: [sum(UnscaledValue(cs_ext_list_price#18))#29, sum(((cr_refunded_cash#22 + cr_reversed_charge#23) + cr_store_credit#24))#30]
Results [3]: [cs_item_sk#16, MakeDecimal(sum(UnscaledValue(cs_ext_list_price#18))#29,17,2) AS sale#31, sum(((cr_refunded_cash#22 + cr_reversed_charge#23) + cr_store_credit#24))#30 AS refund#32]

(28) Filter [codegen id : 2]
Input [3]: [cs_item_sk#16, sale#31, refund#32]
Condition : ((isnotnull(sale#31) AND isnotnull(refund#32)) AND (cast(sale#31 as decimal(21,2)) > (2 * refund#32)))

(29) Project [codegen id : 2]
Output [1]: [cs_item_sk#16]
Input [3]: [cs_item_sk#16, sale#31, refund#32]

(30) Sort [codegen id : 2]
Input [1]: [cs_item_sk#16]
Arguments: [cs_item_sk#16 ASC NULLS FIRST], false, 0

(31) SortMergeJoin [codegen id : 18]
Left keys [1]: [ss_item_sk#1]
Right keys [1]: [cs_item_sk#16]
Join type: Inner
Join condition: None

(32) Project [codegen id : 18]
Output [11]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12]
Input [12]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12, cs_item_sk#16]

(33) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#33, d_year#34]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(34) CometFilter
Input [2]: [d_date_sk#33, d_year#34]
Condition : ((isnotnull(d_year#34) AND (d_year#34 = 1999)) AND isnotnull(d_date_sk#33))

(35) CometColumnarToRow [codegen id : 3]
Input [2]: [d_date_sk#33, d_year#34]

(36) BroadcastExchange
Input [2]: [d_date_sk#33, d_year#34]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=5]

(37) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ss_sold_date_sk#12]
Right keys [1]: [d_date_sk#33]
Join type: Inner
Join condition: None

(38) Project [codegen id : 18]
Output [11]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34]
Input [13]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, ss_sold_date_sk#12, d_date_sk#33, d_year#34]

(39) CometNativeScan parquet spark_catalog.default.store
Output [3]: [s_store_sk#35, s_store_name#36, s_zip#37]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name)]
ReadSchema: struct<s_store_sk:int,s_store_name:string,s_zip:string>

(40) CometFilter
Input [3]: [s_store_sk#35, s_store_name#36, s_zip#37]
Condition : ((isnotnull(s_store_sk#35) AND isnotnull(s_store_name#36)) AND isnotnull(static_invoke(CharVarcharCodegenUtils.readSidePadding(s_zip#37, 10))))

(41) CometProject
Input [3]: [s_store_sk#35, s_store_name#36, s_zip#37]
Arguments: [s_store_sk#35, s_store_name#36, s_zip#38], [s_store_sk#35, s_store_name#36, static_invoke(CharVarcharCodegenUtils.readSidePadding(s_zip#37, 10)) AS s_zip#38]

(42) CometColumnarToRow [codegen id : 4]
Input [3]: [s_store_sk#35, s_store_name#36, s_zip#38]

(43) BroadcastExchange
Input [3]: [s_store_sk#35, s_store_name#36, s_zip#38]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6]

(44) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ss_store_sk#6]
Right keys [1]: [s_store_sk#35]
Join type: Inner
Join condition: None

(45) Project [codegen id : 18]
Output [12]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38]
Input [14]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_store_sk#6, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_sk#35, s_store_name#36, s_zip#38]

(46) CometNativeScan parquet spark_catalog.default.customer
Output [6]: [c_customer_sk#39, c_current_cdemo_sk#40, c_current_hdemo_sk#41, c_current_addr_sk#42, c_first_shipto_date_sk#43, c_first_sales_date_sk#44]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_first_sales_date_sk), IsNotNull(c_first_shipto_date_sk), IsNotNull(c_current_cdemo_sk), IsNotNull(c_current_hdemo_sk), IsNotNull(c_current_addr_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c_first_shipto_date_sk:int,c_first_sales_date_sk:int>

(47) CometFilter
Input [6]: [c_customer_sk#39, c_current_cdemo_sk#40, c_current_hdemo_sk#41, c_current_addr_sk#42, c_first_shipto_date_sk#43, c_first_sales_date_sk#44]
Condition : (((((isnotnull(c_customer_sk#39) AND isnotnull(c_first_sales_date_sk#44)) AND isnotnull(c_first_shipto_date_sk#43)) AND isnotnull(c_current_cdemo_sk#40)) AND isnotnull(c_current_hdemo_sk#41)) AND isnotnull(c_current_addr_sk#42))

(48) CometColumnarToRow [codegen id : 5]
Input [6]: [c_customer_sk#39, c_current_cdemo_sk#40, c_current_hdemo_sk#41, c_current_addr_sk#42, c_first_shipto_date_sk#43, c_first_sales_date_sk#44]

(49) BroadcastExchange
Input [6]: [c_customer_sk#39, c_current_cdemo_sk#40, c_current_hdemo_sk#41, c_current_addr_sk#42, c_first_shipto_date_sk#43, c_first_sales_date_sk#44]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=7]

(50) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ss_customer_sk#2]
Right keys [1]: [c_customer_sk#39]
Join type: Inner
Join condition: None

(51) Project [codegen id : 18]
Output [16]: [ss_item_sk#1, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_cdemo_sk#40, c_current_hdemo_sk#41, c_current_addr_sk#42, c_first_shipto_date_sk#43, c_first_sales_date_sk#44]
Input [18]: [ss_item_sk#1, ss_customer_sk#2, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_customer_sk#39, c_current_cdemo_sk#40, c_current_hdemo_sk#41, c_current_addr_sk#42, c_first_shipto_date_sk#43, c_first_sales_date_sk#44]

(52) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#45, d_year#46]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(53) CometFilter
Input [2]: [d_date_sk#45, d_year#46]
Condition : isnotnull(d_date_sk#45)

(54) CometColumnarToRow [codegen id : 6]
Input [2]: [d_date_sk#45, d_year#46]

(55) BroadcastExchange
Input [2]: [d_date_sk#45, d_year#46]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=8]

(56) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [c_first_sales_date_sk#44]
Right keys [1]: [d_date_sk#45]
Join type: Inner
Join condition: None

(57) Project [codegen id : 18]
Output [16]: [ss_item_sk#1, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_cdemo_sk#40, c_current_hdemo_sk#41, c_current_addr_sk#42, c_first_shipto_date_sk#43, d_year#46]
Input [18]: [ss_item_sk#1, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_cdemo_sk#40, c_current_hdemo_sk#41, c_current_addr_sk#42, c_first_shipto_date_sk#43, c_first_sales_date_sk#44, d_date_sk#45, d_year#46]

(58) ReusedExchange [Reuses operator id: 55]
Output [2]: [d_date_sk#47, d_year#48]

(59) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [c_first_shipto_date_sk#43]
Right keys [1]: [d_date_sk#47]
Join type: Inner
Join condition: None

(60) Project [codegen id : 18]
Output [16]: [ss_item_sk#1, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_cdemo_sk#40, c_current_hdemo_sk#41, c_current_addr_sk#42, d_year#46, d_year#48]
Input [18]: [ss_item_sk#1, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_cdemo_sk#40, c_current_hdemo_sk#41, c_current_addr_sk#42, c_first_shipto_date_sk#43, d_year#46, d_date_sk#47, d_year#48]

(61) CometNativeScan parquet spark_catalog.default.customer_demographics
Output [2]: [cd_demo_sk#49, cd_marital_status#50]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>

(62) CometFilter
Input [2]: [cd_demo_sk#49, cd_marital_status#50]
Condition : (isnotnull(cd_demo_sk#49) AND isnotnull(static_invoke(CharVarcharCodegenUtils.readSidePadding(cd_marital_status#50, 1))))

(63) CometProject
Input [2]: [cd_demo_sk#49, cd_marital_status#50]
Arguments: [cd_demo_sk#49, cd_marital_status#51], [cd_demo_sk#49, static_invoke(CharVarcharCodegenUtils.readSidePadding(cd_marital_status#50, 1)) AS cd_marital_status#51]

(64) CometColumnarToRow [codegen id : 8]
Input [2]: [cd_demo_sk#49, cd_marital_status#51]

(65) BroadcastExchange
Input [2]: [cd_demo_sk#49, cd_marital_status#51]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=9]

(66) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ss_cdemo_sk#3]
Right keys [1]: [cd_demo_sk#49]
Join type: Inner
Join condition: None

(67) Project [codegen id : 18]
Output [16]: [ss_item_sk#1, ss_hdemo_sk#4, ss_addr_sk#5, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_cdemo_sk#40, c_current_hdemo_sk#41, c_current_addr_sk#42, d_year#46, d_year#48, cd_marital_status#51]
Input [18]: [ss_item_sk#1, ss_cdemo_sk#3, ss_hdemo_sk#4, ss_addr_sk#5, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_cdemo_sk#40, c_current_hdemo_sk#41, c_current_addr_sk#42, d_year#46, d_year#48, cd_demo_sk#49, cd_marital_status#51]

(68) ReusedExchange [Reuses operator id: 65]
Output [2]: [cd_demo_sk#52, cd_marital_status#53]

(69) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [c_current_cdemo_sk#40]
Right keys [1]: [cd_demo_sk#52]
Join type: Inner
Join condition: NOT (cd_marital_status#51 = cd_marital_status#53)

(70) Project [codegen id : 18]
Output [14]: [ss_item_sk#1, ss_hdemo_sk#4, ss_addr_sk#5, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_hdemo_sk#41, c_current_addr_sk#42, d_year#46, d_year#48]
Input [18]: [ss_item_sk#1, ss_hdemo_sk#4, ss_addr_sk#5, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_cdemo_sk#40, c_current_hdemo_sk#41, c_current_addr_sk#42, d_year#46, d_year#48, cd_marital_status#51, cd_demo_sk#52, cd_marital_status#53]

(71) CometNativeScan parquet spark_catalog.default.promotion
Output [1]: [p_promo_sk#54]
Batched: true
Location [not included in comparison]/{warehouse_dir}/promotion]
PushedFilters: [IsNotNull(p_promo_sk)]
ReadSchema: struct<p_promo_sk:int>

(72) CometFilter
Input [1]: [p_promo_sk#54]
Condition : isnotnull(p_promo_sk#54)

(73) CometColumnarToRow [codegen id : 10]
Input [1]: [p_promo_sk#54]

(74) BroadcastExchange
Input [1]: [p_promo_sk#54]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=10]

(75) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ss_promo_sk#7]
Right keys [1]: [p_promo_sk#54]
Join type: Inner
Join condition: None

(76) Project [codegen id : 18]
Output [13]: [ss_item_sk#1, ss_hdemo_sk#4, ss_addr_sk#5, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_hdemo_sk#41, c_current_addr_sk#42, d_year#46, d_year#48]
Input [15]: [ss_item_sk#1, ss_hdemo_sk#4, ss_addr_sk#5, ss_promo_sk#7, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_hdemo_sk#41, c_current_addr_sk#42, d_year#46, d_year#48, p_promo_sk#54]

(77) CometNativeScan parquet spark_catalog.default.household_demographics
Output [2]: [hd_demo_sk#55, hd_income_band_sk#56]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [IsNotNull(hd_demo_sk), IsNotNull(hd_income_band_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_income_band_sk:int>

(78) CometFilter
Input [2]: [hd_demo_sk#55, hd_income_band_sk#56]
Condition : (isnotnull(hd_demo_sk#55) AND isnotnull(hd_income_band_sk#56))

(79) CometColumnarToRow [codegen id : 11]
Input [2]: [hd_demo_sk#55, hd_income_band_sk#56]

(80) BroadcastExchange
Input [2]: [hd_demo_sk#55, hd_income_band_sk#56]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=11]

(81) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ss_hdemo_sk#4]
Right keys [1]: [hd_demo_sk#55]
Join type: Inner
Join condition: None

(82) Project [codegen id : 18]
Output [13]: [ss_item_sk#1, ss_addr_sk#5, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_hdemo_sk#41, c_current_addr_sk#42, d_year#46, d_year#48, hd_income_band_sk#56]
Input [15]: [ss_item_sk#1, ss_hdemo_sk#4, ss_addr_sk#5, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_hdemo_sk#41, c_current_addr_sk#42, d_year#46, d_year#48, hd_demo_sk#55, hd_income_band_sk#56]

(83) ReusedExchange [Reuses operator id: 80]
Output [2]: [hd_demo_sk#57, hd_income_band_sk#58]

(84) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [c_current_hdemo_sk#41]
Right keys [1]: [hd_demo_sk#57]
Join type: Inner
Join condition: None

(85) Project [codegen id : 18]
Output [13]: [ss_item_sk#1, ss_addr_sk#5, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_addr_sk#42, d_year#46, d_year#48, hd_income_band_sk#56, hd_income_band_sk#58]
Input [15]: [ss_item_sk#1, ss_addr_sk#5, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_hdemo_sk#41, c_current_addr_sk#42, d_year#46, d_year#48, hd_income_band_sk#56, hd_demo_sk#57, hd_income_band_sk#58]

(86) CometNativeScan parquet spark_catalog.default.customer_address
Output [5]: [ca_address_sk#59, ca_street_number#60, ca_street_name#61, ca_city#62, ca_zip#63]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_city:string,ca_zip:string>

(87) CometFilter
Input [5]: [ca_address_sk#59, ca_street_number#60, ca_street_name#61, ca_city#62, ca_zip#63]
Condition : isnotnull(ca_address_sk#59)

(88) CometProject
Input [5]: [ca_address_sk#59, ca_street_number#60, ca_street_name#61, ca_city#62, ca_zip#63]
Arguments: [ca_address_sk#59, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65], [ca_address_sk#59, static_invoke(CharVarcharCodegenUtils.readSidePadding(ca_street_number#60, 10)) AS ca_street_number#64, ca_street_name#61, ca_city#62, static_invoke(CharVarcharCodegenUtils.readSidePadding(ca_zip#63, 10)) AS ca_zip#65]

(89) CometColumnarToRow [codegen id : 13]
Input [5]: [ca_address_sk#59, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65]

(90) BroadcastExchange
Input [5]: [ca_address_sk#59, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=12]

(91) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ss_addr_sk#5]
Right keys [1]: [ca_address_sk#59]
Join type: Inner
Join condition: None

(92) Project [codegen id : 18]
Output [16]: [ss_item_sk#1, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_addr_sk#42, d_year#46, d_year#48, hd_income_band_sk#56, hd_income_band_sk#58, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65]
Input [18]: [ss_item_sk#1, ss_addr_sk#5, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_addr_sk#42, d_year#46, d_year#48, hd_income_band_sk#56, hd_income_band_sk#58, ca_address_sk#59, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65]

(93) ReusedExchange [Reuses operator id: 90]
Output [5]: [ca_address_sk#66, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70]

(94) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [c_current_addr_sk#42]
Right keys [1]: [ca_address_sk#66]
Join type: Inner
Join condition: None

(95) Project [codegen id : 18]
Output [19]: [ss_item_sk#1, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, d_year#46, d_year#48, hd_income_band_sk#56, hd_income_band_sk#58, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70]
Input [21]: [ss_item_sk#1, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, c_current_addr_sk#42, d_year#46, d_year#48, hd_income_band_sk#56, hd_income_band_sk#58, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65, ca_address_sk#66, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70]

(96) CometNativeScan parquet spark_catalog.default.income_band
Output [1]: [ib_income_band_sk#71]
Batched: true
Location [not included in comparison]/{warehouse_dir}/income_band]
PushedFilters: [IsNotNull(ib_income_band_sk)]
ReadSchema: struct<ib_income_band_sk:int>

(97) CometFilter
Input [1]: [ib_income_band_sk#71]
Condition : isnotnull(ib_income_band_sk#71)

(98) CometColumnarToRow [codegen id : 15]
Input [1]: [ib_income_band_sk#71]

(99) BroadcastExchange
Input [1]: [ib_income_band_sk#71]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=13]

(100) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [hd_income_band_sk#56]
Right keys [1]: [ib_income_band_sk#71]
Join type: Inner
Join condition: None

(101) Project [codegen id : 18]
Output [18]: [ss_item_sk#1, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, d_year#46, d_year#48, hd_income_band_sk#58, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70]
Input [20]: [ss_item_sk#1, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, d_year#46, d_year#48, hd_income_band_sk#56, hd_income_band_sk#58, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70, ib_income_band_sk#71]

(102) ReusedExchange [Reuses operator id: 99]
Output [1]: [ib_income_band_sk#72]

(103) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [hd_income_band_sk#58]
Right keys [1]: [ib_income_band_sk#72]
Join type: Inner
Join condition: None

(104) Project [codegen id : 18]
Output [17]: [ss_item_sk#1, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, d_year#46, d_year#48, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70]
Input [19]: [ss_item_sk#1, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, d_year#46, d_year#48, hd_income_band_sk#58, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70, ib_income_band_sk#72]

(105) CometNativeScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#73, i_current_price#74, i_color#75, i_product_name#76]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,64.00), LessThanOrEqual(i_current_price,74.00), GreaterThanOrEqual(i_current_price,65.00), LessThanOrEqual(i_current_price,79.00), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_color:string,i_product_name:string>

(106) CometFilter
Input [4]: [i_item_sk#73, i_current_price#74, i_color#75, i_product_name#76]
Condition : ((((((isnotnull(i_current_price#74) AND static_invoke(CharVarcharCodegenUtils.readSidePadding(i_color#75, 20)) IN (purple              ,burlywood           ,indian              ,spring              ,floral              ,medium              )) AND (i_current_price#74 >= 64.00)) AND (i_current_price#74 <= 74.00)) AND (i_current_price#74 >= 65.00)) AND (i_current_price#74 <= 79.00)) AND isnotnull(i_item_sk#73))

(107) CometProject
Input [4]: [i_item_sk#73, i_current_price#74, i_color#75, i_product_name#76]
Arguments: [i_item_sk#73, i_product_name#77], [i_item_sk#73, static_invoke(CharVarcharCodegenUtils.readSidePadding(i_product_name#76, 50)) AS i_product_name#77]

(108) CometColumnarToRow [codegen id : 17]
Input [2]: [i_item_sk#73, i_product_name#77]

(109) BroadcastExchange
Input [2]: [i_item_sk#73, i_product_name#77]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=14]

(110) BroadcastHashJoin [codegen id : 18]
Left keys [1]: [ss_item_sk#1]
Right keys [1]: [i_item_sk#73]
Join type: Inner
Join condition: None

(111) Project [codegen id : 18]
Output [18]: [ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, d_year#46, d_year#48, s_store_name#36, s_zip#38, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70, i_item_sk#73, i_product_name#77]
Input [19]: [ss_item_sk#1, ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, s_store_name#36, s_zip#38, d_year#46, d_year#48, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70, i_item_sk#73, i_product_name#77]

(112) HashAggregate [codegen id : 18]
Input [18]: [ss_wholesale_cost#9, ss_list_price#10, ss_coupon_amt#11, d_year#34, d_year#46, d_year#48, s_store_name#36, s_zip#38, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70, i_item_sk#73, i_product_name#77]
Keys [15]: [i_product_name#77, i_item_sk#73, s_store_name#36, s_zip#38, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70, d_year#34, d_year#46, d_year#48]
Functions [4]: [partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#9)), partial_sum(UnscaledValue(ss_list_price#10)), partial_sum(UnscaledValue(ss_coupon_amt#11))]
Aggregate Attributes [4]: [count#78, sum#79, sum#80, sum#81]
Results [19]: [i_product_name#77, i_item_sk#73, s_store_name#36, s_zip#38, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70, d_year#34, d_year#46, d_year#48, count#82, sum#83, sum#84, sum#85]

(113) HashAggregate [codegen id : 18]
Input [19]: [i_product_name#77, i_item_sk#73, s_store_name#36, s_zip#38, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70, d_year#34, d_year#46, d_year#48, count#82, sum#83, sum#84, sum#85]
Keys [15]: [i_product_name#77, i_item_sk#73, s_store_name#36, s_zip#38, ca_street_number#64, ca_street_name#61, ca_city#62, ca_zip#65, ca_street_number#67, ca_street_name#68, ca_city#69, ca_zip#70, d_year#34, d_year#46, d_year#48]
Functions [4]: [count(1), sum(UnscaledValue(ss_wholesale_cost#9)), sum(UnscaledValue(ss_list_price#10)), sum(UnscaledValue(ss_coupon_amt#11))]
Aggregate Attributes [4]: [count(1)#86, sum(UnscaledValue(ss_wholesale_cost#9))#87, sum(UnscaledValue(ss_list_price#10))#88, sum(UnscaledValue(ss_coupon_amt#11))#89]
Results [17]: [i_product_name#77 AS product_name#90, i_item_sk#73 AS item_sk#91, s_store_name#36 AS store_name#92, s_zip#38 AS store_zip#93, ca_street_number#64 AS b_street_number#94, ca_street_name#61 AS b_streen_name#95, ca_city#62 AS b_city#96, ca_zip#65 AS b_zip#97, ca_street_number#67 AS c_street_number#98, ca_street_name#68 AS c_street_name#99, ca_city#69 AS c_city#100, ca_zip#70 AS c_zip#101, d_year#34 AS syear#102, count(1)#86 AS cnt#103, MakeDecimal(sum(UnscaledValue(ss_wholesale_cost#9))#87,17,2) AS s1#104, MakeDecimal(sum(UnscaledValue(ss_list_price#10))#88,17,2) AS s2#105, MakeDecimal(sum(UnscaledValue(ss_coupon_amt#11))#89,17,2) AS s3#106]

(114) CometColumnarExchange
Input [17]: [product_name#90, item_sk#91, store_name#92, store_zip#93, b_street_number#94, b_streen_name#95, b_city#96, b_zip#97, c_street_number#98, c_street_name#99, c_city#100, c_zip#101, syear#102, cnt#103, s1#104, s2#105, s3#106]
Arguments: hashpartitioning(item_sk#91, store_name#92, store_zip#93, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=15]

(115) CometSort
Input [17]: [product_name#90, item_sk#91, store_name#92, store_zip#93, b_street_number#94, b_streen_name#95, b_city#96, b_zip#97, c_street_number#98, c_street_name#99, c_city#100, c_zip#101, syear#102, cnt#103, s1#104, s2#105, s3#106]
Arguments: [product_name#90, item_sk#91, store_name#92, store_zip#93, b_street_number#94, b_streen_name#95, b_city#96, b_zip#97, c_street_number#98, c_street_name#99, c_city#100, c_zip#101, syear#102, cnt#103, s1#104, s2#105, s3#106], [item_sk#91 ASC NULLS FIRST, store_name#92 ASC NULLS FIRST, store_zip#93 ASC NULLS FIRST]

(116) ReusedExchange [Reuses operator id: 9]
Output [11]: [ss_item_sk#107, ss_customer_sk#108, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_store_sk#112, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, ss_sold_date_sk#117]

(117) CometSort
Input [11]: [ss_item_sk#107, ss_customer_sk#108, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_store_sk#112, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, ss_sold_date_sk#117]
Arguments: [ss_item_sk#107, ss_customer_sk#108, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_store_sk#112, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, ss_sold_date_sk#117], [ss_item_sk#107 ASC NULLS FIRST]

(118) CometColumnarToRow [codegen id : 19]
Input [11]: [ss_item_sk#107, ss_customer_sk#108, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_store_sk#112, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, ss_sold_date_sk#117]

(119) ReusedExchange [Reuses operator id: 25]
Output [4]: [cs_item_sk#118, sum#119, sum#120, isEmpty#121]

(120) CometColumnarToRow [codegen id : 20]
Input [4]: [cs_item_sk#118, sum#119, sum#120, isEmpty#121]

(121) HashAggregate [codegen id : 20]
Input [4]: [cs_item_sk#118, sum#119, sum#120, isEmpty#121]
Keys [1]: [cs_item_sk#118]
Functions [2]: [sum(UnscaledValue(cs_ext_list_price#122)), sum(((cr_refunded_cash#123 + cr_reversed_charge#124) + cr_store_credit#125))]
Aggregate Attributes [2]: [sum(UnscaledValue(cs_ext_list_price#122))#29, sum(((cr_refunded_cash#123 + cr_reversed_charge#124) + cr_store_credit#125))#30]
Results [3]: [cs_item_sk#118, MakeDecimal(sum(UnscaledValue(cs_ext_list_price#122))#29,17,2) AS sale#126, sum(((cr_refunded_cash#123 + cr_reversed_charge#124) + cr_store_credit#125))#30 AS refund#127]

(122) Filter [codegen id : 20]
Input [3]: [cs_item_sk#118, sale#126, refund#127]
Condition : ((isnotnull(sale#126) AND isnotnull(refund#127)) AND (cast(sale#126 as decimal(21,2)) > (2 * refund#127)))

(123) Project [codegen id : 20]
Output [1]: [cs_item_sk#118]
Input [3]: [cs_item_sk#118, sale#126, refund#127]

(124) Sort [codegen id : 20]
Input [1]: [cs_item_sk#118]
Arguments: [cs_item_sk#118 ASC NULLS FIRST], false, 0

(125) SortMergeJoin [codegen id : 36]
Left keys [1]: [ss_item_sk#107]
Right keys [1]: [cs_item_sk#118]
Join type: Inner
Join condition: None

(126) Project [codegen id : 36]
Output [11]: [ss_item_sk#107, ss_customer_sk#108, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_store_sk#112, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, ss_sold_date_sk#117]
Input [12]: [ss_item_sk#107, ss_customer_sk#108, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_store_sk#112, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, ss_sold_date_sk#117, cs_item_sk#118]

(127) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#128, d_year#129]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(128) CometFilter
Input [2]: [d_date_sk#128, d_year#129]
Condition : ((isnotnull(d_year#129) AND (d_year#129 = 2000)) AND isnotnull(d_date_sk#128))

(129) CometColumnarToRow [codegen id : 21]
Input [2]: [d_date_sk#128, d_year#129]

(130) BroadcastExchange
Input [2]: [d_date_sk#128, d_year#129]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=16]

(131) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [ss_sold_date_sk#117]
Right keys [1]: [d_date_sk#128]
Join type: Inner
Join condition: None

(132) Project [codegen id : 36]
Output [11]: [ss_item_sk#107, ss_customer_sk#108, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_store_sk#112, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129]
Input [13]: [ss_item_sk#107, ss_customer_sk#108, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_store_sk#112, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, ss_sold_date_sk#117, d_date_sk#128, d_year#129]

(133) ReusedExchange [Reuses operator id: 43]
Output [3]: [s_store_sk#130, s_store_name#131, s_zip#132]

(134) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [ss_store_sk#112]
Right keys [1]: [s_store_sk#130]
Join type: Inner
Join condition: None

(135) Project [codegen id : 36]
Output [12]: [ss_item_sk#107, ss_customer_sk#108, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132]
Input [14]: [ss_item_sk#107, ss_customer_sk#108, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_store_sk#112, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_sk#130, s_store_name#131, s_zip#132]

(136) ReusedExchange [Reuses operator id: 49]
Output [6]: [c_customer_sk#133, c_current_cdemo_sk#134, c_current_hdemo_sk#135, c_current_addr_sk#136, c_first_shipto_date_sk#137, c_first_sales_date_sk#138]

(137) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [ss_customer_sk#108]
Right keys [1]: [c_customer_sk#133]
Join type: Inner
Join condition: None

(138) Project [codegen id : 36]
Output [16]: [ss_item_sk#107, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_cdemo_sk#134, c_current_hdemo_sk#135, c_current_addr_sk#136, c_first_shipto_date_sk#137, c_first_sales_date_sk#138]
Input [18]: [ss_item_sk#107, ss_customer_sk#108, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_customer_sk#133, c_current_cdemo_sk#134, c_current_hdemo_sk#135, c_current_addr_sk#136, c_first_shipto_date_sk#137, c_first_sales_date_sk#138]

(139) ReusedExchange [Reuses operator id: 55]
Output [2]: [d_date_sk#139, d_year#140]

(140) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [c_first_sales_date_sk#138]
Right keys [1]: [d_date_sk#139]
Join type: Inner
Join condition: None

(141) Project [codegen id : 36]
Output [16]: [ss_item_sk#107, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_cdemo_sk#134, c_current_hdemo_sk#135, c_current_addr_sk#136, c_first_shipto_date_sk#137, d_year#140]
Input [18]: [ss_item_sk#107, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_cdemo_sk#134, c_current_hdemo_sk#135, c_current_addr_sk#136, c_first_shipto_date_sk#137, c_first_sales_date_sk#138, d_date_sk#139, d_year#140]

(142) ReusedExchange [Reuses operator id: 55]
Output [2]: [d_date_sk#141, d_year#142]

(143) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [c_first_shipto_date_sk#137]
Right keys [1]: [d_date_sk#141]
Join type: Inner
Join condition: None

(144) Project [codegen id : 36]
Output [16]: [ss_item_sk#107, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_cdemo_sk#134, c_current_hdemo_sk#135, c_current_addr_sk#136, d_year#140, d_year#142]
Input [18]: [ss_item_sk#107, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_cdemo_sk#134, c_current_hdemo_sk#135, c_current_addr_sk#136, c_first_shipto_date_sk#137, d_year#140, d_date_sk#141, d_year#142]

(145) ReusedExchange [Reuses operator id: 65]
Output [2]: [cd_demo_sk#143, cd_marital_status#144]

(146) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [ss_cdemo_sk#109]
Right keys [1]: [cd_demo_sk#143]
Join type: Inner
Join condition: None

(147) Project [codegen id : 36]
Output [16]: [ss_item_sk#107, ss_hdemo_sk#110, ss_addr_sk#111, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_cdemo_sk#134, c_current_hdemo_sk#135, c_current_addr_sk#136, d_year#140, d_year#142, cd_marital_status#144]
Input [18]: [ss_item_sk#107, ss_cdemo_sk#109, ss_hdemo_sk#110, ss_addr_sk#111, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_cdemo_sk#134, c_current_hdemo_sk#135, c_current_addr_sk#136, d_year#140, d_year#142, cd_demo_sk#143, cd_marital_status#144]

(148) ReusedExchange [Reuses operator id: 65]
Output [2]: [cd_demo_sk#145, cd_marital_status#146]

(149) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [c_current_cdemo_sk#134]
Right keys [1]: [cd_demo_sk#145]
Join type: Inner
Join condition: NOT (cd_marital_status#144 = cd_marital_status#146)

(150) Project [codegen id : 36]
Output [14]: [ss_item_sk#107, ss_hdemo_sk#110, ss_addr_sk#111, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_hdemo_sk#135, c_current_addr_sk#136, d_year#140, d_year#142]
Input [18]: [ss_item_sk#107, ss_hdemo_sk#110, ss_addr_sk#111, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_cdemo_sk#134, c_current_hdemo_sk#135, c_current_addr_sk#136, d_year#140, d_year#142, cd_marital_status#144, cd_demo_sk#145, cd_marital_status#146]

(151) ReusedExchange [Reuses operator id: 74]
Output [1]: [p_promo_sk#147]

(152) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [ss_promo_sk#113]
Right keys [1]: [p_promo_sk#147]
Join type: Inner
Join condition: None

(153) Project [codegen id : 36]
Output [13]: [ss_item_sk#107, ss_hdemo_sk#110, ss_addr_sk#111, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_hdemo_sk#135, c_current_addr_sk#136, d_year#140, d_year#142]
Input [15]: [ss_item_sk#107, ss_hdemo_sk#110, ss_addr_sk#111, ss_promo_sk#113, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_hdemo_sk#135, c_current_addr_sk#136, d_year#140, d_year#142, p_promo_sk#147]

(154) ReusedExchange [Reuses operator id: 80]
Output [2]: [hd_demo_sk#148, hd_income_band_sk#149]

(155) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [ss_hdemo_sk#110]
Right keys [1]: [hd_demo_sk#148]
Join type: Inner
Join condition: None

(156) Project [codegen id : 36]
Output [13]: [ss_item_sk#107, ss_addr_sk#111, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_hdemo_sk#135, c_current_addr_sk#136, d_year#140, d_year#142, hd_income_band_sk#149]
Input [15]: [ss_item_sk#107, ss_hdemo_sk#110, ss_addr_sk#111, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_hdemo_sk#135, c_current_addr_sk#136, d_year#140, d_year#142, hd_demo_sk#148, hd_income_band_sk#149]

(157) ReusedExchange [Reuses operator id: 80]
Output [2]: [hd_demo_sk#150, hd_income_band_sk#151]

(158) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [c_current_hdemo_sk#135]
Right keys [1]: [hd_demo_sk#150]
Join type: Inner
Join condition: None

(159) Project [codegen id : 36]
Output [13]: [ss_item_sk#107, ss_addr_sk#111, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_addr_sk#136, d_year#140, d_year#142, hd_income_band_sk#149, hd_income_band_sk#151]
Input [15]: [ss_item_sk#107, ss_addr_sk#111, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_hdemo_sk#135, c_current_addr_sk#136, d_year#140, d_year#142, hd_income_band_sk#149, hd_demo_sk#150, hd_income_band_sk#151]

(160) ReusedExchange [Reuses operator id: 90]
Output [5]: [ca_address_sk#152, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156]

(161) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [ss_addr_sk#111]
Right keys [1]: [ca_address_sk#152]
Join type: Inner
Join condition: None

(162) Project [codegen id : 36]
Output [16]: [ss_item_sk#107, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_addr_sk#136, d_year#140, d_year#142, hd_income_band_sk#149, hd_income_band_sk#151, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156]
Input [18]: [ss_item_sk#107, ss_addr_sk#111, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_addr_sk#136, d_year#140, d_year#142, hd_income_band_sk#149, hd_income_band_sk#151, ca_address_sk#152, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156]

(163) ReusedExchange [Reuses operator id: 90]
Output [5]: [ca_address_sk#157, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161]

(164) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [c_current_addr_sk#136]
Right keys [1]: [ca_address_sk#157]
Join type: Inner
Join condition: None

(165) Project [codegen id : 36]
Output [19]: [ss_item_sk#107, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, d_year#140, d_year#142, hd_income_band_sk#149, hd_income_band_sk#151, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161]
Input [21]: [ss_item_sk#107, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, c_current_addr_sk#136, d_year#140, d_year#142, hd_income_band_sk#149, hd_income_band_sk#151, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156, ca_address_sk#157, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161]

(166) ReusedExchange [Reuses operator id: 99]
Output [1]: [ib_income_band_sk#162]

(167) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [hd_income_band_sk#149]
Right keys [1]: [ib_income_band_sk#162]
Join type: Inner
Join condition: None

(168) Project [codegen id : 36]
Output [18]: [ss_item_sk#107, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, d_year#140, d_year#142, hd_income_band_sk#151, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161]
Input [20]: [ss_item_sk#107, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, d_year#140, d_year#142, hd_income_band_sk#149, hd_income_band_sk#151, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161, ib_income_band_sk#162]

(169) ReusedExchange [Reuses operator id: 99]
Output [1]: [ib_income_band_sk#163]

(170) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [hd_income_band_sk#151]
Right keys [1]: [ib_income_band_sk#163]
Join type: Inner
Join condition: None

(171) Project [codegen id : 36]
Output [17]: [ss_item_sk#107, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, d_year#140, d_year#142, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161]
Input [19]: [ss_item_sk#107, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, d_year#140, d_year#142, hd_income_band_sk#151, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161, ib_income_band_sk#163]

(172) ReusedExchange [Reuses operator id: 109]
Output [2]: [i_item_sk#164, i_product_name#165]

(173) BroadcastHashJoin [codegen id : 36]
Left keys [1]: [ss_item_sk#107]
Right keys [1]: [i_item_sk#164]
Join type: Inner
Join condition: None

(174) Project [codegen id : 36]
Output [18]: [ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, d_year#140, d_year#142, s_store_name#131, s_zip#132, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161, i_item_sk#164, i_product_name#165]
Input [19]: [ss_item_sk#107, ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, s_store_name#131, s_zip#132, d_year#140, d_year#142, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161, i_item_sk#164, i_product_name#165]

(175) HashAggregate [codegen id : 36]
Input [18]: [ss_wholesale_cost#114, ss_list_price#115, ss_coupon_amt#116, d_year#129, d_year#140, d_year#142, s_store_name#131, s_zip#132, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161, i_item_sk#164, i_product_name#165]
Keys [15]: [i_product_name#165, i_item_sk#164, s_store_name#131, s_zip#132, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161, d_year#129, d_year#140, d_year#142]
Functions [4]: [partial_count(1), partial_sum(UnscaledValue(ss_wholesale_cost#114)), partial_sum(UnscaledValue(ss_list_price#115)), partial_sum(UnscaledValue(ss_coupon_amt#116))]
Aggregate Attributes [4]: [count#78, sum#166, sum#167, sum#168]
Results [19]: [i_product_name#165, i_item_sk#164, s_store_name#131, s_zip#132, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161, d_year#129, d_year#140, d_year#142, count#82, sum#169, sum#170, sum#171]

(176) HashAggregate [codegen id : 36]
Input [19]: [i_product_name#165, i_item_sk#164, s_store_name#131, s_zip#132, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161, d_year#129, d_year#140, d_year#142, count#82, sum#169, sum#170, sum#171]
Keys [15]: [i_product_name#165, i_item_sk#164, s_store_name#131, s_zip#132, ca_street_number#153, ca_street_name#154, ca_city#155, ca_zip#156, ca_street_number#158, ca_street_name#159, ca_city#160, ca_zip#161, d_year#129, d_year#140, d_year#142]
Functions [4]: [count(1), sum(UnscaledValue(ss_wholesale_cost#114)), sum(UnscaledValue(ss_list_price#115)), sum(UnscaledValue(ss_coupon_amt#116))]
Aggregate Attributes [4]: [count(1)#86, sum(UnscaledValue(ss_wholesale_cost#114))#87, sum(UnscaledValue(ss_list_price#115))#88, sum(UnscaledValue(ss_coupon_amt#116))#89]
Results [8]: [i_item_sk#164 AS item_sk#172, s_store_name#131 AS store_name#173, s_zip#132 AS store_zip#174, d_year#129 AS syear#175, count(1)#86 AS cnt#176, MakeDecimal(sum(UnscaledValue(ss_wholesale_cost#114))#87,17,2) AS s1#177, MakeDecimal(sum(UnscaledValue(ss_list_price#115))#88,17,2) AS s2#178, MakeDecimal(sum(UnscaledValue(ss_coupon_amt#116))#89,17,2) AS s3#179]

(177) CometColumnarExchange
Input [8]: [item_sk#172, store_name#173, store_zip#174, syear#175, cnt#176, s1#177, s2#178, s3#179]
Arguments: hashpartitioning(item_sk#172, store_name#173, store_zip#174, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=17]

(178) CometSort
Input [8]: [item_sk#172, store_name#173, store_zip#174, syear#175, cnt#176, s1#177, s2#178, s3#179]
Arguments: [item_sk#172, store_name#173, store_zip#174, syear#175, cnt#176, s1#177, s2#178, s3#179], [item_sk#172 ASC NULLS FIRST, store_name#173 ASC NULLS FIRST, store_zip#174 ASC NULLS FIRST]

(179) CometSortMergeJoin
Left output [17]: [product_name#90, item_sk#91, store_name#92, store_zip#93, b_street_number#94, b_streen_name#95, b_city#96, b_zip#97, c_street_number#98, c_street_name#99, c_city#100, c_zip#101, syear#102, cnt#103, s1#104, s2#105, s3#106]
Right output [8]: [item_sk#172, store_name#173, store_zip#174, syear#175, cnt#176, s1#177, s2#178, s3#179]
Arguments: [item_sk#91, store_name#92, store_zip#93], [item_sk#172, store_name#173, store_zip#174], Inner, (cnt#176 <= cnt#103)

(180) CometProject
Input [25]: [product_name#90, item_sk#91, store_name#92, store_zip#93, b_street_number#94, b_streen_name#95, b_city#96, b_zip#97, c_street_number#98, c_street_name#99, c_city#100, c_zip#101, syear#102, cnt#103, s1#104, s2#105, s3#106, item_sk#172, store_name#173, store_zip#174, syear#175, cnt#176, s1#177, s2#178, s3#179]
Arguments: [product_name#90, store_name#92, store_zip#93, b_street_number#94, b_streen_name#95, b_city#96, b_zip#97, c_street_number#98, c_street_name#99, c_city#100, c_zip#101, syear#102, cnt#103, s1#104, s2#105, s3#106, s1#177, s2#178, s3#179, syear#175, cnt#176], [product_name#90, store_name#92, store_zip#93, b_street_number#94, b_streen_name#95, b_city#96, b_zip#97, c_street_number#98, c_street_name#99, c_city#100, c_zip#101, syear#102, cnt#103, s1#104, s2#105, s3#106, s1#177, s2#178, s3#179, syear#175, cnt#176]

(181) CometExchange
Input [21]: [product_name#90, store_name#92, store_zip#93, b_street_number#94, b_streen_name#95, b_city#96, b_zip#97, c_street_number#98, c_street_name#99, c_city#100, c_zip#101, syear#102, cnt#103, s1#104, s2#105, s3#106, s1#177, s2#178, s3#179, syear#175, cnt#176]
Arguments: rangepartitioning(product_name#90 ASC NULLS FIRST, store_name#92 ASC NULLS FIRST, cnt#176 ASC NULLS FIRST, s1#104 ASC NULLS FIRST, s1#177 ASC NULLS FIRST, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=18]

(182) CometSort
Input [21]: [product_name#90, store_name#92, store_zip#93, b_street_number#94, b_streen_name#95, b_city#96, b_zip#97, c_street_number#98, c_street_name#99, c_city#100, c_zip#101, syear#102, cnt#103, s1#104, s2#105, s3#106, s1#177, s2#178, s3#179, syear#175, cnt#176]
Arguments: [product_name#90, store_name#92, store_zip#93, b_street_number#94, b_streen_name#95, b_city#96, b_zip#97, c_street_number#98, c_street_name#99, c_city#100, c_zip#101, syear#102, cnt#103, s1#104, s2#105, s3#106, s1#177, s2#178, s3#179, syear#175, cnt#176], [product_name#90 ASC NULLS FIRST, store_name#92 ASC NULLS FIRST, cnt#176 ASC NULLS FIRST, s1#104 ASC NULLS FIRST, s1#177 ASC NULLS FIRST]

(183) CometColumnarToRow [codegen id : 37]
Input [21]: [product_name#90, store_name#92, store_zip#93, b_street_number#94, b_streen_name#95, b_city#96, b_zip#97, c_street_number#98, c_street_name#99, c_city#100, c_zip#101, syear#102, cnt#103, s1#104, s2#105, s3#106, s1#177, s2#178, s3#179, syear#175, cnt#176]

