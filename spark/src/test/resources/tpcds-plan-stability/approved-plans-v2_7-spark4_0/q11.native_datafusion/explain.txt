== Physical Plan ==
TakeOrderedAndProject (71)
+- * Project (70)
   +- * BroadcastHashJoin Inner BuildRight (69)
      :- * Project (54)
      :  +- * BroadcastHashJoin Inner BuildRight (53)
      :     :- * BroadcastHashJoin Inner BuildRight (35)
      :     :  :- * Filter (18)
      :     :  :  +- * HashAggregate (17)
      :     :  :     +- * CometColumnarToRow (16)
      :     :  :        +- CometExchange (15)
      :     :  :           +- CometHashAggregate (14)
      :     :  :              +- CometProject (13)
      :     :  :                 +- CometBroadcastHashJoin (12)
      :     :  :                    :- CometProject (8)
      :     :  :                    :  +- CometBroadcastHashJoin (7)
      :     :  :                    :     :- CometProject (3)
      :     :  :                    :     :  +- CometFilter (2)
      :     :  :                    :     :     +- CometNativeScan parquet spark_catalog.default.customer (1)
      :     :  :                    :     +- CometBroadcastExchange (6)
      :     :  :                    :        +- CometFilter (5)
      :     :  :                    :           +- CometNativeScan parquet spark_catalog.default.store_sales (4)
      :     :  :                    +- CometBroadcastExchange (11)
      :     :  :                       +- CometFilter (10)
      :     :  :                          +- CometNativeScan parquet spark_catalog.default.date_dim (9)
      :     :  +- BroadcastExchange (34)
      :     :     +- * HashAggregate (33)
      :     :        +- * CometColumnarToRow (32)
      :     :           +- CometExchange (31)
      :     :              +- CometHashAggregate (30)
      :     :                 +- CometProject (29)
      :     :                    +- CometBroadcastHashJoin (28)
      :     :                       :- CometProject (24)
      :     :                       :  +- CometBroadcastHashJoin (23)
      :     :                       :     :- CometProject (21)
      :     :                       :     :  +- CometFilter (20)
      :     :                       :     :     +- CometNativeScan parquet spark_catalog.default.customer (19)
      :     :                       :     +- ReusedExchange (22)
      :     :                       +- CometBroadcastExchange (27)
      :     :                          +- CometFilter (26)
      :     :                             +- CometNativeScan parquet spark_catalog.default.date_dim (25)
      :     +- BroadcastExchange (52)
      :        +- * Filter (51)
      :           +- * HashAggregate (50)
      :              +- * CometColumnarToRow (49)
      :                 +- CometExchange (48)
      :                    +- CometHashAggregate (47)
      :                       +- CometProject (46)
      :                          +- CometBroadcastHashJoin (45)
      :                             :- CometProject (43)
      :                             :  +- CometBroadcastHashJoin (42)
      :                             :     :- CometProject (38)
      :                             :     :  +- CometFilter (37)
      :                             :     :     +- CometNativeScan parquet spark_catalog.default.customer (36)
      :                             :     +- CometBroadcastExchange (41)
      :                             :        +- CometFilter (40)
      :                             :           +- CometNativeScan parquet spark_catalog.default.web_sales (39)
      :                             +- ReusedExchange (44)
      +- BroadcastExchange (68)
         +- * HashAggregate (67)
            +- * CometColumnarToRow (66)
               +- CometExchange (65)
                  +- CometHashAggregate (64)
                     +- CometProject (63)
                        +- CometBroadcastHashJoin (62)
                           :- CometProject (60)
                           :  +- CometBroadcastHashJoin (59)
                           :     :- CometProject (57)
                           :     :  +- CometFilter (56)
                           :     :     +- CometNativeScan parquet spark_catalog.default.customer (55)
                           :     +- ReusedExchange (58)
                           +- ReusedExchange (61)


(1) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(2) CometFilter
Input [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Condition : (isnotnull(c_customer_sk#1) AND isnotnull(static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#2, 16))))

(3) CometProject
Input [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Arguments: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14], [c_customer_sk#1, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#2, 16)) AS c_customer_id#9, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_first_name#3, 20)) AS c_first_name#10, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_last_name#4, 30)) AS c_last_name#11, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_preferred_cust_flag#5, 1)) AS c_preferred_cust_flag#12, c_birth_country#6, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_login#7, 13)) AS c_login#13, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_email_address#8, 50)) AS c_email_address#14]

(4) CometNativeScan parquet spark_catalog.default.store_sales
Output [4]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#18)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:decimal(7,2)>

(5) CometFilter
Input [4]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]
Condition : isnotnull(ss_customer_sk#15)

(6) CometBroadcastExchange
Input [4]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]
Arguments: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]

(7) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14]
Right output [4]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]
Arguments: [c_customer_sk#1], [ss_customer_sk#15], Inner, BuildRight

(8) CometProject
Input [12]: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]

(9) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#19, d_year#20]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(10) CometFilter
Input [2]: [d_date_sk#19, d_year#20]
Condition : ((isnotnull(d_year#20) AND (d_year#20 = 2001)) AND isnotnull(d_date_sk#19))

(11) CometBroadcastExchange
Input [2]: [d_date_sk#19, d_year#20]
Arguments: [d_date_sk#19, d_year#20]

(12) CometBroadcastHashJoin
Left output [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]
Right output [2]: [d_date_sk#19, d_year#20]
Arguments: [ss_sold_date_sk#18], [d_date_sk#19], Inner, BuildRight

(13) CometProject
Input [12]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18, d_date_sk#19, d_year#20]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, d_year#20], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, d_year#20]

(14) CometHashAggregate
Input [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, d_year#20]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, d_year#20, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14]
Functions [1]: [partial_sum(UnscaledValue((ss_ext_list_price#17 - ss_ext_discount_amt#16)))]

(15) CometExchange
Input [9]: [c_customer_id#9, c_first_name#10, c_last_name#11, d_year#20, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, sum#21]
Arguments: hashpartitioning(c_customer_id#9, c_first_name#10, c_last_name#11, d_year#20, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(16) CometColumnarToRow [codegen id : 4]
Input [9]: [c_customer_id#9, c_first_name#10, c_last_name#11, d_year#20, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, sum#21]

(17) HashAggregate [codegen id : 4]
Input [9]: [c_customer_id#9, c_first_name#10, c_last_name#11, d_year#20, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, sum#21]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, d_year#20, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14]
Functions [1]: [sum(UnscaledValue((ss_ext_list_price#17 - ss_ext_discount_amt#16)))]
Aggregate Attributes [1]: [sum(UnscaledValue((ss_ext_list_price#17 - ss_ext_discount_amt#16)))#22]
Results [2]: [c_customer_id#9 AS customer_id#23, MakeDecimal(sum(UnscaledValue((ss_ext_list_price#17 - ss_ext_discount_amt#16)))#22,18,2) AS year_total#24]

(18) Filter [codegen id : 4]
Input [2]: [customer_id#23, year_total#24]
Condition : (isnotnull(year_total#24) AND (year_total#24 > 0.00))

(19) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#25, c_customer_id#26, c_first_name#27, c_last_name#28, c_preferred_cust_flag#29, c_birth_country#30, c_login#31, c_email_address#32]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(20) CometFilter
Input [8]: [c_customer_sk#25, c_customer_id#26, c_first_name#27, c_last_name#28, c_preferred_cust_flag#29, c_birth_country#30, c_login#31, c_email_address#32]
Condition : (isnotnull(c_customer_sk#25) AND isnotnull(static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#26, 16))))

(21) CometProject
Input [8]: [c_customer_sk#25, c_customer_id#26, c_first_name#27, c_last_name#28, c_preferred_cust_flag#29, c_birth_country#30, c_login#31, c_email_address#32]
Arguments: [c_customer_sk#25, c_customer_id#33, c_first_name#34, c_last_name#35, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38], [c_customer_sk#25, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#26, 16)) AS c_customer_id#33, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_first_name#27, 20)) AS c_first_name#34, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_last_name#28, 30)) AS c_last_name#35, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_preferred_cust_flag#29, 1)) AS c_preferred_cust_flag#36, c_birth_country#30, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_login#31, 13)) AS c_login#37, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_email_address#32, 50)) AS c_email_address#38]

(22) ReusedExchange [Reuses operator id: 6]
Output [4]: [ss_customer_sk#39, ss_ext_discount_amt#40, ss_ext_list_price#41, ss_sold_date_sk#42]

(23) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#25, c_customer_id#33, c_first_name#34, c_last_name#35, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38]
Right output [4]: [ss_customer_sk#39, ss_ext_discount_amt#40, ss_ext_list_price#41, ss_sold_date_sk#42]
Arguments: [c_customer_sk#25], [ss_customer_sk#39], Inner, BuildRight

(24) CometProject
Input [12]: [c_customer_sk#25, c_customer_id#33, c_first_name#34, c_last_name#35, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38, ss_customer_sk#39, ss_ext_discount_amt#40, ss_ext_list_price#41, ss_sold_date_sk#42]
Arguments: [c_customer_id#33, c_first_name#34, c_last_name#35, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38, ss_ext_discount_amt#40, ss_ext_list_price#41, ss_sold_date_sk#42], [c_customer_id#33, c_first_name#34, c_last_name#35, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38, ss_ext_discount_amt#40, ss_ext_list_price#41, ss_sold_date_sk#42]

(25) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#43, d_year#44]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(26) CometFilter
Input [2]: [d_date_sk#43, d_year#44]
Condition : ((isnotnull(d_year#44) AND (d_year#44 = 2002)) AND isnotnull(d_date_sk#43))

(27) CometBroadcastExchange
Input [2]: [d_date_sk#43, d_year#44]
Arguments: [d_date_sk#43, d_year#44]

(28) CometBroadcastHashJoin
Left output [10]: [c_customer_id#33, c_first_name#34, c_last_name#35, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38, ss_ext_discount_amt#40, ss_ext_list_price#41, ss_sold_date_sk#42]
Right output [2]: [d_date_sk#43, d_year#44]
Arguments: [ss_sold_date_sk#42], [d_date_sk#43], Inner, BuildRight

(29) CometProject
Input [12]: [c_customer_id#33, c_first_name#34, c_last_name#35, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38, ss_ext_discount_amt#40, ss_ext_list_price#41, ss_sold_date_sk#42, d_date_sk#43, d_year#44]
Arguments: [c_customer_id#33, c_first_name#34, c_last_name#35, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38, ss_ext_discount_amt#40, ss_ext_list_price#41, d_year#44], [c_customer_id#33, c_first_name#34, c_last_name#35, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38, ss_ext_discount_amt#40, ss_ext_list_price#41, d_year#44]

(30) CometHashAggregate
Input [10]: [c_customer_id#33, c_first_name#34, c_last_name#35, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38, ss_ext_discount_amt#40, ss_ext_list_price#41, d_year#44]
Keys [8]: [c_customer_id#33, c_first_name#34, c_last_name#35, d_year#44, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38]
Functions [1]: [partial_sum(UnscaledValue((ss_ext_list_price#41 - ss_ext_discount_amt#40)))]

(31) CometExchange
Input [9]: [c_customer_id#33, c_first_name#34, c_last_name#35, d_year#44, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38, sum#45]
Arguments: hashpartitioning(c_customer_id#33, c_first_name#34, c_last_name#35, d_year#44, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(32) CometColumnarToRow [codegen id : 1]
Input [9]: [c_customer_id#33, c_first_name#34, c_last_name#35, d_year#44, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38, sum#45]

(33) HashAggregate [codegen id : 1]
Input [9]: [c_customer_id#33, c_first_name#34, c_last_name#35, d_year#44, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38, sum#45]
Keys [8]: [c_customer_id#33, c_first_name#34, c_last_name#35, d_year#44, c_preferred_cust_flag#36, c_birth_country#30, c_login#37, c_email_address#38]
Functions [1]: [sum(UnscaledValue((ss_ext_list_price#41 - ss_ext_discount_amt#40)))]
Aggregate Attributes [1]: [sum(UnscaledValue((ss_ext_list_price#41 - ss_ext_discount_amt#40)))#22]
Results [5]: [c_customer_id#33 AS customer_id#46, c_first_name#34 AS customer_first_name#47, c_last_name#35 AS customer_last_name#48, c_email_address#38 AS customer_email_address#49, MakeDecimal(sum(UnscaledValue((ss_ext_list_price#41 - ss_ext_discount_amt#40)))#22,18,2) AS year_total#50]

(34) BroadcastExchange
Input [5]: [customer_id#46, customer_first_name#47, customer_last_name#48, customer_email_address#49, year_total#50]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=3]

(35) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [customer_id#23]
Right keys [1]: [customer_id#46]
Join type: Inner
Join condition: None

(36) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#51, c_customer_id#52, c_first_name#53, c_last_name#54, c_preferred_cust_flag#55, c_birth_country#56, c_login#57, c_email_address#58]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(37) CometFilter
Input [8]: [c_customer_sk#51, c_customer_id#52, c_first_name#53, c_last_name#54, c_preferred_cust_flag#55, c_birth_country#56, c_login#57, c_email_address#58]
Condition : (isnotnull(c_customer_sk#51) AND isnotnull(static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#52, 16))))

(38) CometProject
Input [8]: [c_customer_sk#51, c_customer_id#52, c_first_name#53, c_last_name#54, c_preferred_cust_flag#55, c_birth_country#56, c_login#57, c_email_address#58]
Arguments: [c_customer_sk#51, c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64], [c_customer_sk#51, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#52, 16)) AS c_customer_id#59, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_first_name#53, 20)) AS c_first_name#60, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_last_name#54, 30)) AS c_last_name#61, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_preferred_cust_flag#55, 1)) AS c_preferred_cust_flag#62, c_birth_country#56, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_login#57, 13)) AS c_login#63, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_email_address#58, 50)) AS c_email_address#64]

(39) CometNativeScan parquet spark_catalog.default.web_sales
Output [4]: [ws_bill_customer_sk#65, ws_ext_discount_amt#66, ws_ext_list_price#67, ws_sold_date_sk#68]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#68)]
PushedFilters: [IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_price:decimal(7,2)>

(40) CometFilter
Input [4]: [ws_bill_customer_sk#65, ws_ext_discount_amt#66, ws_ext_list_price#67, ws_sold_date_sk#68]
Condition : isnotnull(ws_bill_customer_sk#65)

(41) CometBroadcastExchange
Input [4]: [ws_bill_customer_sk#65, ws_ext_discount_amt#66, ws_ext_list_price#67, ws_sold_date_sk#68]
Arguments: [ws_bill_customer_sk#65, ws_ext_discount_amt#66, ws_ext_list_price#67, ws_sold_date_sk#68]

(42) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#51, c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64]
Right output [4]: [ws_bill_customer_sk#65, ws_ext_discount_amt#66, ws_ext_list_price#67, ws_sold_date_sk#68]
Arguments: [c_customer_sk#51], [ws_bill_customer_sk#65], Inner, BuildRight

(43) CometProject
Input [12]: [c_customer_sk#51, c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, ws_bill_customer_sk#65, ws_ext_discount_amt#66, ws_ext_list_price#67, ws_sold_date_sk#68]
Arguments: [c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, ws_ext_discount_amt#66, ws_ext_list_price#67, ws_sold_date_sk#68], [c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, ws_ext_discount_amt#66, ws_ext_list_price#67, ws_sold_date_sk#68]

(44) ReusedExchange [Reuses operator id: 11]
Output [2]: [d_date_sk#69, d_year#70]

(45) CometBroadcastHashJoin
Left output [10]: [c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, ws_ext_discount_amt#66, ws_ext_list_price#67, ws_sold_date_sk#68]
Right output [2]: [d_date_sk#69, d_year#70]
Arguments: [ws_sold_date_sk#68], [d_date_sk#69], Inner, BuildRight

(46) CometProject
Input [12]: [c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, ws_ext_discount_amt#66, ws_ext_list_price#67, ws_sold_date_sk#68, d_date_sk#69, d_year#70]
Arguments: [c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, ws_ext_discount_amt#66, ws_ext_list_price#67, d_year#70], [c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, ws_ext_discount_amt#66, ws_ext_list_price#67, d_year#70]

(47) CometHashAggregate
Input [10]: [c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, ws_ext_discount_amt#66, ws_ext_list_price#67, d_year#70]
Keys [8]: [c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, d_year#70]
Functions [1]: [partial_sum(UnscaledValue((ws_ext_list_price#67 - ws_ext_discount_amt#66)))]

(48) CometExchange
Input [9]: [c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, d_year#70, sum#71]
Arguments: hashpartitioning(c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, d_year#70, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(49) CometColumnarToRow [codegen id : 2]
Input [9]: [c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, d_year#70, sum#71]

(50) HashAggregate [codegen id : 2]
Input [9]: [c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, d_year#70, sum#71]
Keys [8]: [c_customer_id#59, c_first_name#60, c_last_name#61, c_preferred_cust_flag#62, c_birth_country#56, c_login#63, c_email_address#64, d_year#70]
Functions [1]: [sum(UnscaledValue((ws_ext_list_price#67 - ws_ext_discount_amt#66)))]
Aggregate Attributes [1]: [sum(UnscaledValue((ws_ext_list_price#67 - ws_ext_discount_amt#66)))#72]
Results [2]: [c_customer_id#59 AS customer_id#73, MakeDecimal(sum(UnscaledValue((ws_ext_list_price#67 - ws_ext_discount_amt#66)))#72,18,2) AS year_total#74]

(51) Filter [codegen id : 2]
Input [2]: [customer_id#73, year_total#74]
Condition : (isnotnull(year_total#74) AND (year_total#74 > 0.00))

(52) BroadcastExchange
Input [2]: [customer_id#73, year_total#74]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=5]

(53) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [customer_id#23]
Right keys [1]: [customer_id#73]
Join type: Inner
Join condition: None

(54) Project [codegen id : 4]
Output [8]: [customer_id#23, year_total#24, customer_id#46, customer_first_name#47, customer_last_name#48, customer_email_address#49, year_total#50, year_total#74]
Input [9]: [customer_id#23, year_total#24, customer_id#46, customer_first_name#47, customer_last_name#48, customer_email_address#49, year_total#50, customer_id#73, year_total#74]

(55) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#75, c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(56) CometFilter
Input [8]: [c_customer_sk#75, c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82]
Condition : (isnotnull(c_customer_sk#75) AND isnotnull(static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#76, 16))))

(57) CometProject
Input [8]: [c_customer_sk#75, c_customer_id#76, c_first_name#77, c_last_name#78, c_preferred_cust_flag#79, c_birth_country#80, c_login#81, c_email_address#82]
Arguments: [c_customer_sk#75, c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88], [c_customer_sk#75, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#76, 16)) AS c_customer_id#83, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_first_name#77, 20)) AS c_first_name#84, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_last_name#78, 30)) AS c_last_name#85, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_preferred_cust_flag#79, 1)) AS c_preferred_cust_flag#86, c_birth_country#80, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_login#81, 13)) AS c_login#87, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_email_address#82, 50)) AS c_email_address#88]

(58) ReusedExchange [Reuses operator id: 41]
Output [4]: [ws_bill_customer_sk#89, ws_ext_discount_amt#90, ws_ext_list_price#91, ws_sold_date_sk#92]

(59) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#75, c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88]
Right output [4]: [ws_bill_customer_sk#89, ws_ext_discount_amt#90, ws_ext_list_price#91, ws_sold_date_sk#92]
Arguments: [c_customer_sk#75], [ws_bill_customer_sk#89], Inner, BuildRight

(60) CometProject
Input [12]: [c_customer_sk#75, c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, ws_bill_customer_sk#89, ws_ext_discount_amt#90, ws_ext_list_price#91, ws_sold_date_sk#92]
Arguments: [c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, ws_ext_discount_amt#90, ws_ext_list_price#91, ws_sold_date_sk#92], [c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, ws_ext_discount_amt#90, ws_ext_list_price#91, ws_sold_date_sk#92]

(61) ReusedExchange [Reuses operator id: 27]
Output [2]: [d_date_sk#93, d_year#94]

(62) CometBroadcastHashJoin
Left output [10]: [c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, ws_ext_discount_amt#90, ws_ext_list_price#91, ws_sold_date_sk#92]
Right output [2]: [d_date_sk#93, d_year#94]
Arguments: [ws_sold_date_sk#92], [d_date_sk#93], Inner, BuildRight

(63) CometProject
Input [12]: [c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, ws_ext_discount_amt#90, ws_ext_list_price#91, ws_sold_date_sk#92, d_date_sk#93, d_year#94]
Arguments: [c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, ws_ext_discount_amt#90, ws_ext_list_price#91, d_year#94], [c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, ws_ext_discount_amt#90, ws_ext_list_price#91, d_year#94]

(64) CometHashAggregate
Input [10]: [c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, ws_ext_discount_amt#90, ws_ext_list_price#91, d_year#94]
Keys [8]: [c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, d_year#94]
Functions [1]: [partial_sum(UnscaledValue((ws_ext_list_price#91 - ws_ext_discount_amt#90)))]

(65) CometExchange
Input [9]: [c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, d_year#94, sum#95]
Arguments: hashpartitioning(c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, d_year#94, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(66) CometColumnarToRow [codegen id : 3]
Input [9]: [c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, d_year#94, sum#95]

(67) HashAggregate [codegen id : 3]
Input [9]: [c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, d_year#94, sum#95]
Keys [8]: [c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#80, c_login#87, c_email_address#88, d_year#94]
Functions [1]: [sum(UnscaledValue((ws_ext_list_price#91 - ws_ext_discount_amt#90)))]
Aggregate Attributes [1]: [sum(UnscaledValue((ws_ext_list_price#91 - ws_ext_discount_amt#90)))#72]
Results [2]: [c_customer_id#83 AS customer_id#96, MakeDecimal(sum(UnscaledValue((ws_ext_list_price#91 - ws_ext_discount_amt#90)))#72,18,2) AS year_total#97]

(68) BroadcastExchange
Input [2]: [customer_id#96, year_total#97]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=7]

(69) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [customer_id#23]
Right keys [1]: [customer_id#96]
Join type: Inner
Join condition: (CASE WHEN (year_total#74 > 0.00) THEN (year_total#97 / year_total#74) ELSE 0E-20 END > CASE WHEN (year_total#24 > 0.00) THEN (year_total#50 / year_total#24) ELSE 0E-20 END)

(70) Project [codegen id : 4]
Output [4]: [customer_id#46, customer_first_name#47, customer_last_name#48, customer_email_address#49]
Input [10]: [customer_id#23, year_total#24, customer_id#46, customer_first_name#47, customer_last_name#48, customer_email_address#49, year_total#50, year_total#74, customer_id#96, year_total#97]

(71) TakeOrderedAndProject
Input [4]: [customer_id#46, customer_first_name#47, customer_last_name#48, customer_email_address#49]
Arguments: 100, [customer_id#46 ASC NULLS FIRST, customer_first_name#47 ASC NULLS FIRST, customer_last_name#48 ASC NULLS FIRST, customer_email_address#49 ASC NULLS FIRST], [customer_id#46, customer_first_name#47, customer_last_name#48, customer_email_address#49]

