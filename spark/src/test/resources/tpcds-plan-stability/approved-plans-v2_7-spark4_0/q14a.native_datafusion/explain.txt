== Physical Plan ==
* CometColumnarToRow (122)
+- CometTakeOrderedAndProject (121)
   +- CometHashAggregate (120)
      +- CometExchange (119)
         +- CometHashAggregate (118)
            +- CometUnion (117)
               :- CometHashAggregate (96)
               :  +- CometExchange (95)
               :     +- CometHashAggregate (94)
               :        +- CometUnion (93)
               :           :- CometFilter (64)
               :           :  +- CometHashAggregate (63)
               :           :     +- CometExchange (62)
               :           :        +- CometHashAggregate (61)
               :           :           +- CometProject (60)
               :           :              +- CometBroadcastHashJoin (59)
               :           :                 :- CometProject (54)
               :           :                 :  +- CometBroadcastHashJoin (53)
               :           :                 :     :- CometBroadcastHashJoin (47)
               :           :                 :     :  :- CometFilter (2)
               :           :                 :     :  :  +- CometNativeScan parquet spark_catalog.default.store_sales (1)
               :           :                 :     :  +- CometBroadcastExchange (46)
               :           :                 :     :     +- CometProject (45)
               :           :                 :     :        +- CometBroadcastHashJoin (44)
               :           :                 :     :           :- CometFilter (4)
               :           :                 :     :           :  +- CometNativeScan parquet spark_catalog.default.item (3)
               :           :                 :     :           +- CometBroadcastExchange (43)
               :           :                 :     :              +- CometBroadcastHashJoin (42)
               :           :                 :     :                 :- CometHashAggregate (32)
               :           :                 :     :                 :  +- CometExchange (31)
               :           :                 :     :                 :     +- CometHashAggregate (30)
               :           :                 :     :                 :        +- CometProject (29)
               :           :                 :     :                 :           +- CometBroadcastHashJoin (28)
               :           :                 :     :                 :              :- CometProject (26)
               :           :                 :     :                 :              :  +- CometBroadcastHashJoin (25)
               :           :                 :     :                 :              :     :- CometFilter (6)
               :           :                 :     :                 :              :     :  +- CometNativeScan parquet spark_catalog.default.store_sales (5)
               :           :                 :     :                 :              :     +- CometBroadcastExchange (24)
               :           :                 :     :                 :              :        +- CometBroadcastHashJoin (23)
               :           :                 :     :                 :              :           :- CometFilter (8)
               :           :                 :     :                 :              :           :  +- CometNativeScan parquet spark_catalog.default.item (7)
               :           :                 :     :                 :              :           +- CometBroadcastExchange (22)
               :           :                 :     :                 :              :              +- CometProject (21)
               :           :                 :     :                 :              :                 +- CometBroadcastHashJoin (20)
               :           :                 :     :                 :              :                    :- CometProject (15)
               :           :                 :     :                 :              :                    :  +- CometBroadcastHashJoin (14)
               :           :                 :     :                 :              :                    :     :- CometFilter (10)
               :           :                 :     :                 :              :                    :     :  +- CometNativeScan parquet spark_catalog.default.catalog_sales (9)
               :           :                 :     :                 :              :                    :     +- CometBroadcastExchange (13)
               :           :                 :     :                 :              :                    :        +- CometFilter (12)
               :           :                 :     :                 :              :                    :           +- CometNativeScan parquet spark_catalog.default.item (11)
               :           :                 :     :                 :              :                    +- CometBroadcastExchange (19)
               :           :                 :     :                 :              :                       +- CometProject (18)
               :           :                 :     :                 :              :                          +- CometFilter (17)
               :           :                 :     :                 :              :                             +- CometNativeScan parquet spark_catalog.default.date_dim (16)
               :           :                 :     :                 :              +- ReusedExchange (27)
               :           :                 :     :                 +- CometBroadcastExchange (41)
               :           :                 :     :                    +- CometProject (40)
               :           :                 :     :                       +- CometBroadcastHashJoin (39)
               :           :                 :     :                          :- CometProject (37)
               :           :                 :     :                          :  +- CometBroadcastHashJoin (36)
               :           :                 :     :                          :     :- CometFilter (34)
               :           :                 :     :                          :     :  +- CometNativeScan parquet spark_catalog.default.web_sales (33)
               :           :                 :     :                          :     +- ReusedExchange (35)
               :           :                 :     :                          +- ReusedExchange (38)
               :           :                 :     +- CometBroadcastExchange (52)
               :           :                 :        +- CometBroadcastHashJoin (51)
               :           :                 :           :- CometFilter (49)
               :           :                 :           :  +- CometNativeScan parquet spark_catalog.default.item (48)
               :           :                 :           +- ReusedExchange (50)
               :           :                 +- CometBroadcastExchange (58)
               :           :                    +- CometProject (57)
               :           :                       +- CometFilter (56)
               :           :                          +- CometNativeScan parquet spark_catalog.default.date_dim (55)
               :           :- CometFilter (78)
               :           :  +- CometHashAggregate (77)
               :           :     +- CometExchange (76)
               :           :        +- CometHashAggregate (75)
               :           :           +- CometProject (74)
               :           :              +- CometBroadcastHashJoin (73)
               :           :                 :- CometProject (71)
               :           :                 :  +- CometBroadcastHashJoin (70)
               :           :                 :     :- CometBroadcastHashJoin (68)
               :           :                 :     :  :- CometFilter (66)
               :           :                 :     :  :  +- CometNativeScan parquet spark_catalog.default.catalog_sales (65)
               :           :                 :     :  +- ReusedExchange (67)
               :           :                 :     +- ReusedExchange (69)
               :           :                 +- ReusedExchange (72)
               :           +- CometFilter (92)
               :              +- CometHashAggregate (91)
               :                 +- CometExchange (90)
               :                    +- CometHashAggregate (89)
               :                       +- CometProject (88)
               :                          +- CometBroadcastHashJoin (87)
               :                             :- CometProject (85)
               :                             :  +- CometBroadcastHashJoin (84)
               :                             :     :- CometBroadcastHashJoin (82)
               :                             :     :  :- CometFilter (80)
               :                             :     :  :  +- CometNativeScan parquet spark_catalog.default.web_sales (79)
               :                             :     :  +- ReusedExchange (81)
               :                             :     +- ReusedExchange (83)
               :                             +- ReusedExchange (86)
               :- CometHashAggregate (101)
               :  +- CometExchange (100)
               :     +- CometHashAggregate (99)
               :        +- CometHashAggregate (98)
               :           +- ReusedExchange (97)
               :- CometHashAggregate (106)
               :  +- CometExchange (105)
               :     +- CometHashAggregate (104)
               :        +- CometHashAggregate (103)
               :           +- ReusedExchange (102)
               :- CometHashAggregate (111)
               :  +- CometExchange (110)
               :     +- CometHashAggregate (109)
               :        +- CometHashAggregate (108)
               :           +- ReusedExchange (107)
               +- CometHashAggregate (116)
                  +- CometExchange (115)
                     +- CometHashAggregate (114)
                        +- CometHashAggregate (113)
                           +- ReusedExchange (112)


(1) CometNativeScan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#4)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Condition : isnotnull(ss_item_sk#1)

(3) CometNativeScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(4) CometFilter
Input [4]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8]
Condition : ((isnotnull(i_brand_id#6) AND isnotnull(i_class_id#7)) AND isnotnull(i_category_id#8))

(5) CometNativeScan parquet spark_catalog.default.store_sales
Output [2]: [ss_item_sk#9, ss_sold_date_sk#10]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#10)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int>

(6) CometFilter
Input [2]: [ss_item_sk#9, ss_sold_date_sk#10]
Condition : isnotnull(ss_item_sk#9)

(7) CometNativeScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(8) CometFilter
Input [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Condition : (((isnotnull(i_item_sk#11) AND isnotnull(i_brand_id#12)) AND isnotnull(i_class_id#13)) AND isnotnull(i_category_id#14))

(9) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [2]: [cs_item_sk#15, cs_sold_date_sk#16]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#16)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int>

(10) CometFilter
Input [2]: [cs_item_sk#15, cs_sold_date_sk#16]
Condition : isnotnull(cs_item_sk#15)

(11) CometNativeScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(12) CometFilter
Input [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Condition : isnotnull(i_item_sk#17)

(13) CometBroadcastExchange
Input [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]

(14) CometBroadcastHashJoin
Left output [2]: [cs_item_sk#15, cs_sold_date_sk#16]
Right output [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [cs_item_sk#15], [i_item_sk#17], Inner, BuildRight

(15) CometProject
Input [6]: [cs_item_sk#15, cs_sold_date_sk#16, i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20], [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20]

(16) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#21, d_year#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(17) CometFilter
Input [2]: [d_date_sk#21, d_year#22]
Condition : (((isnotnull(d_year#22) AND (d_year#22 >= 1999)) AND (d_year#22 <= 2001)) AND isnotnull(d_date_sk#21))

(18) CometProject
Input [2]: [d_date_sk#21, d_year#22]
Arguments: [d_date_sk#21], [d_date_sk#21]

(19) CometBroadcastExchange
Input [1]: [d_date_sk#21]
Arguments: [d_date_sk#21]

(20) CometBroadcastHashJoin
Left output [4]: [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20]
Right output [1]: [d_date_sk#21]
Arguments: [cs_sold_date_sk#16], [d_date_sk#21], Inner, BuildRight

(21) CometProject
Input [5]: [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20, d_date_sk#21]
Arguments: [i_brand_id#18, i_class_id#19, i_category_id#20], [i_brand_id#18, i_class_id#19, i_category_id#20]

(22) CometBroadcastExchange
Input [3]: [i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [i_brand_id#18, i_class_id#19, i_category_id#20]

(23) CometBroadcastHashJoin
Left output [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Right output [3]: [i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [coalesce(i_brand_id#12, 0), isnull(i_brand_id#12), coalesce(i_class_id#13, 0), isnull(i_class_id#13), coalesce(i_category_id#14, 0), isnull(i_category_id#14)], [coalesce(i_brand_id#18, 0), isnull(i_brand_id#18), coalesce(i_class_id#19, 0), isnull(i_class_id#19), coalesce(i_category_id#20, 0), isnull(i_category_id#20)], LeftSemi, BuildRight

(24) CometBroadcastExchange
Input [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Arguments: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]

(25) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#9, ss_sold_date_sk#10]
Right output [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Arguments: [ss_item_sk#9], [i_item_sk#11], Inner, BuildRight

(26) CometProject
Input [6]: [ss_item_sk#9, ss_sold_date_sk#10, i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Arguments: [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14], [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14]

(27) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#23]

(28) CometBroadcastHashJoin
Left output [4]: [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14]
Right output [1]: [d_date_sk#23]
Arguments: [ss_sold_date_sk#10], [d_date_sk#23], Inner, BuildRight

(29) CometProject
Input [5]: [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14, d_date_sk#23]
Arguments: [brand_id#24, class_id#25, category_id#26], [i_brand_id#12 AS brand_id#24, i_class_id#13 AS class_id#25, i_category_id#14 AS category_id#26]

(30) CometHashAggregate
Input [3]: [brand_id#24, class_id#25, category_id#26]
Keys [3]: [brand_id#24, class_id#25, category_id#26]
Functions: []

(31) CometExchange
Input [3]: [brand_id#24, class_id#25, category_id#26]
Arguments: hashpartitioning(brand_id#24, class_id#25, category_id#26, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(32) CometHashAggregate
Input [3]: [brand_id#24, class_id#25, category_id#26]
Keys [3]: [brand_id#24, class_id#25, category_id#26]
Functions: []

(33) CometNativeScan parquet spark_catalog.default.web_sales
Output [2]: [ws_item_sk#27, ws_sold_date_sk#28]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#28)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int>

(34) CometFilter
Input [2]: [ws_item_sk#27, ws_sold_date_sk#28]
Condition : isnotnull(ws_item_sk#27)

(35) ReusedExchange [Reuses operator id: 13]
Output [4]: [i_item_sk#29, i_brand_id#30, i_class_id#31, i_category_id#32]

(36) CometBroadcastHashJoin
Left output [2]: [ws_item_sk#27, ws_sold_date_sk#28]
Right output [4]: [i_item_sk#29, i_brand_id#30, i_class_id#31, i_category_id#32]
Arguments: [ws_item_sk#27], [i_item_sk#29], Inner, BuildRight

(37) CometProject
Input [6]: [ws_item_sk#27, ws_sold_date_sk#28, i_item_sk#29, i_brand_id#30, i_class_id#31, i_category_id#32]
Arguments: [ws_sold_date_sk#28, i_brand_id#30, i_class_id#31, i_category_id#32], [ws_sold_date_sk#28, i_brand_id#30, i_class_id#31, i_category_id#32]

(38) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#33]

(39) CometBroadcastHashJoin
Left output [4]: [ws_sold_date_sk#28, i_brand_id#30, i_class_id#31, i_category_id#32]
Right output [1]: [d_date_sk#33]
Arguments: [ws_sold_date_sk#28], [d_date_sk#33], Inner, BuildRight

(40) CometProject
Input [5]: [ws_sold_date_sk#28, i_brand_id#30, i_class_id#31, i_category_id#32, d_date_sk#33]
Arguments: [i_brand_id#30, i_class_id#31, i_category_id#32], [i_brand_id#30, i_class_id#31, i_category_id#32]

(41) CometBroadcastExchange
Input [3]: [i_brand_id#30, i_class_id#31, i_category_id#32]
Arguments: [i_brand_id#30, i_class_id#31, i_category_id#32]

(42) CometBroadcastHashJoin
Left output [3]: [brand_id#24, class_id#25, category_id#26]
Right output [3]: [i_brand_id#30, i_class_id#31, i_category_id#32]
Arguments: [coalesce(brand_id#24, 0), isnull(brand_id#24), coalesce(class_id#25, 0), isnull(class_id#25), coalesce(category_id#26, 0), isnull(category_id#26)], [coalesce(i_brand_id#30, 0), isnull(i_brand_id#30), coalesce(i_class_id#31, 0), isnull(i_class_id#31), coalesce(i_category_id#32, 0), isnull(i_category_id#32)], LeftSemi, BuildRight

(43) CometBroadcastExchange
Input [3]: [brand_id#24, class_id#25, category_id#26]
Arguments: [brand_id#24, class_id#25, category_id#26]

(44) CometBroadcastHashJoin
Left output [4]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8]
Right output [3]: [brand_id#24, class_id#25, category_id#26]
Arguments: [i_brand_id#6, i_class_id#7, i_category_id#8], [brand_id#24, class_id#25, category_id#26], Inner, BuildRight

(45) CometProject
Input [7]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8, brand_id#24, class_id#25, category_id#26]
Arguments: [ss_item_sk#34], [i_item_sk#5 AS ss_item_sk#34]

(46) CometBroadcastExchange
Input [1]: [ss_item_sk#34]
Arguments: [ss_item_sk#34]

(47) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [1]: [ss_item_sk#34]
Arguments: [ss_item_sk#1], [ss_item_sk#34], LeftSemi, BuildRight

(48) CometNativeScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(49) CometFilter
Input [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Condition : isnotnull(i_item_sk#35)

(50) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#34]

(51) CometBroadcastHashJoin
Left output [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Right output [1]: [ss_item_sk#34]
Arguments: [i_item_sk#35], [ss_item_sk#34], LeftSemi, BuildRight

(52) CometBroadcastExchange
Input [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Arguments: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]

(53) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Arguments: [ss_item_sk#1], [i_item_sk#35], Inner, BuildRight

(54) CometProject
Input [8]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Arguments: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#36, i_class_id#37, i_category_id#38], [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#36, i_class_id#37, i_category_id#38]

(55) CometNativeScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#39, d_year#40, d_moy#41]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,11), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(56) CometFilter
Input [3]: [d_date_sk#39, d_year#40, d_moy#41]
Condition : ((((isnotnull(d_year#40) AND isnotnull(d_moy#41)) AND (d_year#40 = 2000)) AND (d_moy#41 = 11)) AND isnotnull(d_date_sk#39))

(57) CometProject
Input [3]: [d_date_sk#39, d_year#40, d_moy#41]
Arguments: [d_date_sk#39], [d_date_sk#39]

(58) CometBroadcastExchange
Input [1]: [d_date_sk#39]
Arguments: [d_date_sk#39]

(59) CometBroadcastHashJoin
Left output [6]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#36, i_class_id#37, i_category_id#38]
Right output [1]: [d_date_sk#39]
Arguments: [ss_sold_date_sk#4], [d_date_sk#39], Inner, BuildRight

(60) CometProject
Input [7]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#36, i_class_id#37, i_category_id#38, d_date_sk#39]
Arguments: [ss_quantity#2, ss_list_price#3, i_brand_id#36, i_class_id#37, i_category_id#38], [ss_quantity#2, ss_list_price#3, i_brand_id#36, i_class_id#37, i_category_id#38]

(61) CometHashAggregate
Input [5]: [ss_quantity#2, ss_list_price#3, i_brand_id#36, i_class_id#37, i_category_id#38]
Keys [3]: [i_brand_id#36, i_class_id#37, i_category_id#38]
Functions [2]: [partial_sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), partial_count(1)]

(62) CometExchange
Input [6]: [i_brand_id#36, i_class_id#37, i_category_id#38, sum#42, isEmpty#43, count#44]
Arguments: hashpartitioning(i_brand_id#36, i_class_id#37, i_category_id#38, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(63) CometHashAggregate
Input [6]: [i_brand_id#36, i_class_id#37, i_category_id#38, sum#42, isEmpty#43, count#44]
Keys [3]: [i_brand_id#36, i_class_id#37, i_category_id#38]
Functions [2]: [sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), count(1)]

(64) CometFilter
Input [6]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sales#46, number_sales#47]
Condition : (isnotnull(sales#46) AND (cast(sales#46 as decimal(32,6)) > cast(Subquery scalar-subquery#48, [id=#49] as decimal(32,6))))

(65) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [4]: [cs_item_sk#50, cs_quantity#51, cs_list_price#52, cs_sold_date_sk#53]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#53)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>

(66) CometFilter
Input [4]: [cs_item_sk#50, cs_quantity#51, cs_list_price#52, cs_sold_date_sk#53]
Condition : isnotnull(cs_item_sk#50)

(67) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#54]

(68) CometBroadcastHashJoin
Left output [4]: [cs_item_sk#50, cs_quantity#51, cs_list_price#52, cs_sold_date_sk#53]
Right output [1]: [ss_item_sk#54]
Arguments: [cs_item_sk#50], [ss_item_sk#54], LeftSemi, BuildRight

(69) ReusedExchange [Reuses operator id: 52]
Output [4]: [i_item_sk#55, i_brand_id#56, i_class_id#57, i_category_id#58]

(70) CometBroadcastHashJoin
Left output [4]: [cs_item_sk#50, cs_quantity#51, cs_list_price#52, cs_sold_date_sk#53]
Right output [4]: [i_item_sk#55, i_brand_id#56, i_class_id#57, i_category_id#58]
Arguments: [cs_item_sk#50], [i_item_sk#55], Inner, BuildRight

(71) CometProject
Input [8]: [cs_item_sk#50, cs_quantity#51, cs_list_price#52, cs_sold_date_sk#53, i_item_sk#55, i_brand_id#56, i_class_id#57, i_category_id#58]
Arguments: [cs_quantity#51, cs_list_price#52, cs_sold_date_sk#53, i_brand_id#56, i_class_id#57, i_category_id#58], [cs_quantity#51, cs_list_price#52, cs_sold_date_sk#53, i_brand_id#56, i_class_id#57, i_category_id#58]

(72) ReusedExchange [Reuses operator id: 58]
Output [1]: [d_date_sk#59]

(73) CometBroadcastHashJoin
Left output [6]: [cs_quantity#51, cs_list_price#52, cs_sold_date_sk#53, i_brand_id#56, i_class_id#57, i_category_id#58]
Right output [1]: [d_date_sk#59]
Arguments: [cs_sold_date_sk#53], [d_date_sk#59], Inner, BuildRight

(74) CometProject
Input [7]: [cs_quantity#51, cs_list_price#52, cs_sold_date_sk#53, i_brand_id#56, i_class_id#57, i_category_id#58, d_date_sk#59]
Arguments: [cs_quantity#51, cs_list_price#52, i_brand_id#56, i_class_id#57, i_category_id#58], [cs_quantity#51, cs_list_price#52, i_brand_id#56, i_class_id#57, i_category_id#58]

(75) CometHashAggregate
Input [5]: [cs_quantity#51, cs_list_price#52, i_brand_id#56, i_class_id#57, i_category_id#58]
Keys [3]: [i_brand_id#56, i_class_id#57, i_category_id#58]
Functions [2]: [partial_sum((cast(cs_quantity#51 as decimal(10,0)) * cs_list_price#52)), partial_count(1)]

(76) CometExchange
Input [6]: [i_brand_id#56, i_class_id#57, i_category_id#58, sum#60, isEmpty#61, count#62]
Arguments: hashpartitioning(i_brand_id#56, i_class_id#57, i_category_id#58, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(77) CometHashAggregate
Input [6]: [i_brand_id#56, i_class_id#57, i_category_id#58, sum#60, isEmpty#61, count#62]
Keys [3]: [i_brand_id#56, i_class_id#57, i_category_id#58]
Functions [2]: [sum((cast(cs_quantity#51 as decimal(10,0)) * cs_list_price#52)), count(1)]

(78) CometFilter
Input [6]: [channel#63, i_brand_id#56, i_class_id#57, i_category_id#58, sales#64, number_sales#65]
Condition : (isnotnull(sales#64) AND (cast(sales#64 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#48, [id=#49] as decimal(32,6))))

(79) CometNativeScan parquet spark_catalog.default.web_sales
Output [4]: [ws_item_sk#66, ws_quantity#67, ws_list_price#68, ws_sold_date_sk#69]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#69)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>

(80) CometFilter
Input [4]: [ws_item_sk#66, ws_quantity#67, ws_list_price#68, ws_sold_date_sk#69]
Condition : isnotnull(ws_item_sk#66)

(81) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#70]

(82) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#66, ws_quantity#67, ws_list_price#68, ws_sold_date_sk#69]
Right output [1]: [ss_item_sk#70]
Arguments: [ws_item_sk#66], [ss_item_sk#70], LeftSemi, BuildRight

(83) ReusedExchange [Reuses operator id: 52]
Output [4]: [i_item_sk#71, i_brand_id#72, i_class_id#73, i_category_id#74]

(84) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#66, ws_quantity#67, ws_list_price#68, ws_sold_date_sk#69]
Right output [4]: [i_item_sk#71, i_brand_id#72, i_class_id#73, i_category_id#74]
Arguments: [ws_item_sk#66], [i_item_sk#71], Inner, BuildRight

(85) CometProject
Input [8]: [ws_item_sk#66, ws_quantity#67, ws_list_price#68, ws_sold_date_sk#69, i_item_sk#71, i_brand_id#72, i_class_id#73, i_category_id#74]
Arguments: [ws_quantity#67, ws_list_price#68, ws_sold_date_sk#69, i_brand_id#72, i_class_id#73, i_category_id#74], [ws_quantity#67, ws_list_price#68, ws_sold_date_sk#69, i_brand_id#72, i_class_id#73, i_category_id#74]

(86) ReusedExchange [Reuses operator id: 58]
Output [1]: [d_date_sk#75]

(87) CometBroadcastHashJoin
Left output [6]: [ws_quantity#67, ws_list_price#68, ws_sold_date_sk#69, i_brand_id#72, i_class_id#73, i_category_id#74]
Right output [1]: [d_date_sk#75]
Arguments: [ws_sold_date_sk#69], [d_date_sk#75], Inner, BuildRight

(88) CometProject
Input [7]: [ws_quantity#67, ws_list_price#68, ws_sold_date_sk#69, i_brand_id#72, i_class_id#73, i_category_id#74, d_date_sk#75]
Arguments: [ws_quantity#67, ws_list_price#68, i_brand_id#72, i_class_id#73, i_category_id#74], [ws_quantity#67, ws_list_price#68, i_brand_id#72, i_class_id#73, i_category_id#74]

(89) CometHashAggregate
Input [5]: [ws_quantity#67, ws_list_price#68, i_brand_id#72, i_class_id#73, i_category_id#74]
Keys [3]: [i_brand_id#72, i_class_id#73, i_category_id#74]
Functions [2]: [partial_sum((cast(ws_quantity#67 as decimal(10,0)) * ws_list_price#68)), partial_count(1)]

(90) CometExchange
Input [6]: [i_brand_id#72, i_class_id#73, i_category_id#74, sum#76, isEmpty#77, count#78]
Arguments: hashpartitioning(i_brand_id#72, i_class_id#73, i_category_id#74, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(91) CometHashAggregate
Input [6]: [i_brand_id#72, i_class_id#73, i_category_id#74, sum#76, isEmpty#77, count#78]
Keys [3]: [i_brand_id#72, i_class_id#73, i_category_id#74]
Functions [2]: [sum((cast(ws_quantity#67 as decimal(10,0)) * ws_list_price#68)), count(1)]

(92) CometFilter
Input [6]: [channel#79, i_brand_id#72, i_class_id#73, i_category_id#74, sales#80, number_sales#81]
Condition : (isnotnull(sales#80) AND (cast(sales#80 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#48, [id=#49] as decimal(32,6))))

(93) CometUnion
Child 0 Input [6]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sales#46, number_sales#47]
Child 1 Input [6]: [channel#63, i_brand_id#56, i_class_id#57, i_category_id#58, sales#64, number_sales#65]
Child 2 Input [6]: [channel#79, i_brand_id#72, i_class_id#73, i_category_id#74, sales#80, number_sales#81]

(94) CometHashAggregate
Input [6]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sales#46, number_sales#47]
Keys [4]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38]
Functions [2]: [partial_sum(sales#46), partial_sum(number_sales#47)]

(95) CometExchange
Input [7]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sum#82, isEmpty#83, sum#84]
Arguments: hashpartitioning(channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(96) CometHashAggregate
Input [7]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sum#82, isEmpty#83, sum#84]
Keys [4]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38]
Functions [2]: [sum(sales#46), sum(number_sales#47)]

(97) ReusedExchange [Reuses operator id: 95]
Output [7]: [channel#85, i_brand_id#86, i_class_id#87, i_category_id#88, sum#89, isEmpty#90, sum#91]

(98) CometHashAggregate
Input [7]: [channel#85, i_brand_id#86, i_class_id#87, i_category_id#88, sum#89, isEmpty#90, sum#91]
Keys [4]: [channel#85, i_brand_id#86, i_class_id#87, i_category_id#88]
Functions [2]: [sum(sales#92), sum(number_sales#93)]

(99) CometHashAggregate
Input [5]: [channel#85, i_brand_id#86, i_class_id#87, sum_sales#94, number_sales#95]
Keys [3]: [channel#85, i_brand_id#86, i_class_id#87]
Functions [2]: [partial_sum(sum_sales#94), partial_sum(number_sales#95)]

(100) CometExchange
Input [6]: [channel#85, i_brand_id#86, i_class_id#87, sum#96, isEmpty#97, sum#98]
Arguments: hashpartitioning(channel#85, i_brand_id#86, i_class_id#87, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(101) CometHashAggregate
Input [6]: [channel#85, i_brand_id#86, i_class_id#87, sum#96, isEmpty#97, sum#98]
Keys [3]: [channel#85, i_brand_id#86, i_class_id#87]
Functions [2]: [sum(sum_sales#94), sum(number_sales#95)]

(102) ReusedExchange [Reuses operator id: 95]
Output [7]: [channel#99, i_brand_id#100, i_class_id#101, i_category_id#102, sum#103, isEmpty#104, sum#105]

(103) CometHashAggregate
Input [7]: [channel#99, i_brand_id#100, i_class_id#101, i_category_id#102, sum#103, isEmpty#104, sum#105]
Keys [4]: [channel#99, i_brand_id#100, i_class_id#101, i_category_id#102]
Functions [2]: [sum(sales#106), sum(number_sales#107)]

(104) CometHashAggregate
Input [4]: [channel#99, i_brand_id#100, sum_sales#108, number_sales#109]
Keys [2]: [channel#99, i_brand_id#100]
Functions [2]: [partial_sum(sum_sales#108), partial_sum(number_sales#109)]

(105) CometExchange
Input [5]: [channel#99, i_brand_id#100, sum#110, isEmpty#111, sum#112]
Arguments: hashpartitioning(channel#99, i_brand_id#100, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=7]

(106) CometHashAggregate
Input [5]: [channel#99, i_brand_id#100, sum#110, isEmpty#111, sum#112]
Keys [2]: [channel#99, i_brand_id#100]
Functions [2]: [sum(sum_sales#108), sum(number_sales#109)]

(107) ReusedExchange [Reuses operator id: 95]
Output [7]: [channel#113, i_brand_id#114, i_class_id#115, i_category_id#116, sum#117, isEmpty#118, sum#119]

(108) CometHashAggregate
Input [7]: [channel#113, i_brand_id#114, i_class_id#115, i_category_id#116, sum#117, isEmpty#118, sum#119]
Keys [4]: [channel#113, i_brand_id#114, i_class_id#115, i_category_id#116]
Functions [2]: [sum(sales#120), sum(number_sales#121)]

(109) CometHashAggregate
Input [3]: [channel#113, sum_sales#122, number_sales#123]
Keys [1]: [channel#113]
Functions [2]: [partial_sum(sum_sales#122), partial_sum(number_sales#123)]

(110) CometExchange
Input [4]: [channel#113, sum#124, isEmpty#125, sum#126]
Arguments: hashpartitioning(channel#113, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=8]

(111) CometHashAggregate
Input [4]: [channel#113, sum#124, isEmpty#125, sum#126]
Keys [1]: [channel#113]
Functions [2]: [sum(sum_sales#122), sum(number_sales#123)]

(112) ReusedExchange [Reuses operator id: 95]
Output [7]: [channel#127, i_brand_id#128, i_class_id#129, i_category_id#130, sum#131, isEmpty#132, sum#133]

(113) CometHashAggregate
Input [7]: [channel#127, i_brand_id#128, i_class_id#129, i_category_id#130, sum#131, isEmpty#132, sum#133]
Keys [4]: [channel#127, i_brand_id#128, i_class_id#129, i_category_id#130]
Functions [2]: [sum(sales#134), sum(number_sales#135)]

(114) CometHashAggregate
Input [2]: [sum_sales#136, number_sales#137]
Keys: []
Functions [2]: [partial_sum(sum_sales#136), partial_sum(number_sales#137)]

(115) CometExchange
Input [3]: [sum#138, isEmpty#139, sum#140]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=9]

(116) CometHashAggregate
Input [3]: [sum#138, isEmpty#139, sum#140]
Keys: []
Functions [2]: [sum(sum_sales#136), sum(number_sales#137)]

(117) CometUnion
Child 0 Input [6]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sum_sales#141, number_sales#142]
Child 1 Input [6]: [channel#85, i_brand_id#86, i_class_id#87, i_category_id#143, sum(sum_sales)#144, sum(number_sales)#145]
Child 2 Input [6]: [channel#99, i_brand_id#100, i_class_id#146, i_category_id#147, sum(sum_sales)#148, sum(number_sales)#149]
Child 3 Input [6]: [channel#113, i_brand_id#150, i_class_id#151, i_category_id#152, sum(sum_sales)#153, sum(number_sales)#154]
Child 4 Input [6]: [channel#155, i_brand_id#156, i_class_id#157, i_category_id#158, sum(sum_sales)#159, sum(number_sales)#160]

(118) CometHashAggregate
Input [6]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sum_sales#141, number_sales#142]
Keys [6]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sum_sales#141, number_sales#142]
Functions: []

(119) CometExchange
Input [6]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sum_sales#141, number_sales#142]
Arguments: hashpartitioning(channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sum_sales#141, number_sales#142, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=10]

(120) CometHashAggregate
Input [6]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sum_sales#141, number_sales#142]
Keys [6]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sum_sales#141, number_sales#142]
Functions: []

(121) CometTakeOrderedAndProject
Input [6]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sum_sales#141, number_sales#142]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[channel#45 ASC NULLS FIRST,i_brand_id#36 ASC NULLS FIRST,i_class_id#37 ASC NULLS FIRST,i_category_id#38 ASC NULLS FIRST], output=[channel#45,i_brand_id#36,i_class_id#37,i_category_id#38,sum_sales#141,number_sales#142]), [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sum_sales#141, number_sales#142], 100, 0, [channel#45 ASC NULLS FIRST, i_brand_id#36 ASC NULLS FIRST, i_class_id#37 ASC NULLS FIRST, i_category_id#38 ASC NULLS FIRST], [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sum_sales#141, number_sales#142]

(122) CometColumnarToRow [codegen id : 1]
Input [6]: [channel#45, i_brand_id#36, i_class_id#37, i_category_id#38, sum_sales#141, number_sales#142]

===== Subqueries =====

Subquery:1 Hosting operator id = 64 Hosting Expression = Subquery scalar-subquery#48, [id=#49]
* CometColumnarToRow (142)
+- CometHashAggregate (141)
   +- CometExchange (140)
      +- CometHashAggregate (139)
         +- CometUnion (138)
            :- CometProject (126)
            :  +- CometBroadcastHashJoin (125)
            :     :- CometNativeScan parquet spark_catalog.default.store_sales (123)
            :     +- ReusedExchange (124)
            :- CometProject (133)
            :  +- CometBroadcastHashJoin (132)
            :     :- CometNativeScan parquet spark_catalog.default.catalog_sales (127)
            :     +- CometBroadcastExchange (131)
            :        +- CometProject (130)
            :           +- CometFilter (129)
            :              +- CometNativeScan parquet spark_catalog.default.date_dim (128)
            +- CometProject (137)
               +- CometBroadcastHashJoin (136)
                  :- CometNativeScan parquet spark_catalog.default.web_sales (134)
                  +- ReusedExchange (135)


(123) CometNativeScan parquet spark_catalog.default.store_sales
Output [3]: [ss_quantity#161, ss_list_price#162, ss_sold_date_sk#163]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#163)]
ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>

(124) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#164]

(125) CometBroadcastHashJoin
Left output [3]: [ss_quantity#161, ss_list_price#162, ss_sold_date_sk#163]
Right output [1]: [d_date_sk#164]
Arguments: [ss_sold_date_sk#163], [d_date_sk#164], Inner, BuildRight

(126) CometProject
Input [4]: [ss_quantity#161, ss_list_price#162, ss_sold_date_sk#163, d_date_sk#164]
Arguments: [quantity#165, list_price#166], [ss_quantity#161 AS quantity#165, ss_list_price#162 AS list_price#166]

(127) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [3]: [cs_quantity#167, cs_list_price#168, cs_sold_date_sk#169]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#169)]
ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>

(128) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#170, d_year#171]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(129) CometFilter
Input [2]: [d_date_sk#170, d_year#171]
Condition : (((isnotnull(d_year#171) AND (d_year#171 >= 1998)) AND (d_year#171 <= 2000)) AND isnotnull(d_date_sk#170))

(130) CometProject
Input [2]: [d_date_sk#170, d_year#171]
Arguments: [d_date_sk#170], [d_date_sk#170]

(131) CometBroadcastExchange
Input [1]: [d_date_sk#170]
Arguments: [d_date_sk#170]

(132) CometBroadcastHashJoin
Left output [3]: [cs_quantity#167, cs_list_price#168, cs_sold_date_sk#169]
Right output [1]: [d_date_sk#170]
Arguments: [cs_sold_date_sk#169], [d_date_sk#170], Inner, BuildRight

(133) CometProject
Input [4]: [cs_quantity#167, cs_list_price#168, cs_sold_date_sk#169, d_date_sk#170]
Arguments: [quantity#172, list_price#173], [cs_quantity#167 AS quantity#172, cs_list_price#168 AS list_price#173]

(134) CometNativeScan parquet spark_catalog.default.web_sales
Output [3]: [ws_quantity#174, ws_list_price#175, ws_sold_date_sk#176]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#176)]
ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>

(135) ReusedExchange [Reuses operator id: 131]
Output [1]: [d_date_sk#177]

(136) CometBroadcastHashJoin
Left output [3]: [ws_quantity#174, ws_list_price#175, ws_sold_date_sk#176]
Right output [1]: [d_date_sk#177]
Arguments: [ws_sold_date_sk#176], [d_date_sk#177], Inner, BuildRight

(137) CometProject
Input [4]: [ws_quantity#174, ws_list_price#175, ws_sold_date_sk#176, d_date_sk#177]
Arguments: [quantity#178, list_price#179], [ws_quantity#174 AS quantity#178, ws_list_price#175 AS list_price#179]

(138) CometUnion
Child 0 Input [2]: [quantity#165, list_price#166]
Child 1 Input [2]: [quantity#172, list_price#173]
Child 2 Input [2]: [quantity#178, list_price#179]

(139) CometHashAggregate
Input [2]: [quantity#165, list_price#166]
Keys: []
Functions [1]: [partial_avg((cast(quantity#165 as decimal(10,0)) * list_price#166))]

(140) CometExchange
Input [2]: [sum#180, count#181]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=11]

(141) CometHashAggregate
Input [2]: [sum#180, count#181]
Keys: []
Functions [1]: [avg((cast(quantity#165 as decimal(10,0)) * list_price#166))]

(142) CometColumnarToRow [codegen id : 1]
Input [1]: [average_sales#182]

Subquery:2 Hosting operator id = 78 Hosting Expression = ReusedSubquery Subquery scalar-subquery#48, [id=#49]

Subquery:3 Hosting operator id = 92 Hosting Expression = ReusedSubquery Subquery scalar-subquery#48, [id=#49]


