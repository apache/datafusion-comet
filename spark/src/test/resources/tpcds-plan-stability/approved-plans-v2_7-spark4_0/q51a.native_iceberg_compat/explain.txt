== Physical Plan ==
TakeOrderedAndProject (78)
+- * Filter (77)
   +- * HashAggregate (76)
      +- * HashAggregate (75)
         +- * Project (74)
            +- * BroadcastHashJoin Inner BuildRight (73)
               :- Window (66)
               :  +- * CometColumnarToRow (65)
               :     +- CometSort (64)
               :        +- CometExchange (63)
               :           +- CometProject (62)
               :              +- CometFilter (61)
               :                 +- CometSortMergeJoin (60)
               :                    :- CometSort (31)
               :                    :  +- CometColumnarExchange (30)
               :                    :     +- * HashAggregate (29)
               :                    :        +- * CometColumnarToRow (28)
               :                    :           +- CometColumnarExchange (27)
               :                    :              +- * HashAggregate (26)
               :                    :                 +- * Project (25)
               :                    :                    +- * BroadcastHashJoin Inner BuildRight (24)
               :                    :                       :- * Project (17)
               :                    :                       :  +- Window (16)
               :                    :                       :     +- * CometColumnarToRow (15)
               :                    :                       :        +- CometSort (14)
               :                    :                       :           +- CometColumnarExchange (13)
               :                    :                       :              +- * HashAggregate (12)
               :                    :                       :                 +- * CometColumnarToRow (11)
               :                    :                       :                    +- CometExchange (10)
               :                    :                       :                       +- CometHashAggregate (9)
               :                    :                       :                          +- CometProject (8)
               :                    :                       :                             +- CometBroadcastHashJoin (7)
               :                    :                       :                                :- CometFilter (2)
               :                    :                       :                                :  +- CometScan [native_iceberg_compat] parquet spark_catalog.default.web_sales (1)
               :                    :                       :                                +- CometBroadcastExchange (6)
               :                    :                       :                                   +- CometProject (5)
               :                    :                       :                                      +- CometFilter (4)
               :                    :                       :                                         +- CometScan [native_iceberg_compat] parquet spark_catalog.default.date_dim (3)
               :                    :                       +- BroadcastExchange (23)
               :                    :                          +- * Project (22)
               :                    :                             +- Window (21)
               :                    :                                +- * CometColumnarToRow (20)
               :                    :                                   +- CometSort (19)
               :                    :                                      +- ReusedExchange (18)
               :                    +- CometSort (59)
               :                       +- CometColumnarExchange (58)
               :                          +- * HashAggregate (57)
               :                             +- * CometColumnarToRow (56)
               :                                +- CometColumnarExchange (55)
               :                                   +- * HashAggregate (54)
               :                                      +- * Project (53)
               :                                         +- * BroadcastHashJoin Inner BuildRight (52)
               :                                            :- * Project (45)
               :                                            :  +- Window (44)
               :                                            :     +- * CometColumnarToRow (43)
               :                                            :        +- CometSort (42)
               :                                            :           +- CometColumnarExchange (41)
               :                                            :              +- * HashAggregate (40)
               :                                            :                 +- * CometColumnarToRow (39)
               :                                            :                    +- CometExchange (38)
               :                                            :                       +- CometHashAggregate (37)
               :                                            :                          +- CometProject (36)
               :                                            :                             +- CometBroadcastHashJoin (35)
               :                                            :                                :- CometFilter (33)
               :                                            :                                :  +- CometScan [native_iceberg_compat] parquet spark_catalog.default.store_sales (32)
               :                                            :                                +- ReusedExchange (34)
               :                                            +- BroadcastExchange (51)
               :                                               +- * Project (50)
               :                                                  +- Window (49)
               :                                                     +- * CometColumnarToRow (48)
               :                                                        +- CometSort (47)
               :                                                           +- ReusedExchange (46)
               +- BroadcastExchange (72)
                  +- * Project (71)
                     +- Window (70)
                        +- * CometColumnarToRow (69)
                           +- CometSort (68)
                              +- ReusedExchange (67)


(1) CometScan [native_iceberg_compat] parquet spark_catalog.default.web_sales
Output [3]: [ws_item_sk#1, ws_sales_price#2, ws_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#3), dynamicpruningexpression(ws_sold_date_sk#3 IN dynamicpruning#4)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_sales_price:decimal(7,2)>

(2) CometFilter
Input [3]: [ws_item_sk#1, ws_sales_price#2, ws_sold_date_sk#3]
Condition : isnotnull(ws_item_sk#1)

(3) CometScan [native_iceberg_compat] parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#5, d_date#6, d_month_seq#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>

(4) CometFilter
Input [3]: [d_date_sk#5, d_date#6, d_month_seq#7]
Condition : (((isnotnull(d_month_seq#7) AND (d_month_seq#7 >= 1212)) AND (d_month_seq#7 <= 1223)) AND isnotnull(d_date_sk#5))

(5) CometProject
Input [3]: [d_date_sk#5, d_date#6, d_month_seq#7]
Arguments: [d_date_sk#5, d_date#6], [d_date_sk#5, d_date#6]

(6) CometBroadcastExchange
Input [2]: [d_date_sk#5, d_date#6]
Arguments: [d_date_sk#5, d_date#6]

(7) CometBroadcastHashJoin
Left output [3]: [ws_item_sk#1, ws_sales_price#2, ws_sold_date_sk#3]
Right output [2]: [d_date_sk#5, d_date#6]
Arguments: [ws_sold_date_sk#3], [d_date_sk#5], Inner, BuildRight

(8) CometProject
Input [5]: [ws_item_sk#1, ws_sales_price#2, ws_sold_date_sk#3, d_date_sk#5, d_date#6]
Arguments: [ws_item_sk#1, ws_sales_price#2, d_date#6], [ws_item_sk#1, ws_sales_price#2, d_date#6]

(9) CometHashAggregate
Input [3]: [ws_item_sk#1, ws_sales_price#2, d_date#6]
Keys [2]: [ws_item_sk#1, d_date#6]
Functions [1]: [partial_sum(UnscaledValue(ws_sales_price#2))]

(10) CometExchange
Input [3]: [ws_item_sk#1, d_date#6, sum#8]
Arguments: hashpartitioning(ws_item_sk#1, d_date#6, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(11) CometColumnarToRow [codegen id : 1]
Input [3]: [ws_item_sk#1, d_date#6, sum#8]

(12) HashAggregate [codegen id : 1]
Input [3]: [ws_item_sk#1, d_date#6, sum#8]
Keys [2]: [ws_item_sk#1, d_date#6]
Functions [1]: [sum(UnscaledValue(ws_sales_price#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_sales_price#2))#9]
Results [4]: [ws_item_sk#1 AS item_sk#10, d_date#6, MakeDecimal(sum(UnscaledValue(ws_sales_price#2))#9,17,2) AS sumws#11, ws_item_sk#1]

(13) CometColumnarExchange
Input [4]: [item_sk#10, d_date#6, sumws#11, ws_item_sk#1]
Arguments: hashpartitioning(ws_item_sk#1, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=2]

(14) CometSort
Input [4]: [item_sk#10, d_date#6, sumws#11, ws_item_sk#1]
Arguments: [item_sk#10, d_date#6, sumws#11, ws_item_sk#1], [ws_item_sk#1 ASC NULLS FIRST, d_date#6 ASC NULLS FIRST]

(15) CometColumnarToRow [codegen id : 2]
Input [4]: [item_sk#10, d_date#6, sumws#11, ws_item_sk#1]

(16) Window
Input [4]: [item_sk#10, d_date#6, sumws#11, ws_item_sk#1]
Arguments: [row_number() windowspecdefinition(ws_item_sk#1, d_date#6 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#12], [ws_item_sk#1], [d_date#6 ASC NULLS FIRST]

(17) Project [codegen id : 6]
Output [4]: [item_sk#10, d_date#6, sumws#11, rk#12]
Input [5]: [item_sk#10, d_date#6, sumws#11, ws_item_sk#1, rk#12]

(18) ReusedExchange [Reuses operator id: 13]
Output [4]: [item_sk#13, d_date#14, sumws#15, ws_item_sk#16]

(19) CometSort
Input [4]: [item_sk#13, d_date#14, sumws#15, ws_item_sk#16]
Arguments: [item_sk#13, d_date#14, sumws#15, ws_item_sk#16], [ws_item_sk#16 ASC NULLS FIRST, d_date#14 ASC NULLS FIRST]

(20) CometColumnarToRow [codegen id : 4]
Input [4]: [item_sk#13, d_date#14, sumws#15, ws_item_sk#16]

(21) Window
Input [4]: [item_sk#13, d_date#14, sumws#15, ws_item_sk#16]
Arguments: [row_number() windowspecdefinition(ws_item_sk#16, d_date#14 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#17], [ws_item_sk#16], [d_date#14 ASC NULLS FIRST]

(22) Project [codegen id : 5]
Output [3]: [item_sk#13, sumws#15, rk#17]
Input [5]: [item_sk#13, d_date#14, sumws#15, ws_item_sk#16, rk#17]

(23) BroadcastExchange
Input [3]: [item_sk#13, sumws#15, rk#17]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=3]

(24) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [item_sk#10]
Right keys [1]: [item_sk#13]
Join type: Inner
Join condition: (rk#12 >= rk#17)

(25) Project [codegen id : 6]
Output [4]: [item_sk#10, d_date#6, sumws#11, sumws#15]
Input [7]: [item_sk#10, d_date#6, sumws#11, rk#12, item_sk#13, sumws#15, rk#17]

(26) HashAggregate [codegen id : 6]
Input [4]: [item_sk#10, d_date#6, sumws#11, sumws#15]
Keys [3]: [item_sk#10, d_date#6, sumws#11]
Functions [1]: [partial_sum(sumws#15)]
Aggregate Attributes [2]: [sum#18, isEmpty#19]
Results [5]: [item_sk#10, d_date#6, sumws#11, sum#20, isEmpty#21]

(27) CometColumnarExchange
Input [5]: [item_sk#10, d_date#6, sumws#11, sum#20, isEmpty#21]
Arguments: hashpartitioning(item_sk#10, d_date#6, sumws#11, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=4]

(28) CometColumnarToRow [codegen id : 7]
Input [5]: [item_sk#10, d_date#6, sumws#11, sum#20, isEmpty#21]

(29) HashAggregate [codegen id : 7]
Input [5]: [item_sk#10, d_date#6, sumws#11, sum#20, isEmpty#21]
Keys [3]: [item_sk#10, d_date#6, sumws#11]
Functions [1]: [sum(sumws#15)]
Aggregate Attributes [1]: [sum(sumws#15)#22]
Results [3]: [item_sk#10, d_date#6, sum(sumws#15)#22 AS cume_sales#23]

(30) CometColumnarExchange
Input [3]: [item_sk#10, d_date#6, cume_sales#23]
Arguments: hashpartitioning(item_sk#10, d_date#6, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=5]

(31) CometSort
Input [3]: [item_sk#10, d_date#6, cume_sales#23]
Arguments: [item_sk#10, d_date#6, cume_sales#23], [item_sk#10 ASC NULLS FIRST, d_date#6 ASC NULLS FIRST]

(32) CometScan [native_iceberg_compat] parquet spark_catalog.default.store_sales
Output [3]: [ss_item_sk#24, ss_sales_price#25, ss_sold_date_sk#26]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#26), dynamicpruningexpression(ss_sold_date_sk#26 IN dynamicpruning#27)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_sales_price:decimal(7,2)>

(33) CometFilter
Input [3]: [ss_item_sk#24, ss_sales_price#25, ss_sold_date_sk#26]
Condition : isnotnull(ss_item_sk#24)

(34) ReusedExchange [Reuses operator id: 6]
Output [2]: [d_date_sk#28, d_date#29]

(35) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#24, ss_sales_price#25, ss_sold_date_sk#26]
Right output [2]: [d_date_sk#28, d_date#29]
Arguments: [ss_sold_date_sk#26], [d_date_sk#28], Inner, BuildRight

(36) CometProject
Input [5]: [ss_item_sk#24, ss_sales_price#25, ss_sold_date_sk#26, d_date_sk#28, d_date#29]
Arguments: [ss_item_sk#24, ss_sales_price#25, d_date#29], [ss_item_sk#24, ss_sales_price#25, d_date#29]

(37) CometHashAggregate
Input [3]: [ss_item_sk#24, ss_sales_price#25, d_date#29]
Keys [2]: [ss_item_sk#24, d_date#29]
Functions [1]: [partial_sum(UnscaledValue(ss_sales_price#25))]

(38) CometExchange
Input [3]: [ss_item_sk#24, d_date#29, sum#30]
Arguments: hashpartitioning(ss_item_sk#24, d_date#29, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(39) CometColumnarToRow [codegen id : 8]
Input [3]: [ss_item_sk#24, d_date#29, sum#30]

(40) HashAggregate [codegen id : 8]
Input [3]: [ss_item_sk#24, d_date#29, sum#30]
Keys [2]: [ss_item_sk#24, d_date#29]
Functions [1]: [sum(UnscaledValue(ss_sales_price#25))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_sales_price#25))#31]
Results [4]: [ss_item_sk#24 AS item_sk#32, d_date#29, MakeDecimal(sum(UnscaledValue(ss_sales_price#25))#31,17,2) AS sumss#33, ss_item_sk#24]

(41) CometColumnarExchange
Input [4]: [item_sk#32, d_date#29, sumss#33, ss_item_sk#24]
Arguments: hashpartitioning(ss_item_sk#24, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=7]

(42) CometSort
Input [4]: [item_sk#32, d_date#29, sumss#33, ss_item_sk#24]
Arguments: [item_sk#32, d_date#29, sumss#33, ss_item_sk#24], [ss_item_sk#24 ASC NULLS FIRST, d_date#29 ASC NULLS FIRST]

(43) CometColumnarToRow [codegen id : 9]
Input [4]: [item_sk#32, d_date#29, sumss#33, ss_item_sk#24]

(44) Window
Input [4]: [item_sk#32, d_date#29, sumss#33, ss_item_sk#24]
Arguments: [row_number() windowspecdefinition(ss_item_sk#24, d_date#29 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#34], [ss_item_sk#24], [d_date#29 ASC NULLS FIRST]

(45) Project [codegen id : 13]
Output [4]: [item_sk#32, d_date#29, sumss#33, rk#34]
Input [5]: [item_sk#32, d_date#29, sumss#33, ss_item_sk#24, rk#34]

(46) ReusedExchange [Reuses operator id: 41]
Output [4]: [item_sk#35, d_date#36, sumss#37, ss_item_sk#38]

(47) CometSort
Input [4]: [item_sk#35, d_date#36, sumss#37, ss_item_sk#38]
Arguments: [item_sk#35, d_date#36, sumss#37, ss_item_sk#38], [ss_item_sk#38 ASC NULLS FIRST, d_date#36 ASC NULLS FIRST]

(48) CometColumnarToRow [codegen id : 11]
Input [4]: [item_sk#35, d_date#36, sumss#37, ss_item_sk#38]

(49) Window
Input [4]: [item_sk#35, d_date#36, sumss#37, ss_item_sk#38]
Arguments: [row_number() windowspecdefinition(ss_item_sk#38, d_date#36 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#39], [ss_item_sk#38], [d_date#36 ASC NULLS FIRST]

(50) Project [codegen id : 12]
Output [3]: [item_sk#35, sumss#37, rk#39]
Input [5]: [item_sk#35, d_date#36, sumss#37, ss_item_sk#38, rk#39]

(51) BroadcastExchange
Input [3]: [item_sk#35, sumss#37, rk#39]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=8]

(52) BroadcastHashJoin [codegen id : 13]
Left keys [1]: [item_sk#32]
Right keys [1]: [item_sk#35]
Join type: Inner
Join condition: (rk#34 >= rk#39)

(53) Project [codegen id : 13]
Output [4]: [item_sk#32, d_date#29, sumss#33, sumss#37]
Input [7]: [item_sk#32, d_date#29, sumss#33, rk#34, item_sk#35, sumss#37, rk#39]

(54) HashAggregate [codegen id : 13]
Input [4]: [item_sk#32, d_date#29, sumss#33, sumss#37]
Keys [3]: [item_sk#32, d_date#29, sumss#33]
Functions [1]: [partial_sum(sumss#37)]
Aggregate Attributes [2]: [sum#40, isEmpty#41]
Results [5]: [item_sk#32, d_date#29, sumss#33, sum#42, isEmpty#43]

(55) CometColumnarExchange
Input [5]: [item_sk#32, d_date#29, sumss#33, sum#42, isEmpty#43]
Arguments: hashpartitioning(item_sk#32, d_date#29, sumss#33, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=9]

(56) CometColumnarToRow [codegen id : 14]
Input [5]: [item_sk#32, d_date#29, sumss#33, sum#42, isEmpty#43]

(57) HashAggregate [codegen id : 14]
Input [5]: [item_sk#32, d_date#29, sumss#33, sum#42, isEmpty#43]
Keys [3]: [item_sk#32, d_date#29, sumss#33]
Functions [1]: [sum(sumss#37)]
Aggregate Attributes [1]: [sum(sumss#37)#44]
Results [3]: [item_sk#32, d_date#29, sum(sumss#37)#44 AS cume_sales#45]

(58) CometColumnarExchange
Input [3]: [item_sk#32, d_date#29, cume_sales#45]
Arguments: hashpartitioning(item_sk#32, d_date#29, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=10]

(59) CometSort
Input [3]: [item_sk#32, d_date#29, cume_sales#45]
Arguments: [item_sk#32, d_date#29, cume_sales#45], [item_sk#32 ASC NULLS FIRST, d_date#29 ASC NULLS FIRST]

(60) CometSortMergeJoin
Left output [3]: [item_sk#10, d_date#6, cume_sales#23]
Right output [3]: [item_sk#32, d_date#29, cume_sales#45]
Arguments: [item_sk#10, d_date#6], [item_sk#32, d_date#29], FullOuter

(61) CometFilter
Input [6]: [item_sk#10, d_date#6, cume_sales#23, item_sk#32, d_date#29, cume_sales#45]
Condition : isnotnull(CASE WHEN isnotnull(item_sk#10) THEN item_sk#10 ELSE item_sk#32 END)

(62) CometProject
Input [6]: [item_sk#10, d_date#6, cume_sales#23, item_sk#32, d_date#29, cume_sales#45]
Arguments: [item_sk#46, d_date#47, web_sales#48, store_sales#49], [CASE WHEN isnotnull(item_sk#10) THEN item_sk#10 ELSE item_sk#32 END AS item_sk#46, CASE WHEN isnotnull(d_date#6) THEN d_date#6 ELSE d_date#29 END AS d_date#47, cume_sales#23 AS web_sales#48, cume_sales#45 AS store_sales#49]

(63) CometExchange
Input [4]: [item_sk#46, d_date#47, web_sales#48, store_sales#49]
Arguments: hashpartitioning(item_sk#46, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=11]

(64) CometSort
Input [4]: [item_sk#46, d_date#47, web_sales#48, store_sales#49]
Arguments: [item_sk#46, d_date#47, web_sales#48, store_sales#49], [item_sk#46 ASC NULLS FIRST, d_date#47 ASC NULLS FIRST]

(65) CometColumnarToRow [codegen id : 15]
Input [4]: [item_sk#46, d_date#47, web_sales#48, store_sales#49]

(66) Window
Input [4]: [item_sk#46, d_date#47, web_sales#48, store_sales#49]
Arguments: [row_number() windowspecdefinition(item_sk#46, d_date#47 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#50], [item_sk#46], [d_date#47 ASC NULLS FIRST]

(67) ReusedExchange [Reuses operator id: 63]
Output [4]: [item_sk#51, d_date#52, web_sales#53, store_sales#54]

(68) CometSort
Input [4]: [item_sk#51, d_date#52, web_sales#53, store_sales#54]
Arguments: [item_sk#51, d_date#52, web_sales#53, store_sales#54], [item_sk#51 ASC NULLS FIRST, d_date#52 ASC NULLS FIRST]

(69) CometColumnarToRow [codegen id : 30]
Input [4]: [item_sk#51, d_date#52, web_sales#53, store_sales#54]

(70) Window
Input [4]: [item_sk#51, d_date#52, web_sales#53, store_sales#54]
Arguments: [row_number() windowspecdefinition(item_sk#51, d_date#52 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#55], [item_sk#51], [d_date#52 ASC NULLS FIRST]

(71) Project [codegen id : 31]
Output [4]: [item_sk#51, web_sales#53, store_sales#54, rk#55]
Input [5]: [item_sk#51, d_date#52, web_sales#53, store_sales#54, rk#55]

(72) BroadcastExchange
Input [4]: [item_sk#51, web_sales#53, store_sales#54, rk#55]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=12]

(73) BroadcastHashJoin [codegen id : 32]
Left keys [1]: [item_sk#46]
Right keys [1]: [item_sk#51]
Join type: Inner
Join condition: (rk#50 >= rk#55)

(74) Project [codegen id : 32]
Output [6]: [item_sk#46, d_date#47, web_sales#48, store_sales#49, web_sales#53, store_sales#54]
Input [9]: [item_sk#46, d_date#47, web_sales#48, store_sales#49, rk#50, item_sk#51, web_sales#53, store_sales#54, rk#55]

(75) HashAggregate [codegen id : 32]
Input [6]: [item_sk#46, d_date#47, web_sales#48, store_sales#49, web_sales#53, store_sales#54]
Keys [4]: [item_sk#46, d_date#47, web_sales#48, store_sales#49]
Functions [2]: [partial_max(web_sales#53), partial_max(store_sales#54)]
Aggregate Attributes [2]: [max#56, max#57]
Results [6]: [item_sk#46, d_date#47, web_sales#48, store_sales#49, max#58, max#59]

(76) HashAggregate [codegen id : 32]
Input [6]: [item_sk#46, d_date#47, web_sales#48, store_sales#49, max#58, max#59]
Keys [4]: [item_sk#46, d_date#47, web_sales#48, store_sales#49]
Functions [2]: [max(web_sales#53), max(store_sales#54)]
Aggregate Attributes [2]: [max(web_sales#53)#60, max(store_sales#54)#61]
Results [6]: [item_sk#46, d_date#47, web_sales#48, store_sales#49, max(web_sales#53)#60 AS web_cumulative#62, max(store_sales#54)#61 AS store_cumulative#63]

(77) Filter [codegen id : 32]
Input [6]: [item_sk#46, d_date#47, web_sales#48, store_sales#49, web_cumulative#62, store_cumulative#63]
Condition : ((isnotnull(web_cumulative#62) AND isnotnull(store_cumulative#63)) AND (web_cumulative#62 > store_cumulative#63))

(78) TakeOrderedAndProject
Input [6]: [item_sk#46, d_date#47, web_sales#48, store_sales#49, web_cumulative#62, store_cumulative#63]
Arguments: 100, [item_sk#46 ASC NULLS FIRST, d_date#47 ASC NULLS FIRST], [item_sk#46, d_date#47, web_sales#48, store_sales#49, web_cumulative#62, store_cumulative#63]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ws_sold_date_sk#3 IN dynamicpruning#4
BroadcastExchange (83)
+- * CometColumnarToRow (82)
   +- CometProject (81)
      +- CometFilter (80)
         +- CometScan [native_iceberg_compat] parquet spark_catalog.default.date_dim (79)


(79) CometScan [native_iceberg_compat] parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#5, d_date#6, d_month_seq#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>

(80) CometFilter
Input [3]: [d_date_sk#5, d_date#6, d_month_seq#7]
Condition : (((isnotnull(d_month_seq#7) AND (d_month_seq#7 >= 1212)) AND (d_month_seq#7 <= 1223)) AND isnotnull(d_date_sk#5))

(81) CometProject
Input [3]: [d_date_sk#5, d_date#6, d_month_seq#7]
Arguments: [d_date_sk#5, d_date#6], [d_date_sk#5, d_date#6]

(82) CometColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#5, d_date#6]

(83) BroadcastExchange
Input [2]: [d_date_sk#5, d_date#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=13]

Subquery:2 Hosting operator id = 32 Hosting Expression = ss_sold_date_sk#26 IN dynamicpruning#4


