== Physical Plan ==
* ColumnarToRow (102)
+- CometTakeOrderedAndProject (101)
   +- CometHashAggregate (100)
      +- CometExchange (99)
         +- CometHashAggregate (98)
            +- CometExpand (97)
               +- CometUnion (96)
                  :- CometProject (65)
                  :  +- CometFilter (64)
                  :     +- CometHashAggregate (63)
                  :        +- CometExchange (62)
                  :           +- CometHashAggregate (61)
                  :              +- CometProject (60)
                  :                 +- CometBroadcastHashJoin (59)
                  :                    :- CometProject (54)
                  :                    :  +- CometBroadcastHashJoin (53)
                  :                    :     :- CometBroadcastHashJoin (47)
                  :                    :     :  :- CometFilter (2)
                  :                    :     :  :  +- CometScan parquet spark_catalog.default.store_sales (1)
                  :                    :     :  +- CometBroadcastExchange (46)
                  :                    :     :     +- CometProject (45)
                  :                    :     :        +- CometBroadcastHashJoin (44)
                  :                    :     :           :- CometFilter (4)
                  :                    :     :           :  +- CometScan parquet spark_catalog.default.item (3)
                  :                    :     :           +- CometBroadcastExchange (43)
                  :                    :     :              +- CometBroadcastHashJoin (42)
                  :                    :     :                 :- CometHashAggregate (32)
                  :                    :     :                 :  +- CometExchange (31)
                  :                    :     :                 :     +- CometHashAggregate (30)
                  :                    :     :                 :        +- CometProject (29)
                  :                    :     :                 :           +- CometBroadcastHashJoin (28)
                  :                    :     :                 :              :- CometProject (26)
                  :                    :     :                 :              :  +- CometBroadcastHashJoin (25)
                  :                    :     :                 :              :     :- CometFilter (6)
                  :                    :     :                 :              :     :  +- CometScan parquet spark_catalog.default.store_sales (5)
                  :                    :     :                 :              :     +- CometBroadcastExchange (24)
                  :                    :     :                 :              :        +- CometBroadcastHashJoin (23)
                  :                    :     :                 :              :           :- CometFilter (8)
                  :                    :     :                 :              :           :  +- CometScan parquet spark_catalog.default.item (7)
                  :                    :     :                 :              :           +- CometBroadcastExchange (22)
                  :                    :     :                 :              :              +- CometProject (21)
                  :                    :     :                 :              :                 +- CometBroadcastHashJoin (20)
                  :                    :     :                 :              :                    :- CometProject (15)
                  :                    :     :                 :              :                    :  +- CometBroadcastHashJoin (14)
                  :                    :     :                 :              :                    :     :- CometFilter (10)
                  :                    :     :                 :              :                    :     :  +- CometScan parquet spark_catalog.default.catalog_sales (9)
                  :                    :     :                 :              :                    :     +- CometBroadcastExchange (13)
                  :                    :     :                 :              :                    :        +- CometFilter (12)
                  :                    :     :                 :              :                    :           +- CometScan parquet spark_catalog.default.item (11)
                  :                    :     :                 :              :                    +- CometBroadcastExchange (19)
                  :                    :     :                 :              :                       +- CometProject (18)
                  :                    :     :                 :              :                          +- CometFilter (17)
                  :                    :     :                 :              :                             +- CometScan parquet spark_catalog.default.date_dim (16)
                  :                    :     :                 :              +- ReusedExchange (27)
                  :                    :     :                 +- CometBroadcastExchange (41)
                  :                    :     :                    +- CometProject (40)
                  :                    :     :                       +- CometBroadcastHashJoin (39)
                  :                    :     :                          :- CometProject (37)
                  :                    :     :                          :  +- CometBroadcastHashJoin (36)
                  :                    :     :                          :     :- CometFilter (34)
                  :                    :     :                          :     :  +- CometScan parquet spark_catalog.default.web_sales (33)
                  :                    :     :                          :     +- ReusedExchange (35)
                  :                    :     :                          +- ReusedExchange (38)
                  :                    :     +- CometBroadcastExchange (52)
                  :                    :        +- CometBroadcastHashJoin (51)
                  :                    :           :- CometFilter (49)
                  :                    :           :  +- CometScan parquet spark_catalog.default.item (48)
                  :                    :           +- ReusedExchange (50)
                  :                    +- CometBroadcastExchange (58)
                  :                       +- CometProject (57)
                  :                          +- CometFilter (56)
                  :                             +- CometScan parquet spark_catalog.default.date_dim (55)
                  :- CometProject (80)
                  :  +- CometFilter (79)
                  :     +- CometHashAggregate (78)
                  :        +- CometExchange (77)
                  :           +- CometHashAggregate (76)
                  :              +- CometProject (75)
                  :                 +- CometBroadcastHashJoin (74)
                  :                    :- CometProject (72)
                  :                    :  +- CometBroadcastHashJoin (71)
                  :                    :     :- CometBroadcastHashJoin (69)
                  :                    :     :  :- CometFilter (67)
                  :                    :     :  :  +- CometScan parquet spark_catalog.default.catalog_sales (66)
                  :                    :     :  +- ReusedExchange (68)
                  :                    :     +- ReusedExchange (70)
                  :                    +- ReusedExchange (73)
                  +- CometProject (95)
                     +- CometFilter (94)
                        +- CometHashAggregate (93)
                           +- CometExchange (92)
                              +- CometHashAggregate (91)
                                 +- CometProject (90)
                                    +- CometBroadcastHashJoin (89)
                                       :- CometProject (87)
                                       :  +- CometBroadcastHashJoin (86)
                                       :     :- CometBroadcastHashJoin (84)
                                       :     :  :- CometFilter (82)
                                       :     :  :  +- CometScan parquet spark_catalog.default.web_sales (81)
                                       :     :  +- ReusedExchange (83)
                                       :     +- ReusedExchange (85)
                                       +- ReusedExchange (88)


(1) CometScan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4), dynamicpruningexpression(ss_sold_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Condition : isnotnull(ss_item_sk#1)

(3) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(4) CometFilter
Input [4]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9]
Condition : ((isnotnull(i_brand_id#7) AND isnotnull(i_class_id#8)) AND isnotnull(i_category_id#9))

(5) CometScan parquet spark_catalog.default.store_sales
Output [2]: [ss_item_sk#10, ss_sold_date_sk#11]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#11), dynamicpruningexpression(ss_sold_date_sk#11 IN dynamicpruning#12)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int>

(6) CometFilter
Input [2]: [ss_item_sk#10, ss_sold_date_sk#11]
Condition : isnotnull(ss_item_sk#10)

(7) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(8) CometFilter
Input [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Condition : (((isnotnull(i_item_sk#13) AND isnotnull(i_brand_id#14)) AND isnotnull(i_class_id#15)) AND isnotnull(i_category_id#16))

(9) CometScan parquet spark_catalog.default.catalog_sales
Output [2]: [cs_item_sk#17, cs_sold_date_sk#18]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#18), dynamicpruningexpression(cs_sold_date_sk#18 IN dynamicpruning#19)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int>

(10) CometFilter
Input [2]: [cs_item_sk#17, cs_sold_date_sk#18]
Condition : isnotnull(cs_item_sk#17)

(11) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(12) CometFilter
Input [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Condition : isnotnull(i_item_sk#20)

(13) CometBroadcastExchange
Input [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]

(14) CometBroadcastHashJoin
Left output [2]: [cs_item_sk#17, cs_sold_date_sk#18]
Right output [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [cs_item_sk#17], [i_item_sk#20], Inner, BuildRight

(15) CometProject
Input [6]: [cs_item_sk#17, cs_sold_date_sk#18, i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23], [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23]

(16) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#24, d_year#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(17) CometFilter
Input [2]: [d_date_sk#24, d_year#25]
Condition : (((isnotnull(d_year#25) AND (d_year#25 >= 1999)) AND (d_year#25 <= 2001)) AND isnotnull(d_date_sk#24))

(18) CometProject
Input [2]: [d_date_sk#24, d_year#25]
Arguments: [d_date_sk#24], [d_date_sk#24]

(19) CometBroadcastExchange
Input [1]: [d_date_sk#24]
Arguments: [d_date_sk#24]

(20) CometBroadcastHashJoin
Left output [4]: [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23]
Right output [1]: [d_date_sk#24]
Arguments: [cs_sold_date_sk#18], [d_date_sk#24], Inner, BuildRight

(21) CometProject
Input [5]: [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23, d_date_sk#24]
Arguments: [i_brand_id#21, i_class_id#22, i_category_id#23], [i_brand_id#21, i_class_id#22, i_category_id#23]

(22) CometBroadcastExchange
Input [3]: [i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [i_brand_id#21, i_class_id#22, i_category_id#23]

(23) CometBroadcastHashJoin
Left output [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Right output [3]: [i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [coalesce(i_brand_id#14, 0), isnull(i_brand_id#14), coalesce(i_class_id#15, 0), isnull(i_class_id#15), coalesce(i_category_id#16, 0), isnull(i_category_id#16)], [coalesce(i_brand_id#21, 0), isnull(i_brand_id#21), coalesce(i_class_id#22, 0), isnull(i_class_id#22), coalesce(i_category_id#23, 0), isnull(i_category_id#23)], LeftSemi, BuildRight

(24) CometBroadcastExchange
Input [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Arguments: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]

(25) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#10, ss_sold_date_sk#11]
Right output [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Arguments: [ss_item_sk#10], [i_item_sk#13], Inner, BuildRight

(26) CometProject
Input [6]: [ss_item_sk#10, ss_sold_date_sk#11, i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Arguments: [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16], [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16]

(27) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#26]

(28) CometBroadcastHashJoin
Left output [4]: [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16]
Right output [1]: [d_date_sk#26]
Arguments: [ss_sold_date_sk#11], [d_date_sk#26], Inner, BuildRight

(29) CometProject
Input [5]: [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16, d_date_sk#26]
Arguments: [brand_id#27, class_id#28, category_id#29], [i_brand_id#14 AS brand_id#27, i_class_id#15 AS class_id#28, i_category_id#16 AS category_id#29]

(30) CometHashAggregate
Input [3]: [brand_id#27, class_id#28, category_id#29]
Keys [3]: [brand_id#27, class_id#28, category_id#29]
Functions: []

(31) CometExchange
Input [3]: [brand_id#27, class_id#28, category_id#29]
Arguments: hashpartitioning(brand_id#27, class_id#28, category_id#29, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(32) CometHashAggregate
Input [3]: [brand_id#27, class_id#28, category_id#29]
Keys [3]: [brand_id#27, class_id#28, category_id#29]
Functions: []

(33) CometScan parquet spark_catalog.default.web_sales
Output [2]: [ws_item_sk#30, ws_sold_date_sk#31]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#31), dynamicpruningexpression(ws_sold_date_sk#31 IN dynamicpruning#32)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int>

(34) CometFilter
Input [2]: [ws_item_sk#30, ws_sold_date_sk#31]
Condition : isnotnull(ws_item_sk#30)

(35) ReusedExchange [Reuses operator id: 13]
Output [4]: [i_item_sk#33, i_brand_id#34, i_class_id#35, i_category_id#36]

(36) CometBroadcastHashJoin
Left output [2]: [ws_item_sk#30, ws_sold_date_sk#31]
Right output [4]: [i_item_sk#33, i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [ws_item_sk#30], [i_item_sk#33], Inner, BuildRight

(37) CometProject
Input [6]: [ws_item_sk#30, ws_sold_date_sk#31, i_item_sk#33, i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36], [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36]

(38) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#37]

(39) CometBroadcastHashJoin
Left output [4]: [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36]
Right output [1]: [d_date_sk#37]
Arguments: [ws_sold_date_sk#31], [d_date_sk#37], Inner, BuildRight

(40) CometProject
Input [5]: [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36, d_date_sk#37]
Arguments: [i_brand_id#34, i_class_id#35, i_category_id#36], [i_brand_id#34, i_class_id#35, i_category_id#36]

(41) CometBroadcastExchange
Input [3]: [i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [i_brand_id#34, i_class_id#35, i_category_id#36]

(42) CometBroadcastHashJoin
Left output [3]: [brand_id#27, class_id#28, category_id#29]
Right output [3]: [i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [coalesce(brand_id#27, 0), isnull(brand_id#27), coalesce(class_id#28, 0), isnull(class_id#28), coalesce(category_id#29, 0), isnull(category_id#29)], [coalesce(i_brand_id#34, 0), isnull(i_brand_id#34), coalesce(i_class_id#35, 0), isnull(i_class_id#35), coalesce(i_category_id#36, 0), isnull(i_category_id#36)], LeftSemi, BuildRight

(43) CometBroadcastExchange
Input [3]: [brand_id#27, class_id#28, category_id#29]
Arguments: [brand_id#27, class_id#28, category_id#29]

(44) CometBroadcastHashJoin
Left output [4]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9]
Right output [3]: [brand_id#27, class_id#28, category_id#29]
Arguments: [i_brand_id#7, i_class_id#8, i_category_id#9], [brand_id#27, class_id#28, category_id#29], Inner, BuildRight

(45) CometProject
Input [7]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9, brand_id#27, class_id#28, category_id#29]
Arguments: [ss_item_sk#38], [i_item_sk#6 AS ss_item_sk#38]

(46) CometBroadcastExchange
Input [1]: [ss_item_sk#38]
Arguments: [ss_item_sk#38]

(47) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [1]: [ss_item_sk#38]
Arguments: [ss_item_sk#1], [ss_item_sk#38], LeftSemi, BuildRight

(48) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(49) CometFilter
Input [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Condition : isnotnull(i_item_sk#39)

(50) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#38]

(51) CometBroadcastHashJoin
Left output [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Right output [1]: [ss_item_sk#38]
Arguments: [i_item_sk#39], [ss_item_sk#38], LeftSemi, BuildRight

(52) CometBroadcastExchange
Input [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Arguments: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]

(53) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Arguments: [ss_item_sk#1], [i_item_sk#39], Inner, BuildRight

(54) CometProject
Input [8]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Arguments: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42], [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42]

(55) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#43, d_year#44, d_moy#45]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,11), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(56) CometFilter
Input [3]: [d_date_sk#43, d_year#44, d_moy#45]
Condition : ((((isnotnull(d_year#44) AND isnotnull(d_moy#45)) AND (d_year#44 = 2001)) AND (d_moy#45 = 11)) AND isnotnull(d_date_sk#43))

(57) CometProject
Input [3]: [d_date_sk#43, d_year#44, d_moy#45]
Arguments: [d_date_sk#43], [d_date_sk#43]

(58) CometBroadcastExchange
Input [1]: [d_date_sk#43]
Arguments: [d_date_sk#43]

(59) CometBroadcastHashJoin
Left output [6]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42]
Right output [1]: [d_date_sk#43]
Arguments: [ss_sold_date_sk#4], [d_date_sk#43], Inner, BuildRight

(60) CometProject
Input [7]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42, d_date_sk#43]
Arguments: [ss_quantity#2, ss_list_price#3, i_brand_id#40, i_class_id#41, i_category_id#42], [ss_quantity#2, ss_list_price#3, i_brand_id#40, i_class_id#41, i_category_id#42]

(61) CometHashAggregate
Input [5]: [ss_quantity#2, ss_list_price#3, i_brand_id#40, i_class_id#41, i_category_id#42]
Keys [3]: [i_brand_id#40, i_class_id#41, i_category_id#42]
Functions [2]: [partial_sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), partial_count(1)]

(62) CometExchange
Input [6]: [i_brand_id#40, i_class_id#41, i_category_id#42, sum#46, isEmpty#47, count#48]
Arguments: hashpartitioning(i_brand_id#40, i_class_id#41, i_category_id#42, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(63) CometHashAggregate
Input [6]: [i_brand_id#40, i_class_id#41, i_category_id#42, sum#46, isEmpty#47, count#48]
Keys [3]: [i_brand_id#40, i_class_id#41, i_category_id#42]
Functions [2]: [sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), count(1)]

(64) CometFilter
Input [5]: [i_brand_id#40, i_class_id#41, i_category_id#42, sales#49, number_sales#50]
Condition : (isnotnull(sales#49) AND (cast(sales#49 as decimal(32,6)) > cast(Subquery scalar-subquery#51, [id=#52] as decimal(32,6))))

(65) CometProject
Input [5]: [i_brand_id#40, i_class_id#41, i_category_id#42, sales#49, number_sales#50]
Arguments: [sales#49, number_sales#50, channel#53, i_brand_id#54, i_class_id#55, i_category_id#56], [sales#49, number_sales#50, store AS channel#53, i_brand_id#40 AS i_brand_id#54, i_class_id#41 AS i_class_id#55, i_category_id#42 AS i_category_id#56]

(66) CometScan parquet spark_catalog.default.catalog_sales
Output [4]: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sold_date_sk#60]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#60), dynamicpruningexpression(cs_sold_date_sk#60 IN dynamicpruning#61)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>

(67) CometFilter
Input [4]: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sold_date_sk#60]
Condition : isnotnull(cs_item_sk#57)

(68) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#62]

(69) CometBroadcastHashJoin
Left output [4]: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sold_date_sk#60]
Right output [1]: [ss_item_sk#62]
Arguments: [cs_item_sk#57], [ss_item_sk#62], LeftSemi, BuildRight

(70) ReusedExchange [Reuses operator id: 52]
Output [4]: [i_item_sk#63, i_brand_id#64, i_class_id#65, i_category_id#66]

(71) CometBroadcastHashJoin
Left output [4]: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sold_date_sk#60]
Right output [4]: [i_item_sk#63, i_brand_id#64, i_class_id#65, i_category_id#66]
Arguments: [cs_item_sk#57], [i_item_sk#63], Inner, BuildRight

(72) CometProject
Input [8]: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sold_date_sk#60, i_item_sk#63, i_brand_id#64, i_class_id#65, i_category_id#66]
Arguments: [cs_quantity#58, cs_list_price#59, cs_sold_date_sk#60, i_brand_id#64, i_class_id#65, i_category_id#66], [cs_quantity#58, cs_list_price#59, cs_sold_date_sk#60, i_brand_id#64, i_class_id#65, i_category_id#66]

(73) ReusedExchange [Reuses operator id: 58]
Output [1]: [d_date_sk#67]

(74) CometBroadcastHashJoin
Left output [6]: [cs_quantity#58, cs_list_price#59, cs_sold_date_sk#60, i_brand_id#64, i_class_id#65, i_category_id#66]
Right output [1]: [d_date_sk#67]
Arguments: [cs_sold_date_sk#60], [d_date_sk#67], Inner, BuildRight

(75) CometProject
Input [7]: [cs_quantity#58, cs_list_price#59, cs_sold_date_sk#60, i_brand_id#64, i_class_id#65, i_category_id#66, d_date_sk#67]
Arguments: [cs_quantity#58, cs_list_price#59, i_brand_id#64, i_class_id#65, i_category_id#66], [cs_quantity#58, cs_list_price#59, i_brand_id#64, i_class_id#65, i_category_id#66]

(76) CometHashAggregate
Input [5]: [cs_quantity#58, cs_list_price#59, i_brand_id#64, i_class_id#65, i_category_id#66]
Keys [3]: [i_brand_id#64, i_class_id#65, i_category_id#66]
Functions [2]: [partial_sum((cast(cs_quantity#58 as decimal(10,0)) * cs_list_price#59)), partial_count(1)]

(77) CometExchange
Input [6]: [i_brand_id#64, i_class_id#65, i_category_id#66, sum#68, isEmpty#69, count#70]
Arguments: hashpartitioning(i_brand_id#64, i_class_id#65, i_category_id#66, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(78) CometHashAggregate
Input [6]: [i_brand_id#64, i_class_id#65, i_category_id#66, sum#68, isEmpty#69, count#70]
Keys [3]: [i_brand_id#64, i_class_id#65, i_category_id#66]
Functions [2]: [sum((cast(cs_quantity#58 as decimal(10,0)) * cs_list_price#59)), count(1)]

(79) CometFilter
Input [5]: [i_brand_id#64, i_class_id#65, i_category_id#66, sales#71, number_sales#72]
Condition : (isnotnull(sales#71) AND (cast(sales#71 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#51, [id=#52] as decimal(32,6))))

(80) CometProject
Input [5]: [i_brand_id#64, i_class_id#65, i_category_id#66, sales#71, number_sales#72]
Arguments: [sales#71, number_sales#72, channel#73, i_brand_id#64, i_class_id#65, i_category_id#66], [sales#71, number_sales#72, catalog AS channel#73, i_brand_id#64, i_class_id#65, i_category_id#66]

(81) CometScan parquet spark_catalog.default.web_sales
Output [4]: [ws_item_sk#74, ws_quantity#75, ws_list_price#76, ws_sold_date_sk#77]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#77), dynamicpruningexpression(ws_sold_date_sk#77 IN dynamicpruning#78)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>

(82) CometFilter
Input [4]: [ws_item_sk#74, ws_quantity#75, ws_list_price#76, ws_sold_date_sk#77]
Condition : isnotnull(ws_item_sk#74)

(83) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#79]

(84) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#74, ws_quantity#75, ws_list_price#76, ws_sold_date_sk#77]
Right output [1]: [ss_item_sk#79]
Arguments: [ws_item_sk#74], [ss_item_sk#79], LeftSemi, BuildRight

(85) ReusedExchange [Reuses operator id: 52]
Output [4]: [i_item_sk#80, i_brand_id#81, i_class_id#82, i_category_id#83]

(86) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#74, ws_quantity#75, ws_list_price#76, ws_sold_date_sk#77]
Right output [4]: [i_item_sk#80, i_brand_id#81, i_class_id#82, i_category_id#83]
Arguments: [ws_item_sk#74], [i_item_sk#80], Inner, BuildRight

(87) CometProject
Input [8]: [ws_item_sk#74, ws_quantity#75, ws_list_price#76, ws_sold_date_sk#77, i_item_sk#80, i_brand_id#81, i_class_id#82, i_category_id#83]
Arguments: [ws_quantity#75, ws_list_price#76, ws_sold_date_sk#77, i_brand_id#81, i_class_id#82, i_category_id#83], [ws_quantity#75, ws_list_price#76, ws_sold_date_sk#77, i_brand_id#81, i_class_id#82, i_category_id#83]

(88) ReusedExchange [Reuses operator id: 58]
Output [1]: [d_date_sk#84]

(89) CometBroadcastHashJoin
Left output [6]: [ws_quantity#75, ws_list_price#76, ws_sold_date_sk#77, i_brand_id#81, i_class_id#82, i_category_id#83]
Right output [1]: [d_date_sk#84]
Arguments: [ws_sold_date_sk#77], [d_date_sk#84], Inner, BuildRight

(90) CometProject
Input [7]: [ws_quantity#75, ws_list_price#76, ws_sold_date_sk#77, i_brand_id#81, i_class_id#82, i_category_id#83, d_date_sk#84]
Arguments: [ws_quantity#75, ws_list_price#76, i_brand_id#81, i_class_id#82, i_category_id#83], [ws_quantity#75, ws_list_price#76, i_brand_id#81, i_class_id#82, i_category_id#83]

(91) CometHashAggregate
Input [5]: [ws_quantity#75, ws_list_price#76, i_brand_id#81, i_class_id#82, i_category_id#83]
Keys [3]: [i_brand_id#81, i_class_id#82, i_category_id#83]
Functions [2]: [partial_sum((cast(ws_quantity#75 as decimal(10,0)) * ws_list_price#76)), partial_count(1)]

(92) CometExchange
Input [6]: [i_brand_id#81, i_class_id#82, i_category_id#83, sum#85, isEmpty#86, count#87]
Arguments: hashpartitioning(i_brand_id#81, i_class_id#82, i_category_id#83, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(93) CometHashAggregate
Input [6]: [i_brand_id#81, i_class_id#82, i_category_id#83, sum#85, isEmpty#86, count#87]
Keys [3]: [i_brand_id#81, i_class_id#82, i_category_id#83]
Functions [2]: [sum((cast(ws_quantity#75 as decimal(10,0)) * ws_list_price#76)), count(1)]

(94) CometFilter
Input [5]: [i_brand_id#81, i_class_id#82, i_category_id#83, sales#88, number_sales#89]
Condition : (isnotnull(sales#88) AND (cast(sales#88 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#51, [id=#52] as decimal(32,6))))

(95) CometProject
Input [5]: [i_brand_id#81, i_class_id#82, i_category_id#83, sales#88, number_sales#89]
Arguments: [sales#88, number_sales#89, channel#90, i_brand_id#81, i_class_id#82, i_category_id#83], [sales#88, number_sales#89, web AS channel#90, i_brand_id#81, i_class_id#82, i_category_id#83]

(96) CometUnion
Child 0 Input [6]: [sales#49, number_sales#50, channel#53, i_brand_id#54, i_class_id#55, i_category_id#56]
Child 1 Input [6]: [sales#71, number_sales#72, channel#73, i_brand_id#64, i_class_id#65, i_category_id#66]
Child 2 Input [6]: [sales#88, number_sales#89, channel#90, i_brand_id#81, i_class_id#82, i_category_id#83]

(97) CometExpand
Input [6]: [sales#49, number_sales#50, channel#53, i_brand_id#54, i_class_id#55, i_category_id#56]
Arguments: [[sales#49, number_sales#50, channel#53, i_brand_id#54, i_class_id#55, i_category_id#56, 0], [sales#49, number_sales#50, channel#53, i_brand_id#54, i_class_id#55, null, 1], [sales#49, number_sales#50, channel#53, i_brand_id#54, null, null, 3], [sales#49, number_sales#50, channel#53, null, null, null, 7], [sales#49, number_sales#50, null, null, null, null, 15]], [sales#49, number_sales#50, channel#91, i_brand_id#92, i_class_id#93, i_category_id#94, spark_grouping_id#95]

(98) CometHashAggregate
Input [7]: [sales#49, number_sales#50, channel#91, i_brand_id#92, i_class_id#93, i_category_id#94, spark_grouping_id#95]
Keys [5]: [channel#91, i_brand_id#92, i_class_id#93, i_category_id#94, spark_grouping_id#95]
Functions [2]: [partial_sum(sales#49), partial_sum(number_sales#50)]

(99) CometExchange
Input [8]: [channel#91, i_brand_id#92, i_class_id#93, i_category_id#94, spark_grouping_id#95, sum#96, isEmpty#97, sum#98]
Arguments: hashpartitioning(channel#91, i_brand_id#92, i_class_id#93, i_category_id#94, spark_grouping_id#95, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(100) CometHashAggregate
Input [8]: [channel#91, i_brand_id#92, i_class_id#93, i_category_id#94, spark_grouping_id#95, sum#96, isEmpty#97, sum#98]
Keys [5]: [channel#91, i_brand_id#92, i_class_id#93, i_category_id#94, spark_grouping_id#95]
Functions [2]: [sum(sales#49), sum(number_sales#50)]

(101) CometTakeOrderedAndProject
Input [6]: [channel#91, i_brand_id#92, i_class_id#93, i_category_id#94, sum(sales)#99, sum(number_sales)#100]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[channel#91 ASC NULLS FIRST,i_brand_id#92 ASC NULLS FIRST,i_class_id#93 ASC NULLS FIRST,i_category_id#94 ASC NULLS FIRST], output=[channel#91,i_brand_id#92,i_class_id#93,i_category_id#94,sum(sales)#99,sum(number_sales)#100]), [channel#91, i_brand_id#92, i_class_id#93, i_category_id#94, sum(sales)#99, sum(number_sales)#100], 100, [channel#91 ASC NULLS FIRST, i_brand_id#92 ASC NULLS FIRST, i_class_id#93 ASC NULLS FIRST, i_category_id#94 ASC NULLS FIRST], [channel#91, i_brand_id#92, i_class_id#93, i_category_id#94, sum(sales)#99, sum(number_sales)#100]

(102) ColumnarToRow [codegen id : 1]
Input [6]: [channel#91, i_brand_id#92, i_class_id#93, i_category_id#94, sum(sales)#99, sum(number_sales)#100]

===== Subqueries =====

Subquery:1 Hosting operator id = 64 Hosting Expression = Subquery scalar-subquery#51, [id=#52]
* ColumnarToRow (119)
+- CometHashAggregate (118)
   +- CometExchange (117)
      +- CometHashAggregate (116)
         +- CometUnion (115)
            :- CometProject (106)
            :  +- CometBroadcastHashJoin (105)
            :     :- CometScan parquet spark_catalog.default.store_sales (103)
            :     +- ReusedExchange (104)
            :- CometProject (110)
            :  +- CometBroadcastHashJoin (109)
            :     :- CometScan parquet spark_catalog.default.catalog_sales (107)
            :     +- ReusedExchange (108)
            +- CometProject (114)
               +- CometBroadcastHashJoin (113)
                  :- CometScan parquet spark_catalog.default.web_sales (111)
                  +- ReusedExchange (112)


(103) CometScan parquet spark_catalog.default.store_sales
Output [3]: [ss_quantity#101, ss_list_price#102, ss_sold_date_sk#103]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#103), dynamicpruningexpression(ss_sold_date_sk#103 IN dynamicpruning#104)]
ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>

(104) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#105]

(105) CometBroadcastHashJoin
Left output [3]: [ss_quantity#101, ss_list_price#102, ss_sold_date_sk#103]
Right output [1]: [d_date_sk#105]
Arguments: [ss_sold_date_sk#103], [d_date_sk#105], Inner, BuildRight

(106) CometProject
Input [4]: [ss_quantity#101, ss_list_price#102, ss_sold_date_sk#103, d_date_sk#105]
Arguments: [quantity#106, list_price#107], [ss_quantity#101 AS quantity#106, ss_list_price#102 AS list_price#107]

(107) CometScan parquet spark_catalog.default.catalog_sales
Output [3]: [cs_quantity#108, cs_list_price#109, cs_sold_date_sk#110]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#110), dynamicpruningexpression(cs_sold_date_sk#110 IN dynamicpruning#111)]
ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>

(108) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#112]

(109) CometBroadcastHashJoin
Left output [3]: [cs_quantity#108, cs_list_price#109, cs_sold_date_sk#110]
Right output [1]: [d_date_sk#112]
Arguments: [cs_sold_date_sk#110], [d_date_sk#112], Inner, BuildRight

(110) CometProject
Input [4]: [cs_quantity#108, cs_list_price#109, cs_sold_date_sk#110, d_date_sk#112]
Arguments: [quantity#113, list_price#114], [cs_quantity#108 AS quantity#113, cs_list_price#109 AS list_price#114]

(111) CometScan parquet spark_catalog.default.web_sales
Output [3]: [ws_quantity#115, ws_list_price#116, ws_sold_date_sk#117]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#117), dynamicpruningexpression(ws_sold_date_sk#117 IN dynamicpruning#118)]
ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>

(112) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#119]

(113) CometBroadcastHashJoin
Left output [3]: [ws_quantity#115, ws_list_price#116, ws_sold_date_sk#117]
Right output [1]: [d_date_sk#119]
Arguments: [ws_sold_date_sk#117], [d_date_sk#119], Inner, BuildRight

(114) CometProject
Input [4]: [ws_quantity#115, ws_list_price#116, ws_sold_date_sk#117, d_date_sk#119]
Arguments: [quantity#120, list_price#121], [ws_quantity#115 AS quantity#120, ws_list_price#116 AS list_price#121]

(115) CometUnion
Child 0 Input [2]: [quantity#106, list_price#107]
Child 1 Input [2]: [quantity#113, list_price#114]
Child 2 Input [2]: [quantity#120, list_price#121]

(116) CometHashAggregate
Input [2]: [quantity#106, list_price#107]
Keys: []
Functions [1]: [partial_avg((cast(quantity#106 as decimal(10,0)) * list_price#107))]

(117) CometExchange
Input [2]: [sum#122, count#123]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(118) CometHashAggregate
Input [2]: [sum#122, count#123]
Keys: []
Functions [1]: [avg((cast(quantity#106 as decimal(10,0)) * list_price#107))]

(119) ColumnarToRow [codegen id : 1]
Input [1]: [average_sales#124]

Subquery:2 Hosting operator id = 103 Hosting Expression = ss_sold_date_sk#103 IN dynamicpruning#12

Subquery:3 Hosting operator id = 107 Hosting Expression = cs_sold_date_sk#110 IN dynamicpruning#12

Subquery:4 Hosting operator id = 111 Hosting Expression = ws_sold_date_sk#117 IN dynamicpruning#12

Subquery:5 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#4 IN dynamicpruning#5
BroadcastExchange (124)
+- * ColumnarToRow (123)
   +- CometProject (122)
      +- CometFilter (121)
         +- CometScan parquet spark_catalog.default.date_dim (120)


(120) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#43, d_year#44, d_moy#45]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,11), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(121) CometFilter
Input [3]: [d_date_sk#43, d_year#44, d_moy#45]
Condition : ((((isnotnull(d_year#44) AND isnotnull(d_moy#45)) AND (d_year#44 = 2001)) AND (d_moy#45 = 11)) AND isnotnull(d_date_sk#43))

(122) CometProject
Input [3]: [d_date_sk#43, d_year#44, d_moy#45]
Arguments: [d_date_sk#43], [d_date_sk#43]

(123) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#43]

(124) BroadcastExchange
Input [1]: [d_date_sk#43]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7]

Subquery:6 Hosting operator id = 5 Hosting Expression = ss_sold_date_sk#11 IN dynamicpruning#12
BroadcastExchange (129)
+- * ColumnarToRow (128)
   +- CometProject (127)
      +- CometFilter (126)
         +- CometScan parquet spark_catalog.default.date_dim (125)


(125) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#26, d_year#125]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(126) CometFilter
Input [2]: [d_date_sk#26, d_year#125]
Condition : (((isnotnull(d_year#125) AND (d_year#125 >= 1999)) AND (d_year#125 <= 2001)) AND isnotnull(d_date_sk#26))

(127) CometProject
Input [2]: [d_date_sk#26, d_year#125]
Arguments: [d_date_sk#26], [d_date_sk#26]

(128) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#26]

(129) BroadcastExchange
Input [1]: [d_date_sk#26]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=8]

Subquery:7 Hosting operator id = 9 Hosting Expression = cs_sold_date_sk#18 IN dynamicpruning#12

Subquery:8 Hosting operator id = 33 Hosting Expression = ws_sold_date_sk#31 IN dynamicpruning#12

Subquery:9 Hosting operator id = 79 Hosting Expression = ReusedSubquery Subquery scalar-subquery#51, [id=#52]

Subquery:10 Hosting operator id = 66 Hosting Expression = cs_sold_date_sk#60 IN dynamicpruning#5

Subquery:11 Hosting operator id = 94 Hosting Expression = ReusedSubquery Subquery scalar-subquery#51, [id=#52]

Subquery:12 Hosting operator id = 81 Hosting Expression = ws_sold_date_sk#77 IN dynamicpruning#5


