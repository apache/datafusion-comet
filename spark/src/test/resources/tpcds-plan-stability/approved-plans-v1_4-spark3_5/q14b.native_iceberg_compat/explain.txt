== Physical Plan ==
* ColumnarToRow (85)
+- CometTakeOrderedAndProject (84)
   +- CometBroadcastHashJoin (83)
      :- CometFilter (64)
      :  +- CometHashAggregate (63)
      :     +- CometExchange (62)
      :        +- CometHashAggregate (61)
      :           +- CometProject (60)
      :              +- CometBroadcastHashJoin (59)
      :                 :- CometProject (54)
      :                 :  +- CometBroadcastHashJoin (53)
      :                 :     :- CometBroadcastHashJoin (47)
      :                 :     :  :- CometFilter (2)
      :                 :     :  :  +- CometScan parquet spark_catalog.default.store_sales (1)
      :                 :     :  +- CometBroadcastExchange (46)
      :                 :     :     +- CometProject (45)
      :                 :     :        +- CometBroadcastHashJoin (44)
      :                 :     :           :- CometFilter (4)
      :                 :     :           :  +- CometScan parquet spark_catalog.default.item (3)
      :                 :     :           +- CometBroadcastExchange (43)
      :                 :     :              +- CometBroadcastHashJoin (42)
      :                 :     :                 :- CometHashAggregate (32)
      :                 :     :                 :  +- CometExchange (31)
      :                 :     :                 :     +- CometHashAggregate (30)
      :                 :     :                 :        +- CometProject (29)
      :                 :     :                 :           +- CometBroadcastHashJoin (28)
      :                 :     :                 :              :- CometProject (26)
      :                 :     :                 :              :  +- CometBroadcastHashJoin (25)
      :                 :     :                 :              :     :- CometFilter (6)
      :                 :     :                 :              :     :  +- CometScan parquet spark_catalog.default.store_sales (5)
      :                 :     :                 :              :     +- CometBroadcastExchange (24)
      :                 :     :                 :              :        +- CometBroadcastHashJoin (23)
      :                 :     :                 :              :           :- CometFilter (8)
      :                 :     :                 :              :           :  +- CometScan parquet spark_catalog.default.item (7)
      :                 :     :                 :              :           +- CometBroadcastExchange (22)
      :                 :     :                 :              :              +- CometProject (21)
      :                 :     :                 :              :                 +- CometBroadcastHashJoin (20)
      :                 :     :                 :              :                    :- CometProject (15)
      :                 :     :                 :              :                    :  +- CometBroadcastHashJoin (14)
      :                 :     :                 :              :                    :     :- CometFilter (10)
      :                 :     :                 :              :                    :     :  +- CometScan parquet spark_catalog.default.catalog_sales (9)
      :                 :     :                 :              :                    :     +- CometBroadcastExchange (13)
      :                 :     :                 :              :                    :        +- CometFilter (12)
      :                 :     :                 :              :                    :           +- CometScan parquet spark_catalog.default.item (11)
      :                 :     :                 :              :                    +- CometBroadcastExchange (19)
      :                 :     :                 :              :                       +- CometProject (18)
      :                 :     :                 :              :                          +- CometFilter (17)
      :                 :     :                 :              :                             +- CometScan parquet spark_catalog.default.date_dim (16)
      :                 :     :                 :              +- ReusedExchange (27)
      :                 :     :                 +- CometBroadcastExchange (41)
      :                 :     :                    +- CometProject (40)
      :                 :     :                       +- CometBroadcastHashJoin (39)
      :                 :     :                          :- CometProject (37)
      :                 :     :                          :  +- CometBroadcastHashJoin (36)
      :                 :     :                          :     :- CometFilter (34)
      :                 :     :                          :     :  +- CometScan parquet spark_catalog.default.web_sales (33)
      :                 :     :                          :     +- ReusedExchange (35)
      :                 :     :                          +- ReusedExchange (38)
      :                 :     +- CometBroadcastExchange (52)
      :                 :        +- CometBroadcastHashJoin (51)
      :                 :           :- CometFilter (49)
      :                 :           :  +- CometScan parquet spark_catalog.default.item (48)
      :                 :           +- ReusedExchange (50)
      :                 +- CometBroadcastExchange (58)
      :                    +- CometProject (57)
      :                       +- CometFilter (56)
      :                          +- CometScan parquet spark_catalog.default.date_dim (55)
      +- CometBroadcastExchange (82)
         +- CometFilter (81)
            +- CometHashAggregate (80)
               +- CometExchange (79)
                  +- CometHashAggregate (78)
                     +- CometProject (77)
                        +- CometBroadcastHashJoin (76)
                           :- CometProject (71)
                           :  +- CometBroadcastHashJoin (70)
                           :     :- CometBroadcastHashJoin (68)
                           :     :  :- CometFilter (66)
                           :     :  :  +- CometScan parquet spark_catalog.default.store_sales (65)
                           :     :  +- ReusedExchange (67)
                           :     +- ReusedExchange (69)
                           +- CometBroadcastExchange (75)
                              +- CometProject (74)
                                 +- CometFilter (73)
                                    +- CometScan parquet spark_catalog.default.date_dim (72)


(1) CometScan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Condition : isnotnull(ss_item_sk#1)

(3) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(4) CometFilter
Input [4]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8]
Condition : ((isnotnull(i_brand_id#6) AND isnotnull(i_class_id#7)) AND isnotnull(i_category_id#8))

(5) CometScan parquet spark_catalog.default.store_sales
Output [2]: [ss_item_sk#9, ss_sold_date_sk#10]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#10)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int>

(6) CometFilter
Input [2]: [ss_item_sk#9, ss_sold_date_sk#10]
Condition : isnotnull(ss_item_sk#9)

(7) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(8) CometFilter
Input [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Condition : (((isnotnull(i_item_sk#11) AND isnotnull(i_brand_id#12)) AND isnotnull(i_class_id#13)) AND isnotnull(i_category_id#14))

(9) CometScan parquet spark_catalog.default.catalog_sales
Output [2]: [cs_item_sk#15, cs_sold_date_sk#16]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#16)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int>

(10) CometFilter
Input [2]: [cs_item_sk#15, cs_sold_date_sk#16]
Condition : isnotnull(cs_item_sk#15)

(11) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(12) CometFilter
Input [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Condition : isnotnull(i_item_sk#17)

(13) CometBroadcastExchange
Input [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]

(14) CometBroadcastHashJoin
Left output [2]: [cs_item_sk#15, cs_sold_date_sk#16]
Right output [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [cs_item_sk#15], [i_item_sk#17], Inner, BuildRight

(15) CometProject
Input [6]: [cs_item_sk#15, cs_sold_date_sk#16, i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20], [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20]

(16) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#21, d_year#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(17) CometFilter
Input [2]: [d_date_sk#21, d_year#22]
Condition : (((isnotnull(d_year#22) AND (d_year#22 >= 1999)) AND (d_year#22 <= 2001)) AND isnotnull(d_date_sk#21))

(18) CometProject
Input [2]: [d_date_sk#21, d_year#22]
Arguments: [d_date_sk#21], [d_date_sk#21]

(19) CometBroadcastExchange
Input [1]: [d_date_sk#21]
Arguments: [d_date_sk#21]

(20) CometBroadcastHashJoin
Left output [4]: [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20]
Right output [1]: [d_date_sk#21]
Arguments: [cs_sold_date_sk#16], [d_date_sk#21], Inner, BuildRight

(21) CometProject
Input [5]: [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20, d_date_sk#21]
Arguments: [i_brand_id#18, i_class_id#19, i_category_id#20], [i_brand_id#18, i_class_id#19, i_category_id#20]

(22) CometBroadcastExchange
Input [3]: [i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [i_brand_id#18, i_class_id#19, i_category_id#20]

(23) CometBroadcastHashJoin
Left output [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Right output [3]: [i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [coalesce(i_brand_id#12, 0), isnull(i_brand_id#12), coalesce(i_class_id#13, 0), isnull(i_class_id#13), coalesce(i_category_id#14, 0), isnull(i_category_id#14)], [coalesce(i_brand_id#18, 0), isnull(i_brand_id#18), coalesce(i_class_id#19, 0), isnull(i_class_id#19), coalesce(i_category_id#20, 0), isnull(i_category_id#20)], LeftSemi, BuildRight

(24) CometBroadcastExchange
Input [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Arguments: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]

(25) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#9, ss_sold_date_sk#10]
Right output [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Arguments: [ss_item_sk#9], [i_item_sk#11], Inner, BuildRight

(26) CometProject
Input [6]: [ss_item_sk#9, ss_sold_date_sk#10, i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Arguments: [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14], [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14]

(27) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#23]

(28) CometBroadcastHashJoin
Left output [4]: [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14]
Right output [1]: [d_date_sk#23]
Arguments: [ss_sold_date_sk#10], [d_date_sk#23], Inner, BuildRight

(29) CometProject
Input [5]: [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14, d_date_sk#23]
Arguments: [brand_id#24, class_id#25, category_id#26], [i_brand_id#12 AS brand_id#24, i_class_id#13 AS class_id#25, i_category_id#14 AS category_id#26]

(30) CometHashAggregate
Input [3]: [brand_id#24, class_id#25, category_id#26]
Keys [3]: [brand_id#24, class_id#25, category_id#26]
Functions: []

(31) CometExchange
Input [3]: [brand_id#24, class_id#25, category_id#26]
Arguments: hashpartitioning(brand_id#24, class_id#25, category_id#26, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(32) CometHashAggregate
Input [3]: [brand_id#24, class_id#25, category_id#26]
Keys [3]: [brand_id#24, class_id#25, category_id#26]
Functions: []

(33) CometScan parquet spark_catalog.default.web_sales
Output [2]: [ws_item_sk#27, ws_sold_date_sk#28]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#28)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int>

(34) CometFilter
Input [2]: [ws_item_sk#27, ws_sold_date_sk#28]
Condition : isnotnull(ws_item_sk#27)

(35) ReusedExchange [Reuses operator id: 13]
Output [4]: [i_item_sk#29, i_brand_id#30, i_class_id#31, i_category_id#32]

(36) CometBroadcastHashJoin
Left output [2]: [ws_item_sk#27, ws_sold_date_sk#28]
Right output [4]: [i_item_sk#29, i_brand_id#30, i_class_id#31, i_category_id#32]
Arguments: [ws_item_sk#27], [i_item_sk#29], Inner, BuildRight

(37) CometProject
Input [6]: [ws_item_sk#27, ws_sold_date_sk#28, i_item_sk#29, i_brand_id#30, i_class_id#31, i_category_id#32]
Arguments: [ws_sold_date_sk#28, i_brand_id#30, i_class_id#31, i_category_id#32], [ws_sold_date_sk#28, i_brand_id#30, i_class_id#31, i_category_id#32]

(38) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#33]

(39) CometBroadcastHashJoin
Left output [4]: [ws_sold_date_sk#28, i_brand_id#30, i_class_id#31, i_category_id#32]
Right output [1]: [d_date_sk#33]
Arguments: [ws_sold_date_sk#28], [d_date_sk#33], Inner, BuildRight

(40) CometProject
Input [5]: [ws_sold_date_sk#28, i_brand_id#30, i_class_id#31, i_category_id#32, d_date_sk#33]
Arguments: [i_brand_id#30, i_class_id#31, i_category_id#32], [i_brand_id#30, i_class_id#31, i_category_id#32]

(41) CometBroadcastExchange
Input [3]: [i_brand_id#30, i_class_id#31, i_category_id#32]
Arguments: [i_brand_id#30, i_class_id#31, i_category_id#32]

(42) CometBroadcastHashJoin
Left output [3]: [brand_id#24, class_id#25, category_id#26]
Right output [3]: [i_brand_id#30, i_class_id#31, i_category_id#32]
Arguments: [coalesce(brand_id#24, 0), isnull(brand_id#24), coalesce(class_id#25, 0), isnull(class_id#25), coalesce(category_id#26, 0), isnull(category_id#26)], [coalesce(i_brand_id#30, 0), isnull(i_brand_id#30), coalesce(i_class_id#31, 0), isnull(i_class_id#31), coalesce(i_category_id#32, 0), isnull(i_category_id#32)], LeftSemi, BuildRight

(43) CometBroadcastExchange
Input [3]: [brand_id#24, class_id#25, category_id#26]
Arguments: [brand_id#24, class_id#25, category_id#26]

(44) CometBroadcastHashJoin
Left output [4]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8]
Right output [3]: [brand_id#24, class_id#25, category_id#26]
Arguments: [i_brand_id#6, i_class_id#7, i_category_id#8], [brand_id#24, class_id#25, category_id#26], Inner, BuildRight

(45) CometProject
Input [7]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8, brand_id#24, class_id#25, category_id#26]
Arguments: [ss_item_sk#34], [i_item_sk#5 AS ss_item_sk#34]

(46) CometBroadcastExchange
Input [1]: [ss_item_sk#34]
Arguments: [ss_item_sk#34]

(47) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [1]: [ss_item_sk#34]
Arguments: [ss_item_sk#1], [ss_item_sk#34], LeftSemi, BuildRight

(48) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(49) CometFilter
Input [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Condition : (((isnotnull(i_item_sk#35) AND isnotnull(i_brand_id#36)) AND isnotnull(i_class_id#37)) AND isnotnull(i_category_id#38))

(50) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#34]

(51) CometBroadcastHashJoin
Left output [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Right output [1]: [ss_item_sk#34]
Arguments: [i_item_sk#35], [ss_item_sk#34], LeftSemi, BuildRight

(52) CometBroadcastExchange
Input [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Arguments: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]

(53) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Arguments: [ss_item_sk#1], [i_item_sk#35], Inner, BuildRight

(54) CometProject
Input [8]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Arguments: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#36, i_class_id#37, i_category_id#38], [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#36, i_class_id#37, i_category_id#38]

(55) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#39, d_week_seq#40]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_week_seq:int>

(56) CometFilter
Input [2]: [d_date_sk#39, d_week_seq#40]
Condition : ((isnotnull(d_week_seq#40) AND (d_week_seq#40 = Subquery scalar-subquery#41, [id=#42])) AND isnotnull(d_date_sk#39))

(57) CometProject
Input [2]: [d_date_sk#39, d_week_seq#40]
Arguments: [d_date_sk#39], [d_date_sk#39]

(58) CometBroadcastExchange
Input [1]: [d_date_sk#39]
Arguments: [d_date_sk#39]

(59) CometBroadcastHashJoin
Left output [6]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#36, i_class_id#37, i_category_id#38]
Right output [1]: [d_date_sk#39]
Arguments: [ss_sold_date_sk#4], [d_date_sk#39], Inner, BuildRight

(60) CometProject
Input [7]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#36, i_class_id#37, i_category_id#38, d_date_sk#39]
Arguments: [ss_quantity#2, ss_list_price#3, i_brand_id#36, i_class_id#37, i_category_id#38], [ss_quantity#2, ss_list_price#3, i_brand_id#36, i_class_id#37, i_category_id#38]

(61) CometHashAggregate
Input [5]: [ss_quantity#2, ss_list_price#3, i_brand_id#36, i_class_id#37, i_category_id#38]
Keys [3]: [i_brand_id#36, i_class_id#37, i_category_id#38]
Functions [2]: [partial_sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), partial_count(1)]

(62) CometExchange
Input [6]: [i_brand_id#36, i_class_id#37, i_category_id#38, sum#43, isEmpty#44, count#45]
Arguments: hashpartitioning(i_brand_id#36, i_class_id#37, i_category_id#38, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(63) CometHashAggregate
Input [6]: [i_brand_id#36, i_class_id#37, i_category_id#38, sum#43, isEmpty#44, count#45]
Keys [3]: [i_brand_id#36, i_class_id#37, i_category_id#38]
Functions [2]: [sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), count(1)]

(64) CometFilter
Input [6]: [channel#46, i_brand_id#36, i_class_id#37, i_category_id#38, sales#47, number_sales#48]
Condition : (isnotnull(sales#47) AND (cast(sales#47 as decimal(32,6)) > cast(Subquery scalar-subquery#49, [id=#50] as decimal(32,6))))

(65) CometScan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#51, ss_quantity#52, ss_list_price#53, ss_sold_date_sk#54]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#54)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>

(66) CometFilter
Input [4]: [ss_item_sk#51, ss_quantity#52, ss_list_price#53, ss_sold_date_sk#54]
Condition : isnotnull(ss_item_sk#51)

(67) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#55]

(68) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#51, ss_quantity#52, ss_list_price#53, ss_sold_date_sk#54]
Right output [1]: [ss_item_sk#55]
Arguments: [ss_item_sk#51], [ss_item_sk#55], LeftSemi, BuildRight

(69) ReusedExchange [Reuses operator id: 52]
Output [4]: [i_item_sk#56, i_brand_id#57, i_class_id#58, i_category_id#59]

(70) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#51, ss_quantity#52, ss_list_price#53, ss_sold_date_sk#54]
Right output [4]: [i_item_sk#56, i_brand_id#57, i_class_id#58, i_category_id#59]
Arguments: [ss_item_sk#51], [i_item_sk#56], Inner, BuildRight

(71) CometProject
Input [8]: [ss_item_sk#51, ss_quantity#52, ss_list_price#53, ss_sold_date_sk#54, i_item_sk#56, i_brand_id#57, i_class_id#58, i_category_id#59]
Arguments: [ss_quantity#52, ss_list_price#53, ss_sold_date_sk#54, i_brand_id#57, i_class_id#58, i_category_id#59], [ss_quantity#52, ss_list_price#53, ss_sold_date_sk#54, i_brand_id#57, i_class_id#58, i_category_id#59]

(72) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#60, d_week_seq#61]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_week_seq:int>

(73) CometFilter
Input [2]: [d_date_sk#60, d_week_seq#61]
Condition : ((isnotnull(d_week_seq#61) AND (d_week_seq#61 = Subquery scalar-subquery#62, [id=#63])) AND isnotnull(d_date_sk#60))

(74) CometProject
Input [2]: [d_date_sk#60, d_week_seq#61]
Arguments: [d_date_sk#60], [d_date_sk#60]

(75) CometBroadcastExchange
Input [1]: [d_date_sk#60]
Arguments: [d_date_sk#60]

(76) CometBroadcastHashJoin
Left output [6]: [ss_quantity#52, ss_list_price#53, ss_sold_date_sk#54, i_brand_id#57, i_class_id#58, i_category_id#59]
Right output [1]: [d_date_sk#60]
Arguments: [ss_sold_date_sk#54], [d_date_sk#60], Inner, BuildRight

(77) CometProject
Input [7]: [ss_quantity#52, ss_list_price#53, ss_sold_date_sk#54, i_brand_id#57, i_class_id#58, i_category_id#59, d_date_sk#60]
Arguments: [ss_quantity#52, ss_list_price#53, i_brand_id#57, i_class_id#58, i_category_id#59], [ss_quantity#52, ss_list_price#53, i_brand_id#57, i_class_id#58, i_category_id#59]

(78) CometHashAggregate
Input [5]: [ss_quantity#52, ss_list_price#53, i_brand_id#57, i_class_id#58, i_category_id#59]
Keys [3]: [i_brand_id#57, i_class_id#58, i_category_id#59]
Functions [2]: [partial_sum((cast(ss_quantity#52 as decimal(10,0)) * ss_list_price#53)), partial_count(1)]

(79) CometExchange
Input [6]: [i_brand_id#57, i_class_id#58, i_category_id#59, sum#64, isEmpty#65, count#66]
Arguments: hashpartitioning(i_brand_id#57, i_class_id#58, i_category_id#59, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(80) CometHashAggregate
Input [6]: [i_brand_id#57, i_class_id#58, i_category_id#59, sum#64, isEmpty#65, count#66]
Keys [3]: [i_brand_id#57, i_class_id#58, i_category_id#59]
Functions [2]: [sum((cast(ss_quantity#52 as decimal(10,0)) * ss_list_price#53)), count(1)]

(81) CometFilter
Input [6]: [channel#67, i_brand_id#57, i_class_id#58, i_category_id#59, sales#68, number_sales#69]
Condition : (isnotnull(sales#68) AND (cast(sales#68 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#49, [id=#50] as decimal(32,6))))

(82) CometBroadcastExchange
Input [6]: [channel#67, i_brand_id#57, i_class_id#58, i_category_id#59, sales#68, number_sales#69]
Arguments: [channel#67, i_brand_id#57, i_class_id#58, i_category_id#59, sales#68, number_sales#69]

(83) CometBroadcastHashJoin
Left output [6]: [channel#46, i_brand_id#36, i_class_id#37, i_category_id#38, sales#47, number_sales#48]
Right output [6]: [channel#67, i_brand_id#57, i_class_id#58, i_category_id#59, sales#68, number_sales#69]
Arguments: [i_brand_id#36, i_class_id#37, i_category_id#38], [i_brand_id#57, i_class_id#58, i_category_id#59], Inner, BuildRight

(84) CometTakeOrderedAndProject
Input [12]: [channel#46, i_brand_id#36, i_class_id#37, i_category_id#38, sales#47, number_sales#48, channel#67, i_brand_id#57, i_class_id#58, i_category_id#59, sales#68, number_sales#69]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[i_brand_id#36 ASC NULLS FIRST,i_class_id#37 ASC NULLS FIRST,i_category_id#38 ASC NULLS FIRST], output=[channel#46,i_brand_id#36,i_class_id#37,i_category_id#38,sales#47,number_sales#48,channel#67,i_brand_id#57,i_class_id#58,i_category_id#59,sales#68,number_sales#69]), [channel#46, i_brand_id#36, i_class_id#37, i_category_id#38, sales#47, number_sales#48, channel#67, i_brand_id#57, i_class_id#58, i_category_id#59, sales#68, number_sales#69], 100, [i_brand_id#36 ASC NULLS FIRST, i_class_id#37 ASC NULLS FIRST, i_category_id#38 ASC NULLS FIRST], [channel#46, i_brand_id#36, i_class_id#37, i_category_id#38, sales#47, number_sales#48, channel#67, i_brand_id#57, i_class_id#58, i_category_id#59, sales#68, number_sales#69]

(85) ColumnarToRow [codegen id : 1]
Input [12]: [channel#46, i_brand_id#36, i_class_id#37, i_category_id#38, sales#47, number_sales#48, channel#67, i_brand_id#57, i_class_id#58, i_category_id#59, sales#68, number_sales#69]

===== Subqueries =====

Subquery:1 Hosting operator id = 64 Hosting Expression = Subquery scalar-subquery#49, [id=#50]
* ColumnarToRow (102)
+- CometHashAggregate (101)
   +- CometExchange (100)
      +- CometHashAggregate (99)
         +- CometUnion (98)
            :- CometProject (89)
            :  +- CometBroadcastHashJoin (88)
            :     :- CometScan parquet spark_catalog.default.store_sales (86)
            :     +- ReusedExchange (87)
            :- CometProject (93)
            :  +- CometBroadcastHashJoin (92)
            :     :- CometScan parquet spark_catalog.default.catalog_sales (90)
            :     +- ReusedExchange (91)
            +- CometProject (97)
               +- CometBroadcastHashJoin (96)
                  :- CometScan parquet spark_catalog.default.web_sales (94)
                  +- ReusedExchange (95)


(86) CometScan parquet spark_catalog.default.store_sales
Output [3]: [ss_quantity#70, ss_list_price#71, ss_sold_date_sk#72]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#72)]
ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>

(87) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#73]

(88) CometBroadcastHashJoin
Left output [3]: [ss_quantity#70, ss_list_price#71, ss_sold_date_sk#72]
Right output [1]: [d_date_sk#73]
Arguments: [ss_sold_date_sk#72], [d_date_sk#73], Inner, BuildRight

(89) CometProject
Input [4]: [ss_quantity#70, ss_list_price#71, ss_sold_date_sk#72, d_date_sk#73]
Arguments: [quantity#74, list_price#75], [ss_quantity#70 AS quantity#74, ss_list_price#71 AS list_price#75]

(90) CometScan parquet spark_catalog.default.catalog_sales
Output [3]: [cs_quantity#76, cs_list_price#77, cs_sold_date_sk#78]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#78)]
ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>

(91) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#79]

(92) CometBroadcastHashJoin
Left output [3]: [cs_quantity#76, cs_list_price#77, cs_sold_date_sk#78]
Right output [1]: [d_date_sk#79]
Arguments: [cs_sold_date_sk#78], [d_date_sk#79], Inner, BuildRight

(93) CometProject
Input [4]: [cs_quantity#76, cs_list_price#77, cs_sold_date_sk#78, d_date_sk#79]
Arguments: [quantity#80, list_price#81], [cs_quantity#76 AS quantity#80, cs_list_price#77 AS list_price#81]

(94) CometScan parquet spark_catalog.default.web_sales
Output [3]: [ws_quantity#82, ws_list_price#83, ws_sold_date_sk#84]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#84)]
ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>

(95) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#85]

(96) CometBroadcastHashJoin
Left output [3]: [ws_quantity#82, ws_list_price#83, ws_sold_date_sk#84]
Right output [1]: [d_date_sk#85]
Arguments: [ws_sold_date_sk#84], [d_date_sk#85], Inner, BuildRight

(97) CometProject
Input [4]: [ws_quantity#82, ws_list_price#83, ws_sold_date_sk#84, d_date_sk#85]
Arguments: [quantity#86, list_price#87], [ws_quantity#82 AS quantity#86, ws_list_price#83 AS list_price#87]

(98) CometUnion
Child 0 Input [2]: [quantity#74, list_price#75]
Child 1 Input [2]: [quantity#80, list_price#81]
Child 2 Input [2]: [quantity#86, list_price#87]

(99) CometHashAggregate
Input [2]: [quantity#74, list_price#75]
Keys: []
Functions [1]: [partial_avg((cast(quantity#74 as decimal(10,0)) * list_price#75))]

(100) CometExchange
Input [2]: [sum#88, count#89]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(101) CometHashAggregate
Input [2]: [sum#88, count#89]
Keys: []
Functions [1]: [avg((cast(quantity#74 as decimal(10,0)) * list_price#75))]

(102) ColumnarToRow [codegen id : 1]
Input [1]: [average_sales#90]

Subquery:2 Hosting operator id = 56 Hosting Expression = Subquery scalar-subquery#41, [id=#42]
* ColumnarToRow (106)
+- CometProject (105)
   +- CometFilter (104)
      +- CometScan parquet spark_catalog.default.date_dim (103)


(103) CometScan parquet spark_catalog.default.date_dim
Output [4]: [d_week_seq#91, d_year#92, d_moy#93, d_dom#94]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,2000), EqualTo(d_moy,12), EqualTo(d_dom,11)]
ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>

(104) CometFilter
Input [4]: [d_week_seq#91, d_year#92, d_moy#93, d_dom#94]
Condition : (((((isnotnull(d_year#92) AND isnotnull(d_moy#93)) AND isnotnull(d_dom#94)) AND (d_year#92 = 2000)) AND (d_moy#93 = 12)) AND (d_dom#94 = 11))

(105) CometProject
Input [4]: [d_week_seq#91, d_year#92, d_moy#93, d_dom#94]
Arguments: [d_week_seq#91], [d_week_seq#91]

(106) ColumnarToRow [codegen id : 1]
Input [1]: [d_week_seq#91]

Subquery:3 Hosting operator id = 81 Hosting Expression = ReusedSubquery Subquery scalar-subquery#49, [id=#50]

Subquery:4 Hosting operator id = 73 Hosting Expression = Subquery scalar-subquery#62, [id=#63]
* ColumnarToRow (110)
+- CometProject (109)
   +- CometFilter (108)
      +- CometScan parquet spark_catalog.default.date_dim (107)


(107) CometScan parquet spark_catalog.default.date_dim
Output [4]: [d_week_seq#95, d_year#96, d_moy#97, d_dom#98]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), EqualTo(d_dom,11)]
ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>

(108) CometFilter
Input [4]: [d_week_seq#95, d_year#96, d_moy#97, d_dom#98]
Condition : (((((isnotnull(d_year#96) AND isnotnull(d_moy#97)) AND isnotnull(d_dom#98)) AND (d_year#96 = 1999)) AND (d_moy#97 = 12)) AND (d_dom#98 = 11))

(109) CometProject
Input [4]: [d_week_seq#95, d_year#96, d_moy#97, d_dom#98]
Arguments: [d_week_seq#95], [d_week_seq#95]

(110) ColumnarToRow [codegen id : 1]
Input [1]: [d_week_seq#95]


