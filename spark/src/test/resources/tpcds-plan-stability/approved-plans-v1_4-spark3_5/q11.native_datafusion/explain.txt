== Physical Plan ==
* CometColumnarToRow (69)
+- CometTakeOrderedAndProject (68)
   +- CometProject (67)
      +- CometBroadcastHashJoin (66)
         :- CometProject (52)
         :  +- CometBroadcastHashJoin (51)
         :     :- CometProject (34)
         :     :  +- CometBroadcastHashJoin (33)
         :     :     :- CometFilter (17)
         :     :     :  +- CometHashAggregate (16)
         :     :     :     +- CometExchange (15)
         :     :     :        +- CometHashAggregate (14)
         :     :     :           +- CometProject (13)
         :     :     :              +- CometBroadcastHashJoin (12)
         :     :     :                 :- CometProject (8)
         :     :     :                 :  +- CometBroadcastHashJoin (7)
         :     :     :                 :     :- CometProject (3)
         :     :     :                 :     :  +- CometFilter (2)
         :     :     :                 :     :     +- CometNativeScan parquet spark_catalog.default.customer (1)
         :     :     :                 :     +- CometBroadcastExchange (6)
         :     :     :                 :        +- CometFilter (5)
         :     :     :                 :           +- CometNativeScan parquet spark_catalog.default.store_sales (4)
         :     :     :                 +- CometBroadcastExchange (11)
         :     :     :                    +- CometFilter (10)
         :     :     :                       +- CometNativeScan parquet spark_catalog.default.date_dim (9)
         :     :     +- CometBroadcastExchange (32)
         :     :        +- CometHashAggregate (31)
         :     :           +- CometExchange (30)
         :     :              +- CometHashAggregate (29)
         :     :                 +- CometProject (28)
         :     :                    +- CometBroadcastHashJoin (27)
         :     :                       :- CometProject (23)
         :     :                       :  +- CometBroadcastHashJoin (22)
         :     :                       :     :- CometProject (20)
         :     :                       :     :  +- CometFilter (19)
         :     :                       :     :     +- CometNativeScan parquet spark_catalog.default.customer (18)
         :     :                       :     +- ReusedExchange (21)
         :     :                       +- CometBroadcastExchange (26)
         :     :                          +- CometFilter (25)
         :     :                             +- CometNativeScan parquet spark_catalog.default.date_dim (24)
         :     +- CometBroadcastExchange (50)
         :        +- CometFilter (49)
         :           +- CometHashAggregate (48)
         :              +- CometExchange (47)
         :                 +- CometHashAggregate (46)
         :                    +- CometProject (45)
         :                       +- CometBroadcastHashJoin (44)
         :                          :- CometProject (42)
         :                          :  +- CometBroadcastHashJoin (41)
         :                          :     :- CometProject (37)
         :                          :     :  +- CometFilter (36)
         :                          :     :     +- CometNativeScan parquet spark_catalog.default.customer (35)
         :                          :     +- CometBroadcastExchange (40)
         :                          :        +- CometFilter (39)
         :                          :           +- CometNativeScan parquet spark_catalog.default.web_sales (38)
         :                          +- ReusedExchange (43)
         +- CometBroadcastExchange (65)
            +- CometHashAggregate (64)
               +- CometExchange (63)
                  +- CometHashAggregate (62)
                     +- CometProject (61)
                        +- CometBroadcastHashJoin (60)
                           :- CometProject (58)
                           :  +- CometBroadcastHashJoin (57)
                           :     :- CometProject (55)
                           :     :  +- CometFilter (54)
                           :     :     +- CometNativeScan parquet spark_catalog.default.customer (53)
                           :     +- ReusedExchange (56)
                           +- ReusedExchange (59)


(1) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(2) CometFilter
Input [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Condition : (isnotnull(c_customer_sk#1) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#2, 16, true, false, true)))

(3) CometProject
Input [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Arguments: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14], [c_customer_sk#1, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#2, 16, true, false, true) AS c_customer_id#9, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#3, 20, true, false, true) AS c_first_name#10, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#4, 30, true, false, true) AS c_last_name#11, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#5, 1, true, false, true) AS c_preferred_cust_flag#12, c_birth_country#6, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#7, 13, true, false, true) AS c_login#13, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#8, 50, true, false, true) AS c_email_address#14]

(4) CometNativeScan parquet spark_catalog.default.store_sales
Output [4]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#18)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:decimal(7,2)>

(5) CometFilter
Input [4]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]
Condition : isnotnull(ss_customer_sk#15)

(6) CometBroadcastExchange
Input [4]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]
Arguments: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]

(7) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14]
Right output [4]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]
Arguments: [c_customer_sk#1], [ss_customer_sk#15], Inner, BuildRight

(8) CometProject
Input [12]: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]

(9) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#19, d_year#20]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(10) CometFilter
Input [2]: [d_date_sk#19, d_year#20]
Condition : ((isnotnull(d_year#20) AND (d_year#20 = 2001)) AND isnotnull(d_date_sk#19))

(11) CometBroadcastExchange
Input [2]: [d_date_sk#19, d_year#20]
Arguments: [d_date_sk#19, d_year#20]

(12) CometBroadcastHashJoin
Left output [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18]
Right output [2]: [d_date_sk#19, d_year#20]
Arguments: [ss_sold_date_sk#18], [d_date_sk#19], Inner, BuildRight

(13) CometProject
Input [12]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, ss_sold_date_sk#18, d_date_sk#19, d_year#20]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, d_year#20], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, d_year#20]

(14) CometHashAggregate
Input [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_list_price#17, d_year#20]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, d_year#20, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14]
Functions [1]: [partial_sum(UnscaledValue((ss_ext_list_price#17 - ss_ext_discount_amt#16)))]

(15) CometExchange
Input [9]: [c_customer_id#9, c_first_name#10, c_last_name#11, d_year#20, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, sum#21]
Arguments: hashpartitioning(c_customer_id#9, c_first_name#10, c_last_name#11, d_year#20, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(16) CometHashAggregate
Input [9]: [c_customer_id#9, c_first_name#10, c_last_name#11, d_year#20, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, sum#21]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, d_year#20, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14]
Functions [1]: [sum(UnscaledValue((ss_ext_list_price#17 - ss_ext_discount_amt#16)))]

(17) CometFilter
Input [2]: [customer_id#22, year_total#23]
Condition : (isnotnull(year_total#23) AND (year_total#23 > 0.00))

(18) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#24, c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(19) CometFilter
Input [8]: [c_customer_sk#24, c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31]
Condition : (isnotnull(c_customer_sk#24) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#25, 16, true, false, true)))

(20) CometProject
Input [8]: [c_customer_sk#24, c_customer_id#25, c_first_name#26, c_last_name#27, c_preferred_cust_flag#28, c_birth_country#29, c_login#30, c_email_address#31]
Arguments: [c_customer_sk#24, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14], [c_customer_sk#24, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#25, 16, true, false, true) AS c_customer_id#9, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#26, 20, true, false, true) AS c_first_name#10, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#27, 30, true, false, true) AS c_last_name#11, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#28, 1, true, false, true) AS c_preferred_cust_flag#12, c_birth_country#29, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#30, 13, true, false, true) AS c_login#13, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#31, 50, true, false, true) AS c_email_address#14]

(21) ReusedExchange [Reuses operator id: 6]
Output [4]: [ss_customer_sk#32, ss_ext_discount_amt#33, ss_ext_list_price#34, ss_sold_date_sk#35]

(22) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#24, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14]
Right output [4]: [ss_customer_sk#32, ss_ext_discount_amt#33, ss_ext_list_price#34, ss_sold_date_sk#35]
Arguments: [c_customer_sk#24], [ss_customer_sk#32], Inner, BuildRight

(23) CometProject
Input [12]: [c_customer_sk#24, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14, ss_customer_sk#32, ss_ext_discount_amt#33, ss_ext_list_price#34, ss_sold_date_sk#35]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14, ss_ext_discount_amt#33, ss_ext_list_price#34, ss_sold_date_sk#35], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14, ss_ext_discount_amt#33, ss_ext_list_price#34, ss_sold_date_sk#35]

(24) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#36, d_year#37]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(25) CometFilter
Input [2]: [d_date_sk#36, d_year#37]
Condition : ((isnotnull(d_year#37) AND (d_year#37 = 2002)) AND isnotnull(d_date_sk#36))

(26) CometBroadcastExchange
Input [2]: [d_date_sk#36, d_year#37]
Arguments: [d_date_sk#36, d_year#37]

(27) CometBroadcastHashJoin
Left output [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14, ss_ext_discount_amt#33, ss_ext_list_price#34, ss_sold_date_sk#35]
Right output [2]: [d_date_sk#36, d_year#37]
Arguments: [ss_sold_date_sk#35], [d_date_sk#36], Inner, BuildRight

(28) CometProject
Input [12]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14, ss_ext_discount_amt#33, ss_ext_list_price#34, ss_sold_date_sk#35, d_date_sk#36, d_year#37]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14, ss_ext_discount_amt#33, ss_ext_list_price#34, d_year#37], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14, ss_ext_discount_amt#33, ss_ext_list_price#34, d_year#37]

(29) CometHashAggregate
Input [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14, ss_ext_discount_amt#33, ss_ext_list_price#34, d_year#37]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, d_year#37, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14]
Functions [1]: [partial_sum(UnscaledValue((ss_ext_list_price#34 - ss_ext_discount_amt#33)))]

(30) CometExchange
Input [9]: [c_customer_id#9, c_first_name#10, c_last_name#11, d_year#37, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14, sum#38]
Arguments: hashpartitioning(c_customer_id#9, c_first_name#10, c_last_name#11, d_year#37, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(31) CometHashAggregate
Input [9]: [c_customer_id#9, c_first_name#10, c_last_name#11, d_year#37, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14, sum#38]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, d_year#37, c_preferred_cust_flag#12, c_birth_country#29, c_login#13, c_email_address#14]
Functions [1]: [sum(UnscaledValue((ss_ext_list_price#34 - ss_ext_discount_amt#33)))]

(32) CometBroadcastExchange
Input [3]: [customer_id#39, customer_preferred_cust_flag#40, year_total#41]
Arguments: [customer_id#39, customer_preferred_cust_flag#40, year_total#41]

(33) CometBroadcastHashJoin
Left output [2]: [customer_id#22, year_total#23]
Right output [3]: [customer_id#39, customer_preferred_cust_flag#40, year_total#41]
Arguments: [customer_id#22], [customer_id#39], Inner, BuildRight

(34) CometProject
Input [5]: [customer_id#22, year_total#23, customer_id#39, customer_preferred_cust_flag#40, year_total#41]
Arguments: [customer_id#22, year_total#23, customer_preferred_cust_flag#40, year_total#41], [customer_id#22, year_total#23, customer_preferred_cust_flag#40, year_total#41]

(35) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#42, c_customer_id#43, c_first_name#44, c_last_name#45, c_preferred_cust_flag#46, c_birth_country#47, c_login#48, c_email_address#49]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(36) CometFilter
Input [8]: [c_customer_sk#42, c_customer_id#43, c_first_name#44, c_last_name#45, c_preferred_cust_flag#46, c_birth_country#47, c_login#48, c_email_address#49]
Condition : (isnotnull(c_customer_sk#42) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#43, 16, true, false, true)))

(37) CometProject
Input [8]: [c_customer_sk#42, c_customer_id#43, c_first_name#44, c_last_name#45, c_preferred_cust_flag#46, c_birth_country#47, c_login#48, c_email_address#49]
Arguments: [c_customer_sk#42, c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55], [c_customer_sk#42, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#43, 16, true, false, true) AS c_customer_id#50, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#44, 20, true, false, true) AS c_first_name#51, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#45, 30, true, false, true) AS c_last_name#52, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#46, 1, true, false, true) AS c_preferred_cust_flag#53, c_birth_country#47, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#48, 13, true, false, true) AS c_login#54, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#49, 50, true, false, true) AS c_email_address#55]

(38) CometNativeScan parquet spark_catalog.default.web_sales
Output [4]: [ws_bill_customer_sk#56, ws_ext_discount_amt#57, ws_ext_list_price#58, ws_sold_date_sk#59]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#59)]
PushedFilters: [IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_price:decimal(7,2)>

(39) CometFilter
Input [4]: [ws_bill_customer_sk#56, ws_ext_discount_amt#57, ws_ext_list_price#58, ws_sold_date_sk#59]
Condition : isnotnull(ws_bill_customer_sk#56)

(40) CometBroadcastExchange
Input [4]: [ws_bill_customer_sk#56, ws_ext_discount_amt#57, ws_ext_list_price#58, ws_sold_date_sk#59]
Arguments: [ws_bill_customer_sk#56, ws_ext_discount_amt#57, ws_ext_list_price#58, ws_sold_date_sk#59]

(41) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#42, c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55]
Right output [4]: [ws_bill_customer_sk#56, ws_ext_discount_amt#57, ws_ext_list_price#58, ws_sold_date_sk#59]
Arguments: [c_customer_sk#42], [ws_bill_customer_sk#56], Inner, BuildRight

(42) CometProject
Input [12]: [c_customer_sk#42, c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55, ws_bill_customer_sk#56, ws_ext_discount_amt#57, ws_ext_list_price#58, ws_sold_date_sk#59]
Arguments: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55, ws_ext_discount_amt#57, ws_ext_list_price#58, ws_sold_date_sk#59], [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55, ws_ext_discount_amt#57, ws_ext_list_price#58, ws_sold_date_sk#59]

(43) ReusedExchange [Reuses operator id: 11]
Output [2]: [d_date_sk#60, d_year#61]

(44) CometBroadcastHashJoin
Left output [10]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55, ws_ext_discount_amt#57, ws_ext_list_price#58, ws_sold_date_sk#59]
Right output [2]: [d_date_sk#60, d_year#61]
Arguments: [ws_sold_date_sk#59], [d_date_sk#60], Inner, BuildRight

(45) CometProject
Input [12]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55, ws_ext_discount_amt#57, ws_ext_list_price#58, ws_sold_date_sk#59, d_date_sk#60, d_year#61]
Arguments: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55, ws_ext_discount_amt#57, ws_ext_list_price#58, d_year#61], [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55, ws_ext_discount_amt#57, ws_ext_list_price#58, d_year#61]

(46) CometHashAggregate
Input [10]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55, ws_ext_discount_amt#57, ws_ext_list_price#58, d_year#61]
Keys [8]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55, d_year#61]
Functions [1]: [partial_sum(UnscaledValue((ws_ext_list_price#58 - ws_ext_discount_amt#57)))]

(47) CometExchange
Input [9]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55, d_year#61, sum#62]
Arguments: hashpartitioning(c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55, d_year#61, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(48) CometHashAggregate
Input [9]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55, d_year#61, sum#62]
Keys [8]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#47, c_login#54, c_email_address#55, d_year#61]
Functions [1]: [sum(UnscaledValue((ws_ext_list_price#58 - ws_ext_discount_amt#57)))]

(49) CometFilter
Input [2]: [customer_id#63, year_total#64]
Condition : (isnotnull(year_total#64) AND (year_total#64 > 0.00))

(50) CometBroadcastExchange
Input [2]: [customer_id#63, year_total#64]
Arguments: [customer_id#63, year_total#64]

(51) CometBroadcastHashJoin
Left output [4]: [customer_id#22, year_total#23, customer_preferred_cust_flag#40, year_total#41]
Right output [2]: [customer_id#63, year_total#64]
Arguments: [customer_id#22], [customer_id#63], Inner, BuildRight

(52) CometProject
Input [6]: [customer_id#22, year_total#23, customer_preferred_cust_flag#40, year_total#41, customer_id#63, year_total#64]
Arguments: [customer_id#22, year_total#23, customer_preferred_cust_flag#40, year_total#41, year_total#64], [customer_id#22, year_total#23, customer_preferred_cust_flag#40, year_total#41, year_total#64]

(53) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#65, c_customer_id#66, c_first_name#67, c_last_name#68, c_preferred_cust_flag#69, c_birth_country#70, c_login#71, c_email_address#72]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(54) CometFilter
Input [8]: [c_customer_sk#65, c_customer_id#66, c_first_name#67, c_last_name#68, c_preferred_cust_flag#69, c_birth_country#70, c_login#71, c_email_address#72]
Condition : (isnotnull(c_customer_sk#65) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#66, 16, true, false, true)))

(55) CometProject
Input [8]: [c_customer_sk#65, c_customer_id#66, c_first_name#67, c_last_name#68, c_preferred_cust_flag#69, c_birth_country#70, c_login#71, c_email_address#72]
Arguments: [c_customer_sk#65, c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55], [c_customer_sk#65, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#66, 16, true, false, true) AS c_customer_id#50, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#67, 20, true, false, true) AS c_first_name#51, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#68, 30, true, false, true) AS c_last_name#52, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#69, 1, true, false, true) AS c_preferred_cust_flag#53, c_birth_country#70, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#71, 13, true, false, true) AS c_login#54, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#72, 50, true, false, true) AS c_email_address#55]

(56) ReusedExchange [Reuses operator id: 40]
Output [4]: [ws_bill_customer_sk#73, ws_ext_discount_amt#74, ws_ext_list_price#75, ws_sold_date_sk#76]

(57) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#65, c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55]
Right output [4]: [ws_bill_customer_sk#73, ws_ext_discount_amt#74, ws_ext_list_price#75, ws_sold_date_sk#76]
Arguments: [c_customer_sk#65], [ws_bill_customer_sk#73], Inner, BuildRight

(58) CometProject
Input [12]: [c_customer_sk#65, c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55, ws_bill_customer_sk#73, ws_ext_discount_amt#74, ws_ext_list_price#75, ws_sold_date_sk#76]
Arguments: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55, ws_ext_discount_amt#74, ws_ext_list_price#75, ws_sold_date_sk#76], [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55, ws_ext_discount_amt#74, ws_ext_list_price#75, ws_sold_date_sk#76]

(59) ReusedExchange [Reuses operator id: 26]
Output [2]: [d_date_sk#77, d_year#78]

(60) CometBroadcastHashJoin
Left output [10]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55, ws_ext_discount_amt#74, ws_ext_list_price#75, ws_sold_date_sk#76]
Right output [2]: [d_date_sk#77, d_year#78]
Arguments: [ws_sold_date_sk#76], [d_date_sk#77], Inner, BuildRight

(61) CometProject
Input [12]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55, ws_ext_discount_amt#74, ws_ext_list_price#75, ws_sold_date_sk#76, d_date_sk#77, d_year#78]
Arguments: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55, ws_ext_discount_amt#74, ws_ext_list_price#75, d_year#78], [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55, ws_ext_discount_amt#74, ws_ext_list_price#75, d_year#78]

(62) CometHashAggregate
Input [10]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55, ws_ext_discount_amt#74, ws_ext_list_price#75, d_year#78]
Keys [8]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55, d_year#78]
Functions [1]: [partial_sum(UnscaledValue((ws_ext_list_price#75 - ws_ext_discount_amt#74)))]

(63) CometExchange
Input [9]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55, d_year#78, sum#79]
Arguments: hashpartitioning(c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55, d_year#78, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(64) CometHashAggregate
Input [9]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55, d_year#78, sum#79]
Keys [8]: [c_customer_id#50, c_first_name#51, c_last_name#52, c_preferred_cust_flag#53, c_birth_country#70, c_login#54, c_email_address#55, d_year#78]
Functions [1]: [sum(UnscaledValue((ws_ext_list_price#75 - ws_ext_discount_amt#74)))]

(65) CometBroadcastExchange
Input [2]: [customer_id#80, year_total#81]
Arguments: [customer_id#80, year_total#81]

(66) CometBroadcastHashJoin
Left output [5]: [customer_id#22, year_total#23, customer_preferred_cust_flag#40, year_total#41, year_total#64]
Right output [2]: [customer_id#80, year_total#81]
Arguments: [customer_id#22], [customer_id#80], Inner, (CASE WHEN (year_total#64 > 0.00) THEN (year_total#81 / year_total#64) END > CASE WHEN (year_total#23 > 0.00) THEN (year_total#41 / year_total#23) END), BuildRight

(67) CometProject
Input [7]: [customer_id#22, year_total#23, customer_preferred_cust_flag#40, year_total#41, year_total#64, customer_id#80, year_total#81]
Arguments: [customer_preferred_cust_flag#40], [customer_preferred_cust_flag#40]

(68) CometTakeOrderedAndProject
Input [1]: [customer_preferred_cust_flag#40]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[customer_preferred_cust_flag#40 ASC NULLS FIRST], output=[customer_preferred_cust_flag#40]), [customer_preferred_cust_flag#40], 100, 0, [customer_preferred_cust_flag#40 ASC NULLS FIRST], [customer_preferred_cust_flag#40]

(69) CometColumnarToRow [codegen id : 1]
Input [1]: [customer_preferred_cust_flag#40]

