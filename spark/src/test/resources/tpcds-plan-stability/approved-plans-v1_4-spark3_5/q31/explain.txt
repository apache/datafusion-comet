== Physical Plan ==
* ColumnarToRow (59)
+- CometSort (58)
   +- CometColumnarExchange (57)
      +- CometProject (56)
         +- CometBroadcastHashJoin (55)
            :- CometProject (53)
            :  +- CometBroadcastHashJoin (52)
            :     :- CometBroadcastHashJoin (50)
            :     :  :- CometProject (46)
            :     :  :  +- CometBroadcastHashJoin (45)
            :     :  :     :- CometBroadcastHashJoin (30)
            :     :  :     :  :- CometHashAggregate (15)
            :     :  :     :  :  +- CometExchange (14)
            :     :  :     :  :     +- CometHashAggregate (13)
            :     :  :     :  :        +- CometProject (12)
            :     :  :     :  :           +- CometBroadcastHashJoin (11)
            :     :  :     :  :              :- CometProject (7)
            :     :  :     :  :              :  +- CometBroadcastHashJoin (6)
            :     :  :     :  :              :     :- CometFilter (2)
            :     :  :     :  :              :     :  +- CometNativeScan: `spark_catalog`.`default`.`store_sales` (1)
            :     :  :     :  :              :     +- CometBroadcastExchange (5)
            :     :  :     :  :              :        +- CometFilter (4)
            :     :  :     :  :              :           +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (3)
            :     :  :     :  :              +- CometBroadcastExchange (10)
            :     :  :     :  :                 +- CometFilter (9)
            :     :  :     :  :                    +- CometNativeScan: `spark_catalog`.`default`.`customer_address` (8)
            :     :  :     :  +- CometBroadcastExchange (29)
            :     :  :     :     +- CometHashAggregate (28)
            :     :  :     :        +- CometExchange (27)
            :     :  :     :           +- CometHashAggregate (26)
            :     :  :     :              +- CometProject (25)
            :     :  :     :                 +- CometBroadcastHashJoin (24)
            :     :  :     :                    :- CometProject (22)
            :     :  :     :                    :  +- CometBroadcastHashJoin (21)
            :     :  :     :                    :     :- CometFilter (17)
            :     :  :     :                    :     :  +- CometNativeScan: `spark_catalog`.`default`.`store_sales` (16)
            :     :  :     :                    :     +- CometBroadcastExchange (20)
            :     :  :     :                    :        +- CometFilter (19)
            :     :  :     :                    :           +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (18)
            :     :  :     :                    +- ReusedExchange (23)
            :     :  :     +- CometBroadcastExchange (44)
            :     :  :        +- CometHashAggregate (43)
            :     :  :           +- CometExchange (42)
            :     :  :              +- CometHashAggregate (41)
            :     :  :                 +- CometProject (40)
            :     :  :                    +- CometBroadcastHashJoin (39)
            :     :  :                       :- CometProject (37)
            :     :  :                       :  +- CometBroadcastHashJoin (36)
            :     :  :                       :     :- CometFilter (32)
            :     :  :                       :     :  +- CometNativeScan: `spark_catalog`.`default`.`store_sales` (31)
            :     :  :                       :     +- CometBroadcastExchange (35)
            :     :  :                       :        +- CometFilter (34)
            :     :  :                       :           +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (33)
            :     :  :                       +- ReusedExchange (38)
            :     :  +- CometBroadcastExchange (49)
            :     :     +- CometHashAggregate (48)
            :     :        +- ReusedExchange (47)
            :     +- ReusedExchange (51)
            +- ReusedExchange (54)


(1) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Arguments: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]

(2) CometFilter
Input [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Condition : isnotnull(ss_addr_sk#1)

(3) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [3]: [d_date_sk#4, d_year#5, d_qoy#6]
Arguments: [d_date_sk#4, d_year#5, d_qoy#6]

(4) CometFilter
Input [3]: [d_date_sk#4, d_year#5, d_qoy#6]
Condition : ((((isnotnull(d_qoy#6) AND isnotnull(d_year#5)) AND (d_qoy#6 = 1)) AND (d_year#5 = 2000)) AND isnotnull(d_date_sk#4))

(5) CometBroadcastExchange
Input [3]: [d_date_sk#4, d_year#5, d_qoy#6]
Arguments: [d_date_sk#4, d_year#5, d_qoy#6]

(6) CometBroadcastHashJoin
Left output [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Right output [3]: [d_date_sk#4, d_year#5, d_qoy#6]
Arguments: [ss_sold_date_sk#3], [d_date_sk#4], Inner, BuildRight

(7) CometProject
Input [6]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3, d_date_sk#4, d_year#5, d_qoy#6]
Arguments: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#5, d_qoy#6], [ss_addr_sk#1, ss_ext_sales_price#2, d_year#5, d_qoy#6]

(8) CometNativeScan: `spark_catalog`.`default`.`customer_address`
Output [2]: [ca_address_sk#7, ca_county#8]
Arguments: [ca_address_sk#7, ca_county#8]

(9) CometFilter
Input [2]: [ca_address_sk#7, ca_county#8]
Condition : (isnotnull(ca_address_sk#7) AND isnotnull(ca_county#8))

(10) CometBroadcastExchange
Input [2]: [ca_address_sk#7, ca_county#8]
Arguments: [ca_address_sk#7, ca_county#8]

(11) CometBroadcastHashJoin
Left output [4]: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#5, d_qoy#6]
Right output [2]: [ca_address_sk#7, ca_county#8]
Arguments: [ss_addr_sk#1], [ca_address_sk#7], Inner, BuildRight

(12) CometProject
Input [6]: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#5, d_qoy#6, ca_address_sk#7, ca_county#8]
Arguments: [ss_ext_sales_price#2, d_year#5, d_qoy#6, ca_county#8], [ss_ext_sales_price#2, d_year#5, d_qoy#6, ca_county#8]

(13) CometHashAggregate
Input [4]: [ss_ext_sales_price#2, d_year#5, d_qoy#6, ca_county#8]
Keys [3]: [ca_county#8, d_qoy#6, d_year#5]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#2))]

(14) CometExchange
Input [4]: [ca_county#8, d_qoy#6, d_year#5, sum#9]
Arguments: hashpartitioning(ca_county#8, d_qoy#6, d_year#5, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(15) CometHashAggregate
Input [4]: [ca_county#8, d_qoy#6, d_year#5, sum#9]
Keys [3]: [ca_county#8, d_qoy#6, d_year#5]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#2))]

(16) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [3]: [ss_addr_sk#10, ss_ext_sales_price#11, ss_sold_date_sk#12]
Arguments: [ss_addr_sk#10, ss_ext_sales_price#11, ss_sold_date_sk#12]

(17) CometFilter
Input [3]: [ss_addr_sk#10, ss_ext_sales_price#11, ss_sold_date_sk#12]
Condition : isnotnull(ss_addr_sk#10)

(18) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [3]: [d_date_sk#13, d_year#14, d_qoy#15]
Arguments: [d_date_sk#13, d_year#14, d_qoy#15]

(19) CometFilter
Input [3]: [d_date_sk#13, d_year#14, d_qoy#15]
Condition : ((((isnotnull(d_qoy#15) AND isnotnull(d_year#14)) AND (d_qoy#15 = 2)) AND (d_year#14 = 2000)) AND isnotnull(d_date_sk#13))

(20) CometBroadcastExchange
Input [3]: [d_date_sk#13, d_year#14, d_qoy#15]
Arguments: [d_date_sk#13, d_year#14, d_qoy#15]

(21) CometBroadcastHashJoin
Left output [3]: [ss_addr_sk#10, ss_ext_sales_price#11, ss_sold_date_sk#12]
Right output [3]: [d_date_sk#13, d_year#14, d_qoy#15]
Arguments: [ss_sold_date_sk#12], [d_date_sk#13], Inner, BuildRight

(22) CometProject
Input [6]: [ss_addr_sk#10, ss_ext_sales_price#11, ss_sold_date_sk#12, d_date_sk#13, d_year#14, d_qoy#15]
Arguments: [ss_addr_sk#10, ss_ext_sales_price#11, d_year#14, d_qoy#15], [ss_addr_sk#10, ss_ext_sales_price#11, d_year#14, d_qoy#15]

(23) ReusedExchange [Reuses operator id: 10]
Output [2]: [ca_address_sk#16, ca_county#17]

(24) CometBroadcastHashJoin
Left output [4]: [ss_addr_sk#10, ss_ext_sales_price#11, d_year#14, d_qoy#15]
Right output [2]: [ca_address_sk#16, ca_county#17]
Arguments: [ss_addr_sk#10], [ca_address_sk#16], Inner, BuildRight

(25) CometProject
Input [6]: [ss_addr_sk#10, ss_ext_sales_price#11, d_year#14, d_qoy#15, ca_address_sk#16, ca_county#17]
Arguments: [ss_ext_sales_price#11, d_year#14, d_qoy#15, ca_county#17], [ss_ext_sales_price#11, d_year#14, d_qoy#15, ca_county#17]

(26) CometHashAggregate
Input [4]: [ss_ext_sales_price#11, d_year#14, d_qoy#15, ca_county#17]
Keys [3]: [ca_county#17, d_qoy#15, d_year#14]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#11))]

(27) CometExchange
Input [4]: [ca_county#17, d_qoy#15, d_year#14, sum#18]
Arguments: hashpartitioning(ca_county#17, d_qoy#15, d_year#14, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(28) CometHashAggregate
Input [4]: [ca_county#17, d_qoy#15, d_year#14, sum#18]
Keys [3]: [ca_county#17, d_qoy#15, d_year#14]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#11))]

(29) CometBroadcastExchange
Input [2]: [ca_county#17, store_sales#19]
Arguments: [ca_county#17, store_sales#19]

(30) CometBroadcastHashJoin
Left output [3]: [ca_county#8, d_year#5, store_sales#20]
Right output [2]: [ca_county#17, store_sales#19]
Arguments: [ca_county#8], [ca_county#17], Inner, BuildRight

(31) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [3]: [ss_addr_sk#21, ss_ext_sales_price#22, ss_sold_date_sk#23]
Arguments: [ss_addr_sk#21, ss_ext_sales_price#22, ss_sold_date_sk#23]

(32) CometFilter
Input [3]: [ss_addr_sk#21, ss_ext_sales_price#22, ss_sold_date_sk#23]
Condition : isnotnull(ss_addr_sk#21)

(33) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [3]: [d_date_sk#24, d_year#25, d_qoy#26]
Arguments: [d_date_sk#24, d_year#25, d_qoy#26]

(34) CometFilter
Input [3]: [d_date_sk#24, d_year#25, d_qoy#26]
Condition : ((((isnotnull(d_qoy#26) AND isnotnull(d_year#25)) AND (d_qoy#26 = 3)) AND (d_year#25 = 2000)) AND isnotnull(d_date_sk#24))

(35) CometBroadcastExchange
Input [3]: [d_date_sk#24, d_year#25, d_qoy#26]
Arguments: [d_date_sk#24, d_year#25, d_qoy#26]

(36) CometBroadcastHashJoin
Left output [3]: [ss_addr_sk#21, ss_ext_sales_price#22, ss_sold_date_sk#23]
Right output [3]: [d_date_sk#24, d_year#25, d_qoy#26]
Arguments: [ss_sold_date_sk#23], [d_date_sk#24], Inner, BuildRight

(37) CometProject
Input [6]: [ss_addr_sk#21, ss_ext_sales_price#22, ss_sold_date_sk#23, d_date_sk#24, d_year#25, d_qoy#26]
Arguments: [ss_addr_sk#21, ss_ext_sales_price#22, d_year#25, d_qoy#26], [ss_addr_sk#21, ss_ext_sales_price#22, d_year#25, d_qoy#26]

(38) ReusedExchange [Reuses operator id: 10]
Output [2]: [ca_address_sk#27, ca_county#28]

(39) CometBroadcastHashJoin
Left output [4]: [ss_addr_sk#21, ss_ext_sales_price#22, d_year#25, d_qoy#26]
Right output [2]: [ca_address_sk#27, ca_county#28]
Arguments: [ss_addr_sk#21], [ca_address_sk#27], Inner, BuildRight

(40) CometProject
Input [6]: [ss_addr_sk#21, ss_ext_sales_price#22, d_year#25, d_qoy#26, ca_address_sk#27, ca_county#28]
Arguments: [ss_ext_sales_price#22, d_year#25, d_qoy#26, ca_county#28], [ss_ext_sales_price#22, d_year#25, d_qoy#26, ca_county#28]

(41) CometHashAggregate
Input [4]: [ss_ext_sales_price#22, d_year#25, d_qoy#26, ca_county#28]
Keys [3]: [ca_county#28, d_qoy#26, d_year#25]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#22))]

(42) CometExchange
Input [4]: [ca_county#28, d_qoy#26, d_year#25, sum#29]
Arguments: hashpartitioning(ca_county#28, d_qoy#26, d_year#25, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(43) CometHashAggregate
Input [4]: [ca_county#28, d_qoy#26, d_year#25, sum#29]
Keys [3]: [ca_county#28, d_qoy#26, d_year#25]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#22))]

(44) CometBroadcastExchange
Input [2]: [ca_county#28, store_sales#30]
Arguments: [ca_county#28, store_sales#30]

(45) CometBroadcastHashJoin
Left output [5]: [ca_county#8, d_year#5, store_sales#20, ca_county#17, store_sales#19]
Right output [2]: [ca_county#28, store_sales#30]
Arguments: [ca_county#17], [ca_county#28], Inner, BuildRight

(46) CometProject
Input [7]: [ca_county#8, d_year#5, store_sales#20, ca_county#17, store_sales#19, ca_county#28, store_sales#30]
Arguments: [ca_county#8, d_year#5, store_sales#20, store_sales#19, store_sales#30], [ca_county#8, d_year#5, store_sales#20, store_sales#19, store_sales#30]

(47) ReusedExchange [Reuses operator id: 14]
Output [4]: [ca_county#31, d_qoy#32, d_year#33, sum#34]

(48) CometHashAggregate
Input [4]: [ca_county#31, d_qoy#32, d_year#33, sum#34]
Keys [3]: [ca_county#31, d_qoy#32, d_year#33]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#35))]

(49) CometBroadcastExchange
Input [2]: [ca_county#31, web_sales#36]
Arguments: [ca_county#31, web_sales#36]

(50) CometBroadcastHashJoin
Left output [5]: [ca_county#8, d_year#5, store_sales#20, store_sales#19, store_sales#30]
Right output [2]: [ca_county#31, web_sales#36]
Arguments: [ca_county#8], [ca_county#31], Inner, BuildRight

(51) ReusedExchange [Reuses operator id: 29]
Output [2]: [ca_county#37, web_sales#38]

(52) CometBroadcastHashJoin
Left output [7]: [ca_county#8, d_year#5, store_sales#20, store_sales#19, store_sales#30, ca_county#31, web_sales#36]
Right output [2]: [ca_county#37, web_sales#38]
Arguments: [ca_county#31], [ca_county#37], Inner, (CASE WHEN (web_sales#36 > 0.00) THEN (web_sales#38 / web_sales#36) END > CASE WHEN (store_sales#20 > 0.00) THEN (store_sales#19 / store_sales#20) END), BuildRight

(53) CometProject
Input [9]: [ca_county#8, d_year#5, store_sales#20, store_sales#19, store_sales#30, ca_county#31, web_sales#36, ca_county#37, web_sales#38]
Arguments: [ca_county#8, d_year#5, store_sales#20, store_sales#19, store_sales#30, ca_county#31, web_sales#36, web_sales#38], [ca_county#8, d_year#5, store_sales#20, store_sales#19, store_sales#30, ca_county#31, web_sales#36, web_sales#38]

(54) ReusedExchange [Reuses operator id: 44]
Output [2]: [ca_county#39, web_sales#40]

(55) CometBroadcastHashJoin
Left output [8]: [ca_county#8, d_year#5, store_sales#20, store_sales#19, store_sales#30, ca_county#31, web_sales#36, web_sales#38]
Right output [2]: [ca_county#39, web_sales#40]
Arguments: [ca_county#31], [ca_county#39], Inner, (CASE WHEN (web_sales#38 > 0.00) THEN (web_sales#40 / web_sales#38) END > CASE WHEN (store_sales#19 > 0.00) THEN (store_sales#30 / store_sales#19) END), BuildRight

(56) CometProject
Input [10]: [ca_county#8, d_year#5, store_sales#20, store_sales#19, store_sales#30, ca_county#31, web_sales#36, web_sales#38, ca_county#39, web_sales#40]
Arguments: [ca_county#8, d_year#5, web_q1_q2_increase#41, store_q1_q2_increase#42, web_q2_q3_increase#43, store_q2_q3_increase#44], [ca_county#8, d_year#5, (web_sales#38 / web_sales#36) AS web_q1_q2_increase#41, (store_sales#19 / store_sales#20) AS store_q1_q2_increase#42, (web_sales#40 / web_sales#38) AS web_q2_q3_increase#43, (store_sales#30 / store_sales#19) AS store_q2_q3_increase#44]

(57) CometColumnarExchange
Input [6]: [ca_county#8, d_year#5, web_q1_q2_increase#41, store_q1_q2_increase#42, web_q2_q3_increase#43, store_q2_q3_increase#44]
Arguments: rangepartitioning(ca_county#8 ASC NULLS FIRST, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=4]

(58) CometSort
Input [6]: [ca_county#8, d_year#5, web_q1_q2_increase#41, store_q1_q2_increase#42, web_q2_q3_increase#43, store_q2_q3_increase#44]
Arguments: [ca_county#8, d_year#5, web_q1_q2_increase#41, store_q1_q2_increase#42, web_q2_q3_increase#43, store_q2_q3_increase#44], [ca_county#8 ASC NULLS FIRST]

(59) ColumnarToRow [codegen id : 1]
Input [6]: [ca_county#8, d_year#5, web_q1_q2_increase#41, store_q1_q2_increase#42, web_q2_q3_increase#43, store_q2_q3_increase#44]

