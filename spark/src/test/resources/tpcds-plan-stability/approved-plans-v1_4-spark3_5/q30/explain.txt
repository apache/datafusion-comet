== Physical Plan ==
TakeOrderedAndProject (67)
+- * Project (66)
   +- * BroadcastHashJoin Inner BuildRight (65)
      :- * Project (59)
      :  +- * BroadcastHashJoin Inner BuildRight (58)
      :     :- * Project (53)
      :     :  +- * BroadcastHashJoin Inner BuildRight (52)
      :     :     :- * CometColumnarToRow (18)
      :     :     :  +- CometFilter (17)
      :     :     :     +- CometHashAggregate (16)
      :     :     :        +- CometExchange (15)
      :     :     :           +- CometHashAggregate (14)
      :     :     :              +- CometProject (13)
      :     :     :                 +- CometBroadcastHashJoin (12)
      :     :     :                    :- CometProject (8)
      :     :     :                    :  +- CometBroadcastHashJoin (7)
      :     :     :                    :     :- CometFilter (2)
      :     :     :                    :     :  +- CometScan parquet spark_catalog.default.web_returns (1)
      :     :     :                    :     +- CometBroadcastExchange (6)
      :     :     :                    :        +- CometProject (5)
      :     :     :                    :           +- CometFilter (4)
      :     :     :                    :              +- CometScan parquet spark_catalog.default.date_dim (3)
      :     :     :                    +- CometBroadcastExchange (11)
      :     :     :                       +- CometFilter (10)
      :     :     :                          +- CometScan parquet spark_catalog.default.customer_address (9)
      :     :     +- BroadcastExchange (51)
      :     :        +- * Filter (50)
      :     :           +- * HashAggregate (49)
      :     :              +- * HashAggregate (48)
      :     :                 +- * Project (47)
      :     :                    +- * BroadcastHashJoin Inner BuildRight (46)
      :     :                       :- * CometColumnarToRow (32)
      :     :                       :  +- CometHashAggregate (31)
      :     :                       :     +- CometExchange (30)
      :     :                       :        +- CometHashAggregate (29)
      :     :                       :           +- CometProject (28)
      :     :                       :              +- CometBroadcastHashJoin (27)
      :     :                       :                 :- CometProject (23)
      :     :                       :                 :  +- CometBroadcastHashJoin (22)
      :     :                       :                 :     :- CometFilter (20)
      :     :                       :                 :     :  +- CometScan parquet spark_catalog.default.web_returns (19)
      :     :                       :                 :     +- ReusedExchange (21)
      :     :                       :                 +- CometBroadcastExchange (26)
      :     :                       :                    +- CometFilter (25)
      :     :                       :                       +- CometScan parquet spark_catalog.default.customer_address (24)
      :     :                       +- BroadcastExchange (45)
      :     :                          +- * CometColumnarToRow (44)
      :     :                             +- CometHashAggregate (43)
      :     :                                +- CometExchange (42)
      :     :                                   +- CometHashAggregate (41)
      :     :                                      +- CometProject (40)
      :     :                                         +- CometBroadcastHashJoin (39)
      :     :                                            :- CometProject (37)
      :     :                                            :  +- CometBroadcastHashJoin (36)
      :     :                                            :     :- CometFilter (34)
      :     :                                            :     :  +- CometScan parquet spark_catalog.default.web_returns (33)
      :     :                                            :     +- ReusedExchange (35)
      :     :                                            +- ReusedExchange (38)
      :     +- BroadcastExchange (57)
      :        +- * CometColumnarToRow (56)
      :           +- CometFilter (55)
      :              +- CometScan parquet spark_catalog.default.customer (54)
      +- BroadcastExchange (64)
         +- * Project (63)
            +- * Filter (62)
               +- * CometColumnarToRow (61)
                  +- CometScan parquet spark_catalog.default.customer_address (60)


(1) CometScan parquet spark_catalog.default.web_returns
Output [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(wr_returned_date_sk#4), dynamicpruningexpression(wr_returned_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(wr_returning_addr_sk), IsNotNull(wr_returning_customer_sk)]
ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>

(2) CometFilter
Input [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]
Condition : (isnotnull(wr_returning_addr_sk#2) AND isnotnull(wr_returning_customer_sk#1))

(3) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#6, d_year#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(4) CometFilter
Input [2]: [d_date_sk#6, d_year#7]
Condition : ((isnotnull(d_year#7) AND (d_year#7 = 2002)) AND isnotnull(d_date_sk#6))

(5) CometProject
Input [2]: [d_date_sk#6, d_year#7]
Arguments: [d_date_sk#6], [d_date_sk#6]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: [d_date_sk#6]

(7) CometBroadcastHashJoin
Left output [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]
Right output [1]: [d_date_sk#6]
Arguments: [wr_returned_date_sk#4], [d_date_sk#6], Inner, BuildRight

(8) CometProject
Input [5]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4, d_date_sk#6]
Arguments: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3], [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3]

(9) CometScan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#8, ca_state#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string>

(10) CometFilter
Input [2]: [ca_address_sk#8, ca_state#9]
Condition : isnotnull(ca_address_sk#8)

(11) CometBroadcastExchange
Input [2]: [ca_address_sk#8, ca_state#9]
Arguments: [ca_address_sk#8, ca_state#9]

(12) CometBroadcastHashJoin
Left output [3]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3]
Right output [2]: [ca_address_sk#8, ca_state#9]
Arguments: [wr_returning_addr_sk#2], [ca_address_sk#8], Inner, BuildRight

(13) CometProject
Input [5]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, ca_address_sk#8, ca_state#9]
Arguments: [wr_returning_customer_sk#1, wr_return_amt#3, ca_state#9], [wr_returning_customer_sk#1, wr_return_amt#3, ca_state#9]

(14) CometHashAggregate
Input [3]: [wr_returning_customer_sk#1, wr_return_amt#3, ca_state#9]
Keys [2]: [wr_returning_customer_sk#1, ca_state#9]
Functions [1]: [partial_sum(UnscaledValue(wr_return_amt#3))]

(15) CometExchange
Input [3]: [wr_returning_customer_sk#1, ca_state#9, sum#10]
Arguments: hashpartitioning(wr_returning_customer_sk#1, ca_state#9, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(16) CometHashAggregate
Input [3]: [wr_returning_customer_sk#1, ca_state#9, sum#10]
Keys [2]: [wr_returning_customer_sk#1, ca_state#9]
Functions [1]: [sum(UnscaledValue(wr_return_amt#3))]

(17) CometFilter
Input [3]: [ctr_customer_sk#11, ctr_state#12, ctr_total_return#13]
Condition : isnotnull(ctr_total_return#13)

(18) CometColumnarToRow [codegen id : 5]
Input [3]: [ctr_customer_sk#11, ctr_state#12, ctr_total_return#13]

(19) CometScan parquet spark_catalog.default.web_returns
Output [2]: [wr_returning_addr_sk#2, wr_returned_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(wr_returned_date_sk#4), dynamicpruningexpression(wr_returned_date_sk#4 IN dynamicpruning#14)]
PushedFilters: [IsNotNull(wr_returning_addr_sk)]
ReadSchema: struct<wr_returning_addr_sk:int>

(20) CometFilter
Input [2]: [wr_returning_addr_sk#2, wr_returned_date_sk#4]
Condition : isnotnull(wr_returning_addr_sk#2)

(21) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#6]

(22) CometBroadcastHashJoin
Left output [2]: [wr_returning_addr_sk#2, wr_returned_date_sk#4]
Right output [1]: [d_date_sk#6]
Arguments: [wr_returned_date_sk#4], [d_date_sk#6], Inner, BuildRight

(23) CometProject
Input [3]: [wr_returning_addr_sk#2, wr_returned_date_sk#4, d_date_sk#6]
Arguments: [wr_returning_addr_sk#2], [wr_returning_addr_sk#2]

(24) CometScan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#8, ca_state#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_state), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string>

(25) CometFilter
Input [2]: [ca_address_sk#8, ca_state#9]
Condition : (isnotnull(ca_state#9) AND isnotnull(ca_address_sk#8))

(26) CometBroadcastExchange
Input [2]: [ca_address_sk#8, ca_state#9]
Arguments: [ca_address_sk#8, ca_state#9]

(27) CometBroadcastHashJoin
Left output [1]: [wr_returning_addr_sk#2]
Right output [2]: [ca_address_sk#8, ca_state#9]
Arguments: [wr_returning_addr_sk#2], [ca_address_sk#8], Inner, BuildRight

(28) CometProject
Input [3]: [wr_returning_addr_sk#2, ca_address_sk#8, ca_state#9]
Arguments: [ctr_state#12], [ca_state#9 AS ctr_state#12]

(29) CometHashAggregate
Input [1]: [ctr_state#12]
Keys [1]: [ctr_state#12]
Functions: []

(30) CometExchange
Input [1]: [ctr_state#12]
Arguments: hashpartitioning(ctr_state#12, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(31) CometHashAggregate
Input [1]: [ctr_state#12]
Keys [1]: [ctr_state#12]
Functions: []

(32) CometColumnarToRow [codegen id : 2]
Input [1]: [ctr_state#15]

(33) CometScan parquet spark_catalog.default.web_returns
Output [4]: [wr_returning_customer_sk#16, wr_returning_addr_sk#17, wr_return_amt#18, wr_returned_date_sk#19]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(wr_returned_date_sk#19), dynamicpruningexpression(wr_returned_date_sk#19 IN dynamicpruning#20)]
PushedFilters: [IsNotNull(wr_returning_addr_sk)]
ReadSchema: struct<wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_amt:decimal(7,2)>

(34) CometFilter
Input [4]: [wr_returning_customer_sk#16, wr_returning_addr_sk#17, wr_return_amt#18, wr_returned_date_sk#19]
Condition : isnotnull(wr_returning_addr_sk#17)

(35) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#21]

(36) CometBroadcastHashJoin
Left output [4]: [wr_returning_customer_sk#16, wr_returning_addr_sk#17, wr_return_amt#18, wr_returned_date_sk#19]
Right output [1]: [d_date_sk#21]
Arguments: [wr_returned_date_sk#19], [d_date_sk#21], Inner, BuildRight

(37) CometProject
Input [5]: [wr_returning_customer_sk#16, wr_returning_addr_sk#17, wr_return_amt#18, wr_returned_date_sk#19, d_date_sk#21]
Arguments: [wr_returning_customer_sk#16, wr_returning_addr_sk#17, wr_return_amt#18], [wr_returning_customer_sk#16, wr_returning_addr_sk#17, wr_return_amt#18]

(38) ReusedExchange [Reuses operator id: 26]
Output [2]: [ca_address_sk#22, ca_state#23]

(39) CometBroadcastHashJoin
Left output [3]: [wr_returning_customer_sk#16, wr_returning_addr_sk#17, wr_return_amt#18]
Right output [2]: [ca_address_sk#22, ca_state#23]
Arguments: [wr_returning_addr_sk#17], [ca_address_sk#22], Inner, BuildRight

(40) CometProject
Input [5]: [wr_returning_customer_sk#16, wr_returning_addr_sk#17, wr_return_amt#18, ca_address_sk#22, ca_state#23]
Arguments: [wr_returning_customer_sk#16, wr_return_amt#18, ca_state#23], [wr_returning_customer_sk#16, wr_return_amt#18, ca_state#23]

(41) CometHashAggregate
Input [3]: [wr_returning_customer_sk#16, wr_return_amt#18, ca_state#23]
Keys [2]: [wr_returning_customer_sk#16, ca_state#23]
Functions [1]: [partial_sum(UnscaledValue(wr_return_amt#18))]

(42) CometExchange
Input [3]: [wr_returning_customer_sk#16, ca_state#23, sum#24]
Arguments: hashpartitioning(wr_returning_customer_sk#16, ca_state#23, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(43) CometHashAggregate
Input [3]: [wr_returning_customer_sk#16, ca_state#23, sum#24]
Keys [2]: [wr_returning_customer_sk#16, ca_state#23]
Functions [1]: [sum(UnscaledValue(wr_return_amt#18))]

(44) CometColumnarToRow [codegen id : 1]
Input [2]: [ctr_state#25, ctr_total_return#26]

(45) BroadcastExchange
Input [2]: [ctr_state#25, ctr_total_return#26]
Arguments: HashedRelationBroadcastMode(List(rpad(input[0, string, true], 2,  )),false), [plan_id=4]

(46) BroadcastHashJoin [codegen id : 2]
Left keys [1]: [rpad(ctr_state#15, 2,  )]
Right keys [1]: [rpad(ctr_state#25, 2,  )]
Join type: Inner
Join condition: None

(47) Project [codegen id : 2]
Output [2]: [ctr_state#15, ctr_total_return#26]
Input [3]: [ctr_state#15, ctr_state#25, ctr_total_return#26]

(48) HashAggregate [codegen id : 2]
Input [2]: [ctr_state#15, ctr_total_return#26]
Keys [1]: [ctr_state#15]
Functions [1]: [partial_avg(ctr_total_return#26)]
Aggregate Attributes [2]: [sum#27, count#28]
Results [3]: [ctr_state#15, sum#29, count#30]

(49) HashAggregate [codegen id : 2]
Input [3]: [ctr_state#15, sum#29, count#30]
Keys [1]: [ctr_state#15]
Functions [1]: [avg(ctr_total_return#26)]
Aggregate Attributes [1]: [avg(ctr_total_return#26)#31]
Results [2]: [(avg(ctr_total_return#26)#31 * 1.2) AS (avg(ctr_total_return) * 1.2)#32, ctr_state#15]

(50) Filter [codegen id : 2]
Input [2]: [(avg(ctr_total_return) * 1.2)#32, ctr_state#15]
Condition : isnotnull((avg(ctr_total_return) * 1.2)#32)

(51) BroadcastExchange
Input [2]: [(avg(ctr_total_return) * 1.2)#32, ctr_state#15]
Arguments: HashedRelationBroadcastMode(List(coalesce(input[1, string, true], ), isnull(input[1, string, true])),false), [plan_id=5]

(52) BroadcastHashJoin [codegen id : 5]
Left keys [2]: [coalesce(ctr_state#12, ), isnull(ctr_state#12)]
Right keys [2]: [coalesce(ctr_state#15, ), isnull(ctr_state#15)]
Join type: Inner
Join condition: (cast(ctr_total_return#13 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#32)

(53) Project [codegen id : 5]
Output [2]: [ctr_customer_sk#11, ctr_total_return#13]
Input [5]: [ctr_customer_sk#11, ctr_state#12, ctr_total_return#13, (avg(ctr_total_return) * 1.2)#32, ctr_state#15]

(54) CometScan parquet spark_catalog.default.customer
Output [14]: [c_customer_sk#33, c_customer_id#34, c_current_addr_sk#35, c_salutation#36, c_first_name#37, c_last_name#38, c_preferred_cust_flag#39, c_birth_day#40, c_birth_month#41, c_birth_year#42, c_birth_country#43, c_login#44, c_email_address#45, c_last_review_date#46]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_day:int,c_birth_month:int,c_birth_year:int,c_birth_country:string,c_login:string,c_email_address:string,c_last_review_date:int>

(55) CometFilter
Input [14]: [c_customer_sk#33, c_customer_id#34, c_current_addr_sk#35, c_salutation#36, c_first_name#37, c_last_name#38, c_preferred_cust_flag#39, c_birth_day#40, c_birth_month#41, c_birth_year#42, c_birth_country#43, c_login#44, c_email_address#45, c_last_review_date#46]
Condition : (isnotnull(c_customer_sk#33) AND isnotnull(c_current_addr_sk#35))

(56) CometColumnarToRow [codegen id : 3]
Input [14]: [c_customer_sk#33, c_customer_id#34, c_current_addr_sk#35, c_salutation#36, c_first_name#37, c_last_name#38, c_preferred_cust_flag#39, c_birth_day#40, c_birth_month#41, c_birth_year#42, c_birth_country#43, c_login#44, c_email_address#45, c_last_review_date#46]

(57) BroadcastExchange
Input [14]: [c_customer_sk#33, c_customer_id#34, c_current_addr_sk#35, c_salutation#36, c_first_name#37, c_last_name#38, c_preferred_cust_flag#39, c_birth_day#40, c_birth_month#41, c_birth_year#42, c_birth_country#43, c_login#44, c_email_address#45, c_last_review_date#46]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6]

(58) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [ctr_customer_sk#11]
Right keys [1]: [c_customer_sk#33]
Join type: Inner
Join condition: None

(59) Project [codegen id : 5]
Output [14]: [ctr_total_return#13, c_customer_id#34, c_current_addr_sk#35, c_salutation#36, c_first_name#37, c_last_name#38, c_preferred_cust_flag#39, c_birth_day#40, c_birth_month#41, c_birth_year#42, c_birth_country#43, c_login#44, c_email_address#45, c_last_review_date#46]
Input [16]: [ctr_customer_sk#11, ctr_total_return#13, c_customer_sk#33, c_customer_id#34, c_current_addr_sk#35, c_salutation#36, c_first_name#37, c_last_name#38, c_preferred_cust_flag#39, c_birth_day#40, c_birth_month#41, c_birth_year#42, c_birth_country#43, c_login#44, c_email_address#45, c_last_review_date#46]

(60) CometScan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#47, ca_state#48]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_state), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string>

(61) CometColumnarToRow [codegen id : 4]
Input [2]: [ca_address_sk#47, ca_state#48]

(62) Filter [codegen id : 4]
Input [2]: [ca_address_sk#47, ca_state#48]
Condition : ((isnotnull(ca_state#48) AND (rpad(ca_state#48, 2,  ) = GA)) AND isnotnull(ca_address_sk#47))

(63) Project [codegen id : 4]
Output [1]: [ca_address_sk#47]
Input [2]: [ca_address_sk#47, ca_state#48]

(64) BroadcastExchange
Input [1]: [ca_address_sk#47]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7]

(65) BroadcastHashJoin [codegen id : 5]
Left keys [1]: [c_current_addr_sk#35]
Right keys [1]: [ca_address_sk#47]
Join type: Inner
Join condition: None

(66) Project [codegen id : 5]
Output [13]: [c_customer_id#34, c_salutation#36, c_first_name#37, c_last_name#38, c_preferred_cust_flag#39, c_birth_day#40, c_birth_month#41, c_birth_year#42, c_birth_country#43, c_login#44, c_email_address#45, c_last_review_date#46, ctr_total_return#13]
Input [15]: [ctr_total_return#13, c_customer_id#34, c_current_addr_sk#35, c_salutation#36, c_first_name#37, c_last_name#38, c_preferred_cust_flag#39, c_birth_day#40, c_birth_month#41, c_birth_year#42, c_birth_country#43, c_login#44, c_email_address#45, c_last_review_date#46, ca_address_sk#47]

(67) TakeOrderedAndProject
Input [13]: [c_customer_id#34, c_salutation#36, c_first_name#37, c_last_name#38, c_preferred_cust_flag#39, c_birth_day#40, c_birth_month#41, c_birth_year#42, c_birth_country#43, c_login#44, c_email_address#45, c_last_review_date#46, ctr_total_return#13]
Arguments: 100, [c_customer_id#34 ASC NULLS FIRST, c_salutation#36 ASC NULLS FIRST, c_first_name#37 ASC NULLS FIRST, c_last_name#38 ASC NULLS FIRST, c_preferred_cust_flag#39 ASC NULLS FIRST, c_birth_day#40 ASC NULLS FIRST, c_birth_month#41 ASC NULLS FIRST, c_birth_year#42 ASC NULLS FIRST, c_birth_country#43 ASC NULLS FIRST, c_login#44 ASC NULLS FIRST, c_email_address#45 ASC NULLS FIRST, c_last_review_date#46 ASC NULLS FIRST, ctr_total_return#13 ASC NULLS FIRST], [c_customer_id#34, c_salutation#36, c_first_name#37, c_last_name#38, c_preferred_cust_flag#39, c_birth_day#40, c_birth_month#41, c_birth_year#42, c_birth_country#43, c_login#44, c_email_address#45, c_last_review_date#46, ctr_total_return#13]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = wr_returned_date_sk#4 IN dynamicpruning#5
BroadcastExchange (72)
+- * CometColumnarToRow (71)
   +- CometProject (70)
      +- CometFilter (69)
         +- CometScan parquet spark_catalog.default.date_dim (68)


(68) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#6, d_year#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(69) CometFilter
Input [2]: [d_date_sk#6, d_year#7]
Condition : ((isnotnull(d_year#7) AND (d_year#7 = 2002)) AND isnotnull(d_date_sk#6))

(70) CometProject
Input [2]: [d_date_sk#6, d_year#7]
Arguments: [d_date_sk#6], [d_date_sk#6]

(71) CometColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#6]

(72) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=8]

Subquery:2 Hosting operator id = 19 Hosting Expression = wr_returned_date_sk#4 IN dynamicpruning#5

Subquery:3 Hosting operator id = 33 Hosting Expression = wr_returned_date_sk#19 IN dynamicpruning#5


