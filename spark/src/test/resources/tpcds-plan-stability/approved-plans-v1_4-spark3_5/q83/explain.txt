== Physical Plan ==
* CometColumnarToRow (49)
+- CometTakeOrderedAndProject (48)
   +- CometProject (47)
      +- CometBroadcastHashJoin (46)
         :- CometProject (33)
         :  +- CometBroadcastHashJoin (32)
         :     :- CometHashAggregate (19)
         :     :  +- CometExchange (18)
         :     :     +- CometHashAggregate (17)
         :     :        +- CometProject (16)
         :     :           +- CometBroadcastHashJoin (15)
         :     :              :- CometProject (8)
         :     :              :  +- CometBroadcastHashJoin (7)
         :     :              :     :- CometFilter (2)
         :     :              :     :  +- CometScan parquet spark_catalog.default.store_returns (1)
         :     :              :     +- CometBroadcastExchange (6)
         :     :              :        +- CometProject (5)
         :     :              :           +- CometFilter (4)
         :     :              :              +- CometScan parquet spark_catalog.default.item (3)
         :     :              +- CometBroadcastExchange (14)
         :     :                 +- CometProject (13)
         :     :                    +- CometBroadcastHashJoin (12)
         :     :                       :- CometFilter (10)
         :     :                       :  +- CometScan parquet spark_catalog.default.date_dim (9)
         :     :                       +- ReusedExchange (11)
         :     +- CometBroadcastExchange (31)
         :        +- CometHashAggregate (30)
         :           +- CometExchange (29)
         :              +- CometHashAggregate (28)
         :                 +- CometProject (27)
         :                    +- CometBroadcastHashJoin (26)
         :                       :- CometProject (24)
         :                       :  +- CometBroadcastHashJoin (23)
         :                       :     :- CometFilter (21)
         :                       :     :  +- CometScan parquet spark_catalog.default.catalog_returns (20)
         :                       :     +- ReusedExchange (22)
         :                       +- ReusedExchange (25)
         +- CometBroadcastExchange (45)
            +- CometHashAggregate (44)
               +- CometExchange (43)
                  +- CometHashAggregate (42)
                     +- CometProject (41)
                        +- CometBroadcastHashJoin (40)
                           :- CometProject (38)
                           :  +- CometBroadcastHashJoin (37)
                           :     :- CometFilter (35)
                           :     :  +- CometScan parquet spark_catalog.default.web_returns (34)
                           :     +- ReusedExchange (36)
                           +- ReusedExchange (39)


(1) CometScan parquet spark_catalog.default.store_returns
Output [3]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(sr_returned_date_sk#3), dynamicpruningexpression(sr_returned_date_sk#3 IN dynamicpruning#4)]
PushedFilters: [IsNotNull(sr_item_sk)]
ReadSchema: struct<sr_item_sk:int,sr_return_quantity:int>

(2) CometFilter
Input [3]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3]
Condition : isnotnull(sr_item_sk#1)

(3) CometScan parquet spark_catalog.default.item
Output [2]: [i_item_sk#5, i_item_id#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(4) CometFilter
Input [2]: [i_item_sk#5, i_item_id#6]
Condition : (isnotnull(i_item_sk#5) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#6, 16, true, false, true)))

(5) CometProject
Input [2]: [i_item_sk#5, i_item_id#6]
Arguments: [i_item_sk#5, i_item_id#7], [i_item_sk#5, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#6, 16, true, false, true) AS i_item_id#7]

(6) CometBroadcastExchange
Input [2]: [i_item_sk#5, i_item_id#7]
Arguments: [i_item_sk#5, i_item_id#7]

(7) CometBroadcastHashJoin
Left output [3]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3]
Right output [2]: [i_item_sk#5, i_item_id#7]
Arguments: [sr_item_sk#1], [i_item_sk#5], Inner, BuildRight

(8) CometProject
Input [5]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3, i_item_sk#5, i_item_id#7]
Arguments: [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#7], [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#7]

(9) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#8, d_date#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(10) CometFilter
Input [2]: [d_date_sk#8, d_date#9]
Condition : isnotnull(d_date_sk#8)

(11) ReusedExchange [Reuses operator id: 59]
Output [1]: [d_date#10]

(12) CometBroadcastHashJoin
Left output [2]: [d_date_sk#8, d_date#9]
Right output [1]: [d_date#10]
Arguments: [d_date#9], [d_date#10], LeftSemi, BuildRight

(13) CometProject
Input [2]: [d_date_sk#8, d_date#9]
Arguments: [d_date_sk#8], [d_date_sk#8]

(14) CometBroadcastExchange
Input [1]: [d_date_sk#8]
Arguments: [d_date_sk#8]

(15) CometBroadcastHashJoin
Left output [3]: [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#7]
Right output [1]: [d_date_sk#8]
Arguments: [sr_returned_date_sk#3], [d_date_sk#8], Inner, BuildRight

(16) CometProject
Input [4]: [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#7, d_date_sk#8]
Arguments: [sr_return_quantity#2, i_item_id#7], [sr_return_quantity#2, i_item_id#7]

(17) CometHashAggregate
Input [2]: [sr_return_quantity#2, i_item_id#7]
Keys [1]: [i_item_id#7]
Functions [1]: [partial_sum(sr_return_quantity#2)]

(18) CometExchange
Input [2]: [i_item_id#7, sum#11]
Arguments: hashpartitioning(i_item_id#7, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(19) CometHashAggregate
Input [2]: [i_item_id#7, sum#11]
Keys [1]: [i_item_id#7]
Functions [1]: [sum(sr_return_quantity#2)]

(20) CometScan parquet spark_catalog.default.catalog_returns
Output [3]: [cr_item_sk#12, cr_return_quantity#13, cr_returned_date_sk#14]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cr_returned_date_sk#14), dynamicpruningexpression(cr_returned_date_sk#14 IN dynamicpruning#15)]
PushedFilters: [IsNotNull(cr_item_sk)]
ReadSchema: struct<cr_item_sk:int,cr_return_quantity:int>

(21) CometFilter
Input [3]: [cr_item_sk#12, cr_return_quantity#13, cr_returned_date_sk#14]
Condition : isnotnull(cr_item_sk#12)

(22) ReusedExchange [Reuses operator id: 6]
Output [2]: [i_item_sk#16, i_item_id#17]

(23) CometBroadcastHashJoin
Left output [3]: [cr_item_sk#12, cr_return_quantity#13, cr_returned_date_sk#14]
Right output [2]: [i_item_sk#16, i_item_id#17]
Arguments: [cr_item_sk#12], [i_item_sk#16], Inner, BuildRight

(24) CometProject
Input [5]: [cr_item_sk#12, cr_return_quantity#13, cr_returned_date_sk#14, i_item_sk#16, i_item_id#17]
Arguments: [cr_return_quantity#13, cr_returned_date_sk#14, i_item_id#17], [cr_return_quantity#13, cr_returned_date_sk#14, i_item_id#17]

(25) ReusedExchange [Reuses operator id: 14]
Output [1]: [d_date_sk#18]

(26) CometBroadcastHashJoin
Left output [3]: [cr_return_quantity#13, cr_returned_date_sk#14, i_item_id#17]
Right output [1]: [d_date_sk#18]
Arguments: [cr_returned_date_sk#14], [d_date_sk#18], Inner, BuildRight

(27) CometProject
Input [4]: [cr_return_quantity#13, cr_returned_date_sk#14, i_item_id#17, d_date_sk#18]
Arguments: [cr_return_quantity#13, i_item_id#17], [cr_return_quantity#13, i_item_id#17]

(28) CometHashAggregate
Input [2]: [cr_return_quantity#13, i_item_id#17]
Keys [1]: [i_item_id#17]
Functions [1]: [partial_sum(cr_return_quantity#13)]

(29) CometExchange
Input [2]: [i_item_id#17, sum#19]
Arguments: hashpartitioning(i_item_id#17, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(30) CometHashAggregate
Input [2]: [i_item_id#17, sum#19]
Keys [1]: [i_item_id#17]
Functions [1]: [sum(cr_return_quantity#13)]

(31) CometBroadcastExchange
Input [2]: [item_id#20, cr_item_qty#21]
Arguments: [item_id#20, cr_item_qty#21]

(32) CometBroadcastHashJoin
Left output [2]: [item_id#22, sr_item_qty#23]
Right output [2]: [item_id#20, cr_item_qty#21]
Arguments: [item_id#22], [item_id#20], Inner, BuildRight

(33) CometProject
Input [4]: [item_id#22, sr_item_qty#23, item_id#20, cr_item_qty#21]
Arguments: [item_id#22, sr_item_qty#23, cr_item_qty#21], [item_id#22, sr_item_qty#23, cr_item_qty#21]

(34) CometScan parquet spark_catalog.default.web_returns
Output [3]: [wr_item_sk#24, wr_return_quantity#25, wr_returned_date_sk#26]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(wr_returned_date_sk#26), dynamicpruningexpression(wr_returned_date_sk#26 IN dynamicpruning#27)]
PushedFilters: [IsNotNull(wr_item_sk)]
ReadSchema: struct<wr_item_sk:int,wr_return_quantity:int>

(35) CometFilter
Input [3]: [wr_item_sk#24, wr_return_quantity#25, wr_returned_date_sk#26]
Condition : isnotnull(wr_item_sk#24)

(36) ReusedExchange [Reuses operator id: 6]
Output [2]: [i_item_sk#28, i_item_id#29]

(37) CometBroadcastHashJoin
Left output [3]: [wr_item_sk#24, wr_return_quantity#25, wr_returned_date_sk#26]
Right output [2]: [i_item_sk#28, i_item_id#29]
Arguments: [wr_item_sk#24], [i_item_sk#28], Inner, BuildRight

(38) CometProject
Input [5]: [wr_item_sk#24, wr_return_quantity#25, wr_returned_date_sk#26, i_item_sk#28, i_item_id#29]
Arguments: [wr_return_quantity#25, wr_returned_date_sk#26, i_item_id#29], [wr_return_quantity#25, wr_returned_date_sk#26, i_item_id#29]

(39) ReusedExchange [Reuses operator id: 14]
Output [1]: [d_date_sk#30]

(40) CometBroadcastHashJoin
Left output [3]: [wr_return_quantity#25, wr_returned_date_sk#26, i_item_id#29]
Right output [1]: [d_date_sk#30]
Arguments: [wr_returned_date_sk#26], [d_date_sk#30], Inner, BuildRight

(41) CometProject
Input [4]: [wr_return_quantity#25, wr_returned_date_sk#26, i_item_id#29, d_date_sk#30]
Arguments: [wr_return_quantity#25, i_item_id#29], [wr_return_quantity#25, i_item_id#29]

(42) CometHashAggregate
Input [2]: [wr_return_quantity#25, i_item_id#29]
Keys [1]: [i_item_id#29]
Functions [1]: [partial_sum(wr_return_quantity#25)]

(43) CometExchange
Input [2]: [i_item_id#29, sum#31]
Arguments: hashpartitioning(i_item_id#29, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(44) CometHashAggregate
Input [2]: [i_item_id#29, sum#31]
Keys [1]: [i_item_id#29]
Functions [1]: [sum(wr_return_quantity#25)]

(45) CometBroadcastExchange
Input [2]: [item_id#32, wr_item_qty#33]
Arguments: [item_id#32, wr_item_qty#33]

(46) CometBroadcastHashJoin
Left output [3]: [item_id#22, sr_item_qty#23, cr_item_qty#21]
Right output [2]: [item_id#32, wr_item_qty#33]
Arguments: [item_id#22], [item_id#32], Inner, BuildRight

(47) CometProject
Input [5]: [item_id#22, sr_item_qty#23, cr_item_qty#21, item_id#32, wr_item_qty#33]
Arguments: [item_id#22, sr_item_qty#23, sr_dev#34, cr_item_qty#21, cr_dev#35, wr_item_qty#33, wr_dev#36, average#37], [item_id#22, sr_item_qty#23, (((cast(sr_item_qty#23 as double) / knownfloatingpointnormalized(normalizenanandzero(cast(((sr_item_qty#23 + cr_item_qty#21) + wr_item_qty#33) as double)))) / 3.0) * 100.0) AS sr_dev#34, cr_item_qty#21, (((cast(cr_item_qty#21 as double) / knownfloatingpointnormalized(normalizenanandzero(cast(((sr_item_qty#23 + cr_item_qty#21) + wr_item_qty#33) as double)))) / 3.0) * 100.0) AS cr_dev#35, wr_item_qty#33, (((cast(wr_item_qty#33 as double) / knownfloatingpointnormalized(normalizenanandzero(cast(((sr_item_qty#23 + cr_item_qty#21) + wr_item_qty#33) as double)))) / 3.0) * 100.0) AS wr_dev#36, (cast(((sr_item_qty#23 + cr_item_qty#21) + wr_item_qty#33) as decimal(20,0)) / 3.0) AS average#37]

(48) CometTakeOrderedAndProject
Input [8]: [item_id#22, sr_item_qty#23, sr_dev#34, cr_item_qty#21, cr_dev#35, wr_item_qty#33, wr_dev#36, average#37]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[item_id#22 ASC NULLS FIRST,sr_item_qty#23 ASC NULLS FIRST], output=[item_id#22,sr_item_qty#23,sr_dev#34,cr_item_qty#21,cr_dev#35,wr_item_qty#33,wr_dev#36,average#37]), [item_id#22, sr_item_qty#23, sr_dev#34, cr_item_qty#21, cr_dev#35, wr_item_qty#33, wr_dev#36, average#37], 100, [item_id#22 ASC NULLS FIRST, sr_item_qty#23 ASC NULLS FIRST], [item_id#22, sr_item_qty#23, sr_dev#34, cr_item_qty#21, cr_dev#35, wr_item_qty#33, wr_dev#36, average#37]

(49) CometColumnarToRow [codegen id : 1]
Input [8]: [item_id#22, sr_item_qty#23, sr_dev#34, cr_item_qty#21, cr_dev#35, wr_item_qty#33, wr_dev#36, average#37]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = sr_returned_date_sk#3 IN dynamicpruning#4
BroadcastExchange (63)
+- * CometColumnarToRow (62)
   +- CometProject (61)
      +- CometBroadcastHashJoin (60)
         :- CometFilter (51)
         :  +- CometScan parquet spark_catalog.default.date_dim (50)
         +- CometBroadcastExchange (59)
            +- CometProject (58)
               +- CometBroadcastHashJoin (57)
                  :- CometScan parquet spark_catalog.default.date_dim (52)
                  +- CometBroadcastExchange (56)
                     +- CometProject (55)
                        +- CometFilter (54)
                           +- CometScan parquet spark_catalog.default.date_dim (53)


(50) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#8, d_date#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(51) CometFilter
Input [2]: [d_date_sk#8, d_date#9]
Condition : isnotnull(d_date_sk#8)

(52) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date#10, d_week_seq#38]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date:date,d_week_seq:int>

(53) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date#39, d_week_seq#40]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date:date,d_week_seq:int>

(54) CometFilter
Input [2]: [d_date#39, d_week_seq#40]
Condition : cast(d_date#39 as string) IN (2000-06-30,2000-09-27,2000-11-17)

(55) CometProject
Input [2]: [d_date#39, d_week_seq#40]
Arguments: [d_week_seq#40], [d_week_seq#40]

(56) CometBroadcastExchange
Input [1]: [d_week_seq#40]
Arguments: [d_week_seq#40]

(57) CometBroadcastHashJoin
Left output [2]: [d_date#10, d_week_seq#38]
Right output [1]: [d_week_seq#40]
Arguments: [d_week_seq#38], [d_week_seq#40], LeftSemi, BuildRight

(58) CometProject
Input [2]: [d_date#10, d_week_seq#38]
Arguments: [d_date#10], [d_date#10]

(59) CometBroadcastExchange
Input [1]: [d_date#10]
Arguments: [d_date#10]

(60) CometBroadcastHashJoin
Left output [2]: [d_date_sk#8, d_date#9]
Right output [1]: [d_date#10]
Arguments: [d_date#9], [d_date#10], LeftSemi, BuildRight

(61) CometProject
Input [2]: [d_date_sk#8, d_date#9]
Arguments: [d_date_sk#8], [d_date_sk#8]

(62) CometColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#8]

(63) BroadcastExchange
Input [1]: [d_date_sk#8]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]

Subquery:2 Hosting operator id = 20 Hosting Expression = cr_returned_date_sk#14 IN dynamicpruning#4

Subquery:3 Hosting operator id = 34 Hosting Expression = wr_returned_date_sk#26 IN dynamicpruning#4


