== Physical Plan ==
* ColumnarToRow (49)
+- CometTakeOrderedAndProject (48)
   +- CometHashAggregate (47)
      +- CometExchange (46)
         +- CometHashAggregate (45)
            +- CometUnion (44)
               :- CometHashAggregate (27)
               :  +- CometExchange (26)
               :     +- CometHashAggregate (25)
               :        +- CometProject (24)
               :           +- CometBroadcastHashJoin (23)
               :              :- CometProject (14)
               :              :  +- CometBroadcastHashJoin (13)
               :              :     :- CometProject (8)
               :              :     :  +- CometBroadcastHashJoin (7)
               :              :     :     :- CometFilter (2)
               :              :     :     :  +- CometNativeScan: `spark_catalog`.`default`.`store_sales` (1)
               :              :     :     +- CometBroadcastExchange (6)
               :              :     :        +- CometProject (5)
               :              :     :           +- CometFilter (4)
               :              :     :              +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (3)
               :              :     +- CometBroadcastExchange (12)
               :              :        +- CometProject (11)
               :              :           +- CometFilter (10)
               :              :              +- CometNativeScan: `spark_catalog`.`default`.`customer_address` (9)
               :              +- CometBroadcastExchange (22)
               :                 +- CometBroadcastHashJoin (21)
               :                    :- CometFilter (16)
               :                    :  +- CometNativeScan: `spark_catalog`.`default`.`item` (15)
               :                    +- CometBroadcastExchange (20)
               :                       +- CometProject (19)
               :                          +- CometFilter (18)
               :                             +- CometNativeScan: `spark_catalog`.`default`.`item` (17)
               :- CometHashAggregate (41)
               :  +- CometExchange (40)
               :     +- CometHashAggregate (39)
               :        +- CometProject (38)
               :           +- CometBroadcastHashJoin (37)
               :              :- CometProject (35)
               :              :  +- CometBroadcastHashJoin (34)
               :              :     :- CometProject (32)
               :              :     :  +- CometBroadcastHashJoin (31)
               :              :     :     :- CometFilter (29)
               :              :     :     :  +- CometNativeScan: `spark_catalog`.`default`.`catalog_sales` (28)
               :              :     :     +- ReusedExchange (30)
               :              :     +- ReusedExchange (33)
               :              +- ReusedExchange (36)
               +- CometHashAggregate (43)
                  +- ReusedExchange (42)


(1) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Arguments: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Condition : (isnotnull(ss_addr_sk#2) AND isnotnull(ss_item_sk#1))

(3) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [3]: [d_date_sk#5, d_year#6, d_moy#7]
Arguments: [d_date_sk#5, d_year#6, d_moy#7]

(4) CometFilter
Input [3]: [d_date_sk#5, d_year#6, d_moy#7]
Condition : ((((isnotnull(d_year#6) AND isnotnull(d_moy#7)) AND (d_year#6 = 2001)) AND (d_moy#7 = 2)) AND isnotnull(d_date_sk#5))

(5) CometProject
Input [3]: [d_date_sk#5, d_year#6, d_moy#7]
Arguments: [d_date_sk#5], [d_date_sk#5]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: [d_date_sk#5]

(7) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Right output [1]: [d_date_sk#5]
Arguments: [ss_sold_date_sk#4], [d_date_sk#5], Inner, BuildRight

(8) CometProject
Input [5]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, d_date_sk#5]
Arguments: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3], [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]

(9) CometNativeScan: `spark_catalog`.`default`.`customer_address`
Output [2]: [ca_address_sk#8, ca_gmt_offset#9]
Arguments: [ca_address_sk#8, ca_gmt_offset#9]

(10) CometFilter
Input [2]: [ca_address_sk#8, ca_gmt_offset#9]
Condition : ((isnotnull(ca_gmt_offset#9) AND (ca_gmt_offset#9 = -5.00)) AND isnotnull(ca_address_sk#8))

(11) CometProject
Input [2]: [ca_address_sk#8, ca_gmt_offset#9]
Arguments: [ca_address_sk#8], [ca_address_sk#8]

(12) CometBroadcastExchange
Input [1]: [ca_address_sk#8]
Arguments: [ca_address_sk#8]

(13) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Right output [1]: [ca_address_sk#8]
Arguments: [ss_addr_sk#2], [ca_address_sk#8], Inner, BuildRight

(14) CometProject
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ca_address_sk#8]
Arguments: [ss_item_sk#1, ss_ext_sales_price#3], [ss_item_sk#1, ss_ext_sales_price#3]

(15) CometNativeScan: `spark_catalog`.`default`.`item`
Output [2]: [i_item_sk#10, i_item_id#11]
Arguments: [i_item_sk#10, i_item_id#11]

(16) CometFilter
Input [2]: [i_item_sk#10, i_item_id#11]
Condition : isnotnull(i_item_sk#10)

(17) CometNativeScan: `spark_catalog`.`default`.`item`
Output [2]: [i_item_id#12, i_color#13]
Arguments: [i_item_id#12, i_color#13]

(18) CometFilter
Input [2]: [i_item_id#12, i_color#13]
Condition : i_color#13 IN (slate               ,blanched            ,burnished           )

(19) CometProject
Input [2]: [i_item_id#12, i_color#13]
Arguments: [i_item_id#12], [i_item_id#12]

(20) CometBroadcastExchange
Input [1]: [i_item_id#12]
Arguments: [i_item_id#12]

(21) CometBroadcastHashJoin
Left output [2]: [i_item_sk#10, i_item_id#11]
Right output [1]: [i_item_id#12]
Arguments: [i_item_id#11], [i_item_id#12], LeftSemi, BuildRight

(22) CometBroadcastExchange
Input [2]: [i_item_sk#10, i_item_id#11]
Arguments: [i_item_sk#10, i_item_id#11]

(23) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#1, ss_ext_sales_price#3]
Right output [2]: [i_item_sk#10, i_item_id#11]
Arguments: [ss_item_sk#1], [i_item_sk#10], Inner, BuildRight

(24) CometProject
Input [4]: [ss_item_sk#1, ss_ext_sales_price#3, i_item_sk#10, i_item_id#11]
Arguments: [ss_ext_sales_price#3, i_item_id#11], [ss_ext_sales_price#3, i_item_id#11]

(25) CometHashAggregate
Input [2]: [ss_ext_sales_price#3, i_item_id#11]
Keys [1]: [i_item_id#11]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#3))]

(26) CometExchange
Input [2]: [i_item_id#11, sum#14]
Arguments: hashpartitioning(i_item_id#11, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(27) CometHashAggregate
Input [2]: [i_item_id#11, sum#14]
Keys [1]: [i_item_id#11]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#3))]

(28) CometNativeScan: `spark_catalog`.`default`.`catalog_sales`
Output [4]: [cs_bill_addr_sk#15, cs_item_sk#16, cs_ext_sales_price#17, cs_sold_date_sk#18]
Arguments: [cs_bill_addr_sk#15, cs_item_sk#16, cs_ext_sales_price#17, cs_sold_date_sk#18]

(29) CometFilter
Input [4]: [cs_bill_addr_sk#15, cs_item_sk#16, cs_ext_sales_price#17, cs_sold_date_sk#18]
Condition : (isnotnull(cs_bill_addr_sk#15) AND isnotnull(cs_item_sk#16))

(30) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#19]

(31) CometBroadcastHashJoin
Left output [4]: [cs_bill_addr_sk#15, cs_item_sk#16, cs_ext_sales_price#17, cs_sold_date_sk#18]
Right output [1]: [d_date_sk#19]
Arguments: [cs_sold_date_sk#18], [d_date_sk#19], Inner, BuildRight

(32) CometProject
Input [5]: [cs_bill_addr_sk#15, cs_item_sk#16, cs_ext_sales_price#17, cs_sold_date_sk#18, d_date_sk#19]
Arguments: [cs_bill_addr_sk#15, cs_item_sk#16, cs_ext_sales_price#17], [cs_bill_addr_sk#15, cs_item_sk#16, cs_ext_sales_price#17]

(33) ReusedExchange [Reuses operator id: 12]
Output [1]: [ca_address_sk#20]

(34) CometBroadcastHashJoin
Left output [3]: [cs_bill_addr_sk#15, cs_item_sk#16, cs_ext_sales_price#17]
Right output [1]: [ca_address_sk#20]
Arguments: [cs_bill_addr_sk#15], [ca_address_sk#20], Inner, BuildRight

(35) CometProject
Input [4]: [cs_bill_addr_sk#15, cs_item_sk#16, cs_ext_sales_price#17, ca_address_sk#20]
Arguments: [cs_item_sk#16, cs_ext_sales_price#17], [cs_item_sk#16, cs_ext_sales_price#17]

(36) ReusedExchange [Reuses operator id: 22]
Output [2]: [i_item_sk#21, i_item_id#22]

(37) CometBroadcastHashJoin
Left output [2]: [cs_item_sk#16, cs_ext_sales_price#17]
Right output [2]: [i_item_sk#21, i_item_id#22]
Arguments: [cs_item_sk#16], [i_item_sk#21], Inner, BuildRight

(38) CometProject
Input [4]: [cs_item_sk#16, cs_ext_sales_price#17, i_item_sk#21, i_item_id#22]
Arguments: [cs_ext_sales_price#17, i_item_id#22], [cs_ext_sales_price#17, i_item_id#22]

(39) CometHashAggregate
Input [2]: [cs_ext_sales_price#17, i_item_id#22]
Keys [1]: [i_item_id#22]
Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#17))]

(40) CometExchange
Input [2]: [i_item_id#22, sum#23]
Arguments: hashpartitioning(i_item_id#22, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(41) CometHashAggregate
Input [2]: [i_item_id#22, sum#23]
Keys [1]: [i_item_id#22]
Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#17))]

(42) ReusedExchange [Reuses operator id: 26]
Output [2]: [i_item_id#24, sum#25]

(43) CometHashAggregate
Input [2]: [i_item_id#24, sum#25]
Keys [1]: [i_item_id#24]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#26))]

(44) CometUnion
Child 0 Input [2]: [i_item_id#11, total_sales#27]
Child 1 Input [2]: [i_item_id#22, total_sales#28]
Child 2 Input [2]: [i_item_id#24, total_sales#29]

(45) CometHashAggregate
Input [2]: [i_item_id#11, total_sales#27]
Keys [1]: [i_item_id#11]
Functions [1]: [partial_sum(total_sales#27)]

(46) CometExchange
Input [3]: [i_item_id#11, sum#30, isEmpty#31]
Arguments: hashpartitioning(i_item_id#11, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(47) CometHashAggregate
Input [3]: [i_item_id#11, sum#30, isEmpty#31]
Keys [1]: [i_item_id#11]
Functions [1]: [sum(total_sales#27)]

(48) CometTakeOrderedAndProject
Input [2]: [i_item_id#11, total_sales#32]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[total_sales#32 ASC NULLS FIRST], output=[i_item_id#11,total_sales#32]), [i_item_id#11, total_sales#32], 100, [total_sales#32 ASC NULLS FIRST], [i_item_id#11, total_sales#32]

(49) ColumnarToRow [codegen id : 1]
Input [2]: [i_item_id#11, total_sales#32]

