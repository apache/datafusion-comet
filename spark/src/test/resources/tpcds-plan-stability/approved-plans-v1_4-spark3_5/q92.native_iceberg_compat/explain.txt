== Physical Plan ==
* ColumnarToRow (30)
+- CometHashAggregate (29)
   +- CometExchange (28)
      +- CometHashAggregate (27)
         +- CometProject (26)
            +- CometBroadcastHashJoin (25)
               :- CometProject (23)
               :  +- CometBroadcastHashJoin (22)
               :     :- CometProject (8)
               :     :  +- CometBroadcastHashJoin (7)
               :     :     :- CometFilter (2)
               :     :     :  +- CometScan parquet spark_catalog.default.web_sales (1)
               :     :     +- CometBroadcastExchange (6)
               :     :        +- CometProject (5)
               :     :           +- CometFilter (4)
               :     :              +- CometScan parquet spark_catalog.default.item (3)
               :     +- CometBroadcastExchange (21)
               :        +- CometFilter (20)
               :           +- CometHashAggregate (19)
               :              +- CometExchange (18)
               :                 +- CometHashAggregate (17)
               :                    +- CometProject (16)
               :                       +- CometBroadcastHashJoin (15)
               :                          :- CometFilter (10)
               :                          :  +- CometScan parquet spark_catalog.default.web_sales (9)
               :                          +- CometBroadcastExchange (14)
               :                             +- CometProject (13)
               :                                +- CometFilter (12)
               :                                   +- CometScan parquet spark_catalog.default.date_dim (11)
               +- ReusedExchange (24)


(1) CometScan parquet spark_catalog.default.web_sales
Output [3]: [ws_item_sk#1, ws_ext_discount_amt#2, ws_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#3)]
PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_ext_discount_amt)]
ReadSchema: struct<ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>

(2) CometFilter
Input [3]: [ws_item_sk#1, ws_ext_discount_amt#2, ws_sold_date_sk#3]
Condition : (isnotnull(ws_item_sk#1) AND isnotnull(ws_ext_discount_amt#2))

(3) CometScan parquet spark_catalog.default.item
Output [2]: [i_item_sk#4, i_manufact_id#5]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_manufact_id), EqualTo(i_manufact_id,350), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_manufact_id:int>

(4) CometFilter
Input [2]: [i_item_sk#4, i_manufact_id#5]
Condition : ((isnotnull(i_manufact_id#5) AND (i_manufact_id#5 = 350)) AND isnotnull(i_item_sk#4))

(5) CometProject
Input [2]: [i_item_sk#4, i_manufact_id#5]
Arguments: [i_item_sk#4], [i_item_sk#4]

(6) CometBroadcastExchange
Input [1]: [i_item_sk#4]
Arguments: [i_item_sk#4]

(7) CometBroadcastHashJoin
Left output [3]: [ws_item_sk#1, ws_ext_discount_amt#2, ws_sold_date_sk#3]
Right output [1]: [i_item_sk#4]
Arguments: [ws_item_sk#1], [i_item_sk#4], Inner, BuildRight

(8) CometProject
Input [4]: [ws_item_sk#1, ws_ext_discount_amt#2, ws_sold_date_sk#3, i_item_sk#4]
Arguments: [ws_ext_discount_amt#2, ws_sold_date_sk#3, i_item_sk#4], [ws_ext_discount_amt#2, ws_sold_date_sk#3, i_item_sk#4]

(9) CometScan parquet spark_catalog.default.web_sales
Output [3]: [ws_item_sk#6, ws_ext_discount_amt#7, ws_sold_date_sk#8]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#8)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>

(10) CometFilter
Input [3]: [ws_item_sk#6, ws_ext_discount_amt#7, ws_sold_date_sk#8]
Condition : isnotnull(ws_item_sk#6)

(11) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#9, d_date#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-01-27), LessThanOrEqual(d_date,2000-04-26), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(12) CometFilter
Input [2]: [d_date_sk#9, d_date#10]
Condition : (((isnotnull(d_date#10) AND (d_date#10 >= 2000-01-27)) AND (d_date#10 <= 2000-04-26)) AND isnotnull(d_date_sk#9))

(13) CometProject
Input [2]: [d_date_sk#9, d_date#10]
Arguments: [d_date_sk#9], [d_date_sk#9]

(14) CometBroadcastExchange
Input [1]: [d_date_sk#9]
Arguments: [d_date_sk#9]

(15) CometBroadcastHashJoin
Left output [3]: [ws_item_sk#6, ws_ext_discount_amt#7, ws_sold_date_sk#8]
Right output [1]: [d_date_sk#9]
Arguments: [ws_sold_date_sk#8], [d_date_sk#9], Inner, BuildRight

(16) CometProject
Input [4]: [ws_item_sk#6, ws_ext_discount_amt#7, ws_sold_date_sk#8, d_date_sk#9]
Arguments: [ws_item_sk#6, ws_ext_discount_amt#7], [ws_item_sk#6, ws_ext_discount_amt#7]

(17) CometHashAggregate
Input [2]: [ws_item_sk#6, ws_ext_discount_amt#7]
Keys [1]: [ws_item_sk#6]
Functions [1]: [partial_avg(UnscaledValue(ws_ext_discount_amt#7))]

(18) CometExchange
Input [3]: [ws_item_sk#6, sum#11, count#12]
Arguments: hashpartitioning(ws_item_sk#6, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(19) CometHashAggregate
Input [3]: [ws_item_sk#6, sum#11, count#12]
Keys [1]: [ws_item_sk#6]
Functions [1]: [avg(UnscaledValue(ws_ext_discount_amt#7))]

(20) CometFilter
Input [2]: [(1.3 * avg(ws_ext_discount_amt))#13, ws_item_sk#6]
Condition : isnotnull((1.3 * avg(ws_ext_discount_amt))#13)

(21) CometBroadcastExchange
Input [2]: [(1.3 * avg(ws_ext_discount_amt))#13, ws_item_sk#6]
Arguments: [(1.3 * avg(ws_ext_discount_amt))#13, ws_item_sk#6]

(22) CometBroadcastHashJoin
Left output [3]: [ws_ext_discount_amt#2, ws_sold_date_sk#3, i_item_sk#4]
Right output [2]: [(1.3 * avg(ws_ext_discount_amt))#13, ws_item_sk#6]
Arguments: [i_item_sk#4], [ws_item_sk#6], Inner, (cast(ws_ext_discount_amt#2 as decimal(14,7)) > (1.3 * avg(ws_ext_discount_amt))#13), BuildRight

(23) CometProject
Input [5]: [ws_ext_discount_amt#2, ws_sold_date_sk#3, i_item_sk#4, (1.3 * avg(ws_ext_discount_amt))#13, ws_item_sk#6]
Arguments: [ws_ext_discount_amt#2, ws_sold_date_sk#3], [ws_ext_discount_amt#2, ws_sold_date_sk#3]

(24) ReusedExchange [Reuses operator id: 14]
Output [1]: [d_date_sk#14]

(25) CometBroadcastHashJoin
Left output [2]: [ws_ext_discount_amt#2, ws_sold_date_sk#3]
Right output [1]: [d_date_sk#14]
Arguments: [ws_sold_date_sk#3], [d_date_sk#14], Inner, BuildRight

(26) CometProject
Input [3]: [ws_ext_discount_amt#2, ws_sold_date_sk#3, d_date_sk#14]
Arguments: [ws_ext_discount_amt#2], [ws_ext_discount_amt#2]

(27) CometHashAggregate
Input [1]: [ws_ext_discount_amt#2]
Keys: []
Functions [1]: [partial_sum(UnscaledValue(ws_ext_discount_amt#2))]

(28) CometExchange
Input [1]: [sum#15]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(29) CometHashAggregate
Input [1]: [sum#15]
Keys: []
Functions [1]: [sum(UnscaledValue(ws_ext_discount_amt#2))]

(30) ColumnarToRow [codegen id : 1]
Input [1]: [Excess Discount Amount #16]

