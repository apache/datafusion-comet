== Physical Plan ==
* CometColumnarToRow (67)
+- CometTakeOrderedAndProject (66)
   +- CometHashAggregate (65)
      +- CometExchange (64)
         +- CometHashAggregate (63)
            +- CometProject (62)
               +- CometSortMergeJoin (61)
                  :- CometSort (55)
                  :  +- CometColumnarExchange (54)
                  :     +- * Project (53)
                  :        +- * BroadcastHashJoin LeftOuter BuildRight (52)
                  :           :- * Project (47)
                  :           :  +- * BroadcastHashJoin Inner BuildRight (46)
                  :           :     :- * Project (41)
                  :           :     :  +- * BroadcastHashJoin Inner BuildRight (40)
                  :           :     :     :- * Project (35)
                  :           :     :     :  +- * BroadcastHashJoin Inner BuildRight (34)
                  :           :     :     :     :- * Project (32)
                  :           :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (31)
                  :           :     :     :     :     :- * Project (25)
                  :           :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (24)
                  :           :     :     :     :     :     :- * CometColumnarToRow (18)
                  :           :     :     :     :     :     :  +- CometProject (17)
                  :           :     :     :     :     :     :     +- CometBroadcastHashJoin (16)
                  :           :     :     :     :     :     :        :- CometProject (12)
                  :           :     :     :     :     :     :        :  +- CometBroadcastHashJoin (11)
                  :           :     :     :     :     :     :        :     :- CometProject (7)
                  :           :     :     :     :     :     :        :     :  +- CometBroadcastHashJoin (6)
                  :           :     :     :     :     :     :        :     :     :- CometFilter (2)
                  :           :     :     :     :     :     :        :     :     :  +- CometScan parquet spark_catalog.default.catalog_sales (1)
                  :           :     :     :     :     :     :        :     :     +- CometBroadcastExchange (5)
                  :           :     :     :     :     :     :        :     :        +- CometFilter (4)
                  :           :     :     :     :     :     :        :     :           +- CometScan parquet spark_catalog.default.inventory (3)
                  :           :     :     :     :     :     :        :     +- CometBroadcastExchange (10)
                  :           :     :     :     :     :     :        :        +- CometFilter (9)
                  :           :     :     :     :     :     :        :           +- CometScan parquet spark_catalog.default.warehouse (8)
                  :           :     :     :     :     :     :        +- CometBroadcastExchange (15)
                  :           :     :     :     :     :     :           +- CometFilter (14)
                  :           :     :     :     :     :     :              +- CometScan parquet spark_catalog.default.item (13)
                  :           :     :     :     :     :     +- BroadcastExchange (23)
                  :           :     :     :     :     :        +- * Project (22)
                  :           :     :     :     :     :           +- * Filter (21)
                  :           :     :     :     :     :              +- * CometColumnarToRow (20)
                  :           :     :     :     :     :                 +- CometScan parquet spark_catalog.default.customer_demographics (19)
                  :           :     :     :     :     +- BroadcastExchange (30)
                  :           :     :     :     :        +- * Project (29)
                  :           :     :     :     :           +- * Filter (28)
                  :           :     :     :     :              +- * CometColumnarToRow (27)
                  :           :     :     :     :                 +- CometScan parquet spark_catalog.default.household_demographics (26)
                  :           :     :     :     +- ReusedExchange (33)
                  :           :     :     +- BroadcastExchange (39)
                  :           :     :        +- * CometColumnarToRow (38)
                  :           :     :           +- CometFilter (37)
                  :           :     :              +- CometScan parquet spark_catalog.default.date_dim (36)
                  :           :     +- BroadcastExchange (45)
                  :           :        +- * CometColumnarToRow (44)
                  :           :           +- CometFilter (43)
                  :           :              +- CometScan parquet spark_catalog.default.date_dim (42)
                  :           +- BroadcastExchange (51)
                  :              +- * CometColumnarToRow (50)
                  :                 +- CometFilter (49)
                  :                    +- CometScan parquet spark_catalog.default.promotion (48)
                  +- CometSort (60)
                     +- CometExchange (59)
                        +- CometProject (58)
                           +- CometFilter (57)
                              +- CometScan parquet spark_catalog.default.catalog_returns (56)


(1) CometScan parquet spark_catalog.default.catalog_sales
Output [8]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_quantity#7, cs_sold_date_sk#8]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#8), dynamicpruningexpression(cs_sold_date_sk#8 IN dynamicpruning#9)]
PushedFilters: [IsNotNull(cs_quantity), IsNotNull(cs_item_sk), IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_hdemo_sk), IsNotNull(cs_ship_date_sk)]
ReadSchema: struct<cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:int,cs_quantity:int>

(2) CometFilter
Input [8]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_quantity#7, cs_sold_date_sk#8]
Condition : ((((isnotnull(cs_quantity#7) AND isnotnull(cs_item_sk#4)) AND isnotnull(cs_bill_cdemo_sk#2)) AND isnotnull(cs_bill_hdemo_sk#3)) AND isnotnull(cs_ship_date_sk#1))

(3) CometScan parquet spark_catalog.default.inventory
Output [4]: [inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12, inv_date_sk#13]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(inv_date_sk#13)]
PushedFilters: [IsNotNull(inv_quantity_on_hand), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)]
ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(4) CometFilter
Input [4]: [inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12, inv_date_sk#13]
Condition : ((isnotnull(inv_quantity_on_hand#12) AND isnotnull(inv_item_sk#10)) AND isnotnull(inv_warehouse_sk#11))

(5) CometBroadcastExchange
Input [4]: [inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12, inv_date_sk#13]
Arguments: [inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12, inv_date_sk#13]

(6) CometBroadcastHashJoin
Left output [8]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_quantity#7, cs_sold_date_sk#8]
Right output [4]: [inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12, inv_date_sk#13]
Arguments: [cs_item_sk#4], [inv_item_sk#10], Inner, (inv_quantity_on_hand#12 < cs_quantity#7), BuildRight

(7) CometProject
Input [12]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_quantity#7, cs_sold_date_sk#8, inv_item_sk#10, inv_warehouse_sk#11, inv_quantity_on_hand#12, inv_date_sk#13]
Arguments: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_warehouse_sk#11, inv_date_sk#13], [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_warehouse_sk#11, inv_date_sk#13]

(8) CometScan parquet spark_catalog.default.warehouse
Output [2]: [w_warehouse_sk#14, w_warehouse_name#15]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>

(9) CometFilter
Input [2]: [w_warehouse_sk#14, w_warehouse_name#15]
Condition : isnotnull(w_warehouse_sk#14)

(10) CometBroadcastExchange
Input [2]: [w_warehouse_sk#14, w_warehouse_name#15]
Arguments: [w_warehouse_sk#14, w_warehouse_name#15]

(11) CometBroadcastHashJoin
Left output [9]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_warehouse_sk#11, inv_date_sk#13]
Right output [2]: [w_warehouse_sk#14, w_warehouse_name#15]
Arguments: [inv_warehouse_sk#11], [w_warehouse_sk#14], Inner, BuildRight

(12) CometProject
Input [11]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_warehouse_sk#11, inv_date_sk#13, w_warehouse_sk#14, w_warehouse_name#15]
Arguments: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#15], [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#15]

(13) CometScan parquet spark_catalog.default.item
Output [2]: [i_item_sk#16, i_item_desc#17]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_desc:string>

(14) CometFilter
Input [2]: [i_item_sk#16, i_item_desc#17]
Condition : isnotnull(i_item_sk#16)

(15) CometBroadcastExchange
Input [2]: [i_item_sk#16, i_item_desc#17]
Arguments: [i_item_sk#16, i_item_desc#17]

(16) CometBroadcastHashJoin
Left output [9]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#15]
Right output [2]: [i_item_sk#16, i_item_desc#17]
Arguments: [cs_item_sk#4], [i_item_sk#16], Inner, BuildRight

(17) CometProject
Input [11]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#15, i_item_sk#16, i_item_desc#17]
Arguments: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#15, i_item_desc#17], [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#15, i_item_desc#17]

(18) CometColumnarToRow [codegen id : 7]
Input [10]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#15, i_item_desc#17]

(19) CometScan parquet spark_catalog.default.customer_demographics
Output [2]: [cd_demo_sk#18, cd_marital_status#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_marital_status), IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>

(20) CometColumnarToRow [codegen id : 1]
Input [2]: [cd_demo_sk#18, cd_marital_status#19]

(21) Filter [codegen id : 1]
Input [2]: [cd_demo_sk#18, cd_marital_status#19]
Condition : ((isnotnull(cd_marital_status#19) AND (rpad(cd_marital_status#19, 1,  ) = D)) AND isnotnull(cd_demo_sk#18))

(22) Project [codegen id : 1]
Output [1]: [cd_demo_sk#18]
Input [2]: [cd_demo_sk#18, cd_marital_status#19]

(23) BroadcastExchange
Input [1]: [cd_demo_sk#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(24) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cs_bill_cdemo_sk#2]
Right keys [1]: [cd_demo_sk#18]
Join type: Inner
Join condition: None

(25) Project [codegen id : 7]
Output [9]: [cs_ship_date_sk#1, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#15, i_item_desc#17]
Input [11]: [cs_ship_date_sk#1, cs_bill_cdemo_sk#2, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#15, i_item_desc#17, cd_demo_sk#18]

(26) CometScan parquet spark_catalog.default.household_demographics
Output [2]: [hd_demo_sk#20, hd_buy_potential#21]
Batched: true
Location [not included in comparison]/{warehouse_dir}/household_demographics]
PushedFilters: [IsNotNull(hd_buy_potential), IsNotNull(hd_demo_sk)]
ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>

(27) CometColumnarToRow [codegen id : 2]
Input [2]: [hd_demo_sk#20, hd_buy_potential#21]

(28) Filter [codegen id : 2]
Input [2]: [hd_demo_sk#20, hd_buy_potential#21]
Condition : ((isnotnull(hd_buy_potential#21) AND (rpad(hd_buy_potential#21, 15,  ) = >10000         )) AND isnotnull(hd_demo_sk#20))

(29) Project [codegen id : 2]
Output [1]: [hd_demo_sk#20]
Input [2]: [hd_demo_sk#20, hd_buy_potential#21]

(30) BroadcastExchange
Input [1]: [hd_demo_sk#20]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(31) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cs_bill_hdemo_sk#3]
Right keys [1]: [hd_demo_sk#20]
Join type: Inner
Join condition: None

(32) Project [codegen id : 7]
Output [8]: [cs_ship_date_sk#1, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#15, i_item_desc#17]
Input [10]: [cs_ship_date_sk#1, cs_bill_hdemo_sk#3, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#15, i_item_desc#17, hd_demo_sk#20]

(33) ReusedExchange [Reuses operator id: 72]
Output [3]: [d_date_sk#22, d_date#23, d_week_seq#24]

(34) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cs_sold_date_sk#8]
Right keys [1]: [d_date_sk#22]
Join type: Inner
Join condition: None

(35) Project [codegen id : 7]
Output [9]: [cs_ship_date_sk#1, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, inv_date_sk#13, w_warehouse_name#15, i_item_desc#17, d_date#23, d_week_seq#24]
Input [11]: [cs_ship_date_sk#1, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, cs_sold_date_sk#8, inv_date_sk#13, w_warehouse_name#15, i_item_desc#17, d_date_sk#22, d_date#23, d_week_seq#24]

(36) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#25, d_week_seq#26]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_week_seq:int>

(37) CometFilter
Input [2]: [d_date_sk#25, d_week_seq#26]
Condition : (isnotnull(d_week_seq#26) AND isnotnull(d_date_sk#25))

(38) CometColumnarToRow [codegen id : 4]
Input [2]: [d_date_sk#25, d_week_seq#26]

(39) BroadcastExchange
Input [2]: [d_date_sk#25, d_week_seq#26]
Arguments: HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [plan_id=3]

(40) BroadcastHashJoin [codegen id : 7]
Left keys [2]: [d_week_seq#24, inv_date_sk#13]
Right keys [2]: [d_week_seq#26, d_date_sk#25]
Join type: Inner
Join condition: None

(41) Project [codegen id : 7]
Output [8]: [cs_ship_date_sk#1, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, w_warehouse_name#15, i_item_desc#17, d_date#23, d_week_seq#24]
Input [11]: [cs_ship_date_sk#1, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, inv_date_sk#13, w_warehouse_name#15, i_item_desc#17, d_date#23, d_week_seq#24, d_date_sk#25, d_week_seq#26]

(42) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#27, d_date#28]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(43) CometFilter
Input [2]: [d_date_sk#27, d_date#28]
Condition : (isnotnull(d_date#28) AND isnotnull(d_date_sk#27))

(44) CometColumnarToRow [codegen id : 5]
Input [2]: [d_date_sk#27, d_date#28]

(45) BroadcastExchange
Input [2]: [d_date_sk#27, d_date#28]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=4]

(46) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cs_ship_date_sk#1]
Right keys [1]: [d_date_sk#27]
Join type: Inner
Join condition: (d_date#28 > date_add(d_date#23, 5))

(47) Project [codegen id : 7]
Output [6]: [cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, w_warehouse_name#15, i_item_desc#17, d_week_seq#24]
Input [10]: [cs_ship_date_sk#1, cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, w_warehouse_name#15, i_item_desc#17, d_date#23, d_week_seq#24, d_date_sk#27, d_date#28]

(48) CometScan parquet spark_catalog.default.promotion
Output [1]: [p_promo_sk#29]
Batched: true
Location [not included in comparison]/{warehouse_dir}/promotion]
PushedFilters: [IsNotNull(p_promo_sk)]
ReadSchema: struct<p_promo_sk:int>

(49) CometFilter
Input [1]: [p_promo_sk#29]
Condition : isnotnull(p_promo_sk#29)

(50) CometColumnarToRow [codegen id : 6]
Input [1]: [p_promo_sk#29]

(51) BroadcastExchange
Input [1]: [p_promo_sk#29]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=5]

(52) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cs_promo_sk#5]
Right keys [1]: [p_promo_sk#29]
Join type: LeftOuter
Join condition: None

(53) Project [codegen id : 7]
Output [5]: [cs_item_sk#4, cs_order_number#6, w_warehouse_name#15, i_item_desc#17, d_week_seq#24]
Input [7]: [cs_item_sk#4, cs_promo_sk#5, cs_order_number#6, w_warehouse_name#15, i_item_desc#17, d_week_seq#24, p_promo_sk#29]

(54) CometColumnarExchange
Input [5]: [cs_item_sk#4, cs_order_number#6, w_warehouse_name#15, i_item_desc#17, d_week_seq#24]
Arguments: hashpartitioning(cs_item_sk#4, cs_order_number#6, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=6]

(55) CometSort
Input [5]: [cs_item_sk#4, cs_order_number#6, w_warehouse_name#15, i_item_desc#17, d_week_seq#24]
Arguments: [cs_item_sk#4, cs_order_number#6, w_warehouse_name#15, i_item_desc#17, d_week_seq#24], [cs_item_sk#4 ASC NULLS FIRST, cs_order_number#6 ASC NULLS FIRST]

(56) CometScan parquet spark_catalog.default.catalog_returns
Output [3]: [cr_item_sk#30, cr_order_number#31, cr_returned_date_sk#32]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_returns]
PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)]
ReadSchema: struct<cr_item_sk:int,cr_order_number:int>

(57) CometFilter
Input [3]: [cr_item_sk#30, cr_order_number#31, cr_returned_date_sk#32]
Condition : (isnotnull(cr_item_sk#30) AND isnotnull(cr_order_number#31))

(58) CometProject
Input [3]: [cr_item_sk#30, cr_order_number#31, cr_returned_date_sk#32]
Arguments: [cr_item_sk#30, cr_order_number#31], [cr_item_sk#30, cr_order_number#31]

(59) CometExchange
Input [2]: [cr_item_sk#30, cr_order_number#31]
Arguments: hashpartitioning(cr_item_sk#30, cr_order_number#31, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=7]

(60) CometSort
Input [2]: [cr_item_sk#30, cr_order_number#31]
Arguments: [cr_item_sk#30, cr_order_number#31], [cr_item_sk#30 ASC NULLS FIRST, cr_order_number#31 ASC NULLS FIRST]

(61) CometSortMergeJoin
Left output [5]: [cs_item_sk#4, cs_order_number#6, w_warehouse_name#15, i_item_desc#17, d_week_seq#24]
Right output [2]: [cr_item_sk#30, cr_order_number#31]
Arguments: [cs_item_sk#4, cs_order_number#6], [cr_item_sk#30, cr_order_number#31], LeftOuter

(62) CometProject
Input [7]: [cs_item_sk#4, cs_order_number#6, w_warehouse_name#15, i_item_desc#17, d_week_seq#24, cr_item_sk#30, cr_order_number#31]
Arguments: [w_warehouse_name#15, i_item_desc#17, d_week_seq#24], [w_warehouse_name#15, i_item_desc#17, d_week_seq#24]

(63) CometHashAggregate
Input [3]: [w_warehouse_name#15, i_item_desc#17, d_week_seq#24]
Keys [3]: [i_item_desc#17, w_warehouse_name#15, d_week_seq#24]
Functions [1]: [partial_count(1)]

(64) CometExchange
Input [4]: [i_item_desc#17, w_warehouse_name#15, d_week_seq#24, count#33]
Arguments: hashpartitioning(i_item_desc#17, w_warehouse_name#15, d_week_seq#24, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=8]

(65) CometHashAggregate
Input [4]: [i_item_desc#17, w_warehouse_name#15, d_week_seq#24, count#33]
Keys [3]: [i_item_desc#17, w_warehouse_name#15, d_week_seq#24]
Functions [1]: [count(1)]

(66) CometTakeOrderedAndProject
Input [6]: [i_item_desc#17, w_warehouse_name#15, d_week_seq#24, no_promo#34, promo#35, total_cnt#36]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[total_cnt#36 DESC NULLS LAST,i_item_desc#17 ASC NULLS FIRST,w_warehouse_name#15 ASC NULLS FIRST,d_week_seq#24 ASC NULLS FIRST], output=[i_item_desc#17,w_warehouse_name#15,d_week_seq#24,no_promo#34,promo#35,total_cnt#36]), [i_item_desc#17, w_warehouse_name#15, d_week_seq#24, no_promo#34, promo#35, total_cnt#36], 100, [total_cnt#36 DESC NULLS LAST, i_item_desc#17 ASC NULLS FIRST, w_warehouse_name#15 ASC NULLS FIRST, d_week_seq#24 ASC NULLS FIRST], [i_item_desc#17, w_warehouse_name#15, d_week_seq#24, no_promo#34, promo#35, total_cnt#36]

(67) CometColumnarToRow [codegen id : 8]
Input [6]: [i_item_desc#17, w_warehouse_name#15, d_week_seq#24, no_promo#34, promo#35, total_cnt#36]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = cs_sold_date_sk#8 IN dynamicpruning#9
BroadcastExchange (72)
+- * CometColumnarToRow (71)
   +- CometProject (70)
      +- CometFilter (69)
         +- CometScan parquet spark_catalog.default.date_dim (68)


(68) CometScan parquet spark_catalog.default.date_dim
Output [4]: [d_date_sk#22, d_date#23, d_week_seq#24, d_year#37]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk), IsNotNull(d_week_seq), IsNotNull(d_date)]
ReadSchema: struct<d_date_sk:int,d_date:date,d_week_seq:int,d_year:int>

(69) CometFilter
Input [4]: [d_date_sk#22, d_date#23, d_week_seq#24, d_year#37]
Condition : ((((isnotnull(d_year#37) AND (d_year#37 = 1999)) AND isnotnull(d_date_sk#22)) AND isnotnull(d_week_seq#24)) AND isnotnull(d_date#23))

(70) CometProject
Input [4]: [d_date_sk#22, d_date#23, d_week_seq#24, d_year#37]
Arguments: [d_date_sk#22, d_date#23, d_week_seq#24], [d_date_sk#22, d_date#23, d_week_seq#24]

(71) CometColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#22, d_date#23, d_week_seq#24]

(72) BroadcastExchange
Input [3]: [d_date_sk#22, d_date#23, d_week_seq#24]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=9]


