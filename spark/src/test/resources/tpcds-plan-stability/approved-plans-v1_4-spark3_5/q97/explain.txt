== Physical Plan ==
* ColumnarToRow (23)
+- CometHashAggregate (22)
   +- CometExchange (21)
      +- CometHashAggregate (20)
         +- CometProject (19)
            +- CometHashJoin (18)
               :- CometHashAggregate (10)
               :  +- CometExchange (9)
               :     +- CometHashAggregate (8)
               :        +- CometProject (7)
               :           +- CometBroadcastHashJoin (6)
               :              :- CometScan parquet spark_catalog.default.store_sales (1)
               :              +- CometBroadcastExchange (5)
               :                 +- CometProject (4)
               :                    +- CometFilter (3)
               :                       +- CometScan parquet spark_catalog.default.date_dim (2)
               +- CometHashAggregate (17)
                  +- CometExchange (16)
                     +- CometHashAggregate (15)
                        +- CometProject (14)
                           +- CometBroadcastHashJoin (13)
                              :- CometScan parquet spark_catalog.default.catalog_sales (11)
                              +- ReusedExchange (12)


(1) CometScan parquet spark_catalog.default.store_sales
Output [3]: [ss_item_sk#1, ss_customer_sk#2, ss_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#3), dynamicpruningexpression(ss_sold_date_sk#3 IN dynamicpruning#4)]
ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int>

(2) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#5, d_month_seq#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(3) CometFilter
Input [2]: [d_date_sk#5, d_month_seq#6]
Condition : (((isnotnull(d_month_seq#6) AND (d_month_seq#6 >= 1200)) AND (d_month_seq#6 <= 1211)) AND isnotnull(d_date_sk#5))

(4) CometProject
Input [2]: [d_date_sk#5, d_month_seq#6]
Arguments: [d_date_sk#5], [d_date_sk#5]

(5) CometBroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: [d_date_sk#5]

(6) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#1, ss_customer_sk#2, ss_sold_date_sk#3]
Right output [1]: [d_date_sk#5]
Arguments: [ss_sold_date_sk#3], [d_date_sk#5], Inner, BuildRight

(7) CometProject
Input [4]: [ss_item_sk#1, ss_customer_sk#2, ss_sold_date_sk#3, d_date_sk#5]
Arguments: [ss_item_sk#1, ss_customer_sk#2], [ss_item_sk#1, ss_customer_sk#2]

(8) CometHashAggregate
Input [2]: [ss_item_sk#1, ss_customer_sk#2]
Keys [2]: [ss_customer_sk#2, ss_item_sk#1]
Functions: []

(9) CometExchange
Input [2]: [ss_customer_sk#2, ss_item_sk#1]
Arguments: hashpartitioning(ss_customer_sk#2, ss_item_sk#1, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(10) CometHashAggregate
Input [2]: [ss_customer_sk#2, ss_item_sk#1]
Keys [2]: [ss_customer_sk#2, ss_item_sk#1]
Functions: []

(11) CometScan parquet spark_catalog.default.catalog_sales
Output [3]: [cs_bill_customer_sk#7, cs_item_sk#8, cs_sold_date_sk#9]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#9), dynamicpruningexpression(cs_sold_date_sk#9 IN dynamicpruning#10)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_item_sk:int>

(12) ReusedExchange [Reuses operator id: 5]
Output [1]: [d_date_sk#11]

(13) CometBroadcastHashJoin
Left output [3]: [cs_bill_customer_sk#7, cs_item_sk#8, cs_sold_date_sk#9]
Right output [1]: [d_date_sk#11]
Arguments: [cs_sold_date_sk#9], [d_date_sk#11], Inner, BuildRight

(14) CometProject
Input [4]: [cs_bill_customer_sk#7, cs_item_sk#8, cs_sold_date_sk#9, d_date_sk#11]
Arguments: [cs_bill_customer_sk#7, cs_item_sk#8], [cs_bill_customer_sk#7, cs_item_sk#8]

(15) CometHashAggregate
Input [2]: [cs_bill_customer_sk#7, cs_item_sk#8]
Keys [2]: [cs_bill_customer_sk#7, cs_item_sk#8]
Functions: []

(16) CometExchange
Input [2]: [cs_bill_customer_sk#7, cs_item_sk#8]
Arguments: hashpartitioning(cs_bill_customer_sk#7, cs_item_sk#8, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(17) CometHashAggregate
Input [2]: [cs_bill_customer_sk#7, cs_item_sk#8]
Keys [2]: [cs_bill_customer_sk#7, cs_item_sk#8]
Functions: []

(18) CometHashJoin
Left output [2]: [customer_sk#12, item_sk#13]
Right output [2]: [customer_sk#14, item_sk#15]
Arguments: [customer_sk#12, item_sk#13], [customer_sk#14, item_sk#15], FullOuter, BuildRight

(19) CometProject
Input [4]: [customer_sk#12, item_sk#13, customer_sk#14, item_sk#15]
Arguments: [customer_sk#12, customer_sk#14], [customer_sk#12, customer_sk#14]

(20) CometHashAggregate
Input [2]: [customer_sk#12, customer_sk#14]
Keys: []
Functions [3]: [partial_sum(CASE WHEN (isnotnull(customer_sk#12) AND isnull(customer_sk#14)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (isnull(customer_sk#12) AND isnotnull(customer_sk#14)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (isnotnull(customer_sk#12) AND isnotnull(customer_sk#14)) THEN 1 ELSE 0 END)]

(21) CometExchange
Input [3]: [sum#16, sum#17, sum#18]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(22) CometHashAggregate
Input [3]: [sum#16, sum#17, sum#18]
Keys: []
Functions [3]: [sum(CASE WHEN (isnotnull(customer_sk#12) AND isnull(customer_sk#14)) THEN 1 ELSE 0 END), sum(CASE WHEN (isnull(customer_sk#12) AND isnotnull(customer_sk#14)) THEN 1 ELSE 0 END), sum(CASE WHEN (isnotnull(customer_sk#12) AND isnotnull(customer_sk#14)) THEN 1 ELSE 0 END)]

(23) ColumnarToRow [codegen id : 1]
Input [3]: [store_only#19, catalog_only#20, store_and_catalog#21]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#3 IN dynamicpruning#4
BroadcastExchange (28)
+- * ColumnarToRow (27)
   +- CometProject (26)
      +- CometFilter (25)
         +- CometScan parquet spark_catalog.default.date_dim (24)


(24) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#5, d_month_seq#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(25) CometFilter
Input [2]: [d_date_sk#5, d_month_seq#6]
Condition : (((isnotnull(d_month_seq#6) AND (d_month_seq#6 >= 1200)) AND (d_month_seq#6 <= 1211)) AND isnotnull(d_date_sk#5))

(26) CometProject
Input [2]: [d_date_sk#5, d_month_seq#6]
Arguments: [d_date_sk#5], [d_date_sk#5]

(27) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#5]

(28) BroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]

Subquery:2 Hosting operator id = 11 Hosting Expression = cs_sold_date_sk#9 IN dynamicpruning#4


