== Physical Plan ==
* CometColumnarToRow (107)
+- CometTakeOrderedAndProject (106)
   +- CometProject (105)
      +- CometBroadcastHashJoin (104)
         :- CometProject (88)
         :  +- CometBroadcastHashJoin (87)
         :     :- CometProject (70)
         :     :  +- CometBroadcastHashJoin (69)
         :     :     :- CometProject (53)
         :     :     :  +- CometBroadcastHashJoin (52)
         :     :     :     :- CometBroadcastHashJoin (35)
         :     :     :     :  :- CometFilter (17)
         :     :     :     :  :  +- CometHashAggregate (16)
         :     :     :     :  :     +- CometExchange (15)
         :     :     :     :  :        +- CometHashAggregate (14)
         :     :     :     :  :           +- CometProject (13)
         :     :     :     :  :              +- CometBroadcastHashJoin (12)
         :     :     :     :  :                 :- CometProject (8)
         :     :     :     :  :                 :  +- CometBroadcastHashJoin (7)
         :     :     :     :  :                 :     :- CometProject (3)
         :     :     :     :  :                 :     :  +- CometFilter (2)
         :     :     :     :  :                 :     :     +- CometScan parquet spark_catalog.default.customer (1)
         :     :     :     :  :                 :     +- CometBroadcastExchange (6)
         :     :     :     :  :                 :        +- CometFilter (5)
         :     :     :     :  :                 :           +- CometScan parquet spark_catalog.default.store_sales (4)
         :     :     :     :  :                 +- CometBroadcastExchange (11)
         :     :     :     :  :                    +- CometFilter (10)
         :     :     :     :  :                       +- CometScan parquet spark_catalog.default.date_dim (9)
         :     :     :     :  +- CometBroadcastExchange (34)
         :     :     :     :     +- CometHashAggregate (33)
         :     :     :     :        +- CometExchange (32)
         :     :     :     :           +- CometHashAggregate (31)
         :     :     :     :              +- CometProject (30)
         :     :     :     :                 +- CometBroadcastHashJoin (29)
         :     :     :     :                    :- CometProject (25)
         :     :     :     :                    :  +- CometBroadcastHashJoin (24)
         :     :     :     :                    :     :- CometProject (20)
         :     :     :     :                    :     :  +- CometFilter (19)
         :     :     :     :                    :     :     +- CometScan parquet spark_catalog.default.customer (18)
         :     :     :     :                    :     +- CometBroadcastExchange (23)
         :     :     :     :                    :        +- CometFilter (22)
         :     :     :     :                    :           +- CometScan parquet spark_catalog.default.store_sales (21)
         :     :     :     :                    +- CometBroadcastExchange (28)
         :     :     :     :                       +- CometFilter (27)
         :     :     :     :                          +- CometScan parquet spark_catalog.default.date_dim (26)
         :     :     :     +- CometBroadcastExchange (51)
         :     :     :        +- CometFilter (50)
         :     :     :           +- CometHashAggregate (49)
         :     :     :              +- CometExchange (48)
         :     :     :                 +- CometHashAggregate (47)
         :     :     :                    +- CometProject (46)
         :     :     :                       +- CometBroadcastHashJoin (45)
         :     :     :                          :- CometProject (43)
         :     :     :                          :  +- CometBroadcastHashJoin (42)
         :     :     :                          :     :- CometProject (38)
         :     :     :                          :     :  +- CometFilter (37)
         :     :     :                          :     :     +- CometScan parquet spark_catalog.default.customer (36)
         :     :     :                          :     +- CometBroadcastExchange (41)
         :     :     :                          :        +- CometFilter (40)
         :     :     :                          :           +- CometScan parquet spark_catalog.default.catalog_sales (39)
         :     :     :                          +- ReusedExchange (44)
         :     :     +- CometBroadcastExchange (68)
         :     :        +- CometHashAggregate (67)
         :     :           +- CometExchange (66)
         :     :              +- CometHashAggregate (65)
         :     :                 +- CometProject (64)
         :     :                    +- CometBroadcastHashJoin (63)
         :     :                       :- CometProject (61)
         :     :                       :  +- CometBroadcastHashJoin (60)
         :     :                       :     :- CometProject (56)
         :     :                       :     :  +- CometFilter (55)
         :     :                       :     :     +- CometScan parquet spark_catalog.default.customer (54)
         :     :                       :     +- CometBroadcastExchange (59)
         :     :                       :        +- CometFilter (58)
         :     :                       :           +- CometScan parquet spark_catalog.default.catalog_sales (57)
         :     :                       +- ReusedExchange (62)
         :     +- CometBroadcastExchange (86)
         :        +- CometFilter (85)
         :           +- CometHashAggregate (84)
         :              +- CometExchange (83)
         :                 +- CometHashAggregate (82)
         :                    +- CometProject (81)
         :                       +- CometBroadcastHashJoin (80)
         :                          :- CometProject (78)
         :                          :  +- CometBroadcastHashJoin (77)
         :                          :     :- CometProject (73)
         :                          :     :  +- CometFilter (72)
         :                          :     :     +- CometScan parquet spark_catalog.default.customer (71)
         :                          :     +- CometBroadcastExchange (76)
         :                          :        +- CometFilter (75)
         :                          :           +- CometScan parquet spark_catalog.default.web_sales (74)
         :                          +- ReusedExchange (79)
         +- CometBroadcastExchange (103)
            +- CometHashAggregate (102)
               +- CometExchange (101)
                  +- CometHashAggregate (100)
                     +- CometProject (99)
                        +- CometBroadcastHashJoin (98)
                           :- CometProject (96)
                           :  +- CometBroadcastHashJoin (95)
                           :     :- CometProject (91)
                           :     :  +- CometFilter (90)
                           :     :     +- CometScan parquet spark_catalog.default.customer (89)
                           :     +- CometBroadcastExchange (94)
                           :        +- CometFilter (93)
                           :           +- CometScan parquet spark_catalog.default.web_sales (92)
                           +- ReusedExchange (97)


(1) CometScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(2) CometFilter
Input [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Condition : (isnotnull(c_customer_sk#1) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#2, 16, true, false, true)))

(3) CometProject
Input [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Arguments: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14], [c_customer_sk#1, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#2, 16, true, false, true) AS c_customer_id#9, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#3, 20, true, false, true) AS c_first_name#10, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#4, 30, true, false, true) AS c_last_name#11, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#5, 1, true, false, true) AS c_preferred_cust_flag#12, c_birth_country#6, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#7, 13, true, false, true) AS c_login#13, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#8, 50, true, false, true) AS c_email_address#14]

(4) CometScan parquet spark_catalog.default.store_sales
Output [6]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#20), dynamicpruningexpression(ss_sold_date_sk#20 IN dynamicpruning#21)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2)>

(5) CometFilter
Input [6]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Condition : isnotnull(ss_customer_sk#15)

(6) CometBroadcastExchange
Input [6]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Arguments: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]

(7) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14]
Right output [6]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Arguments: [c_customer_sk#1], [ss_customer_sk#15], Inner, BuildRight

(8) CometProject
Input [14]: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]

(9) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#22, d_year#23]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(10) CometFilter
Input [2]: [d_date_sk#22, d_year#23]
Condition : ((isnotnull(d_year#23) AND (d_year#23 = 2001)) AND isnotnull(d_date_sk#22))

(11) CometBroadcastExchange
Input [2]: [d_date_sk#22, d_year#23]
Arguments: [d_date_sk#22, d_year#23]

(12) CometBroadcastHashJoin
Left output [12]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Right output [2]: [d_date_sk#22, d_year#23]
Arguments: [ss_sold_date_sk#20], [d_date_sk#22], Inner, BuildRight

(13) CometProject
Input [14]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20, d_date_sk#22, d_year#23]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, d_year#23], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, d_year#23]

(14) CometHashAggregate
Input [12]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, d_year#23]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#23]
Functions [1]: [partial_sum(((((ss_ext_list_price#19 - ss_ext_wholesale_cost#18) - ss_ext_discount_amt#16) + ss_ext_sales_price#17) / 2))]

(15) CometExchange
Input [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#23, sum#24, isEmpty#25]
Arguments: hashpartitioning(c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#23, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(16) CometHashAggregate
Input [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#23, sum#24, isEmpty#25]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#23]
Functions [1]: [sum(((((ss_ext_list_price#19 - ss_ext_wholesale_cost#18) - ss_ext_discount_amt#16) + ss_ext_sales_price#17) / 2))]

(17) CometFilter
Input [2]: [customer_id#26, year_total#27]
Condition : (isnotnull(year_total#27) AND (year_total#27 > 0.000000))

(18) CometScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#28, c_customer_id#29, c_first_name#30, c_last_name#31, c_preferred_cust_flag#32, c_birth_country#33, c_login#34, c_email_address#35]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(19) CometFilter
Input [8]: [c_customer_sk#28, c_customer_id#29, c_first_name#30, c_last_name#31, c_preferred_cust_flag#32, c_birth_country#33, c_login#34, c_email_address#35]
Condition : (isnotnull(c_customer_sk#28) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#29, 16, true, false, true)))

(20) CometProject
Input [8]: [c_customer_sk#28, c_customer_id#29, c_first_name#30, c_last_name#31, c_preferred_cust_flag#32, c_birth_country#33, c_login#34, c_email_address#35]
Arguments: [c_customer_sk#28, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14], [c_customer_sk#28, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#29, 16, true, false, true) AS c_customer_id#9, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#30, 20, true, false, true) AS c_first_name#10, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#31, 30, true, false, true) AS c_last_name#11, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#32, 1, true, false, true) AS c_preferred_cust_flag#12, c_birth_country#33, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#34, 13, true, false, true) AS c_login#13, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#35, 50, true, false, true) AS c_email_address#14]

(21) CometScan parquet spark_catalog.default.store_sales
Output [6]: [ss_customer_sk#36, ss_ext_discount_amt#37, ss_ext_sales_price#38, ss_ext_wholesale_cost#39, ss_ext_list_price#40, ss_sold_date_sk#41]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#41), dynamicpruningexpression(ss_sold_date_sk#41 IN dynamicpruning#42)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2)>

(22) CometFilter
Input [6]: [ss_customer_sk#36, ss_ext_discount_amt#37, ss_ext_sales_price#38, ss_ext_wholesale_cost#39, ss_ext_list_price#40, ss_sold_date_sk#41]
Condition : isnotnull(ss_customer_sk#36)

(23) CometBroadcastExchange
Input [6]: [ss_customer_sk#36, ss_ext_discount_amt#37, ss_ext_sales_price#38, ss_ext_wholesale_cost#39, ss_ext_list_price#40, ss_sold_date_sk#41]
Arguments: [ss_customer_sk#36, ss_ext_discount_amt#37, ss_ext_sales_price#38, ss_ext_wholesale_cost#39, ss_ext_list_price#40, ss_sold_date_sk#41]

(24) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#28, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14]
Right output [6]: [ss_customer_sk#36, ss_ext_discount_amt#37, ss_ext_sales_price#38, ss_ext_wholesale_cost#39, ss_ext_list_price#40, ss_sold_date_sk#41]
Arguments: [c_customer_sk#28], [ss_customer_sk#36], Inner, BuildRight

(25) CometProject
Input [14]: [c_customer_sk#28, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14, ss_customer_sk#36, ss_ext_discount_amt#37, ss_ext_sales_price#38, ss_ext_wholesale_cost#39, ss_ext_list_price#40, ss_sold_date_sk#41]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14, ss_ext_discount_amt#37, ss_ext_sales_price#38, ss_ext_wholesale_cost#39, ss_ext_list_price#40, ss_sold_date_sk#41], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14, ss_ext_discount_amt#37, ss_ext_sales_price#38, ss_ext_wholesale_cost#39, ss_ext_list_price#40, ss_sold_date_sk#41]

(26) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#43, d_year#44]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(27) CometFilter
Input [2]: [d_date_sk#43, d_year#44]
Condition : ((isnotnull(d_year#44) AND (d_year#44 = 2002)) AND isnotnull(d_date_sk#43))

(28) CometBroadcastExchange
Input [2]: [d_date_sk#43, d_year#44]
Arguments: [d_date_sk#43, d_year#44]

(29) CometBroadcastHashJoin
Left output [12]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14, ss_ext_discount_amt#37, ss_ext_sales_price#38, ss_ext_wholesale_cost#39, ss_ext_list_price#40, ss_sold_date_sk#41]
Right output [2]: [d_date_sk#43, d_year#44]
Arguments: [ss_sold_date_sk#41], [d_date_sk#43], Inner, BuildRight

(30) CometProject
Input [14]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14, ss_ext_discount_amt#37, ss_ext_sales_price#38, ss_ext_wholesale_cost#39, ss_ext_list_price#40, ss_sold_date_sk#41, d_date_sk#43, d_year#44]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14, ss_ext_discount_amt#37, ss_ext_sales_price#38, ss_ext_wholesale_cost#39, ss_ext_list_price#40, d_year#44], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14, ss_ext_discount_amt#37, ss_ext_sales_price#38, ss_ext_wholesale_cost#39, ss_ext_list_price#40, d_year#44]

(31) CometHashAggregate
Input [12]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14, ss_ext_discount_amt#37, ss_ext_sales_price#38, ss_ext_wholesale_cost#39, ss_ext_list_price#40, d_year#44]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14, d_year#44]
Functions [1]: [partial_sum(((((ss_ext_list_price#40 - ss_ext_wholesale_cost#39) - ss_ext_discount_amt#37) + ss_ext_sales_price#38) / 2))]

(32) CometExchange
Input [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14, d_year#44, sum#45, isEmpty#46]
Arguments: hashpartitioning(c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14, d_year#44, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(33) CometHashAggregate
Input [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14, d_year#44, sum#45, isEmpty#46]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#33, c_login#13, c_email_address#14, d_year#44]
Functions [1]: [sum(((((ss_ext_list_price#40 - ss_ext_wholesale_cost#39) - ss_ext_discount_amt#37) + ss_ext_sales_price#38) / 2))]

(34) CometBroadcastExchange
Input [8]: [customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#54]
Arguments: [customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#54]

(35) CometBroadcastHashJoin
Left output [2]: [customer_id#26, year_total#27]
Right output [8]: [customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#54]
Arguments: [customer_id#26], [customer_id#47], Inner, BuildRight

(36) CometScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#55, c_customer_id#56, c_first_name#57, c_last_name#58, c_preferred_cust_flag#59, c_birth_country#60, c_login#61, c_email_address#62]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(37) CometFilter
Input [8]: [c_customer_sk#55, c_customer_id#56, c_first_name#57, c_last_name#58, c_preferred_cust_flag#59, c_birth_country#60, c_login#61, c_email_address#62]
Condition : (isnotnull(c_customer_sk#55) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#56, 16, true, false, true)))

(38) CometProject
Input [8]: [c_customer_sk#55, c_customer_id#56, c_first_name#57, c_last_name#58, c_preferred_cust_flag#59, c_birth_country#60, c_login#61, c_email_address#62]
Arguments: [c_customer_sk#55, c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68], [c_customer_sk#55, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#56, 16, true, false, true) AS c_customer_id#63, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#57, 20, true, false, true) AS c_first_name#64, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#58, 30, true, false, true) AS c_last_name#65, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#59, 1, true, false, true) AS c_preferred_cust_flag#66, c_birth_country#60, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#61, 13, true, false, true) AS c_login#67, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#62, 50, true, false, true) AS c_email_address#68]

(39) CometScan parquet spark_catalog.default.catalog_sales
Output [6]: [cs_bill_customer_sk#69, cs_ext_discount_amt#70, cs_ext_sales_price#71, cs_ext_wholesale_cost#72, cs_ext_list_price#73, cs_sold_date_sk#74]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#74), dynamicpruningexpression(cs_sold_date_sk#74 IN dynamicpruning#75)]
PushedFilters: [IsNotNull(cs_bill_customer_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2)>

(40) CometFilter
Input [6]: [cs_bill_customer_sk#69, cs_ext_discount_amt#70, cs_ext_sales_price#71, cs_ext_wholesale_cost#72, cs_ext_list_price#73, cs_sold_date_sk#74]
Condition : isnotnull(cs_bill_customer_sk#69)

(41) CometBroadcastExchange
Input [6]: [cs_bill_customer_sk#69, cs_ext_discount_amt#70, cs_ext_sales_price#71, cs_ext_wholesale_cost#72, cs_ext_list_price#73, cs_sold_date_sk#74]
Arguments: [cs_bill_customer_sk#69, cs_ext_discount_amt#70, cs_ext_sales_price#71, cs_ext_wholesale_cost#72, cs_ext_list_price#73, cs_sold_date_sk#74]

(42) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#55, c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68]
Right output [6]: [cs_bill_customer_sk#69, cs_ext_discount_amt#70, cs_ext_sales_price#71, cs_ext_wholesale_cost#72, cs_ext_list_price#73, cs_sold_date_sk#74]
Arguments: [c_customer_sk#55], [cs_bill_customer_sk#69], Inner, BuildRight

(43) CometProject
Input [14]: [c_customer_sk#55, c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68, cs_bill_customer_sk#69, cs_ext_discount_amt#70, cs_ext_sales_price#71, cs_ext_wholesale_cost#72, cs_ext_list_price#73, cs_sold_date_sk#74]
Arguments: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68, cs_ext_discount_amt#70, cs_ext_sales_price#71, cs_ext_wholesale_cost#72, cs_ext_list_price#73, cs_sold_date_sk#74], [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68, cs_ext_discount_amt#70, cs_ext_sales_price#71, cs_ext_wholesale_cost#72, cs_ext_list_price#73, cs_sold_date_sk#74]

(44) ReusedExchange [Reuses operator id: 11]
Output [2]: [d_date_sk#76, d_year#77]

(45) CometBroadcastHashJoin
Left output [12]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68, cs_ext_discount_amt#70, cs_ext_sales_price#71, cs_ext_wholesale_cost#72, cs_ext_list_price#73, cs_sold_date_sk#74]
Right output [2]: [d_date_sk#76, d_year#77]
Arguments: [cs_sold_date_sk#74], [d_date_sk#76], Inner, BuildRight

(46) CometProject
Input [14]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68, cs_ext_discount_amt#70, cs_ext_sales_price#71, cs_ext_wholesale_cost#72, cs_ext_list_price#73, cs_sold_date_sk#74, d_date_sk#76, d_year#77]
Arguments: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68, cs_ext_discount_amt#70, cs_ext_sales_price#71, cs_ext_wholesale_cost#72, cs_ext_list_price#73, d_year#77], [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68, cs_ext_discount_amt#70, cs_ext_sales_price#71, cs_ext_wholesale_cost#72, cs_ext_list_price#73, d_year#77]

(47) CometHashAggregate
Input [12]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68, cs_ext_discount_amt#70, cs_ext_sales_price#71, cs_ext_wholesale_cost#72, cs_ext_list_price#73, d_year#77]
Keys [8]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68, d_year#77]
Functions [1]: [partial_sum(((((cs_ext_list_price#73 - cs_ext_wholesale_cost#72) - cs_ext_discount_amt#70) + cs_ext_sales_price#71) / 2))]

(48) CometExchange
Input [10]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68, d_year#77, sum#78, isEmpty#79]
Arguments: hashpartitioning(c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68, d_year#77, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(49) CometHashAggregate
Input [10]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68, d_year#77, sum#78, isEmpty#79]
Keys [8]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#60, c_login#67, c_email_address#68, d_year#77]
Functions [1]: [sum(((((cs_ext_list_price#73 - cs_ext_wholesale_cost#72) - cs_ext_discount_amt#70) + cs_ext_sales_price#71) / 2))]

(50) CometFilter
Input [2]: [customer_id#80, year_total#81]
Condition : (isnotnull(year_total#81) AND (year_total#81 > 0.000000))

(51) CometBroadcastExchange
Input [2]: [customer_id#80, year_total#81]
Arguments: [customer_id#80, year_total#81]

(52) CometBroadcastHashJoin
Left output [10]: [customer_id#26, year_total#27, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#54]
Right output [2]: [customer_id#80, year_total#81]
Arguments: [customer_id#26], [customer_id#80], Inner, BuildRight

(53) CometProject
Input [12]: [customer_id#26, year_total#27, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#54, customer_id#80, year_total#81]
Arguments: [customer_id#26, year_total#27, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#54, year_total#81], [customer_id#26, year_total#27, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#54, year_total#81]

(54) CometScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#82, c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#87, c_login#88, c_email_address#89]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(55) CometFilter
Input [8]: [c_customer_sk#82, c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#87, c_login#88, c_email_address#89]
Condition : (isnotnull(c_customer_sk#82) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#83, 16, true, false, true)))

(56) CometProject
Input [8]: [c_customer_sk#82, c_customer_id#83, c_first_name#84, c_last_name#85, c_preferred_cust_flag#86, c_birth_country#87, c_login#88, c_email_address#89]
Arguments: [c_customer_sk#82, c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68], [c_customer_sk#82, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#83, 16, true, false, true) AS c_customer_id#63, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#84, 20, true, false, true) AS c_first_name#64, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#85, 30, true, false, true) AS c_last_name#65, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#86, 1, true, false, true) AS c_preferred_cust_flag#66, c_birth_country#87, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#88, 13, true, false, true) AS c_login#67, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#89, 50, true, false, true) AS c_email_address#68]

(57) CometScan parquet spark_catalog.default.catalog_sales
Output [6]: [cs_bill_customer_sk#90, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, cs_ext_list_price#94, cs_sold_date_sk#95]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#95), dynamicpruningexpression(cs_sold_date_sk#95 IN dynamicpruning#96)]
PushedFilters: [IsNotNull(cs_bill_customer_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2)>

(58) CometFilter
Input [6]: [cs_bill_customer_sk#90, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, cs_ext_list_price#94, cs_sold_date_sk#95]
Condition : isnotnull(cs_bill_customer_sk#90)

(59) CometBroadcastExchange
Input [6]: [cs_bill_customer_sk#90, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, cs_ext_list_price#94, cs_sold_date_sk#95]
Arguments: [cs_bill_customer_sk#90, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, cs_ext_list_price#94, cs_sold_date_sk#95]

(60) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#82, c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68]
Right output [6]: [cs_bill_customer_sk#90, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, cs_ext_list_price#94, cs_sold_date_sk#95]
Arguments: [c_customer_sk#82], [cs_bill_customer_sk#90], Inner, BuildRight

(61) CometProject
Input [14]: [c_customer_sk#82, c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68, cs_bill_customer_sk#90, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, cs_ext_list_price#94, cs_sold_date_sk#95]
Arguments: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, cs_ext_list_price#94, cs_sold_date_sk#95], [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, cs_ext_list_price#94, cs_sold_date_sk#95]

(62) ReusedExchange [Reuses operator id: 28]
Output [2]: [d_date_sk#97, d_year#98]

(63) CometBroadcastHashJoin
Left output [12]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, cs_ext_list_price#94, cs_sold_date_sk#95]
Right output [2]: [d_date_sk#97, d_year#98]
Arguments: [cs_sold_date_sk#95], [d_date_sk#97], Inner, BuildRight

(64) CometProject
Input [14]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, cs_ext_list_price#94, cs_sold_date_sk#95, d_date_sk#97, d_year#98]
Arguments: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, cs_ext_list_price#94, d_year#98], [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, cs_ext_list_price#94, d_year#98]

(65) CometHashAggregate
Input [12]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68, cs_ext_discount_amt#91, cs_ext_sales_price#92, cs_ext_wholesale_cost#93, cs_ext_list_price#94, d_year#98]
Keys [8]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68, d_year#98]
Functions [1]: [partial_sum(((((cs_ext_list_price#94 - cs_ext_wholesale_cost#93) - cs_ext_discount_amt#91) + cs_ext_sales_price#92) / 2))]

(66) CometExchange
Input [10]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68, d_year#98, sum#99, isEmpty#100]
Arguments: hashpartitioning(c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68, d_year#98, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(67) CometHashAggregate
Input [10]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68, d_year#98, sum#99, isEmpty#100]
Keys [8]: [c_customer_id#63, c_first_name#64, c_last_name#65, c_preferred_cust_flag#66, c_birth_country#87, c_login#67, c_email_address#68, d_year#98]
Functions [1]: [sum(((((cs_ext_list_price#94 - cs_ext_wholesale_cost#93) - cs_ext_discount_amt#91) + cs_ext_sales_price#92) / 2))]

(68) CometBroadcastExchange
Input [2]: [customer_id#101, year_total#102]
Arguments: [customer_id#101, year_total#102]

(69) CometBroadcastHashJoin
Left output [11]: [customer_id#26, year_total#27, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#54, year_total#81]
Right output [2]: [customer_id#101, year_total#102]
Arguments: [customer_id#26], [customer_id#101], Inner, (CASE WHEN (year_total#81 > 0.000000) THEN (year_total#102 / year_total#81) END > CASE WHEN (year_total#27 > 0.000000) THEN (year_total#54 / year_total#27) END), BuildRight

(70) CometProject
Input [13]: [customer_id#26, year_total#27, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#54, year_total#81, customer_id#101, year_total#102]
Arguments: [customer_id#26, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#81, year_total#102], [customer_id#26, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#81, year_total#102]

(71) CometScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#103, c_customer_id#104, c_first_name#105, c_last_name#106, c_preferred_cust_flag#107, c_birth_country#108, c_login#109, c_email_address#110]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(72) CometFilter
Input [8]: [c_customer_sk#103, c_customer_id#104, c_first_name#105, c_last_name#106, c_preferred_cust_flag#107, c_birth_country#108, c_login#109, c_email_address#110]
Condition : (isnotnull(c_customer_sk#103) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#104, 16, true, false, true)))

(73) CometProject
Input [8]: [c_customer_sk#103, c_customer_id#104, c_first_name#105, c_last_name#106, c_preferred_cust_flag#107, c_birth_country#108, c_login#109, c_email_address#110]
Arguments: [c_customer_sk#103, c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116], [c_customer_sk#103, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#104, 16, true, false, true) AS c_customer_id#111, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#105, 20, true, false, true) AS c_first_name#112, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#106, 30, true, false, true) AS c_last_name#113, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#107, 1, true, false, true) AS c_preferred_cust_flag#114, c_birth_country#108, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#109, 13, true, false, true) AS c_login#115, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#110, 50, true, false, true) AS c_email_address#116]

(74) CometScan parquet spark_catalog.default.web_sales
Output [6]: [ws_bill_customer_sk#117, ws_ext_discount_amt#118, ws_ext_sales_price#119, ws_ext_wholesale_cost#120, ws_ext_list_price#121, ws_sold_date_sk#122]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#122), dynamicpruningexpression(ws_sold_date_sk#122 IN dynamicpruning#123)]
PushedFilters: [IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2)>

(75) CometFilter
Input [6]: [ws_bill_customer_sk#117, ws_ext_discount_amt#118, ws_ext_sales_price#119, ws_ext_wholesale_cost#120, ws_ext_list_price#121, ws_sold_date_sk#122]
Condition : isnotnull(ws_bill_customer_sk#117)

(76) CometBroadcastExchange
Input [6]: [ws_bill_customer_sk#117, ws_ext_discount_amt#118, ws_ext_sales_price#119, ws_ext_wholesale_cost#120, ws_ext_list_price#121, ws_sold_date_sk#122]
Arguments: [ws_bill_customer_sk#117, ws_ext_discount_amt#118, ws_ext_sales_price#119, ws_ext_wholesale_cost#120, ws_ext_list_price#121, ws_sold_date_sk#122]

(77) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#103, c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116]
Right output [6]: [ws_bill_customer_sk#117, ws_ext_discount_amt#118, ws_ext_sales_price#119, ws_ext_wholesale_cost#120, ws_ext_list_price#121, ws_sold_date_sk#122]
Arguments: [c_customer_sk#103], [ws_bill_customer_sk#117], Inner, BuildRight

(78) CometProject
Input [14]: [c_customer_sk#103, c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116, ws_bill_customer_sk#117, ws_ext_discount_amt#118, ws_ext_sales_price#119, ws_ext_wholesale_cost#120, ws_ext_list_price#121, ws_sold_date_sk#122]
Arguments: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116, ws_ext_discount_amt#118, ws_ext_sales_price#119, ws_ext_wholesale_cost#120, ws_ext_list_price#121, ws_sold_date_sk#122], [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116, ws_ext_discount_amt#118, ws_ext_sales_price#119, ws_ext_wholesale_cost#120, ws_ext_list_price#121, ws_sold_date_sk#122]

(79) ReusedExchange [Reuses operator id: 11]
Output [2]: [d_date_sk#124, d_year#125]

(80) CometBroadcastHashJoin
Left output [12]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116, ws_ext_discount_amt#118, ws_ext_sales_price#119, ws_ext_wholesale_cost#120, ws_ext_list_price#121, ws_sold_date_sk#122]
Right output [2]: [d_date_sk#124, d_year#125]
Arguments: [ws_sold_date_sk#122], [d_date_sk#124], Inner, BuildRight

(81) CometProject
Input [14]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116, ws_ext_discount_amt#118, ws_ext_sales_price#119, ws_ext_wholesale_cost#120, ws_ext_list_price#121, ws_sold_date_sk#122, d_date_sk#124, d_year#125]
Arguments: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116, ws_ext_discount_amt#118, ws_ext_sales_price#119, ws_ext_wholesale_cost#120, ws_ext_list_price#121, d_year#125], [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116, ws_ext_discount_amt#118, ws_ext_sales_price#119, ws_ext_wholesale_cost#120, ws_ext_list_price#121, d_year#125]

(82) CometHashAggregate
Input [12]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116, ws_ext_discount_amt#118, ws_ext_sales_price#119, ws_ext_wholesale_cost#120, ws_ext_list_price#121, d_year#125]
Keys [8]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116, d_year#125]
Functions [1]: [partial_sum(((((ws_ext_list_price#121 - ws_ext_wholesale_cost#120) - ws_ext_discount_amt#118) + ws_ext_sales_price#119) / 2))]

(83) CometExchange
Input [10]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116, d_year#125, sum#126, isEmpty#127]
Arguments: hashpartitioning(c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116, d_year#125, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(84) CometHashAggregate
Input [10]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116, d_year#125, sum#126, isEmpty#127]
Keys [8]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#108, c_login#115, c_email_address#116, d_year#125]
Functions [1]: [sum(((((ws_ext_list_price#121 - ws_ext_wholesale_cost#120) - ws_ext_discount_amt#118) + ws_ext_sales_price#119) / 2))]

(85) CometFilter
Input [2]: [customer_id#128, year_total#129]
Condition : (isnotnull(year_total#129) AND (year_total#129 > 0.000000))

(86) CometBroadcastExchange
Input [2]: [customer_id#128, year_total#129]
Arguments: [customer_id#128, year_total#129]

(87) CometBroadcastHashJoin
Left output [10]: [customer_id#26, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#81, year_total#102]
Right output [2]: [customer_id#128, year_total#129]
Arguments: [customer_id#26], [customer_id#128], Inner, BuildRight

(88) CometProject
Input [12]: [customer_id#26, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#81, year_total#102, customer_id#128, year_total#129]
Arguments: [customer_id#26, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#81, year_total#102, year_total#129], [customer_id#26, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#81, year_total#102, year_total#129]

(89) CometScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#130, c_customer_id#131, c_first_name#132, c_last_name#133, c_preferred_cust_flag#134, c_birth_country#135, c_login#136, c_email_address#137]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(90) CometFilter
Input [8]: [c_customer_sk#130, c_customer_id#131, c_first_name#132, c_last_name#133, c_preferred_cust_flag#134, c_birth_country#135, c_login#136, c_email_address#137]
Condition : (isnotnull(c_customer_sk#130) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#131, 16, true, false, true)))

(91) CometProject
Input [8]: [c_customer_sk#130, c_customer_id#131, c_first_name#132, c_last_name#133, c_preferred_cust_flag#134, c_birth_country#135, c_login#136, c_email_address#137]
Arguments: [c_customer_sk#130, c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116], [c_customer_sk#130, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#131, 16, true, false, true) AS c_customer_id#111, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#132, 20, true, false, true) AS c_first_name#112, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#133, 30, true, false, true) AS c_last_name#113, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#134, 1, true, false, true) AS c_preferred_cust_flag#114, c_birth_country#135, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#136, 13, true, false, true) AS c_login#115, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#137, 50, true, false, true) AS c_email_address#116]

(92) CometScan parquet spark_catalog.default.web_sales
Output [6]: [ws_bill_customer_sk#138, ws_ext_discount_amt#139, ws_ext_sales_price#140, ws_ext_wholesale_cost#141, ws_ext_list_price#142, ws_sold_date_sk#143]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#143), dynamicpruningexpression(ws_sold_date_sk#143 IN dynamicpruning#144)]
PushedFilters: [IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2)>

(93) CometFilter
Input [6]: [ws_bill_customer_sk#138, ws_ext_discount_amt#139, ws_ext_sales_price#140, ws_ext_wholesale_cost#141, ws_ext_list_price#142, ws_sold_date_sk#143]
Condition : isnotnull(ws_bill_customer_sk#138)

(94) CometBroadcastExchange
Input [6]: [ws_bill_customer_sk#138, ws_ext_discount_amt#139, ws_ext_sales_price#140, ws_ext_wholesale_cost#141, ws_ext_list_price#142, ws_sold_date_sk#143]
Arguments: [ws_bill_customer_sk#138, ws_ext_discount_amt#139, ws_ext_sales_price#140, ws_ext_wholesale_cost#141, ws_ext_list_price#142, ws_sold_date_sk#143]

(95) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#130, c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116]
Right output [6]: [ws_bill_customer_sk#138, ws_ext_discount_amt#139, ws_ext_sales_price#140, ws_ext_wholesale_cost#141, ws_ext_list_price#142, ws_sold_date_sk#143]
Arguments: [c_customer_sk#130], [ws_bill_customer_sk#138], Inner, BuildRight

(96) CometProject
Input [14]: [c_customer_sk#130, c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116, ws_bill_customer_sk#138, ws_ext_discount_amt#139, ws_ext_sales_price#140, ws_ext_wholesale_cost#141, ws_ext_list_price#142, ws_sold_date_sk#143]
Arguments: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116, ws_ext_discount_amt#139, ws_ext_sales_price#140, ws_ext_wholesale_cost#141, ws_ext_list_price#142, ws_sold_date_sk#143], [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116, ws_ext_discount_amt#139, ws_ext_sales_price#140, ws_ext_wholesale_cost#141, ws_ext_list_price#142, ws_sold_date_sk#143]

(97) ReusedExchange [Reuses operator id: 28]
Output [2]: [d_date_sk#145, d_year#146]

(98) CometBroadcastHashJoin
Left output [12]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116, ws_ext_discount_amt#139, ws_ext_sales_price#140, ws_ext_wholesale_cost#141, ws_ext_list_price#142, ws_sold_date_sk#143]
Right output [2]: [d_date_sk#145, d_year#146]
Arguments: [ws_sold_date_sk#143], [d_date_sk#145], Inner, BuildRight

(99) CometProject
Input [14]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116, ws_ext_discount_amt#139, ws_ext_sales_price#140, ws_ext_wholesale_cost#141, ws_ext_list_price#142, ws_sold_date_sk#143, d_date_sk#145, d_year#146]
Arguments: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116, ws_ext_discount_amt#139, ws_ext_sales_price#140, ws_ext_wholesale_cost#141, ws_ext_list_price#142, d_year#146], [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116, ws_ext_discount_amt#139, ws_ext_sales_price#140, ws_ext_wholesale_cost#141, ws_ext_list_price#142, d_year#146]

(100) CometHashAggregate
Input [12]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116, ws_ext_discount_amt#139, ws_ext_sales_price#140, ws_ext_wholesale_cost#141, ws_ext_list_price#142, d_year#146]
Keys [8]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116, d_year#146]
Functions [1]: [partial_sum(((((ws_ext_list_price#142 - ws_ext_wholesale_cost#141) - ws_ext_discount_amt#139) + ws_ext_sales_price#140) / 2))]

(101) CometExchange
Input [10]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116, d_year#146, sum#147, isEmpty#148]
Arguments: hashpartitioning(c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116, d_year#146, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(102) CometHashAggregate
Input [10]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116, d_year#146, sum#147, isEmpty#148]
Keys [8]: [c_customer_id#111, c_first_name#112, c_last_name#113, c_preferred_cust_flag#114, c_birth_country#135, c_login#115, c_email_address#116, d_year#146]
Functions [1]: [sum(((((ws_ext_list_price#142 - ws_ext_wholesale_cost#141) - ws_ext_discount_amt#139) + ws_ext_sales_price#140) / 2))]

(103) CometBroadcastExchange
Input [2]: [customer_id#149, year_total#150]
Arguments: [customer_id#149, year_total#150]

(104) CometBroadcastHashJoin
Left output [11]: [customer_id#26, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#81, year_total#102, year_total#129]
Right output [2]: [customer_id#149, year_total#150]
Arguments: [customer_id#26], [customer_id#149], Inner, (CASE WHEN (year_total#81 > 0.000000) THEN (year_total#102 / year_total#81) END > CASE WHEN (year_total#129 > 0.000000) THEN (year_total#150 / year_total#129) END), BuildRight

(105) CometProject
Input [13]: [customer_id#26, customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53, year_total#81, year_total#102, year_total#129, customer_id#149, year_total#150]
Arguments: [customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53], [customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53]

(106) CometTakeOrderedAndProject
Input [7]: [customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[customer_id#47 ASC NULLS FIRST,customer_first_name#48 ASC NULLS FIRST,customer_last_name#49 ASC NULLS FIRST,customer_preferred_cust_flag#50 ASC NULLS FIRST,customer_birth_country#51 ASC NULLS FIRST,customer_login#52 ASC NULLS FIRST,customer_email_address#53 ASC NULLS FIRST], output=[customer_id#47,customer_first_name#48,customer_last_name#49,customer_preferred_cust_flag#50,customer_birth_country#51,customer_login#52,customer_email_address#53]), [customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53], 100, [customer_id#47 ASC NULLS FIRST, customer_first_name#48 ASC NULLS FIRST, customer_last_name#49 ASC NULLS FIRST, customer_preferred_cust_flag#50 ASC NULLS FIRST, customer_birth_country#51 ASC NULLS FIRST, customer_login#52 ASC NULLS FIRST, customer_email_address#53 ASC NULLS FIRST], [customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53]

(107) CometColumnarToRow [codegen id : 1]
Input [7]: [customer_id#47, customer_first_name#48, customer_last_name#49, customer_preferred_cust_flag#50, customer_birth_country#51, customer_login#52, customer_email_address#53]

===== Subqueries =====

Subquery:1 Hosting operator id = 4 Hosting Expression = ss_sold_date_sk#20 IN dynamicpruning#21
BroadcastExchange (111)
+- * CometColumnarToRow (110)
   +- CometFilter (109)
      +- CometScan parquet spark_catalog.default.date_dim (108)


(108) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#22, d_year#23]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(109) CometFilter
Input [2]: [d_date_sk#22, d_year#23]
Condition : ((isnotnull(d_year#23) AND (d_year#23 = 2001)) AND isnotnull(d_date_sk#22))

(110) CometColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#22, d_year#23]

(111) BroadcastExchange
Input [2]: [d_date_sk#22, d_year#23]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=7]

Subquery:2 Hosting operator id = 21 Hosting Expression = ss_sold_date_sk#41 IN dynamicpruning#42
BroadcastExchange (115)
+- * CometColumnarToRow (114)
   +- CometFilter (113)
      +- CometScan parquet spark_catalog.default.date_dim (112)


(112) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#43, d_year#44]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(113) CometFilter
Input [2]: [d_date_sk#43, d_year#44]
Condition : ((isnotnull(d_year#44) AND (d_year#44 = 2002)) AND isnotnull(d_date_sk#43))

(114) CometColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#43, d_year#44]

(115) BroadcastExchange
Input [2]: [d_date_sk#43, d_year#44]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=8]

Subquery:3 Hosting operator id = 39 Hosting Expression = cs_sold_date_sk#74 IN dynamicpruning#21

Subquery:4 Hosting operator id = 57 Hosting Expression = cs_sold_date_sk#95 IN dynamicpruning#42

Subquery:5 Hosting operator id = 74 Hosting Expression = ws_sold_date_sk#122 IN dynamicpruning#21

Subquery:6 Hosting operator id = 92 Hosting Expression = ws_sold_date_sk#143 IN dynamicpruning#42


