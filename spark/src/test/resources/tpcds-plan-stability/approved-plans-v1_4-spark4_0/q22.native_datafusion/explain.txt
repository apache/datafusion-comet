== Physical Plan ==
* CometColumnarToRow (25)
+- CometTakeOrderedAndProject (24)
   +- CometHashAggregate (23)
      +- CometExchange (22)
         +- CometHashAggregate (21)
            +- CometExpand (20)
               +- CometProject (19)
                  +- CometBroadcastHashJoin (18)
                     :- CometProject (14)
                     :  +- CometBroadcastHashJoin (13)
                     :     :- CometProject (8)
                     :     :  +- CometBroadcastHashJoin (7)
                     :     :     :- CometFilter (2)
                     :     :     :  +- CometNativeScan parquet spark_catalog.default.inventory (1)
                     :     :     +- CometBroadcastExchange (6)
                     :     :        +- CometProject (5)
                     :     :           +- CometFilter (4)
                     :     :              +- CometNativeScan parquet spark_catalog.default.date_dim (3)
                     :     +- CometBroadcastExchange (12)
                     :        +- CometProject (11)
                     :           +- CometFilter (10)
                     :              +- CometNativeScan parquet spark_catalog.default.item (9)
                     +- CometBroadcastExchange (17)
                        +- CometFilter (16)
                           +- CometNativeScan parquet spark_catalog.default.warehouse (15)


(1) CometNativeScan parquet spark_catalog.default.inventory
Output [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(inv_date_sk#4)]
PushedFilters: [IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)]
ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(2) CometFilter
Input [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Condition : (isnotnull(inv_item_sk#1) AND isnotnull(inv_warehouse_sk#2))

(3) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#5, d_month_seq#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(4) CometFilter
Input [2]: [d_date_sk#5, d_month_seq#6]
Condition : (((isnotnull(d_month_seq#6) AND (d_month_seq#6 >= 1200)) AND (d_month_seq#6 <= 1211)) AND isnotnull(d_date_sk#5))

(5) CometProject
Input [2]: [d_date_sk#5, d_month_seq#6]
Arguments: [d_date_sk#5], [d_date_sk#5]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: [d_date_sk#5]

(7) CometBroadcastHashJoin
Left output [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Right output [1]: [d_date_sk#5]
Arguments: [inv_date_sk#4], [d_date_sk#5], Inner, BuildRight

(8) CometProject
Input [5]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4, d_date_sk#5]
Arguments: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3], [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]

(9) CometNativeScan parquet spark_catalog.default.item
Output [5]: [i_item_sk#7, i_brand#8, i_class#9, i_category#10, i_product_name#11]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>

(10) CometFilter
Input [5]: [i_item_sk#7, i_brand#8, i_class#9, i_category#10, i_product_name#11]
Condition : isnotnull(i_item_sk#7)

(11) CometProject
Input [5]: [i_item_sk#7, i_brand#8, i_class#9, i_category#10, i_product_name#11]
Arguments: [i_item_sk#7, i_brand#12, i_class#13, i_category#14, i_product_name#15], [i_item_sk#7, static_invoke(CharVarcharCodegenUtils.readSidePadding(i_brand#8, 50)) AS i_brand#12, static_invoke(CharVarcharCodegenUtils.readSidePadding(i_class#9, 50)) AS i_class#13, static_invoke(CharVarcharCodegenUtils.readSidePadding(i_category#10, 50)) AS i_category#14, static_invoke(CharVarcharCodegenUtils.readSidePadding(i_product_name#11, 50)) AS i_product_name#15]

(12) CometBroadcastExchange
Input [5]: [i_item_sk#7, i_brand#12, i_class#13, i_category#14, i_product_name#15]
Arguments: [i_item_sk#7, i_brand#12, i_class#13, i_category#14, i_product_name#15]

(13) CometBroadcastHashJoin
Left output [3]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]
Right output [5]: [i_item_sk#7, i_brand#12, i_class#13, i_category#14, i_product_name#15]
Arguments: [inv_item_sk#1], [i_item_sk#7], Inner, BuildRight

(14) CometProject
Input [8]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, i_item_sk#7, i_brand#12, i_class#13, i_category#14, i_product_name#15]
Arguments: [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_brand#12, i_class#13, i_category#14, i_product_name#15], [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_brand#12, i_class#13, i_category#14, i_product_name#15]

(15) CometNativeScan parquet spark_catalog.default.warehouse
Output [1]: [w_warehouse_sk#16]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int>

(16) CometFilter
Input [1]: [w_warehouse_sk#16]
Condition : isnotnull(w_warehouse_sk#16)

(17) CometBroadcastExchange
Input [1]: [w_warehouse_sk#16]
Arguments: [w_warehouse_sk#16]

(18) CometBroadcastHashJoin
Left output [6]: [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_brand#12, i_class#13, i_category#14, i_product_name#15]
Right output [1]: [w_warehouse_sk#16]
Arguments: [inv_warehouse_sk#2], [w_warehouse_sk#16], Inner, BuildRight

(19) CometProject
Input [7]: [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_brand#12, i_class#13, i_category#14, i_product_name#15, w_warehouse_sk#16]
Arguments: [inv_quantity_on_hand#3, i_product_name#15, i_brand#12, i_class#13, i_category#14], [inv_quantity_on_hand#3, i_product_name#15, i_brand#12, i_class#13, i_category#14]

(20) CometExpand
Input [5]: [inv_quantity_on_hand#3, i_product_name#15, i_brand#12, i_class#13, i_category#14]
Arguments: [[inv_quantity_on_hand#3, i_product_name#15, i_brand#12, i_class#13, i_category#14, 0], [inv_quantity_on_hand#3, i_product_name#15, i_brand#12, i_class#13, null, 1], [inv_quantity_on_hand#3, i_product_name#15, i_brand#12, null, null, 3], [inv_quantity_on_hand#3, i_product_name#15, null, null, null, 7], [inv_quantity_on_hand#3, null, null, null, null, 15]], [inv_quantity_on_hand#3, i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21]

(21) CometHashAggregate
Input [6]: [inv_quantity_on_hand#3, i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21]
Keys [5]: [i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21]
Functions [1]: [partial_avg(inv_quantity_on_hand#3)]

(22) CometExchange
Input [7]: [i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21, sum#22, count#23]
Arguments: hashpartitioning(i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(23) CometHashAggregate
Input [7]: [i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21, sum#22, count#23]
Keys [5]: [i_product_name#17, i_brand#18, i_class#19, i_category#20, spark_grouping_id#21]
Functions [1]: [avg(inv_quantity_on_hand#3)]

(24) CometTakeOrderedAndProject
Input [5]: [i_product_name#17, i_brand#18, i_class#19, i_category#20, qoh#24]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[qoh#24 ASC NULLS FIRST,i_product_name#17 ASC NULLS FIRST,i_brand#18 ASC NULLS FIRST,i_class#19 ASC NULLS FIRST,i_category#20 ASC NULLS FIRST], output=[i_product_name#17,i_brand#18,i_class#19,i_category#20,qoh#24]), [i_product_name#17, i_brand#18, i_class#19, i_category#20, qoh#24], 100, 0, [qoh#24 ASC NULLS FIRST, i_product_name#17 ASC NULLS FIRST, i_brand#18 ASC NULLS FIRST, i_class#19 ASC NULLS FIRST, i_category#20 ASC NULLS FIRST], [i_product_name#17, i_brand#18, i_class#19, i_category#20, qoh#24]

(25) CometColumnarToRow [codegen id : 1]
Input [5]: [i_product_name#17, i_brand#18, i_class#19, i_category#20, qoh#24]

