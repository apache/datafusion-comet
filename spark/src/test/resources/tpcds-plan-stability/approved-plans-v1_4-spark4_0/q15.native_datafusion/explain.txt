== Physical Plan ==
TakeOrderedAndProject (23)
+- * HashAggregate (22)
   +- Exchange (21)
      +- * HashAggregate (20)
         +- * ColumnarToRow (19)
            +- CometProject (18)
               +- CometBroadcastHashJoin (17)
                  :- CometProject (12)
                  :  +- CometBroadcastHashJoin (11)
                  :     :- CometProject (7)
                  :     :  +- CometBroadcastHashJoin (6)
                  :     :     :- CometFilter (2)
                  :     :     :  +- CometNativeScan: `spark_catalog`.`default`.`catalog_sales` (1)
                  :     :     +- CometBroadcastExchange (5)
                  :     :        +- CometFilter (4)
                  :     :           +- CometNativeScan: `spark_catalog`.`default`.`customer` (3)
                  :     +- CometBroadcastExchange (10)
                  :        +- CometFilter (9)
                  :           +- CometNativeScan: `spark_catalog`.`default`.`customer_address` (8)
                  +- CometBroadcastExchange (16)
                     +- CometProject (15)
                        +- CometFilter (14)
                           +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (13)


(1) CometNativeScan: `spark_catalog`.`default`.`catalog_sales`
Output [3]: [cs_bill_customer_sk#1, cs_sales_price#2, cs_sold_date_sk#3]
Arguments: [cs_bill_customer_sk#1, cs_sales_price#2, cs_sold_date_sk#3]

(2) CometFilter
Input [3]: [cs_bill_customer_sk#1, cs_sales_price#2, cs_sold_date_sk#3]
Condition : isnotnull(cs_bill_customer_sk#1)

(3) CometNativeScan: `spark_catalog`.`default`.`customer`
Output [2]: [c_customer_sk#4, c_current_addr_sk#5]
Arguments: [c_customer_sk#4, c_current_addr_sk#5]

(4) CometFilter
Input [2]: [c_customer_sk#4, c_current_addr_sk#5]
Condition : (isnotnull(c_customer_sk#4) AND isnotnull(c_current_addr_sk#5))

(5) CometBroadcastExchange
Input [2]: [c_customer_sk#4, c_current_addr_sk#5]
Arguments: [c_customer_sk#4, c_current_addr_sk#5]

(6) CometBroadcastHashJoin
Left output [3]: [cs_bill_customer_sk#1, cs_sales_price#2, cs_sold_date_sk#3]
Right output [2]: [c_customer_sk#4, c_current_addr_sk#5]
Arguments: [cs_bill_customer_sk#1], [c_customer_sk#4], Inner, BuildRight

(7) CometProject
Input [5]: [cs_bill_customer_sk#1, cs_sales_price#2, cs_sold_date_sk#3, c_customer_sk#4, c_current_addr_sk#5]
Arguments: [cs_sales_price#2, cs_sold_date_sk#3, c_current_addr_sk#5], [cs_sales_price#2, cs_sold_date_sk#3, c_current_addr_sk#5]

(8) CometNativeScan: `spark_catalog`.`default`.`customer_address`
Output [3]: [ca_address_sk#6, ca_state#7, ca_zip#8]
Arguments: [ca_address_sk#6, ca_state#7, ca_zip#8]

(9) CometFilter
Input [3]: [ca_address_sk#6, ca_state#7, ca_zip#8]
Condition : isnotnull(ca_address_sk#6)

(10) CometBroadcastExchange
Input [3]: [ca_address_sk#6, ca_state#7, ca_zip#8]
Arguments: [ca_address_sk#6, ca_state#7, ca_zip#8]

(11) CometBroadcastHashJoin
Left output [3]: [cs_sales_price#2, cs_sold_date_sk#3, c_current_addr_sk#5]
Right output [3]: [ca_address_sk#6, ca_state#7, ca_zip#8]
Arguments: [c_current_addr_sk#5], [ca_address_sk#6], Inner, ((substr(ca_zip#8, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR ca_state#7 IN (CA,WA,GA)) OR (cs_sales_price#2 > 500.00)), BuildRight

(12) CometProject
Input [6]: [cs_sales_price#2, cs_sold_date_sk#3, c_current_addr_sk#5, ca_address_sk#6, ca_state#7, ca_zip#8]
Arguments: [cs_sales_price#2, cs_sold_date_sk#3, ca_zip#8], [cs_sales_price#2, cs_sold_date_sk#3, ca_zip#8]

(13) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [3]: [d_date_sk#9, d_year#10, d_qoy#11]
Arguments: [d_date_sk#9, d_year#10, d_qoy#11]

(14) CometFilter
Input [3]: [d_date_sk#9, d_year#10, d_qoy#11]
Condition : ((((isnotnull(d_qoy#11) AND isnotnull(d_year#10)) AND (d_qoy#11 = 2)) AND (d_year#10 = 2001)) AND isnotnull(d_date_sk#9))

(15) CometProject
Input [3]: [d_date_sk#9, d_year#10, d_qoy#11]
Arguments: [d_date_sk#9], [d_date_sk#9]

(16) CometBroadcastExchange
Input [1]: [d_date_sk#9]
Arguments: [d_date_sk#9]

(17) CometBroadcastHashJoin
Left output [3]: [cs_sales_price#2, cs_sold_date_sk#3, ca_zip#8]
Right output [1]: [d_date_sk#9]
Arguments: [cs_sold_date_sk#3], [d_date_sk#9], Inner, BuildRight

(18) CometProject
Input [4]: [cs_sales_price#2, cs_sold_date_sk#3, ca_zip#8, d_date_sk#9]
Arguments: [cs_sales_price#2, ca_zip#8], [cs_sales_price#2, ca_zip#8]

(19) ColumnarToRow [codegen id : 1]
Input [2]: [cs_sales_price#2, ca_zip#8]

(20) HashAggregate [codegen id : 1]
Input [2]: [cs_sales_price#2, ca_zip#8]
Keys [1]: [ca_zip#8]
Functions [1]: [partial_sum(UnscaledValue(cs_sales_price#2))]
Aggregate Attributes [1]: [sum#12]
Results [2]: [ca_zip#8, sum#13]

(21) Exchange
Input [2]: [ca_zip#8, sum#13]
Arguments: hashpartitioning(ca_zip#8, 5), ENSURE_REQUIREMENTS, [plan_id=1]

(22) HashAggregate [codegen id : 2]
Input [2]: [ca_zip#8, sum#13]
Keys [1]: [ca_zip#8]
Functions [1]: [sum(UnscaledValue(cs_sales_price#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(cs_sales_price#2))#14]
Results [2]: [ca_zip#8, MakeDecimal(sum(UnscaledValue(cs_sales_price#2))#14,17,2) AS sum(cs_sales_price)#15]

(23) TakeOrderedAndProject
Input [2]: [ca_zip#8, sum(cs_sales_price)#15]
Arguments: 100, [ca_zip#8 ASC NULLS FIRST], [ca_zip#8, sum(cs_sales_price)#15]

