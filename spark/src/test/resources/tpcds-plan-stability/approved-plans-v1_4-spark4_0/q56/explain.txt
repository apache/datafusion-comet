== Physical Plan ==
TakeOrderedAndProject (68)
+- * HashAggregate (67)
   +- * CometColumnarToRow (66)
      +- CometColumnarExchange (65)
         +- * HashAggregate (64)
            +- Union (63)
               :- * HashAggregate (30)
               :  +- * CometColumnarToRow (29)
               :     +- CometColumnarExchange (28)
               :        +- * HashAggregate (27)
               :           +- * CometColumnarToRow (26)
               :              +- CometProject (25)
               :                 +- CometBroadcastHashJoin (24)
               :                    :- CometProject (14)
               :                    :  +- CometBroadcastHashJoin (13)
               :                    :     :- CometProject (8)
               :                    :     :  +- CometBroadcastHashJoin (7)
               :                    :     :     :- CometFilter (2)
               :                    :     :     :  +- CometScan parquet spark_catalog.default.store_sales (1)
               :                    :     :     +- CometBroadcastExchange (6)
               :                    :     :        +- CometProject (5)
               :                    :     :           +- CometFilter (4)
               :                    :     :              +- CometScan parquet spark_catalog.default.date_dim (3)
               :                    :     +- CometBroadcastExchange (12)
               :                    :        +- CometProject (11)
               :                    :           +- CometFilter (10)
               :                    :              +- CometScan parquet spark_catalog.default.customer_address (9)
               :                    +- CometBroadcastExchange (23)
               :                       +- CometProject (22)
               :                          +- CometBroadcastHashJoin (21)
               :                             :- CometFilter (16)
               :                             :  +- CometScan parquet spark_catalog.default.item (15)
               :                             +- CometBroadcastExchange (20)
               :                                +- CometProject (19)
               :                                   +- CometFilter (18)
               :                                      +- CometScan parquet spark_catalog.default.item (17)
               :- * HashAggregate (46)
               :  +- * CometColumnarToRow (45)
               :     +- CometColumnarExchange (44)
               :        +- * HashAggregate (43)
               :           +- * CometColumnarToRow (42)
               :              +- CometProject (41)
               :                 +- CometBroadcastHashJoin (40)
               :                    :- CometProject (38)
               :                    :  +- CometBroadcastHashJoin (37)
               :                    :     :- CometProject (35)
               :                    :     :  +- CometBroadcastHashJoin (34)
               :                    :     :     :- CometFilter (32)
               :                    :     :     :  +- CometScan parquet spark_catalog.default.catalog_sales (31)
               :                    :     :     +- ReusedExchange (33)
               :                    :     +- ReusedExchange (36)
               :                    +- ReusedExchange (39)
               +- * HashAggregate (62)
                  +- * CometColumnarToRow (61)
                     +- CometColumnarExchange (60)
                        +- * HashAggregate (59)
                           +- * CometColumnarToRow (58)
                              +- CometProject (57)
                                 +- CometBroadcastHashJoin (56)
                                    :- CometProject (54)
                                    :  +- CometBroadcastHashJoin (53)
                                    :     :- CometProject (51)
                                    :     :  +- CometBroadcastHashJoin (50)
                                    :     :     :- CometFilter (48)
                                    :     :     :  +- CometScan parquet spark_catalog.default.web_sales (47)
                                    :     :     +- ReusedExchange (49)
                                    :     +- ReusedExchange (52)
                                    +- ReusedExchange (55)


(1) CometScan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4), dynamicpruningexpression(ss_sold_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Condition : (isnotnull(ss_addr_sk#2) AND isnotnull(ss_item_sk#1))

(3) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#6, d_year#7, d_moy#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,2), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(4) CometFilter
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Condition : ((((isnotnull(d_year#7) AND isnotnull(d_moy#8)) AND (d_year#7 = 2001)) AND (d_moy#8 = 2)) AND isnotnull(d_date_sk#6))

(5) CometProject
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Arguments: [d_date_sk#6], [d_date_sk#6]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: [d_date_sk#6]

(7) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Right output [1]: [d_date_sk#6]
Arguments: [ss_sold_date_sk#4], [d_date_sk#6], Inner, BuildRight

(8) CometProject
Input [5]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, d_date_sk#6]
Arguments: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3], [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]

(9) CometScan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#9, ca_gmt_offset#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>

(10) CometFilter
Input [2]: [ca_address_sk#9, ca_gmt_offset#10]
Condition : ((isnotnull(ca_gmt_offset#10) AND (ca_gmt_offset#10 = -5.00)) AND isnotnull(ca_address_sk#9))

(11) CometProject
Input [2]: [ca_address_sk#9, ca_gmt_offset#10]
Arguments: [ca_address_sk#9], [ca_address_sk#9]

(12) CometBroadcastExchange
Input [1]: [ca_address_sk#9]
Arguments: [ca_address_sk#9]

(13) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Right output [1]: [ca_address_sk#9]
Arguments: [ss_addr_sk#2], [ca_address_sk#9], Inner, BuildRight

(14) CometProject
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ca_address_sk#9]
Arguments: [ss_item_sk#1, ss_ext_sales_price#3], [ss_item_sk#1, ss_ext_sales_price#3]

(15) CometScan parquet spark_catalog.default.item
Output [2]: [i_item_sk#11, i_item_id#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(16) CometFilter
Input [2]: [i_item_sk#11, i_item_id#12]
Condition : isnotnull(i_item_sk#11)

(17) CometScan parquet spark_catalog.default.item
Output [2]: [i_item_id#13, i_color#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
ReadSchema: struct<i_item_id:string,i_color:string>

(18) CometFilter
Input [2]: [i_item_id#13, i_color#14]
Condition : staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_color#14, 20, true, false, true) IN (slate               ,blanched            ,burnished           )

(19) CometProject
Input [2]: [i_item_id#13, i_color#14]
Arguments: [i_item_id#15], [staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#13, 16, true, false, true) AS i_item_id#15]

(20) CometBroadcastExchange
Input [1]: [i_item_id#15]
Arguments: [i_item_id#15]

(21) CometBroadcastHashJoin
Left output [2]: [i_item_sk#11, i_item_id#12]
Right output [1]: [i_item_id#15]
Arguments: [staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#12, 16, true, false, true)], [i_item_id#15], LeftSemi, BuildRight

(22) CometProject
Input [2]: [i_item_sk#11, i_item_id#12]
Arguments: [i_item_sk#11, i_item_id#16], [i_item_sk#11, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#12, 16, true, false, true) AS i_item_id#16]

(23) CometBroadcastExchange
Input [2]: [i_item_sk#11, i_item_id#16]
Arguments: [i_item_sk#11, i_item_id#16]

(24) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#1, ss_ext_sales_price#3]
Right output [2]: [i_item_sk#11, i_item_id#16]
Arguments: [ss_item_sk#1], [i_item_sk#11], Inner, BuildRight

(25) CometProject
Input [4]: [ss_item_sk#1, ss_ext_sales_price#3, i_item_sk#11, i_item_id#16]
Arguments: [ss_ext_sales_price#3, i_item_id#16], [ss_ext_sales_price#3, i_item_id#16]

(26) CometColumnarToRow [codegen id : 1]
Input [2]: [ss_ext_sales_price#3, i_item_id#16]

(27) HashAggregate [codegen id : 1]
Input [2]: [ss_ext_sales_price#3, i_item_id#16]
Keys [1]: [i_item_id#16]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum#17]
Results [2]: [i_item_id#16, sum#18]

(28) CometColumnarExchange
Input [2]: [i_item_id#16, sum#18]
Arguments: hashpartitioning(i_item_id#16, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=1]

(29) CometColumnarToRow [codegen id : 2]
Input [2]: [i_item_id#16, sum#18]

(30) HashAggregate [codegen id : 2]
Input [2]: [i_item_id#16, sum#18]
Keys [1]: [i_item_id#16]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#3))#19]
Results [2]: [i_item_id#16 AS i_item_id#20, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#3))#19,17,2) AS total_sales#21]

(31) CometScan parquet spark_catalog.default.catalog_sales
Output [4]: [cs_bill_addr_sk#22, cs_item_sk#23, cs_ext_sales_price#24, cs_sold_date_sk#25]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#25), dynamicpruningexpression(cs_sold_date_sk#25 IN dynamicpruning#26)]
PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>

(32) CometFilter
Input [4]: [cs_bill_addr_sk#22, cs_item_sk#23, cs_ext_sales_price#24, cs_sold_date_sk#25]
Condition : (isnotnull(cs_bill_addr_sk#22) AND isnotnull(cs_item_sk#23))

(33) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#27]

(34) CometBroadcastHashJoin
Left output [4]: [cs_bill_addr_sk#22, cs_item_sk#23, cs_ext_sales_price#24, cs_sold_date_sk#25]
Right output [1]: [d_date_sk#27]
Arguments: [cs_sold_date_sk#25], [d_date_sk#27], Inner, BuildRight

(35) CometProject
Input [5]: [cs_bill_addr_sk#22, cs_item_sk#23, cs_ext_sales_price#24, cs_sold_date_sk#25, d_date_sk#27]
Arguments: [cs_bill_addr_sk#22, cs_item_sk#23, cs_ext_sales_price#24], [cs_bill_addr_sk#22, cs_item_sk#23, cs_ext_sales_price#24]

(36) ReusedExchange [Reuses operator id: 12]
Output [1]: [ca_address_sk#28]

(37) CometBroadcastHashJoin
Left output [3]: [cs_bill_addr_sk#22, cs_item_sk#23, cs_ext_sales_price#24]
Right output [1]: [ca_address_sk#28]
Arguments: [cs_bill_addr_sk#22], [ca_address_sk#28], Inner, BuildRight

(38) CometProject
Input [4]: [cs_bill_addr_sk#22, cs_item_sk#23, cs_ext_sales_price#24, ca_address_sk#28]
Arguments: [cs_item_sk#23, cs_ext_sales_price#24], [cs_item_sk#23, cs_ext_sales_price#24]

(39) ReusedExchange [Reuses operator id: 23]
Output [2]: [i_item_sk#29, i_item_id#30]

(40) CometBroadcastHashJoin
Left output [2]: [cs_item_sk#23, cs_ext_sales_price#24]
Right output [2]: [i_item_sk#29, i_item_id#30]
Arguments: [cs_item_sk#23], [i_item_sk#29], Inner, BuildRight

(41) CometProject
Input [4]: [cs_item_sk#23, cs_ext_sales_price#24, i_item_sk#29, i_item_id#30]
Arguments: [cs_ext_sales_price#24, i_item_id#30], [cs_ext_sales_price#24, i_item_id#30]

(42) CometColumnarToRow [codegen id : 3]
Input [2]: [cs_ext_sales_price#24, i_item_id#30]

(43) HashAggregate [codegen id : 3]
Input [2]: [cs_ext_sales_price#24, i_item_id#30]
Keys [1]: [i_item_id#30]
Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#24))]
Aggregate Attributes [1]: [sum#31]
Results [2]: [i_item_id#30, sum#32]

(44) CometColumnarExchange
Input [2]: [i_item_id#30, sum#32]
Arguments: hashpartitioning(i_item_id#30, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=2]

(45) CometColumnarToRow [codegen id : 4]
Input [2]: [i_item_id#30, sum#32]

(46) HashAggregate [codegen id : 4]
Input [2]: [i_item_id#30, sum#32]
Keys [1]: [i_item_id#30]
Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#24))]
Aggregate Attributes [1]: [sum(UnscaledValue(cs_ext_sales_price#24))#33]
Results [2]: [i_item_id#30, MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#24))#33,17,2) AS total_sales#34]

(47) CometScan parquet spark_catalog.default.web_sales
Output [4]: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37, ws_sold_date_sk#38]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#38), dynamicpruningexpression(ws_sold_date_sk#38 IN dynamicpruning#39)]
PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(48) CometFilter
Input [4]: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37, ws_sold_date_sk#38]
Condition : (isnotnull(ws_bill_addr_sk#36) AND isnotnull(ws_item_sk#35))

(49) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#40]

(50) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37, ws_sold_date_sk#38]
Right output [1]: [d_date_sk#40]
Arguments: [ws_sold_date_sk#38], [d_date_sk#40], Inner, BuildRight

(51) CometProject
Input [5]: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37, ws_sold_date_sk#38, d_date_sk#40]
Arguments: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37], [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37]

(52) ReusedExchange [Reuses operator id: 12]
Output [1]: [ca_address_sk#41]

(53) CometBroadcastHashJoin
Left output [3]: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37]
Right output [1]: [ca_address_sk#41]
Arguments: [ws_bill_addr_sk#36], [ca_address_sk#41], Inner, BuildRight

(54) CometProject
Input [4]: [ws_item_sk#35, ws_bill_addr_sk#36, ws_ext_sales_price#37, ca_address_sk#41]
Arguments: [ws_item_sk#35, ws_ext_sales_price#37], [ws_item_sk#35, ws_ext_sales_price#37]

(55) ReusedExchange [Reuses operator id: 23]
Output [2]: [i_item_sk#42, i_item_id#43]

(56) CometBroadcastHashJoin
Left output [2]: [ws_item_sk#35, ws_ext_sales_price#37]
Right output [2]: [i_item_sk#42, i_item_id#43]
Arguments: [ws_item_sk#35], [i_item_sk#42], Inner, BuildRight

(57) CometProject
Input [4]: [ws_item_sk#35, ws_ext_sales_price#37, i_item_sk#42, i_item_id#43]
Arguments: [ws_ext_sales_price#37, i_item_id#43], [ws_ext_sales_price#37, i_item_id#43]

(58) CometColumnarToRow [codegen id : 5]
Input [2]: [ws_ext_sales_price#37, i_item_id#43]

(59) HashAggregate [codegen id : 5]
Input [2]: [ws_ext_sales_price#37, i_item_id#43]
Keys [1]: [i_item_id#43]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#37))]
Aggregate Attributes [1]: [sum#44]
Results [2]: [i_item_id#43, sum#45]

(60) CometColumnarExchange
Input [2]: [i_item_id#43, sum#45]
Arguments: hashpartitioning(i_item_id#43, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=3]

(61) CometColumnarToRow [codegen id : 6]
Input [2]: [i_item_id#43, sum#45]

(62) HashAggregate [codegen id : 6]
Input [2]: [i_item_id#43, sum#45]
Keys [1]: [i_item_id#43]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#37))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#37))#46]
Results [2]: [i_item_id#43, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#37))#46,17,2) AS total_sales#47]

(63) Union

(64) HashAggregate [codegen id : 7]
Input [2]: [i_item_id#20, total_sales#21]
Keys [1]: [i_item_id#20]
Functions [1]: [partial_sum(total_sales#21)]
Aggregate Attributes [2]: [sum#48, isEmpty#49]
Results [3]: [i_item_id#20, sum#50, isEmpty#51]

(65) CometColumnarExchange
Input [3]: [i_item_id#20, sum#50, isEmpty#51]
Arguments: hashpartitioning(i_item_id#20, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=4]

(66) CometColumnarToRow [codegen id : 8]
Input [3]: [i_item_id#20, sum#50, isEmpty#51]

(67) HashAggregate [codegen id : 8]
Input [3]: [i_item_id#20, sum#50, isEmpty#51]
Keys [1]: [i_item_id#20]
Functions [1]: [sum(total_sales#21)]
Aggregate Attributes [1]: [sum(total_sales#21)#52]
Results [2]: [i_item_id#20, sum(total_sales#21)#52 AS total_sales#53]

(68) TakeOrderedAndProject
Input [2]: [i_item_id#20, total_sales#53]
Arguments: 100, [total_sales#53 ASC NULLS FIRST], [i_item_id#20, total_sales#53]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#4 IN dynamicpruning#5
BroadcastExchange (73)
+- * CometColumnarToRow (72)
   +- CometProject (71)
      +- CometFilter (70)
         +- CometScan parquet spark_catalog.default.date_dim (69)


(69) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#6, d_year#7, d_moy#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,2), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(70) CometFilter
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Condition : ((((isnotnull(d_year#7) AND isnotnull(d_moy#8)) AND (d_year#7 = 2001)) AND (d_moy#8 = 2)) AND isnotnull(d_date_sk#6))

(71) CometProject
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Arguments: [d_date_sk#6], [d_date_sk#6]

(72) CometColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#6]

(73) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

Subquery:2 Hosting operator id = 31 Hosting Expression = cs_sold_date_sk#25 IN dynamicpruning#5

Subquery:3 Hosting operator id = 47 Hosting Expression = ws_sold_date_sk#38 IN dynamicpruning#5


