== Physical Plan ==
TakeOrderedAndProject (31)
+- * Project (30)
   +- * BroadcastHashJoin Inner BuildRight (29)
      :- * HashAggregate (24)
      :  +- Exchange (23)
      :     +- * HashAggregate (22)
      :        +- * ColumnarToRow (21)
      :           +- CometProject (20)
      :              +- CometBroadcastHashJoin (19)
      :                 :- CometProject (14)
      :                 :  +- CometBroadcastHashJoin (13)
      :                 :     :- CometProject (8)
      :                 :     :  +- CometBroadcastHashJoin (7)
      :                 :     :     :- CometFilter (2)
      :                 :     :     :  +- CometNativeScan: `spark_catalog`.`default`.`store_sales` (1)
      :                 :     :     +- CometBroadcastExchange (6)
      :                 :     :        +- CometProject (5)
      :                 :     :           +- CometFilter (4)
      :                 :     :              +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (3)
      :                 :     +- CometBroadcastExchange (12)
      :                 :        +- CometProject (11)
      :                 :           +- CometFilter (10)
      :                 :              +- CometNativeScan: `spark_catalog`.`default`.`store` (9)
      :                 +- CometBroadcastExchange (18)
      :                    +- CometProject (17)
      :                       +- CometFilter (16)
      :                          +- CometNativeScan: `spark_catalog`.`default`.`household_demographics` (15)
      +- BroadcastExchange (28)
         +- * ColumnarToRow (27)
            +- CometFilter (26)
               +- CometNativeScan: `spark_catalog`.`default`.`customer` (25)


(1) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [8]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_addr_sk#3, ss_store_sk#4, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, ss_sold_date_sk#8]
Arguments: [ss_customer_sk#1, ss_hdemo_sk#2, ss_addr_sk#3, ss_store_sk#4, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, ss_sold_date_sk#8]

(2) CometFilter
Input [8]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_addr_sk#3, ss_store_sk#4, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, ss_sold_date_sk#8]
Condition : ((isnotnull(ss_store_sk#4) AND isnotnull(ss_hdemo_sk#2)) AND isnotnull(ss_customer_sk#1))

(3) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [3]: [d_date_sk#9, d_year#10, d_dow#11]
Arguments: [d_date_sk#9, d_year#10, d_dow#11]

(4) CometFilter
Input [3]: [d_date_sk#9, d_year#10, d_dow#11]
Condition : (((isnotnull(d_dow#11) AND (d_dow#11 = 1)) AND d_year#10 IN (1999,2000,2001)) AND isnotnull(d_date_sk#9))

(5) CometProject
Input [3]: [d_date_sk#9, d_year#10, d_dow#11]
Arguments: [d_date_sk#9], [d_date_sk#9]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#9]
Arguments: [d_date_sk#9]

(7) CometBroadcastHashJoin
Left output [8]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_addr_sk#3, ss_store_sk#4, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, ss_sold_date_sk#8]
Right output [1]: [d_date_sk#9]
Arguments: [ss_sold_date_sk#8], [d_date_sk#9], Inner, BuildRight

(8) CometProject
Input [9]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_addr_sk#3, ss_store_sk#4, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, ss_sold_date_sk#8, d_date_sk#9]
Arguments: [ss_customer_sk#1, ss_hdemo_sk#2, ss_addr_sk#3, ss_store_sk#4, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7], [ss_customer_sk#1, ss_hdemo_sk#2, ss_addr_sk#3, ss_store_sk#4, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7]

(9) CometNativeScan: `spark_catalog`.`default`.`store`
Output [3]: [s_store_sk#12, s_number_employees#13, s_city#14]
Arguments: [s_store_sk#12, s_number_employees#13, s_city#14]

(10) CometFilter
Input [3]: [s_store_sk#12, s_number_employees#13, s_city#14]
Condition : (((isnotnull(s_number_employees#13) AND (s_number_employees#13 >= 200)) AND (s_number_employees#13 <= 295)) AND isnotnull(s_store_sk#12))

(11) CometProject
Input [3]: [s_store_sk#12, s_number_employees#13, s_city#14]
Arguments: [s_store_sk#12, s_city#14], [s_store_sk#12, s_city#14]

(12) CometBroadcastExchange
Input [2]: [s_store_sk#12, s_city#14]
Arguments: [s_store_sk#12, s_city#14]

(13) CometBroadcastHashJoin
Left output [7]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_addr_sk#3, ss_store_sk#4, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7]
Right output [2]: [s_store_sk#12, s_city#14]
Arguments: [ss_store_sk#4], [s_store_sk#12], Inner, BuildRight

(14) CometProject
Input [9]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_addr_sk#3, ss_store_sk#4, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, s_store_sk#12, s_city#14]
Arguments: [ss_customer_sk#1, ss_hdemo_sk#2, ss_addr_sk#3, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, s_city#14], [ss_customer_sk#1, ss_hdemo_sk#2, ss_addr_sk#3, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, s_city#14]

(15) CometNativeScan: `spark_catalog`.`default`.`household_demographics`
Output [3]: [hd_demo_sk#15, hd_dep_count#16, hd_vehicle_count#17]
Arguments: [hd_demo_sk#15, hd_dep_count#16, hd_vehicle_count#17]

(16) CometFilter
Input [3]: [hd_demo_sk#15, hd_dep_count#16, hd_vehicle_count#17]
Condition : (((hd_dep_count#16 = 6) OR (hd_vehicle_count#17 > 2)) AND isnotnull(hd_demo_sk#15))

(17) CometProject
Input [3]: [hd_demo_sk#15, hd_dep_count#16, hd_vehicle_count#17]
Arguments: [hd_demo_sk#15], [hd_demo_sk#15]

(18) CometBroadcastExchange
Input [1]: [hd_demo_sk#15]
Arguments: [hd_demo_sk#15]

(19) CometBroadcastHashJoin
Left output [7]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_addr_sk#3, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, s_city#14]
Right output [1]: [hd_demo_sk#15]
Arguments: [ss_hdemo_sk#2], [hd_demo_sk#15], Inner, BuildRight

(20) CometProject
Input [8]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_addr_sk#3, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, s_city#14, hd_demo_sk#15]
Arguments: [ss_customer_sk#1, ss_addr_sk#3, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, s_city#14], [ss_customer_sk#1, ss_addr_sk#3, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, s_city#14]

(21) ColumnarToRow [codegen id : 1]
Input [6]: [ss_customer_sk#1, ss_addr_sk#3, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, s_city#14]

(22) HashAggregate [codegen id : 1]
Input [6]: [ss_customer_sk#1, ss_addr_sk#3, ss_ticket_number#5, ss_coupon_amt#6, ss_net_profit#7, s_city#14]
Keys [4]: [ss_ticket_number#5, ss_customer_sk#1, ss_addr_sk#3, s_city#14]
Functions [2]: [partial_sum(UnscaledValue(ss_coupon_amt#6)), partial_sum(UnscaledValue(ss_net_profit#7))]
Aggregate Attributes [2]: [sum#18, sum#19]
Results [6]: [ss_ticket_number#5, ss_customer_sk#1, ss_addr_sk#3, s_city#14, sum#20, sum#21]

(23) Exchange
Input [6]: [ss_ticket_number#5, ss_customer_sk#1, ss_addr_sk#3, s_city#14, sum#20, sum#21]
Arguments: hashpartitioning(ss_ticket_number#5, ss_customer_sk#1, ss_addr_sk#3, s_city#14, 5), ENSURE_REQUIREMENTS, [plan_id=1]

(24) HashAggregate [codegen id : 3]
Input [6]: [ss_ticket_number#5, ss_customer_sk#1, ss_addr_sk#3, s_city#14, sum#20, sum#21]
Keys [4]: [ss_ticket_number#5, ss_customer_sk#1, ss_addr_sk#3, s_city#14]
Functions [2]: [sum(UnscaledValue(ss_coupon_amt#6)), sum(UnscaledValue(ss_net_profit#7))]
Aggregate Attributes [2]: [sum(UnscaledValue(ss_coupon_amt#6))#22, sum(UnscaledValue(ss_net_profit#7))#23]
Results [5]: [ss_ticket_number#5, ss_customer_sk#1, s_city#14, MakeDecimal(sum(UnscaledValue(ss_coupon_amt#6))#22,17,2) AS amt#24, MakeDecimal(sum(UnscaledValue(ss_net_profit#7))#23,17,2) AS profit#25]

(25) CometNativeScan: `spark_catalog`.`default`.`customer`
Output [3]: [c_customer_sk#26, c_first_name#27, c_last_name#28]
Arguments: [c_customer_sk#26, c_first_name#27, c_last_name#28]

(26) CometFilter
Input [3]: [c_customer_sk#26, c_first_name#27, c_last_name#28]
Condition : isnotnull(c_customer_sk#26)

(27) ColumnarToRow [codegen id : 2]
Input [3]: [c_customer_sk#26, c_first_name#27, c_last_name#28]

(28) BroadcastExchange
Input [3]: [c_customer_sk#26, c_first_name#27, c_last_name#28]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2]

(29) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [ss_customer_sk#1]
Right keys [1]: [c_customer_sk#26]
Join type: Inner
Join condition: None

(30) Project [codegen id : 3]
Output [7]: [c_last_name#28, c_first_name#27, substr(s_city#14, 1, 30) AS substr(s_city, 1, 30)#29, ss_ticket_number#5, amt#24, profit#25, s_city#14]
Input [8]: [ss_ticket_number#5, ss_customer_sk#1, s_city#14, amt#24, profit#25, c_customer_sk#26, c_first_name#27, c_last_name#28]

(31) TakeOrderedAndProject
Input [7]: [c_last_name#28, c_first_name#27, substr(s_city, 1, 30)#29, ss_ticket_number#5, amt#24, profit#25, s_city#14]
Arguments: 100, [c_last_name#28 ASC NULLS FIRST, c_first_name#27 ASC NULLS FIRST, substr(s_city#14, 1, 30) ASC NULLS FIRST, profit#25 ASC NULLS FIRST], [c_last_name#28, c_first_name#27, substr(s_city, 1, 30)#29, ss_ticket_number#5, amt#24, profit#25]

