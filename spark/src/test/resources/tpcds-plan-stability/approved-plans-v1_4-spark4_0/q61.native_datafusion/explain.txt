== Physical Plan ==
* Project (62)
+- * BroadcastNestedLoopJoin Inner BuildRight (61)
   :- * HashAggregate (38)
   :  +- Exchange (37)
   :     +- * HashAggregate (36)
   :        +- * ColumnarToRow (35)
   :           +- CometProject (34)
   :              +- CometBroadcastHashJoin (33)
   :                 :- CometProject (28)
   :                 :  +- CometBroadcastHashJoin (27)
   :                 :     :- CometProject (25)
   :                 :     :  +- CometBroadcastHashJoin (24)
   :                 :     :     :- CometProject (20)
   :                 :     :     :  +- CometBroadcastHashJoin (19)
   :                 :     :     :     :- CometProject (14)
   :                 :     :     :     :  +- CometBroadcastHashJoin (13)
   :                 :     :     :     :     :- CometProject (8)
   :                 :     :     :     :     :  +- CometBroadcastHashJoin (7)
   :                 :     :     :     :     :     :- CometFilter (2)
   :                 :     :     :     :     :     :  +- CometNativeScan: `spark_catalog`.`default`.`store_sales` (1)
   :                 :     :     :     :     :     +- CometBroadcastExchange (6)
   :                 :     :     :     :     :        +- CometProject (5)
   :                 :     :     :     :     :           +- CometFilter (4)
   :                 :     :     :     :     :              +- CometNativeScan: `spark_catalog`.`default`.`store` (3)
   :                 :     :     :     :     +- CometBroadcastExchange (12)
   :                 :     :     :     :        +- CometProject (11)
   :                 :     :     :     :           +- CometFilter (10)
   :                 :     :     :     :              +- CometNativeScan: `spark_catalog`.`default`.`promotion` (9)
   :                 :     :     :     +- CometBroadcastExchange (18)
   :                 :     :     :        +- CometProject (17)
   :                 :     :     :           +- CometFilter (16)
   :                 :     :     :              +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (15)
   :                 :     :     +- CometBroadcastExchange (23)
   :                 :     :        +- CometFilter (22)
   :                 :     :           +- CometNativeScan: `spark_catalog`.`default`.`customer` (21)
   :                 :     +- ReusedExchange (26)
   :                 +- CometBroadcastExchange (32)
   :                    +- CometProject (31)
   :                       +- CometFilter (30)
   :                          +- CometNativeScan: `spark_catalog`.`default`.`item` (29)
   +- BroadcastExchange (60)
      +- * HashAggregate (59)
         +- Exchange (58)
            +- * HashAggregate (57)
               +- * ColumnarToRow (56)
                  +- CometProject (55)
                     +- CometBroadcastHashJoin (54)
                        :- CometProject (52)
                        :  +- CometBroadcastHashJoin (51)
                        :     :- CometProject (49)
                        :     :  +- CometBroadcastHashJoin (48)
                        :     :     :- CometProject (46)
                        :     :     :  +- CometBroadcastHashJoin (45)
                        :     :     :     :- CometProject (43)
                        :     :     :     :  +- CometBroadcastHashJoin (42)
                        :     :     :     :     :- CometFilter (40)
                        :     :     :     :     :  +- CometNativeScan: `spark_catalog`.`default`.`store_sales` (39)
                        :     :     :     :     +- ReusedExchange (41)
                        :     :     :     +- ReusedExchange (44)
                        :     :     +- ReusedExchange (47)
                        :     +- ReusedExchange (50)
                        +- ReusedExchange (53)


(1) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [6]: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6]
Arguments: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6]

(2) CometFilter
Input [6]: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6]
Condition : (((isnotnull(ss_store_sk#3) AND isnotnull(ss_promo_sk#4)) AND isnotnull(ss_customer_sk#2)) AND isnotnull(ss_item_sk#1))

(3) CometNativeScan: `spark_catalog`.`default`.`store`
Output [2]: [s_store_sk#7, s_gmt_offset#8]
Arguments: [s_store_sk#7, s_gmt_offset#8]

(4) CometFilter
Input [2]: [s_store_sk#7, s_gmt_offset#8]
Condition : ((isnotnull(s_gmt_offset#8) AND (s_gmt_offset#8 = -5.00)) AND isnotnull(s_store_sk#7))

(5) CometProject
Input [2]: [s_store_sk#7, s_gmt_offset#8]
Arguments: [s_store_sk#7], [s_store_sk#7]

(6) CometBroadcastExchange
Input [1]: [s_store_sk#7]
Arguments: [s_store_sk#7]

(7) CometBroadcastHashJoin
Left output [6]: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6]
Right output [1]: [s_store_sk#7]
Arguments: [ss_store_sk#3], [s_store_sk#7], Inner, BuildRight

(8) CometProject
Input [7]: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6, s_store_sk#7]
Arguments: [ss_item_sk#1, ss_customer_sk#2, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6], [ss_item_sk#1, ss_customer_sk#2, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6]

(9) CometNativeScan: `spark_catalog`.`default`.`promotion`
Output [4]: [p_promo_sk#9, p_channel_dmail#10, p_channel_email#11, p_channel_tv#12]
Arguments: [p_promo_sk#9, p_channel_dmail#10, p_channel_email#11, p_channel_tv#12]

(10) CometFilter
Input [4]: [p_promo_sk#9, p_channel_dmail#10, p_channel_email#11, p_channel_tv#12]
Condition : ((((p_channel_dmail#10 = Y) OR (p_channel_email#11 = Y)) OR (p_channel_tv#12 = Y)) AND isnotnull(p_promo_sk#9))

(11) CometProject
Input [4]: [p_promo_sk#9, p_channel_dmail#10, p_channel_email#11, p_channel_tv#12]
Arguments: [p_promo_sk#9], [p_promo_sk#9]

(12) CometBroadcastExchange
Input [1]: [p_promo_sk#9]
Arguments: [p_promo_sk#9]

(13) CometBroadcastHashJoin
Left output [5]: [ss_item_sk#1, ss_customer_sk#2, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6]
Right output [1]: [p_promo_sk#9]
Arguments: [ss_promo_sk#4], [p_promo_sk#9], Inner, BuildRight

(14) CometProject
Input [6]: [ss_item_sk#1, ss_customer_sk#2, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6, p_promo_sk#9]
Arguments: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5, ss_sold_date_sk#6], [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5, ss_sold_date_sk#6]

(15) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [3]: [d_date_sk#13, d_year#14, d_moy#15]
Arguments: [d_date_sk#13, d_year#14, d_moy#15]

(16) CometFilter
Input [3]: [d_date_sk#13, d_year#14, d_moy#15]
Condition : ((((isnotnull(d_year#14) AND isnotnull(d_moy#15)) AND (d_year#14 = 1998)) AND (d_moy#15 = 11)) AND isnotnull(d_date_sk#13))

(17) CometProject
Input [3]: [d_date_sk#13, d_year#14, d_moy#15]
Arguments: [d_date_sk#13], [d_date_sk#13]

(18) CometBroadcastExchange
Input [1]: [d_date_sk#13]
Arguments: [d_date_sk#13]

(19) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5, ss_sold_date_sk#6]
Right output [1]: [d_date_sk#13]
Arguments: [ss_sold_date_sk#6], [d_date_sk#13], Inner, BuildRight

(20) CometProject
Input [5]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5, ss_sold_date_sk#6, d_date_sk#13]
Arguments: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5], [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5]

(21) CometNativeScan: `spark_catalog`.`default`.`customer`
Output [2]: [c_customer_sk#16, c_current_addr_sk#17]
Arguments: [c_customer_sk#16, c_current_addr_sk#17]

(22) CometFilter
Input [2]: [c_customer_sk#16, c_current_addr_sk#17]
Condition : (isnotnull(c_customer_sk#16) AND isnotnull(c_current_addr_sk#17))

(23) CometBroadcastExchange
Input [2]: [c_customer_sk#16, c_current_addr_sk#17]
Arguments: [c_customer_sk#16, c_current_addr_sk#17]

(24) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5]
Right output [2]: [c_customer_sk#16, c_current_addr_sk#17]
Arguments: [ss_customer_sk#2], [c_customer_sk#16], Inner, BuildRight

(25) CometProject
Input [5]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5, c_customer_sk#16, c_current_addr_sk#17]
Arguments: [ss_item_sk#1, ss_ext_sales_price#5, c_current_addr_sk#17], [ss_item_sk#1, ss_ext_sales_price#5, c_current_addr_sk#17]

(26) ReusedExchange [Reuses operator id: 6]
Output [1]: [ca_address_sk#18]

(27) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#1, ss_ext_sales_price#5, c_current_addr_sk#17]
Right output [1]: [ca_address_sk#18]
Arguments: [c_current_addr_sk#17], [ca_address_sk#18], Inner, BuildRight

(28) CometProject
Input [4]: [ss_item_sk#1, ss_ext_sales_price#5, c_current_addr_sk#17, ca_address_sk#18]
Arguments: [ss_item_sk#1, ss_ext_sales_price#5], [ss_item_sk#1, ss_ext_sales_price#5]

(29) CometNativeScan: `spark_catalog`.`default`.`item`
Output [2]: [i_item_sk#19, i_category#20]
Arguments: [i_item_sk#19, i_category#20]

(30) CometFilter
Input [2]: [i_item_sk#19, i_category#20]
Condition : ((isnotnull(i_category#20) AND (i_category#20 = Jewelry                                           )) AND isnotnull(i_item_sk#19))

(31) CometProject
Input [2]: [i_item_sk#19, i_category#20]
Arguments: [i_item_sk#19], [i_item_sk#19]

(32) CometBroadcastExchange
Input [1]: [i_item_sk#19]
Arguments: [i_item_sk#19]

(33) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#1, ss_ext_sales_price#5]
Right output [1]: [i_item_sk#19]
Arguments: [ss_item_sk#1], [i_item_sk#19], Inner, BuildRight

(34) CometProject
Input [3]: [ss_item_sk#1, ss_ext_sales_price#5, i_item_sk#19]
Arguments: [ss_ext_sales_price#5], [ss_ext_sales_price#5]

(35) ColumnarToRow [codegen id : 1]
Input [1]: [ss_ext_sales_price#5]

(36) HashAggregate [codegen id : 1]
Input [1]: [ss_ext_sales_price#5]
Keys: []
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#5))]
Aggregate Attributes [1]: [sum#21]
Results [1]: [sum#22]

(37) Exchange
Input [1]: [sum#22]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=1]

(38) HashAggregate [codegen id : 4]
Input [1]: [sum#22]
Keys: []
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#5))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#5))#23]
Results [1]: [MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#5))#23,17,2) AS promotions#24]

(39) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [5]: [ss_item_sk#25, ss_customer_sk#26, ss_store_sk#27, ss_ext_sales_price#28, ss_sold_date_sk#29]
Arguments: [ss_item_sk#25, ss_customer_sk#26, ss_store_sk#27, ss_ext_sales_price#28, ss_sold_date_sk#29]

(40) CometFilter
Input [5]: [ss_item_sk#25, ss_customer_sk#26, ss_store_sk#27, ss_ext_sales_price#28, ss_sold_date_sk#29]
Condition : ((isnotnull(ss_store_sk#27) AND isnotnull(ss_customer_sk#26)) AND isnotnull(ss_item_sk#25))

(41) ReusedExchange [Reuses operator id: 6]
Output [1]: [s_store_sk#30]

(42) CometBroadcastHashJoin
Left output [5]: [ss_item_sk#25, ss_customer_sk#26, ss_store_sk#27, ss_ext_sales_price#28, ss_sold_date_sk#29]
Right output [1]: [s_store_sk#30]
Arguments: [ss_store_sk#27], [s_store_sk#30], Inner, BuildRight

(43) CometProject
Input [6]: [ss_item_sk#25, ss_customer_sk#26, ss_store_sk#27, ss_ext_sales_price#28, ss_sold_date_sk#29, s_store_sk#30]
Arguments: [ss_item_sk#25, ss_customer_sk#26, ss_ext_sales_price#28, ss_sold_date_sk#29], [ss_item_sk#25, ss_customer_sk#26, ss_ext_sales_price#28, ss_sold_date_sk#29]

(44) ReusedExchange [Reuses operator id: 18]
Output [1]: [d_date_sk#31]

(45) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#25, ss_customer_sk#26, ss_ext_sales_price#28, ss_sold_date_sk#29]
Right output [1]: [d_date_sk#31]
Arguments: [ss_sold_date_sk#29], [d_date_sk#31], Inner, BuildRight

(46) CometProject
Input [5]: [ss_item_sk#25, ss_customer_sk#26, ss_ext_sales_price#28, ss_sold_date_sk#29, d_date_sk#31]
Arguments: [ss_item_sk#25, ss_customer_sk#26, ss_ext_sales_price#28], [ss_item_sk#25, ss_customer_sk#26, ss_ext_sales_price#28]

(47) ReusedExchange [Reuses operator id: 23]
Output [2]: [c_customer_sk#32, c_current_addr_sk#33]

(48) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#25, ss_customer_sk#26, ss_ext_sales_price#28]
Right output [2]: [c_customer_sk#32, c_current_addr_sk#33]
Arguments: [ss_customer_sk#26], [c_customer_sk#32], Inner, BuildRight

(49) CometProject
Input [5]: [ss_item_sk#25, ss_customer_sk#26, ss_ext_sales_price#28, c_customer_sk#32, c_current_addr_sk#33]
Arguments: [ss_item_sk#25, ss_ext_sales_price#28, c_current_addr_sk#33], [ss_item_sk#25, ss_ext_sales_price#28, c_current_addr_sk#33]

(50) ReusedExchange [Reuses operator id: 6]
Output [1]: [ca_address_sk#34]

(51) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#25, ss_ext_sales_price#28, c_current_addr_sk#33]
Right output [1]: [ca_address_sk#34]
Arguments: [c_current_addr_sk#33], [ca_address_sk#34], Inner, BuildRight

(52) CometProject
Input [4]: [ss_item_sk#25, ss_ext_sales_price#28, c_current_addr_sk#33, ca_address_sk#34]
Arguments: [ss_item_sk#25, ss_ext_sales_price#28], [ss_item_sk#25, ss_ext_sales_price#28]

(53) ReusedExchange [Reuses operator id: 32]
Output [1]: [i_item_sk#35]

(54) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#25, ss_ext_sales_price#28]
Right output [1]: [i_item_sk#35]
Arguments: [ss_item_sk#25], [i_item_sk#35], Inner, BuildRight

(55) CometProject
Input [3]: [ss_item_sk#25, ss_ext_sales_price#28, i_item_sk#35]
Arguments: [ss_ext_sales_price#28], [ss_ext_sales_price#28]

(56) ColumnarToRow [codegen id : 2]
Input [1]: [ss_ext_sales_price#28]

(57) HashAggregate [codegen id : 2]
Input [1]: [ss_ext_sales_price#28]
Keys: []
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#28))]
Aggregate Attributes [1]: [sum#36]
Results [1]: [sum#37]

(58) Exchange
Input [1]: [sum#37]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=2]

(59) HashAggregate [codegen id : 3]
Input [1]: [sum#37]
Keys: []
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#28))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#28))#38]
Results [1]: [MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#28))#38,17,2) AS total#39]

(60) BroadcastExchange
Input [1]: [total#39]
Arguments: IdentityBroadcastMode, [plan_id=3]

(61) BroadcastNestedLoopJoin [codegen id : 4]
Join type: Inner
Join condition: None

(62) Project [codegen id : 4]
Output [3]: [promotions#24, total#39, ((cast(promotions#24 as decimal(15,4)) / cast(total#39 as decimal(15,4))) * 100) AS ((CAST(promotions AS DECIMAL(15,4)) / CAST(total AS DECIMAL(15,4))) * 100)#40]
Input [2]: [promotions#24, total#39]

