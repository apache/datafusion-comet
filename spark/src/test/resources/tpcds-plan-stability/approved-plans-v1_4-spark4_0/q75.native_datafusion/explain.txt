== Physical Plan ==
* CometColumnarToRow (126)
+- CometTakeOrderedAndProject (125)
   +- CometProject (124)
      +- CometSortMergeJoin (123)
         :- CometSort (67)
         :  +- CometColumnarExchange (66)
         :     +- * Filter (65)
         :        +- * HashAggregate (64)
         :           +- * CometColumnarToRow (63)
         :              +- CometExchange (62)
         :                 +- CometHashAggregate (61)
         :                    +- CometHashAggregate (60)
         :                       +- CometExchange (59)
         :                          +- CometHashAggregate (58)
         :                             +- CometUnion (57)
         :                                :- CometProject (22)
         :                                :  +- CometSortMergeJoin (21)
         :                                :     :- CometSort (15)
         :                                :     :  +- CometExchange (14)
         :                                :     :     +- CometProject (13)
         :                                :     :        +- CometBroadcastHashJoin (12)
         :                                :     :           :- CometProject (8)
         :                                :     :           :  +- CometBroadcastHashJoin (7)
         :                                :     :           :     :- CometFilter (2)
         :                                :     :           :     :  +- CometNativeScan parquet spark_catalog.default.catalog_sales (1)
         :                                :     :           :     +- CometBroadcastExchange (6)
         :                                :     :           :        +- CometProject (5)
         :                                :     :           :           +- CometFilter (4)
         :                                :     :           :              +- CometNativeScan parquet spark_catalog.default.item (3)
         :                                :     :           +- CometBroadcastExchange (11)
         :                                :     :              +- CometFilter (10)
         :                                :     :                 +- CometNativeScan parquet spark_catalog.default.date_dim (9)
         :                                :     +- CometSort (20)
         :                                :        +- CometExchange (19)
         :                                :           +- CometProject (18)
         :                                :              +- CometFilter (17)
         :                                :                 +- CometNativeScan parquet spark_catalog.default.catalog_returns (16)
         :                                :- CometProject (39)
         :                                :  +- CometSortMergeJoin (38)
         :                                :     :- CometSort (32)
         :                                :     :  +- CometExchange (31)
         :                                :     :     +- CometProject (30)
         :                                :     :        +- CometBroadcastHashJoin (29)
         :                                :     :           :- CometProject (27)
         :                                :     :           :  +- CometBroadcastHashJoin (26)
         :                                :     :           :     :- CometFilter (24)
         :                                :     :           :     :  +- CometNativeScan parquet spark_catalog.default.store_sales (23)
         :                                :     :           :     +- ReusedExchange (25)
         :                                :     :           +- ReusedExchange (28)
         :                                :     +- CometSort (37)
         :                                :        +- CometExchange (36)
         :                                :           +- CometProject (35)
         :                                :              +- CometFilter (34)
         :                                :                 +- CometNativeScan parquet spark_catalog.default.store_returns (33)
         :                                +- CometProject (56)
         :                                   +- CometSortMergeJoin (55)
         :                                      :- CometSort (49)
         :                                      :  +- CometExchange (48)
         :                                      :     +- CometProject (47)
         :                                      :        +- CometBroadcastHashJoin (46)
         :                                      :           :- CometProject (44)
         :                                      :           :  +- CometBroadcastHashJoin (43)
         :                                      :           :     :- CometFilter (41)
         :                                      :           :     :  +- CometNativeScan parquet spark_catalog.default.web_sales (40)
         :                                      :           :     +- ReusedExchange (42)
         :                                      :           +- ReusedExchange (45)
         :                                      +- CometSort (54)
         :                                         +- CometExchange (53)
         :                                            +- CometProject (52)
         :                                               +- CometFilter (51)
         :                                                  +- CometNativeScan parquet spark_catalog.default.web_returns (50)
         +- CometSort (122)
            +- CometColumnarExchange (121)
               +- * Filter (120)
                  +- * HashAggregate (119)
                     +- * CometColumnarToRow (118)
                        +- CometExchange (117)
                           +- CometHashAggregate (116)
                              +- CometHashAggregate (115)
                                 +- CometExchange (114)
                                    +- CometHashAggregate (113)
                                       +- CometUnion (112)
                                          :- CometProject (83)
                                          :  +- CometSortMergeJoin (82)
                                          :     :- CometSort (79)
                                          :     :  +- CometExchange (78)
                                          :     :     +- CometProject (77)
                                          :     :        +- CometBroadcastHashJoin (76)
                                          :     :           :- CometProject (72)
                                          :     :           :  +- CometBroadcastHashJoin (71)
                                          :     :           :     :- CometFilter (69)
                                          :     :           :     :  +- CometNativeScan parquet spark_catalog.default.catalog_sales (68)
                                          :     :           :     +- ReusedExchange (70)
                                          :     :           +- CometBroadcastExchange (75)
                                          :     :              +- CometFilter (74)
                                          :     :                 +- CometNativeScan parquet spark_catalog.default.date_dim (73)
                                          :     +- CometSort (81)
                                          :        +- ReusedExchange (80)
                                          :- CometProject (97)
                                          :  +- CometSortMergeJoin (96)
                                          :     :- CometSort (93)
                                          :     :  +- CometExchange (92)
                                          :     :     +- CometProject (91)
                                          :     :        +- CometBroadcastHashJoin (90)
                                          :     :           :- CometProject (88)
                                          :     :           :  +- CometBroadcastHashJoin (87)
                                          :     :           :     :- CometFilter (85)
                                          :     :           :     :  +- CometNativeScan parquet spark_catalog.default.store_sales (84)
                                          :     :           :     +- ReusedExchange (86)
                                          :     :           +- ReusedExchange (89)
                                          :     +- CometSort (95)
                                          :        +- ReusedExchange (94)
                                          +- CometProject (111)
                                             +- CometSortMergeJoin (110)
                                                :- CometSort (107)
                                                :  +- CometExchange (106)
                                                :     +- CometProject (105)
                                                :        +- CometBroadcastHashJoin (104)
                                                :           :- CometProject (102)
                                                :           :  +- CometBroadcastHashJoin (101)
                                                :           :     :- CometFilter (99)
                                                :           :     :  +- CometNativeScan parquet spark_catalog.default.web_sales (98)
                                                :           :     +- ReusedExchange (100)
                                                :           +- ReusedExchange (103)
                                                +- CometSort (109)
                                                   +- ReusedExchange (108)


(1) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [5]: [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, cs_sold_date_sk#5]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#5)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int,cs_order_number:int,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>

(2) CometFilter
Input [5]: [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, cs_sold_date_sk#5]
Condition : isnotnull(cs_item_sk#1)

(3) CometNativeScan parquet spark_catalog.default.item
Output [6]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9, i_category#10, i_manufact_id#11]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_category), IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id), IsNotNull(i_manufact_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int,i_category:string,i_manufact_id:int>

(4) CometFilter
Input [6]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9, i_category#10, i_manufact_id#11]
Condition : ((((((isnotnull(i_category#10) AND (static_invoke(CharVarcharCodegenUtils.readSidePadding(i_category#10, 50)) = Books                                             )) AND isnotnull(i_item_sk#6)) AND isnotnull(i_brand_id#7)) AND isnotnull(i_class_id#8)) AND isnotnull(i_category_id#9)) AND isnotnull(i_manufact_id#11))

(5) CometProject
Input [6]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9, i_category#10, i_manufact_id#11]
Arguments: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11], [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11]

(6) CometBroadcastExchange
Input [5]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11]
Arguments: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11]

(7) CometBroadcastHashJoin
Left output [5]: [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, cs_sold_date_sk#5]
Right output [5]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11]
Arguments: [cs_item_sk#1], [i_item_sk#6], Inner, BuildRight

(8) CometProject
Input [10]: [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, cs_sold_date_sk#5, i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11]
Arguments: [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, cs_sold_date_sk#5, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11], [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, cs_sold_date_sk#5, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11]

(9) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#12, d_year#13]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(10) CometFilter
Input [2]: [d_date_sk#12, d_year#13]
Condition : ((isnotnull(d_year#13) AND (d_year#13 = 2002)) AND isnotnull(d_date_sk#12))

(11) CometBroadcastExchange
Input [2]: [d_date_sk#12, d_year#13]
Arguments: [d_date_sk#12, d_year#13]

(12) CometBroadcastHashJoin
Left output [9]: [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, cs_sold_date_sk#5, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11]
Right output [2]: [d_date_sk#12, d_year#13]
Arguments: [cs_sold_date_sk#5], [d_date_sk#12], Inner, BuildRight

(13) CometProject
Input [11]: [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, cs_sold_date_sk#5, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, d_date_sk#12, d_year#13]
Arguments: [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, d_year#13], [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, d_year#13]

(14) CometExchange
Input [9]: [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, d_year#13]
Arguments: hashpartitioning(cs_order_number#2, cs_item_sk#1, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(15) CometSort
Input [9]: [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, d_year#13]
Arguments: [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, d_year#13], [cs_order_number#2 ASC NULLS FIRST, cs_item_sk#1 ASC NULLS FIRST]

(16) CometNativeScan parquet spark_catalog.default.catalog_returns
Output [5]: [cr_item_sk#14, cr_order_number#15, cr_return_quantity#16, cr_return_amount#17, cr_returned_date_sk#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_returns]
PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)]
ReadSchema: struct<cr_item_sk:int,cr_order_number:int,cr_return_quantity:int,cr_return_amount:decimal(7,2)>

(17) CometFilter
Input [5]: [cr_item_sk#14, cr_order_number#15, cr_return_quantity#16, cr_return_amount#17, cr_returned_date_sk#18]
Condition : (isnotnull(cr_order_number#15) AND isnotnull(cr_item_sk#14))

(18) CometProject
Input [5]: [cr_item_sk#14, cr_order_number#15, cr_return_quantity#16, cr_return_amount#17, cr_returned_date_sk#18]
Arguments: [cr_item_sk#14, cr_order_number#15, cr_return_quantity#16, cr_return_amount#17], [cr_item_sk#14, cr_order_number#15, cr_return_quantity#16, cr_return_amount#17]

(19) CometExchange
Input [4]: [cr_item_sk#14, cr_order_number#15, cr_return_quantity#16, cr_return_amount#17]
Arguments: hashpartitioning(cr_order_number#15, cr_item_sk#14, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(20) CometSort
Input [4]: [cr_item_sk#14, cr_order_number#15, cr_return_quantity#16, cr_return_amount#17]
Arguments: [cr_item_sk#14, cr_order_number#15, cr_return_quantity#16, cr_return_amount#17], [cr_order_number#15 ASC NULLS FIRST, cr_item_sk#14 ASC NULLS FIRST]

(21) CometSortMergeJoin
Left output [9]: [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, d_year#13]
Right output [4]: [cr_item_sk#14, cr_order_number#15, cr_return_quantity#16, cr_return_amount#17]
Arguments: [cs_order_number#2, cs_item_sk#1], [cr_order_number#15, cr_item_sk#14], LeftOuter

(22) CometProject
Input [13]: [cs_item_sk#1, cs_order_number#2, cs_quantity#3, cs_ext_sales_price#4, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, d_year#13, cr_item_sk#14, cr_order_number#15, cr_return_quantity#16, cr_return_amount#17]
Arguments: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#19, sales_amt#20], [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, (cs_quantity#3 - coalesce(cr_return_quantity#16, 0)) AS sales_cnt#19, (cs_ext_sales_price#4 - coalesce(cr_return_amount#17, 0.00)) AS sales_amt#20]

(23) CometNativeScan parquet spark_catalog.default.store_sales
Output [5]: [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, ss_sold_date_sk#25]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#25)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_ticket_number:int,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>

(24) CometFilter
Input [5]: [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, ss_sold_date_sk#25]
Condition : isnotnull(ss_item_sk#21)

(25) ReusedExchange [Reuses operator id: 6]
Output [5]: [i_item_sk#26, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]

(26) CometBroadcastHashJoin
Left output [5]: [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, ss_sold_date_sk#25]
Right output [5]: [i_item_sk#26, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]
Arguments: [ss_item_sk#21], [i_item_sk#26], Inner, BuildRight

(27) CometProject
Input [10]: [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, ss_sold_date_sk#25, i_item_sk#26, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]
Arguments: [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, ss_sold_date_sk#25, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30], [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, ss_sold_date_sk#25, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]

(28) ReusedExchange [Reuses operator id: 11]
Output [2]: [d_date_sk#31, d_year#32]

(29) CometBroadcastHashJoin
Left output [9]: [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, ss_sold_date_sk#25, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30]
Right output [2]: [d_date_sk#31, d_year#32]
Arguments: [ss_sold_date_sk#25], [d_date_sk#31], Inner, BuildRight

(30) CometProject
Input [11]: [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, ss_sold_date_sk#25, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_date_sk#31, d_year#32]
Arguments: [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_year#32], [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_year#32]

(31) CometExchange
Input [9]: [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_year#32]
Arguments: hashpartitioning(ss_ticket_number#22, ss_item_sk#21, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(32) CometSort
Input [9]: [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_year#32]
Arguments: [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_year#32], [ss_ticket_number#22 ASC NULLS FIRST, ss_item_sk#21 ASC NULLS FIRST]

(33) CometNativeScan parquet spark_catalog.default.store_returns
Output [5]: [sr_item_sk#33, sr_ticket_number#34, sr_return_quantity#35, sr_return_amt#36, sr_returned_date_sk#37]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store_returns]
PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)]
ReadSchema: struct<sr_item_sk:int,sr_ticket_number:int,sr_return_quantity:int,sr_return_amt:decimal(7,2)>

(34) CometFilter
Input [5]: [sr_item_sk#33, sr_ticket_number#34, sr_return_quantity#35, sr_return_amt#36, sr_returned_date_sk#37]
Condition : (isnotnull(sr_ticket_number#34) AND isnotnull(sr_item_sk#33))

(35) CometProject
Input [5]: [sr_item_sk#33, sr_ticket_number#34, sr_return_quantity#35, sr_return_amt#36, sr_returned_date_sk#37]
Arguments: [sr_item_sk#33, sr_ticket_number#34, sr_return_quantity#35, sr_return_amt#36], [sr_item_sk#33, sr_ticket_number#34, sr_return_quantity#35, sr_return_amt#36]

(36) CometExchange
Input [4]: [sr_item_sk#33, sr_ticket_number#34, sr_return_quantity#35, sr_return_amt#36]
Arguments: hashpartitioning(sr_ticket_number#34, sr_item_sk#33, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(37) CometSort
Input [4]: [sr_item_sk#33, sr_ticket_number#34, sr_return_quantity#35, sr_return_amt#36]
Arguments: [sr_item_sk#33, sr_ticket_number#34, sr_return_quantity#35, sr_return_amt#36], [sr_ticket_number#34 ASC NULLS FIRST, sr_item_sk#33 ASC NULLS FIRST]

(38) CometSortMergeJoin
Left output [9]: [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_year#32]
Right output [4]: [sr_item_sk#33, sr_ticket_number#34, sr_return_quantity#35, sr_return_amt#36]
Arguments: [ss_ticket_number#22, ss_item_sk#21], [sr_ticket_number#34, sr_item_sk#33], LeftOuter

(39) CometProject
Input [13]: [ss_item_sk#21, ss_ticket_number#22, ss_quantity#23, ss_ext_sales_price#24, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, d_year#32, sr_item_sk#33, sr_ticket_number#34, sr_return_quantity#35, sr_return_amt#36]
Arguments: [d_year#32, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#38, sales_amt#39], [d_year#32, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, (ss_quantity#23 - coalesce(sr_return_quantity#35, 0)) AS sales_cnt#38, (ss_ext_sales_price#24 - coalesce(sr_return_amt#36, 0.00)) AS sales_amt#39]

(40) CometNativeScan parquet spark_catalog.default.web_sales
Output [5]: [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, ws_sold_date_sk#44]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#44)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_order_number:int,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>

(41) CometFilter
Input [5]: [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, ws_sold_date_sk#44]
Condition : isnotnull(ws_item_sk#40)

(42) ReusedExchange [Reuses operator id: 6]
Output [5]: [i_item_sk#45, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49]

(43) CometBroadcastHashJoin
Left output [5]: [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, ws_sold_date_sk#44]
Right output [5]: [i_item_sk#45, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49]
Arguments: [ws_item_sk#40], [i_item_sk#45], Inner, BuildRight

(44) CometProject
Input [10]: [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, ws_sold_date_sk#44, i_item_sk#45, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49]
Arguments: [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, ws_sold_date_sk#44, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49], [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, ws_sold_date_sk#44, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49]

(45) ReusedExchange [Reuses operator id: 11]
Output [2]: [d_date_sk#50, d_year#51]

(46) CometBroadcastHashJoin
Left output [9]: [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, ws_sold_date_sk#44, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49]
Right output [2]: [d_date_sk#50, d_year#51]
Arguments: [ws_sold_date_sk#44], [d_date_sk#50], Inner, BuildRight

(47) CometProject
Input [11]: [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, ws_sold_date_sk#44, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49, d_date_sk#50, d_year#51]
Arguments: [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49, d_year#51], [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49, d_year#51]

(48) CometExchange
Input [9]: [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49, d_year#51]
Arguments: hashpartitioning(ws_order_number#41, ws_item_sk#40, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(49) CometSort
Input [9]: [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49, d_year#51]
Arguments: [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49, d_year#51], [ws_order_number#41 ASC NULLS FIRST, ws_item_sk#40 ASC NULLS FIRST]

(50) CometNativeScan parquet spark_catalog.default.web_returns
Output [5]: [wr_item_sk#52, wr_order_number#53, wr_return_quantity#54, wr_return_amt#55, wr_returned_date_sk#56]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_returns]
PushedFilters: [IsNotNull(wr_order_number), IsNotNull(wr_item_sk)]
ReadSchema: struct<wr_item_sk:int,wr_order_number:int,wr_return_quantity:int,wr_return_amt:decimal(7,2)>

(51) CometFilter
Input [5]: [wr_item_sk#52, wr_order_number#53, wr_return_quantity#54, wr_return_amt#55, wr_returned_date_sk#56]
Condition : (isnotnull(wr_order_number#53) AND isnotnull(wr_item_sk#52))

(52) CometProject
Input [5]: [wr_item_sk#52, wr_order_number#53, wr_return_quantity#54, wr_return_amt#55, wr_returned_date_sk#56]
Arguments: [wr_item_sk#52, wr_order_number#53, wr_return_quantity#54, wr_return_amt#55], [wr_item_sk#52, wr_order_number#53, wr_return_quantity#54, wr_return_amt#55]

(53) CometExchange
Input [4]: [wr_item_sk#52, wr_order_number#53, wr_return_quantity#54, wr_return_amt#55]
Arguments: hashpartitioning(wr_order_number#53, wr_item_sk#52, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(54) CometSort
Input [4]: [wr_item_sk#52, wr_order_number#53, wr_return_quantity#54, wr_return_amt#55]
Arguments: [wr_item_sk#52, wr_order_number#53, wr_return_quantity#54, wr_return_amt#55], [wr_order_number#53 ASC NULLS FIRST, wr_item_sk#52 ASC NULLS FIRST]

(55) CometSortMergeJoin
Left output [9]: [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49, d_year#51]
Right output [4]: [wr_item_sk#52, wr_order_number#53, wr_return_quantity#54, wr_return_amt#55]
Arguments: [ws_order_number#41, ws_item_sk#40], [wr_order_number#53, wr_item_sk#52], LeftOuter

(56) CometProject
Input [13]: [ws_item_sk#40, ws_order_number#41, ws_quantity#42, ws_ext_sales_price#43, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49, d_year#51, wr_item_sk#52, wr_order_number#53, wr_return_quantity#54, wr_return_amt#55]
Arguments: [d_year#51, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49, sales_cnt#57, sales_amt#58], [d_year#51, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49, (ws_quantity#42 - coalesce(wr_return_quantity#54, 0)) AS sales_cnt#57, (ws_ext_sales_price#43 - coalesce(wr_return_amt#55, 0.00)) AS sales_amt#58]

(57) CometUnion
Child 0 Input [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#19, sales_amt#20]
Child 1 Input [7]: [d_year#32, i_brand_id#27, i_class_id#28, i_category_id#29, i_manufact_id#30, sales_cnt#38, sales_amt#39]
Child 2 Input [7]: [d_year#51, i_brand_id#46, i_class_id#47, i_category_id#48, i_manufact_id#49, sales_cnt#57, sales_amt#58]

(58) CometHashAggregate
Input [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#19, sales_amt#20]
Keys [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#19, sales_amt#20]
Functions: []

(59) CometExchange
Input [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#19, sales_amt#20]
Arguments: hashpartitioning(d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#19, sales_amt#20, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=7]

(60) CometHashAggregate
Input [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#19, sales_amt#20]
Keys [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#19, sales_amt#20]
Functions: []

(61) CometHashAggregate
Input [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#19, sales_amt#20]
Keys [5]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11]
Functions [2]: [partial_sum(sales_cnt#19), partial_sum(UnscaledValue(sales_amt#20))]

(62) CometExchange
Input [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sum#59, sum#60]
Arguments: hashpartitioning(d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=8]

(63) CometColumnarToRow [codegen id : 1]
Input [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sum#59, sum#60]

(64) HashAggregate [codegen id : 1]
Input [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sum#59, sum#60]
Keys [5]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11]
Functions [2]: [sum(sales_cnt#19), sum(UnscaledValue(sales_amt#20))]
Aggregate Attributes [2]: [sum(sales_cnt#19)#61, sum(UnscaledValue(sales_amt#20))#62]
Results [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sum(sales_cnt#19)#61 AS sales_cnt#63, MakeDecimal(sum(UnscaledValue(sales_amt#20))#62,18,2) AS sales_amt#64]

(65) Filter [codegen id : 1]
Input [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#63, sales_amt#64]
Condition : isnotnull(sales_cnt#63)

(66) CometColumnarExchange
Input [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#63, sales_amt#64]
Arguments: hashpartitioning(i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=9]

(67) CometSort
Input [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#63, sales_amt#64]
Arguments: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#63, sales_amt#64], [i_brand_id#7 ASC NULLS FIRST, i_class_id#8 ASC NULLS FIRST, i_category_id#9 ASC NULLS FIRST, i_manufact_id#11 ASC NULLS FIRST]

(68) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [5]: [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, cs_sold_date_sk#69]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#69)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int,cs_order_number:int,cs_quantity:int,cs_ext_sales_price:decimal(7,2)>

(69) CometFilter
Input [5]: [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, cs_sold_date_sk#69]
Condition : isnotnull(cs_item_sk#65)

(70) ReusedExchange [Reuses operator id: 6]
Output [5]: [i_item_sk#70, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74]

(71) CometBroadcastHashJoin
Left output [5]: [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, cs_sold_date_sk#69]
Right output [5]: [i_item_sk#70, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74]
Arguments: [cs_item_sk#65], [i_item_sk#70], Inner, BuildRight

(72) CometProject
Input [10]: [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, cs_sold_date_sk#69, i_item_sk#70, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74]
Arguments: [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, cs_sold_date_sk#69, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74], [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, cs_sold_date_sk#69, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74]

(73) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#75, d_year#76]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(74) CometFilter
Input [2]: [d_date_sk#75, d_year#76]
Condition : ((isnotnull(d_year#76) AND (d_year#76 = 2001)) AND isnotnull(d_date_sk#75))

(75) CometBroadcastExchange
Input [2]: [d_date_sk#75, d_year#76]
Arguments: [d_date_sk#75, d_year#76]

(76) CometBroadcastHashJoin
Left output [9]: [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, cs_sold_date_sk#69, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74]
Right output [2]: [d_date_sk#75, d_year#76]
Arguments: [cs_sold_date_sk#69], [d_date_sk#75], Inner, BuildRight

(77) CometProject
Input [11]: [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, cs_sold_date_sk#69, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, d_date_sk#75, d_year#76]
Arguments: [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, d_year#76], [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, d_year#76]

(78) CometExchange
Input [9]: [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, d_year#76]
Arguments: hashpartitioning(cs_order_number#66, cs_item_sk#65, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=10]

(79) CometSort
Input [9]: [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, d_year#76]
Arguments: [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, d_year#76], [cs_order_number#66 ASC NULLS FIRST, cs_item_sk#65 ASC NULLS FIRST]

(80) ReusedExchange [Reuses operator id: 19]
Output [4]: [cr_item_sk#77, cr_order_number#78, cr_return_quantity#79, cr_return_amount#80]

(81) CometSort
Input [4]: [cr_item_sk#77, cr_order_number#78, cr_return_quantity#79, cr_return_amount#80]
Arguments: [cr_item_sk#77, cr_order_number#78, cr_return_quantity#79, cr_return_amount#80], [cr_order_number#78 ASC NULLS FIRST, cr_item_sk#77 ASC NULLS FIRST]

(82) CometSortMergeJoin
Left output [9]: [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, d_year#76]
Right output [4]: [cr_item_sk#77, cr_order_number#78, cr_return_quantity#79, cr_return_amount#80]
Arguments: [cs_order_number#66, cs_item_sk#65], [cr_order_number#78, cr_item_sk#77], LeftOuter

(83) CometProject
Input [13]: [cs_item_sk#65, cs_order_number#66, cs_quantity#67, cs_ext_sales_price#68, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, d_year#76, cr_item_sk#77, cr_order_number#78, cr_return_quantity#79, cr_return_amount#80]
Arguments: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#81, sales_amt#82], [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, (cs_quantity#67 - coalesce(cr_return_quantity#79, 0)) AS sales_cnt#81, (cs_ext_sales_price#68 - coalesce(cr_return_amount#80, 0.00)) AS sales_amt#82]

(84) CometNativeScan parquet spark_catalog.default.store_sales
Output [5]: [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, ss_sold_date_sk#87]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#87)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_ticket_number:int,ss_quantity:int,ss_ext_sales_price:decimal(7,2)>

(85) CometFilter
Input [5]: [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, ss_sold_date_sk#87]
Condition : isnotnull(ss_item_sk#83)

(86) ReusedExchange [Reuses operator id: 6]
Output [5]: [i_item_sk#88, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92]

(87) CometBroadcastHashJoin
Left output [5]: [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, ss_sold_date_sk#87]
Right output [5]: [i_item_sk#88, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92]
Arguments: [ss_item_sk#83], [i_item_sk#88], Inner, BuildRight

(88) CometProject
Input [10]: [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, ss_sold_date_sk#87, i_item_sk#88, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92]
Arguments: [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, ss_sold_date_sk#87, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92], [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, ss_sold_date_sk#87, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92]

(89) ReusedExchange [Reuses operator id: 75]
Output [2]: [d_date_sk#93, d_year#94]

(90) CometBroadcastHashJoin
Left output [9]: [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, ss_sold_date_sk#87, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92]
Right output [2]: [d_date_sk#93, d_year#94]
Arguments: [ss_sold_date_sk#87], [d_date_sk#93], Inner, BuildRight

(91) CometProject
Input [11]: [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, ss_sold_date_sk#87, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92, d_date_sk#93, d_year#94]
Arguments: [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92, d_year#94], [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92, d_year#94]

(92) CometExchange
Input [9]: [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92, d_year#94]
Arguments: hashpartitioning(ss_ticket_number#84, ss_item_sk#83, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=11]

(93) CometSort
Input [9]: [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92, d_year#94]
Arguments: [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92, d_year#94], [ss_ticket_number#84 ASC NULLS FIRST, ss_item_sk#83 ASC NULLS FIRST]

(94) ReusedExchange [Reuses operator id: 36]
Output [4]: [sr_item_sk#95, sr_ticket_number#96, sr_return_quantity#97, sr_return_amt#98]

(95) CometSort
Input [4]: [sr_item_sk#95, sr_ticket_number#96, sr_return_quantity#97, sr_return_amt#98]
Arguments: [sr_item_sk#95, sr_ticket_number#96, sr_return_quantity#97, sr_return_amt#98], [sr_ticket_number#96 ASC NULLS FIRST, sr_item_sk#95 ASC NULLS FIRST]

(96) CometSortMergeJoin
Left output [9]: [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92, d_year#94]
Right output [4]: [sr_item_sk#95, sr_ticket_number#96, sr_return_quantity#97, sr_return_amt#98]
Arguments: [ss_ticket_number#84, ss_item_sk#83], [sr_ticket_number#96, sr_item_sk#95], LeftOuter

(97) CometProject
Input [13]: [ss_item_sk#83, ss_ticket_number#84, ss_quantity#85, ss_ext_sales_price#86, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92, d_year#94, sr_item_sk#95, sr_ticket_number#96, sr_return_quantity#97, sr_return_amt#98]
Arguments: [d_year#94, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92, sales_cnt#99, sales_amt#100], [d_year#94, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92, (ss_quantity#85 - coalesce(sr_return_quantity#97, 0)) AS sales_cnt#99, (ss_ext_sales_price#86 - coalesce(sr_return_amt#98, 0.00)) AS sales_amt#100]

(98) CometNativeScan parquet spark_catalog.default.web_sales
Output [5]: [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, ws_sold_date_sk#105]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#105)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_order_number:int,ws_quantity:int,ws_ext_sales_price:decimal(7,2)>

(99) CometFilter
Input [5]: [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, ws_sold_date_sk#105]
Condition : isnotnull(ws_item_sk#101)

(100) ReusedExchange [Reuses operator id: 6]
Output [5]: [i_item_sk#106, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110]

(101) CometBroadcastHashJoin
Left output [5]: [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, ws_sold_date_sk#105]
Right output [5]: [i_item_sk#106, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110]
Arguments: [ws_item_sk#101], [i_item_sk#106], Inner, BuildRight

(102) CometProject
Input [10]: [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, ws_sold_date_sk#105, i_item_sk#106, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110]
Arguments: [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, ws_sold_date_sk#105, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110], [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, ws_sold_date_sk#105, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110]

(103) ReusedExchange [Reuses operator id: 75]
Output [2]: [d_date_sk#111, d_year#112]

(104) CometBroadcastHashJoin
Left output [9]: [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, ws_sold_date_sk#105, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110]
Right output [2]: [d_date_sk#111, d_year#112]
Arguments: [ws_sold_date_sk#105], [d_date_sk#111], Inner, BuildRight

(105) CometProject
Input [11]: [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, ws_sold_date_sk#105, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110, d_date_sk#111, d_year#112]
Arguments: [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110, d_year#112], [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110, d_year#112]

(106) CometExchange
Input [9]: [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110, d_year#112]
Arguments: hashpartitioning(ws_order_number#102, ws_item_sk#101, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=12]

(107) CometSort
Input [9]: [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110, d_year#112]
Arguments: [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110, d_year#112], [ws_order_number#102 ASC NULLS FIRST, ws_item_sk#101 ASC NULLS FIRST]

(108) ReusedExchange [Reuses operator id: 53]
Output [4]: [wr_item_sk#113, wr_order_number#114, wr_return_quantity#115, wr_return_amt#116]

(109) CometSort
Input [4]: [wr_item_sk#113, wr_order_number#114, wr_return_quantity#115, wr_return_amt#116]
Arguments: [wr_item_sk#113, wr_order_number#114, wr_return_quantity#115, wr_return_amt#116], [wr_order_number#114 ASC NULLS FIRST, wr_item_sk#113 ASC NULLS FIRST]

(110) CometSortMergeJoin
Left output [9]: [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110, d_year#112]
Right output [4]: [wr_item_sk#113, wr_order_number#114, wr_return_quantity#115, wr_return_amt#116]
Arguments: [ws_order_number#102, ws_item_sk#101], [wr_order_number#114, wr_item_sk#113], LeftOuter

(111) CometProject
Input [13]: [ws_item_sk#101, ws_order_number#102, ws_quantity#103, ws_ext_sales_price#104, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110, d_year#112, wr_item_sk#113, wr_order_number#114, wr_return_quantity#115, wr_return_amt#116]
Arguments: [d_year#112, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110, sales_cnt#117, sales_amt#118], [d_year#112, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110, (ws_quantity#103 - coalesce(wr_return_quantity#115, 0)) AS sales_cnt#117, (ws_ext_sales_price#104 - coalesce(wr_return_amt#116, 0.00)) AS sales_amt#118]

(112) CometUnion
Child 0 Input [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#81, sales_amt#82]
Child 1 Input [7]: [d_year#94, i_brand_id#89, i_class_id#90, i_category_id#91, i_manufact_id#92, sales_cnt#99, sales_amt#100]
Child 2 Input [7]: [d_year#112, i_brand_id#107, i_class_id#108, i_category_id#109, i_manufact_id#110, sales_cnt#117, sales_amt#118]

(113) CometHashAggregate
Input [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#81, sales_amt#82]
Keys [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#81, sales_amt#82]
Functions: []

(114) CometExchange
Input [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#81, sales_amt#82]
Arguments: hashpartitioning(d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#81, sales_amt#82, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=13]

(115) CometHashAggregate
Input [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#81, sales_amt#82]
Keys [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#81, sales_amt#82]
Functions: []

(116) CometHashAggregate
Input [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#81, sales_amt#82]
Keys [5]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74]
Functions [2]: [partial_sum(sales_cnt#81), partial_sum(UnscaledValue(sales_amt#82))]

(117) CometExchange
Input [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sum#119, sum#120]
Arguments: hashpartitioning(d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=14]

(118) CometColumnarToRow [codegen id : 2]
Input [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sum#119, sum#120]

(119) HashAggregate [codegen id : 2]
Input [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sum#119, sum#120]
Keys [5]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74]
Functions [2]: [sum(sales_cnt#81), sum(UnscaledValue(sales_amt#82))]
Aggregate Attributes [2]: [sum(sales_cnt#81)#61, sum(UnscaledValue(sales_amt#82))#62]
Results [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sum(sales_cnt#81)#61 AS sales_cnt#121, MakeDecimal(sum(UnscaledValue(sales_amt#82))#62,18,2) AS sales_amt#122]

(120) Filter [codegen id : 2]
Input [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#121, sales_amt#122]
Condition : isnotnull(sales_cnt#121)

(121) CometColumnarExchange
Input [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#121, sales_amt#122]
Arguments: hashpartitioning(i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=15]

(122) CometSort
Input [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#121, sales_amt#122]
Arguments: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#121, sales_amt#122], [i_brand_id#71 ASC NULLS FIRST, i_class_id#72 ASC NULLS FIRST, i_category_id#73 ASC NULLS FIRST, i_manufact_id#74 ASC NULLS FIRST]

(123) CometSortMergeJoin
Left output [7]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#63, sales_amt#64]
Right output [7]: [d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#121, sales_amt#122]
Arguments: [i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11], [i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74], Inner, ((cast(sales_cnt#63 as decimal(17,2)) / cast(sales_cnt#121 as decimal(17,2))) < 0.90000000000000000000)

(124) CometProject
Input [14]: [d_year#13, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#63, sales_amt#64, d_year#76, i_brand_id#71, i_class_id#72, i_category_id#73, i_manufact_id#74, sales_cnt#121, sales_amt#122]
Arguments: [prev_year#123, year#124, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, prev_yr_cnt#125, curr_yr_cnt#126, sales_cnt_diff#127, sales_amt_diff#128], [d_year#76 AS prev_year#123, d_year#13 AS year#124, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, sales_cnt#121 AS prev_yr_cnt#125, sales_cnt#63 AS curr_yr_cnt#126, (sales_cnt#63 - sales_cnt#121) AS sales_cnt_diff#127, (sales_amt#64 - sales_amt#122) AS sales_amt_diff#128]

(125) CometTakeOrderedAndProject
Input [10]: [prev_year#123, year#124, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, prev_yr_cnt#125, curr_yr_cnt#126, sales_cnt_diff#127, sales_amt_diff#128]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[sales_cnt_diff#127 ASC NULLS FIRST], output=[prev_year#123,year#124,i_brand_id#7,i_class_id#8,i_category_id#9,i_manufact_id#11,prev_yr_cnt#125,curr_yr_cnt#126,sales_cnt_diff#127,sales_amt_diff#128]), [prev_year#123, year#124, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, prev_yr_cnt#125, curr_yr_cnt#126, sales_cnt_diff#127, sales_amt_diff#128], 100, 0, [sales_cnt_diff#127 ASC NULLS FIRST], [prev_year#123, year#124, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, prev_yr_cnt#125, curr_yr_cnt#126, sales_cnt_diff#127, sales_amt_diff#128]

(126) CometColumnarToRow [codegen id : 3]
Input [10]: [prev_year#123, year#124, i_brand_id#7, i_class_id#8, i_category_id#9, i_manufact_id#11, prev_yr_cnt#125, curr_yr_cnt#126, sales_cnt_diff#127, sales_amt_diff#128]

