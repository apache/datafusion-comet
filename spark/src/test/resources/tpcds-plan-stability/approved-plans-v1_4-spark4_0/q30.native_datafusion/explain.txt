== Physical Plan ==
TakeOrderedAndProject (51)
+- * Project (50)
   +- * BroadcastHashJoin Inner BuildRight (49)
      :- * Project (43)
      :  +- * BroadcastHashJoin Inner BuildRight (42)
      :     :- * Project (37)
      :     :  +- * BroadcastHashJoin Inner BuildRight (36)
      :     :     :- * Filter (18)
      :     :     :  +- * HashAggregate (17)
      :     :     :     +- Exchange (16)
      :     :     :        +- * HashAggregate (15)
      :     :     :           +- * ColumnarToRow (14)
      :     :     :              +- CometProject (13)
      :     :     :                 +- CometBroadcastHashJoin (12)
      :     :     :                    :- CometProject (8)
      :     :     :                    :  +- CometBroadcastHashJoin (7)
      :     :     :                    :     :- CometFilter (2)
      :     :     :                    :     :  +- CometNativeScan: `spark_catalog`.`default`.`web_returns` (1)
      :     :     :                    :     +- CometBroadcastExchange (6)
      :     :     :                    :        +- CometProject (5)
      :     :     :                    :           +- CometFilter (4)
      :     :     :                    :              +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (3)
      :     :     :                    +- CometBroadcastExchange (11)
      :     :     :                       +- CometFilter (10)
      :     :     :                          +- CometNativeScan: `spark_catalog`.`default`.`customer_address` (9)
      :     :     +- BroadcastExchange (35)
      :     :        +- * Filter (34)
      :     :           +- * HashAggregate (33)
      :     :              +- Exchange (32)
      :     :                 +- * HashAggregate (31)
      :     :                    +- * HashAggregate (30)
      :     :                       +- Exchange (29)
      :     :                          +- * HashAggregate (28)
      :     :                             +- * ColumnarToRow (27)
      :     :                                +- CometProject (26)
      :     :                                   +- CometBroadcastHashJoin (25)
      :     :                                      :- CometProject (23)
      :     :                                      :  +- CometBroadcastHashJoin (22)
      :     :                                      :     :- CometFilter (20)
      :     :                                      :     :  +- CometNativeScan: `spark_catalog`.`default`.`web_returns` (19)
      :     :                                      :     +- ReusedExchange (21)
      :     :                                      +- ReusedExchange (24)
      :     +- BroadcastExchange (41)
      :        +- * ColumnarToRow (40)
      :           +- CometFilter (39)
      :              +- CometNativeScan: `spark_catalog`.`default`.`customer` (38)
      +- BroadcastExchange (48)
         +- * ColumnarToRow (47)
            +- CometProject (46)
               +- CometFilter (45)
                  +- CometNativeScan: `spark_catalog`.`default`.`customer_address` (44)


(1) CometNativeScan: `spark_catalog`.`default`.`web_returns`
Output [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]
Arguments: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]

(2) CometFilter
Input [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]
Condition : (isnotnull(wr_returning_addr_sk#2) AND isnotnull(wr_returning_customer_sk#1))

(3) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [2]: [d_date_sk#5, d_year#6]
Arguments: [d_date_sk#5, d_year#6]

(4) CometFilter
Input [2]: [d_date_sk#5, d_year#6]
Condition : ((isnotnull(d_year#6) AND (d_year#6 = 2002)) AND isnotnull(d_date_sk#5))

(5) CometProject
Input [2]: [d_date_sk#5, d_year#6]
Arguments: [d_date_sk#5], [d_date_sk#5]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: [d_date_sk#5]

(7) CometBroadcastHashJoin
Left output [4]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4]
Right output [1]: [d_date_sk#5]
Arguments: [wr_returned_date_sk#4], [d_date_sk#5], Inner, BuildRight

(8) CometProject
Input [5]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, wr_returned_date_sk#4, d_date_sk#5]
Arguments: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3], [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3]

(9) CometNativeScan: `spark_catalog`.`default`.`customer_address`
Output [2]: [ca_address_sk#7, ca_state#8]
Arguments: [ca_address_sk#7, ca_state#8]

(10) CometFilter
Input [2]: [ca_address_sk#7, ca_state#8]
Condition : (isnotnull(ca_address_sk#7) AND isnotnull(ca_state#8))

(11) CometBroadcastExchange
Input [2]: [ca_address_sk#7, ca_state#8]
Arguments: [ca_address_sk#7, ca_state#8]

(12) CometBroadcastHashJoin
Left output [3]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3]
Right output [2]: [ca_address_sk#7, ca_state#8]
Arguments: [wr_returning_addr_sk#2], [ca_address_sk#7], Inner, BuildRight

(13) CometProject
Input [5]: [wr_returning_customer_sk#1, wr_returning_addr_sk#2, wr_return_amt#3, ca_address_sk#7, ca_state#8]
Arguments: [wr_returning_customer_sk#1, wr_return_amt#3, ca_state#8], [wr_returning_customer_sk#1, wr_return_amt#3, ca_state#8]

(14) ColumnarToRow [codegen id : 1]
Input [3]: [wr_returning_customer_sk#1, wr_return_amt#3, ca_state#8]

(15) HashAggregate [codegen id : 1]
Input [3]: [wr_returning_customer_sk#1, wr_return_amt#3, ca_state#8]
Keys [2]: [wr_returning_customer_sk#1, ca_state#8]
Functions [1]: [partial_sum(UnscaledValue(wr_return_amt#3))]
Aggregate Attributes [1]: [sum#9]
Results [3]: [wr_returning_customer_sk#1, ca_state#8, sum#10]

(16) Exchange
Input [3]: [wr_returning_customer_sk#1, ca_state#8, sum#10]
Arguments: hashpartitioning(wr_returning_customer_sk#1, ca_state#8, 5), ENSURE_REQUIREMENTS, [plan_id=1]

(17) HashAggregate [codegen id : 7]
Input [3]: [wr_returning_customer_sk#1, ca_state#8, sum#10]
Keys [2]: [wr_returning_customer_sk#1, ca_state#8]
Functions [1]: [sum(UnscaledValue(wr_return_amt#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(wr_return_amt#3))#11]
Results [3]: [wr_returning_customer_sk#1 AS ctr_customer_sk#12, ca_state#8 AS ctr_state#13, MakeDecimal(sum(UnscaledValue(wr_return_amt#3))#11,17,2) AS ctr_total_return#14]

(18) Filter [codegen id : 7]
Input [3]: [ctr_customer_sk#12, ctr_state#13, ctr_total_return#14]
Condition : isnotnull(ctr_total_return#14)

(19) CometNativeScan: `spark_catalog`.`default`.`web_returns`
Output [4]: [wr_returning_customer_sk#15, wr_returning_addr_sk#16, wr_return_amt#17, wr_returned_date_sk#18]
Arguments: [wr_returning_customer_sk#15, wr_returning_addr_sk#16, wr_return_amt#17, wr_returned_date_sk#18]

(20) CometFilter
Input [4]: [wr_returning_customer_sk#15, wr_returning_addr_sk#16, wr_return_amt#17, wr_returned_date_sk#18]
Condition : isnotnull(wr_returning_addr_sk#16)

(21) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#19]

(22) CometBroadcastHashJoin
Left output [4]: [wr_returning_customer_sk#15, wr_returning_addr_sk#16, wr_return_amt#17, wr_returned_date_sk#18]
Right output [1]: [d_date_sk#19]
Arguments: [wr_returned_date_sk#18], [d_date_sk#19], Inner, BuildRight

(23) CometProject
Input [5]: [wr_returning_customer_sk#15, wr_returning_addr_sk#16, wr_return_amt#17, wr_returned_date_sk#18, d_date_sk#19]
Arguments: [wr_returning_customer_sk#15, wr_returning_addr_sk#16, wr_return_amt#17], [wr_returning_customer_sk#15, wr_returning_addr_sk#16, wr_return_amt#17]

(24) ReusedExchange [Reuses operator id: 11]
Output [2]: [ca_address_sk#20, ca_state#21]

(25) CometBroadcastHashJoin
Left output [3]: [wr_returning_customer_sk#15, wr_returning_addr_sk#16, wr_return_amt#17]
Right output [2]: [ca_address_sk#20, ca_state#21]
Arguments: [wr_returning_addr_sk#16], [ca_address_sk#20], Inner, BuildRight

(26) CometProject
Input [5]: [wr_returning_customer_sk#15, wr_returning_addr_sk#16, wr_return_amt#17, ca_address_sk#20, ca_state#21]
Arguments: [wr_returning_customer_sk#15, wr_return_amt#17, ca_state#21], [wr_returning_customer_sk#15, wr_return_amt#17, ca_state#21]

(27) ColumnarToRow [codegen id : 2]
Input [3]: [wr_returning_customer_sk#15, wr_return_amt#17, ca_state#21]

(28) HashAggregate [codegen id : 2]
Input [3]: [wr_returning_customer_sk#15, wr_return_amt#17, ca_state#21]
Keys [2]: [wr_returning_customer_sk#15, ca_state#21]
Functions [1]: [partial_sum(UnscaledValue(wr_return_amt#17))]
Aggregate Attributes [1]: [sum#22]
Results [3]: [wr_returning_customer_sk#15, ca_state#21, sum#23]

(29) Exchange
Input [3]: [wr_returning_customer_sk#15, ca_state#21, sum#23]
Arguments: hashpartitioning(wr_returning_customer_sk#15, ca_state#21, 5), ENSURE_REQUIREMENTS, [plan_id=2]

(30) HashAggregate [codegen id : 3]
Input [3]: [wr_returning_customer_sk#15, ca_state#21, sum#23]
Keys [2]: [wr_returning_customer_sk#15, ca_state#21]
Functions [1]: [sum(UnscaledValue(wr_return_amt#17))]
Aggregate Attributes [1]: [sum(UnscaledValue(wr_return_amt#17))#11]
Results [2]: [ca_state#21 AS ctr_state#24, MakeDecimal(sum(UnscaledValue(wr_return_amt#17))#11,17,2) AS ctr_total_return#25]

(31) HashAggregate [codegen id : 3]
Input [2]: [ctr_state#24, ctr_total_return#25]
Keys [1]: [ctr_state#24]
Functions [1]: [partial_avg(ctr_total_return#25)]
Aggregate Attributes [2]: [sum#26, count#27]
Results [3]: [ctr_state#24, sum#28, count#29]

(32) Exchange
Input [3]: [ctr_state#24, sum#28, count#29]
Arguments: hashpartitioning(ctr_state#24, 5), ENSURE_REQUIREMENTS, [plan_id=3]

(33) HashAggregate [codegen id : 4]
Input [3]: [ctr_state#24, sum#28, count#29]
Keys [1]: [ctr_state#24]
Functions [1]: [avg(ctr_total_return#25)]
Aggregate Attributes [1]: [avg(ctr_total_return#25)#30]
Results [2]: [(avg(ctr_total_return#25)#30 * 1.2) AS (avg(ctr_total_return) * 1.2)#31, ctr_state#24]

(34) Filter [codegen id : 4]
Input [2]: [(avg(ctr_total_return) * 1.2)#31, ctr_state#24]
Condition : isnotnull((avg(ctr_total_return) * 1.2)#31)

(35) BroadcastExchange
Input [2]: [(avg(ctr_total_return) * 1.2)#31, ctr_state#24]
Arguments: HashedRelationBroadcastMode(List(input[1, string, true]),false), [plan_id=4]

(36) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [ctr_state#13]
Right keys [1]: [ctr_state#24]
Join type: Inner
Join condition: (cast(ctr_total_return#14 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#31)

(37) Project [codegen id : 7]
Output [2]: [ctr_customer_sk#12, ctr_total_return#14]
Input [5]: [ctr_customer_sk#12, ctr_state#13, ctr_total_return#14, (avg(ctr_total_return) * 1.2)#31, ctr_state#24]

(38) CometNativeScan: `spark_catalog`.`default`.`customer`
Output [14]: [c_customer_sk#32, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_day#39, c_birth_month#40, c_birth_year#41, c_birth_country#42, c_login#43, c_email_address#44, c_last_review_date#45]
Arguments: [c_customer_sk#32, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_day#39, c_birth_month#40, c_birth_year#41, c_birth_country#42, c_login#43, c_email_address#44, c_last_review_date#45]

(39) CometFilter
Input [14]: [c_customer_sk#32, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_day#39, c_birth_month#40, c_birth_year#41, c_birth_country#42, c_login#43, c_email_address#44, c_last_review_date#45]
Condition : (isnotnull(c_customer_sk#32) AND isnotnull(c_current_addr_sk#34))

(40) ColumnarToRow [codegen id : 5]
Input [14]: [c_customer_sk#32, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_day#39, c_birth_month#40, c_birth_year#41, c_birth_country#42, c_login#43, c_email_address#44, c_last_review_date#45]

(41) BroadcastExchange
Input [14]: [c_customer_sk#32, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_day#39, c_birth_month#40, c_birth_year#41, c_birth_country#42, c_login#43, c_email_address#44, c_last_review_date#45]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=5]

(42) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [ctr_customer_sk#12]
Right keys [1]: [c_customer_sk#32]
Join type: Inner
Join condition: None

(43) Project [codegen id : 7]
Output [14]: [ctr_total_return#14, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_day#39, c_birth_month#40, c_birth_year#41, c_birth_country#42, c_login#43, c_email_address#44, c_last_review_date#45]
Input [16]: [ctr_customer_sk#12, ctr_total_return#14, c_customer_sk#32, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_day#39, c_birth_month#40, c_birth_year#41, c_birth_country#42, c_login#43, c_email_address#44, c_last_review_date#45]

(44) CometNativeScan: `spark_catalog`.`default`.`customer_address`
Output [2]: [ca_address_sk#46, ca_state#47]
Arguments: [ca_address_sk#46, ca_state#47]

(45) CometFilter
Input [2]: [ca_address_sk#46, ca_state#47]
Condition : ((isnotnull(ca_state#47) AND (ca_state#47 = GA)) AND isnotnull(ca_address_sk#46))

(46) CometProject
Input [2]: [ca_address_sk#46, ca_state#47]
Arguments: [ca_address_sk#46], [ca_address_sk#46]

(47) ColumnarToRow [codegen id : 6]
Input [1]: [ca_address_sk#46]

(48) BroadcastExchange
Input [1]: [ca_address_sk#46]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6]

(49) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [c_current_addr_sk#34]
Right keys [1]: [ca_address_sk#46]
Join type: Inner
Join condition: None

(50) Project [codegen id : 7]
Output [13]: [c_customer_id#33, c_salutation#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_day#39, c_birth_month#40, c_birth_year#41, c_birth_country#42, c_login#43, c_email_address#44, c_last_review_date#45, ctr_total_return#14]
Input [15]: [ctr_total_return#14, c_customer_id#33, c_current_addr_sk#34, c_salutation#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_day#39, c_birth_month#40, c_birth_year#41, c_birth_country#42, c_login#43, c_email_address#44, c_last_review_date#45, ca_address_sk#46]

(51) TakeOrderedAndProject
Input [13]: [c_customer_id#33, c_salutation#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_day#39, c_birth_month#40, c_birth_year#41, c_birth_country#42, c_login#43, c_email_address#44, c_last_review_date#45, ctr_total_return#14]
Arguments: 100, [c_customer_id#33 ASC NULLS FIRST, c_salutation#35 ASC NULLS FIRST, c_first_name#36 ASC NULLS FIRST, c_last_name#37 ASC NULLS FIRST, c_preferred_cust_flag#38 ASC NULLS FIRST, c_birth_day#39 ASC NULLS FIRST, c_birth_month#40 ASC NULLS FIRST, c_birth_year#41 ASC NULLS FIRST, c_birth_country#42 ASC NULLS FIRST, c_login#43 ASC NULLS FIRST, c_email_address#44 ASC NULLS FIRST, c_last_review_date#45 ASC NULLS FIRST, ctr_total_return#14 ASC NULLS FIRST], [c_customer_id#33, c_salutation#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_day#39, c_birth_month#40, c_birth_year#41, c_birth_country#42, c_login#43, c_email_address#44, c_last_review_date#45, ctr_total_return#14]

