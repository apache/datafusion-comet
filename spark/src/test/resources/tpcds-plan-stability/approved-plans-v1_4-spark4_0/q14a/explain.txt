== Physical Plan ==
TakeOrderedAndProject (108)
+- * HashAggregate (107)
   +- * CometColumnarToRow (106)
      +- CometColumnarExchange (105)
         +- * HashAggregate (104)
            +- * Expand (103)
               +- Union (102)
                  :- * Project (67)
                  :  +- * Filter (66)
                  :     +- * HashAggregate (65)
                  :        +- * CometColumnarToRow (64)
                  :           +- CometColumnarExchange (63)
                  :              +- * HashAggregate (62)
                  :                 +- * CometColumnarToRow (61)
                  :                    +- CometProject (60)
                  :                       +- CometBroadcastHashJoin (59)
                  :                          :- CometProject (54)
                  :                          :  +- CometBroadcastHashJoin (53)
                  :                          :     :- CometBroadcastHashJoin (47)
                  :                          :     :  :- CometFilter (2)
                  :                          :     :  :  +- CometScan parquet spark_catalog.default.store_sales (1)
                  :                          :     :  +- CometBroadcastExchange (46)
                  :                          :     :     +- CometProject (45)
                  :                          :     :        +- CometBroadcastHashJoin (44)
                  :                          :     :           :- CometFilter (4)
                  :                          :     :           :  +- CometScan parquet spark_catalog.default.item (3)
                  :                          :     :           +- CometBroadcastExchange (43)
                  :                          :     :              +- CometBroadcastHashJoin (42)
                  :                          :     :                 :- CometHashAggregate (32)
                  :                          :     :                 :  +- CometExchange (31)
                  :                          :     :                 :     +- CometHashAggregate (30)
                  :                          :     :                 :        +- CometProject (29)
                  :                          :     :                 :           +- CometBroadcastHashJoin (28)
                  :                          :     :                 :              :- CometProject (26)
                  :                          :     :                 :              :  +- CometBroadcastHashJoin (25)
                  :                          :     :                 :              :     :- CometFilter (6)
                  :                          :     :                 :              :     :  +- CometScan parquet spark_catalog.default.store_sales (5)
                  :                          :     :                 :              :     +- CometBroadcastExchange (24)
                  :                          :     :                 :              :        +- CometBroadcastHashJoin (23)
                  :                          :     :                 :              :           :- CometFilter (8)
                  :                          :     :                 :              :           :  +- CometScan parquet spark_catalog.default.item (7)
                  :                          :     :                 :              :           +- CometBroadcastExchange (22)
                  :                          :     :                 :              :              +- CometProject (21)
                  :                          :     :                 :              :                 +- CometBroadcastHashJoin (20)
                  :                          :     :                 :              :                    :- CometProject (15)
                  :                          :     :                 :              :                    :  +- CometBroadcastHashJoin (14)
                  :                          :     :                 :              :                    :     :- CometFilter (10)
                  :                          :     :                 :              :                    :     :  +- CometScan parquet spark_catalog.default.catalog_sales (9)
                  :                          :     :                 :              :                    :     +- CometBroadcastExchange (13)
                  :                          :     :                 :              :                    :        +- CometFilter (12)
                  :                          :     :                 :              :                    :           +- CometScan parquet spark_catalog.default.item (11)
                  :                          :     :                 :              :                    +- CometBroadcastExchange (19)
                  :                          :     :                 :              :                       +- CometProject (18)
                  :                          :     :                 :              :                          +- CometFilter (17)
                  :                          :     :                 :              :                             +- CometScan parquet spark_catalog.default.date_dim (16)
                  :                          :     :                 :              +- ReusedExchange (27)
                  :                          :     :                 +- CometBroadcastExchange (41)
                  :                          :     :                    +- CometProject (40)
                  :                          :     :                       +- CometBroadcastHashJoin (39)
                  :                          :     :                          :- CometProject (37)
                  :                          :     :                          :  +- CometBroadcastHashJoin (36)
                  :                          :     :                          :     :- CometFilter (34)
                  :                          :     :                          :     :  +- CometScan parquet spark_catalog.default.web_sales (33)
                  :                          :     :                          :     +- ReusedExchange (35)
                  :                          :     :                          +- ReusedExchange (38)
                  :                          :     +- CometBroadcastExchange (52)
                  :                          :        +- CometBroadcastHashJoin (51)
                  :                          :           :- CometFilter (49)
                  :                          :           :  +- CometScan parquet spark_catalog.default.item (48)
                  :                          :           +- ReusedExchange (50)
                  :                          +- CometBroadcastExchange (58)
                  :                             +- CometProject (57)
                  :                                +- CometFilter (56)
                  :                                   +- CometScan parquet spark_catalog.default.date_dim (55)
                  :- * Project (84)
                  :  +- * Filter (83)
                  :     +- * HashAggregate (82)
                  :        +- * CometColumnarToRow (81)
                  :           +- CometColumnarExchange (80)
                  :              +- * HashAggregate (79)
                  :                 +- * CometColumnarToRow (78)
                  :                    +- CometProject (77)
                  :                       +- CometBroadcastHashJoin (76)
                  :                          :- CometProject (74)
                  :                          :  +- CometBroadcastHashJoin (73)
                  :                          :     :- CometBroadcastHashJoin (71)
                  :                          :     :  :- CometFilter (69)
                  :                          :     :  :  +- CometScan parquet spark_catalog.default.catalog_sales (68)
                  :                          :     :  +- ReusedExchange (70)
                  :                          :     +- ReusedExchange (72)
                  :                          +- ReusedExchange (75)
                  +- * Project (101)
                     +- * Filter (100)
                        +- * HashAggregate (99)
                           +- * CometColumnarToRow (98)
                              +- CometColumnarExchange (97)
                                 +- * HashAggregate (96)
                                    +- * CometColumnarToRow (95)
                                       +- CometProject (94)
                                          +- CometBroadcastHashJoin (93)
                                             :- CometProject (91)
                                             :  +- CometBroadcastHashJoin (90)
                                             :     :- CometBroadcastHashJoin (88)
                                             :     :  :- CometFilter (86)
                                             :     :  :  +- CometScan parquet spark_catalog.default.web_sales (85)
                                             :     :  +- ReusedExchange (87)
                                             :     +- ReusedExchange (89)
                                             +- ReusedExchange (92)


(1) CometScan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4), dynamicpruningexpression(ss_sold_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Condition : isnotnull(ss_item_sk#1)

(3) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(4) CometFilter
Input [4]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9]
Condition : ((isnotnull(i_brand_id#7) AND isnotnull(i_class_id#8)) AND isnotnull(i_category_id#9))

(5) CometScan parquet spark_catalog.default.store_sales
Output [2]: [ss_item_sk#10, ss_sold_date_sk#11]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#11), dynamicpruningexpression(ss_sold_date_sk#11 IN dynamicpruning#12)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int>

(6) CometFilter
Input [2]: [ss_item_sk#10, ss_sold_date_sk#11]
Condition : isnotnull(ss_item_sk#10)

(7) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(8) CometFilter
Input [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Condition : (((isnotnull(i_item_sk#13) AND isnotnull(i_brand_id#14)) AND isnotnull(i_class_id#15)) AND isnotnull(i_category_id#16))

(9) CometScan parquet spark_catalog.default.catalog_sales
Output [2]: [cs_item_sk#17, cs_sold_date_sk#18]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#18), dynamicpruningexpression(cs_sold_date_sk#18 IN dynamicpruning#19)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int>

(10) CometFilter
Input [2]: [cs_item_sk#17, cs_sold_date_sk#18]
Condition : isnotnull(cs_item_sk#17)

(11) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(12) CometFilter
Input [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Condition : isnotnull(i_item_sk#20)

(13) CometBroadcastExchange
Input [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]

(14) CometBroadcastHashJoin
Left output [2]: [cs_item_sk#17, cs_sold_date_sk#18]
Right output [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [cs_item_sk#17], [i_item_sk#20], Inner, BuildRight

(15) CometProject
Input [6]: [cs_item_sk#17, cs_sold_date_sk#18, i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23], [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23]

(16) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#24, d_year#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(17) CometFilter
Input [2]: [d_date_sk#24, d_year#25]
Condition : (((isnotnull(d_year#25) AND (d_year#25 >= 1999)) AND (d_year#25 <= 2001)) AND isnotnull(d_date_sk#24))

(18) CometProject
Input [2]: [d_date_sk#24, d_year#25]
Arguments: [d_date_sk#24], [d_date_sk#24]

(19) CometBroadcastExchange
Input [1]: [d_date_sk#24]
Arguments: [d_date_sk#24]

(20) CometBroadcastHashJoin
Left output [4]: [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23]
Right output [1]: [d_date_sk#24]
Arguments: [cs_sold_date_sk#18], [d_date_sk#24], Inner, BuildRight

(21) CometProject
Input [5]: [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23, d_date_sk#24]
Arguments: [i_brand_id#21, i_class_id#22, i_category_id#23], [i_brand_id#21, i_class_id#22, i_category_id#23]

(22) CometBroadcastExchange
Input [3]: [i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [i_brand_id#21, i_class_id#22, i_category_id#23]

(23) CometBroadcastHashJoin
Left output [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Right output [3]: [i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [coalesce(i_brand_id#14, 0), isnull(i_brand_id#14), coalesce(i_class_id#15, 0), isnull(i_class_id#15), coalesce(i_category_id#16, 0), isnull(i_category_id#16)], [coalesce(i_brand_id#21, 0), isnull(i_brand_id#21), coalesce(i_class_id#22, 0), isnull(i_class_id#22), coalesce(i_category_id#23, 0), isnull(i_category_id#23)], LeftSemi, BuildRight

(24) CometBroadcastExchange
Input [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Arguments: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]

(25) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#10, ss_sold_date_sk#11]
Right output [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Arguments: [ss_item_sk#10], [i_item_sk#13], Inner, BuildRight

(26) CometProject
Input [6]: [ss_item_sk#10, ss_sold_date_sk#11, i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Arguments: [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16], [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16]

(27) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#26]

(28) CometBroadcastHashJoin
Left output [4]: [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16]
Right output [1]: [d_date_sk#26]
Arguments: [ss_sold_date_sk#11], [d_date_sk#26], Inner, BuildRight

(29) CometProject
Input [5]: [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16, d_date_sk#26]
Arguments: [brand_id#27, class_id#28, category_id#29], [i_brand_id#14 AS brand_id#27, i_class_id#15 AS class_id#28, i_category_id#16 AS category_id#29]

(30) CometHashAggregate
Input [3]: [brand_id#27, class_id#28, category_id#29]
Keys [3]: [brand_id#27, class_id#28, category_id#29]
Functions: []

(31) CometExchange
Input [3]: [brand_id#27, class_id#28, category_id#29]
Arguments: hashpartitioning(brand_id#27, class_id#28, category_id#29, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(32) CometHashAggregate
Input [3]: [brand_id#27, class_id#28, category_id#29]
Keys [3]: [brand_id#27, class_id#28, category_id#29]
Functions: []

(33) CometScan parquet spark_catalog.default.web_sales
Output [2]: [ws_item_sk#30, ws_sold_date_sk#31]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#31), dynamicpruningexpression(ws_sold_date_sk#31 IN dynamicpruning#32)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int>

(34) CometFilter
Input [2]: [ws_item_sk#30, ws_sold_date_sk#31]
Condition : isnotnull(ws_item_sk#30)

(35) ReusedExchange [Reuses operator id: 13]
Output [4]: [i_item_sk#33, i_brand_id#34, i_class_id#35, i_category_id#36]

(36) CometBroadcastHashJoin
Left output [2]: [ws_item_sk#30, ws_sold_date_sk#31]
Right output [4]: [i_item_sk#33, i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [ws_item_sk#30], [i_item_sk#33], Inner, BuildRight

(37) CometProject
Input [6]: [ws_item_sk#30, ws_sold_date_sk#31, i_item_sk#33, i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36], [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36]

(38) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#37]

(39) CometBroadcastHashJoin
Left output [4]: [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36]
Right output [1]: [d_date_sk#37]
Arguments: [ws_sold_date_sk#31], [d_date_sk#37], Inner, BuildRight

(40) CometProject
Input [5]: [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36, d_date_sk#37]
Arguments: [i_brand_id#34, i_class_id#35, i_category_id#36], [i_brand_id#34, i_class_id#35, i_category_id#36]

(41) CometBroadcastExchange
Input [3]: [i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [i_brand_id#34, i_class_id#35, i_category_id#36]

(42) CometBroadcastHashJoin
Left output [3]: [brand_id#27, class_id#28, category_id#29]
Right output [3]: [i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [coalesce(brand_id#27, 0), isnull(brand_id#27), coalesce(class_id#28, 0), isnull(class_id#28), coalesce(category_id#29, 0), isnull(category_id#29)], [coalesce(i_brand_id#34, 0), isnull(i_brand_id#34), coalesce(i_class_id#35, 0), isnull(i_class_id#35), coalesce(i_category_id#36, 0), isnull(i_category_id#36)], LeftSemi, BuildRight

(43) CometBroadcastExchange
Input [3]: [brand_id#27, class_id#28, category_id#29]
Arguments: [brand_id#27, class_id#28, category_id#29]

(44) CometBroadcastHashJoin
Left output [4]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9]
Right output [3]: [brand_id#27, class_id#28, category_id#29]
Arguments: [i_brand_id#7, i_class_id#8, i_category_id#9], [brand_id#27, class_id#28, category_id#29], Inner, BuildRight

(45) CometProject
Input [7]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9, brand_id#27, class_id#28, category_id#29]
Arguments: [ss_item_sk#38], [i_item_sk#6 AS ss_item_sk#38]

(46) CometBroadcastExchange
Input [1]: [ss_item_sk#38]
Arguments: [ss_item_sk#38]

(47) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [1]: [ss_item_sk#38]
Arguments: [ss_item_sk#1], [ss_item_sk#38], LeftSemi, BuildRight

(48) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(49) CometFilter
Input [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Condition : isnotnull(i_item_sk#39)

(50) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#38]

(51) CometBroadcastHashJoin
Left output [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Right output [1]: [ss_item_sk#38]
Arguments: [i_item_sk#39], [ss_item_sk#38], LeftSemi, BuildRight

(52) CometBroadcastExchange
Input [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Arguments: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]

(53) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Arguments: [ss_item_sk#1], [i_item_sk#39], Inner, BuildRight

(54) CometProject
Input [8]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Arguments: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42], [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42]

(55) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#43, d_year#44, d_moy#45]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,11), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(56) CometFilter
Input [3]: [d_date_sk#43, d_year#44, d_moy#45]
Condition : ((((isnotnull(d_year#44) AND isnotnull(d_moy#45)) AND (d_year#44 = 2001)) AND (d_moy#45 = 11)) AND isnotnull(d_date_sk#43))

(57) CometProject
Input [3]: [d_date_sk#43, d_year#44, d_moy#45]
Arguments: [d_date_sk#43], [d_date_sk#43]

(58) CometBroadcastExchange
Input [1]: [d_date_sk#43]
Arguments: [d_date_sk#43]

(59) CometBroadcastHashJoin
Left output [6]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42]
Right output [1]: [d_date_sk#43]
Arguments: [ss_sold_date_sk#4], [d_date_sk#43], Inner, BuildRight

(60) CometProject
Input [7]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42, d_date_sk#43]
Arguments: [ss_quantity#2, ss_list_price#3, i_brand_id#40, i_class_id#41, i_category_id#42], [ss_quantity#2, ss_list_price#3, i_brand_id#40, i_class_id#41, i_category_id#42]

(61) CometColumnarToRow [codegen id : 1]
Input [5]: [ss_quantity#2, ss_list_price#3, i_brand_id#40, i_class_id#41, i_category_id#42]

(62) HashAggregate [codegen id : 1]
Input [5]: [ss_quantity#2, ss_list_price#3, i_brand_id#40, i_class_id#41, i_category_id#42]
Keys [3]: [i_brand_id#40, i_class_id#41, i_category_id#42]
Functions [2]: [partial_sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), partial_count(1)]
Aggregate Attributes [3]: [sum#46, isEmpty#47, count#48]
Results [6]: [i_brand_id#40, i_class_id#41, i_category_id#42, sum#49, isEmpty#50, count#51]

(63) CometColumnarExchange
Input [6]: [i_brand_id#40, i_class_id#41, i_category_id#42, sum#49, isEmpty#50, count#51]
Arguments: hashpartitioning(i_brand_id#40, i_class_id#41, i_category_id#42, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=2]

(64) CometColumnarToRow [codegen id : 2]
Input [6]: [i_brand_id#40, i_class_id#41, i_category_id#42, sum#49, isEmpty#50, count#51]

(65) HashAggregate [codegen id : 2]
Input [6]: [i_brand_id#40, i_class_id#41, i_category_id#42, sum#49, isEmpty#50, count#51]
Keys [3]: [i_brand_id#40, i_class_id#41, i_category_id#42]
Functions [2]: [sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), count(1)]
Aggregate Attributes [2]: [sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3))#52, count(1)#53]
Results [5]: [i_brand_id#40, i_class_id#41, i_category_id#42, sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3))#52 AS sales#54, count(1)#53 AS number_sales#55]

(66) Filter [codegen id : 2]
Input [5]: [i_brand_id#40, i_class_id#41, i_category_id#42, sales#54, number_sales#55]
Condition : (isnotnull(sales#54) AND (cast(sales#54 as decimal(32,6)) > cast(Subquery scalar-subquery#56, [id=#57] as decimal(32,6))))

(67) Project [codegen id : 2]
Output [6]: [sales#54, number_sales#55, store AS channel#58, i_brand_id#40 AS i_brand_id#59, i_class_id#41 AS i_class_id#60, i_category_id#42 AS i_category_id#61]
Input [5]: [i_brand_id#40, i_class_id#41, i_category_id#42, sales#54, number_sales#55]

(68) CometScan parquet spark_catalog.default.catalog_sales
Output [4]: [cs_item_sk#62, cs_quantity#63, cs_list_price#64, cs_sold_date_sk#65]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#65), dynamicpruningexpression(cs_sold_date_sk#65 IN dynamicpruning#66)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>

(69) CometFilter
Input [4]: [cs_item_sk#62, cs_quantity#63, cs_list_price#64, cs_sold_date_sk#65]
Condition : isnotnull(cs_item_sk#62)

(70) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#67]

(71) CometBroadcastHashJoin
Left output [4]: [cs_item_sk#62, cs_quantity#63, cs_list_price#64, cs_sold_date_sk#65]
Right output [1]: [ss_item_sk#67]
Arguments: [cs_item_sk#62], [ss_item_sk#67], LeftSemi, BuildRight

(72) ReusedExchange [Reuses operator id: 52]
Output [4]: [i_item_sk#68, i_brand_id#69, i_class_id#70, i_category_id#71]

(73) CometBroadcastHashJoin
Left output [4]: [cs_item_sk#62, cs_quantity#63, cs_list_price#64, cs_sold_date_sk#65]
Right output [4]: [i_item_sk#68, i_brand_id#69, i_class_id#70, i_category_id#71]
Arguments: [cs_item_sk#62], [i_item_sk#68], Inner, BuildRight

(74) CometProject
Input [8]: [cs_item_sk#62, cs_quantity#63, cs_list_price#64, cs_sold_date_sk#65, i_item_sk#68, i_brand_id#69, i_class_id#70, i_category_id#71]
Arguments: [cs_quantity#63, cs_list_price#64, cs_sold_date_sk#65, i_brand_id#69, i_class_id#70, i_category_id#71], [cs_quantity#63, cs_list_price#64, cs_sold_date_sk#65, i_brand_id#69, i_class_id#70, i_category_id#71]

(75) ReusedExchange [Reuses operator id: 58]
Output [1]: [d_date_sk#72]

(76) CometBroadcastHashJoin
Left output [6]: [cs_quantity#63, cs_list_price#64, cs_sold_date_sk#65, i_brand_id#69, i_class_id#70, i_category_id#71]
Right output [1]: [d_date_sk#72]
Arguments: [cs_sold_date_sk#65], [d_date_sk#72], Inner, BuildRight

(77) CometProject
Input [7]: [cs_quantity#63, cs_list_price#64, cs_sold_date_sk#65, i_brand_id#69, i_class_id#70, i_category_id#71, d_date_sk#72]
Arguments: [cs_quantity#63, cs_list_price#64, i_brand_id#69, i_class_id#70, i_category_id#71], [cs_quantity#63, cs_list_price#64, i_brand_id#69, i_class_id#70, i_category_id#71]

(78) CometColumnarToRow [codegen id : 3]
Input [5]: [cs_quantity#63, cs_list_price#64, i_brand_id#69, i_class_id#70, i_category_id#71]

(79) HashAggregate [codegen id : 3]
Input [5]: [cs_quantity#63, cs_list_price#64, i_brand_id#69, i_class_id#70, i_category_id#71]
Keys [3]: [i_brand_id#69, i_class_id#70, i_category_id#71]
Functions [2]: [partial_sum((cast(cs_quantity#63 as decimal(10,0)) * cs_list_price#64)), partial_count(1)]
Aggregate Attributes [3]: [sum#73, isEmpty#74, count#75]
Results [6]: [i_brand_id#69, i_class_id#70, i_category_id#71, sum#76, isEmpty#77, count#78]

(80) CometColumnarExchange
Input [6]: [i_brand_id#69, i_class_id#70, i_category_id#71, sum#76, isEmpty#77, count#78]
Arguments: hashpartitioning(i_brand_id#69, i_class_id#70, i_category_id#71, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=3]

(81) CometColumnarToRow [codegen id : 4]
Input [6]: [i_brand_id#69, i_class_id#70, i_category_id#71, sum#76, isEmpty#77, count#78]

(82) HashAggregate [codegen id : 4]
Input [6]: [i_brand_id#69, i_class_id#70, i_category_id#71, sum#76, isEmpty#77, count#78]
Keys [3]: [i_brand_id#69, i_class_id#70, i_category_id#71]
Functions [2]: [sum((cast(cs_quantity#63 as decimal(10,0)) * cs_list_price#64)), count(1)]
Aggregate Attributes [2]: [sum((cast(cs_quantity#63 as decimal(10,0)) * cs_list_price#64))#79, count(1)#80]
Results [5]: [i_brand_id#69, i_class_id#70, i_category_id#71, sum((cast(cs_quantity#63 as decimal(10,0)) * cs_list_price#64))#79 AS sales#81, count(1)#80 AS number_sales#82]

(83) Filter [codegen id : 4]
Input [5]: [i_brand_id#69, i_class_id#70, i_category_id#71, sales#81, number_sales#82]
Condition : (isnotnull(sales#81) AND (cast(sales#81 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#56, [id=#57] as decimal(32,6))))

(84) Project [codegen id : 4]
Output [6]: [sales#81, number_sales#82, catalog AS channel#83, i_brand_id#69, i_class_id#70, i_category_id#71]
Input [5]: [i_brand_id#69, i_class_id#70, i_category_id#71, sales#81, number_sales#82]

(85) CometScan parquet spark_catalog.default.web_sales
Output [4]: [ws_item_sk#84, ws_quantity#85, ws_list_price#86, ws_sold_date_sk#87]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#87), dynamicpruningexpression(ws_sold_date_sk#87 IN dynamicpruning#88)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>

(86) CometFilter
Input [4]: [ws_item_sk#84, ws_quantity#85, ws_list_price#86, ws_sold_date_sk#87]
Condition : isnotnull(ws_item_sk#84)

(87) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#89]

(88) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#84, ws_quantity#85, ws_list_price#86, ws_sold_date_sk#87]
Right output [1]: [ss_item_sk#89]
Arguments: [ws_item_sk#84], [ss_item_sk#89], LeftSemi, BuildRight

(89) ReusedExchange [Reuses operator id: 52]
Output [4]: [i_item_sk#90, i_brand_id#91, i_class_id#92, i_category_id#93]

(90) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#84, ws_quantity#85, ws_list_price#86, ws_sold_date_sk#87]
Right output [4]: [i_item_sk#90, i_brand_id#91, i_class_id#92, i_category_id#93]
Arguments: [ws_item_sk#84], [i_item_sk#90], Inner, BuildRight

(91) CometProject
Input [8]: [ws_item_sk#84, ws_quantity#85, ws_list_price#86, ws_sold_date_sk#87, i_item_sk#90, i_brand_id#91, i_class_id#92, i_category_id#93]
Arguments: [ws_quantity#85, ws_list_price#86, ws_sold_date_sk#87, i_brand_id#91, i_class_id#92, i_category_id#93], [ws_quantity#85, ws_list_price#86, ws_sold_date_sk#87, i_brand_id#91, i_class_id#92, i_category_id#93]

(92) ReusedExchange [Reuses operator id: 58]
Output [1]: [d_date_sk#94]

(93) CometBroadcastHashJoin
Left output [6]: [ws_quantity#85, ws_list_price#86, ws_sold_date_sk#87, i_brand_id#91, i_class_id#92, i_category_id#93]
Right output [1]: [d_date_sk#94]
Arguments: [ws_sold_date_sk#87], [d_date_sk#94], Inner, BuildRight

(94) CometProject
Input [7]: [ws_quantity#85, ws_list_price#86, ws_sold_date_sk#87, i_brand_id#91, i_class_id#92, i_category_id#93, d_date_sk#94]
Arguments: [ws_quantity#85, ws_list_price#86, i_brand_id#91, i_class_id#92, i_category_id#93], [ws_quantity#85, ws_list_price#86, i_brand_id#91, i_class_id#92, i_category_id#93]

(95) CometColumnarToRow [codegen id : 5]
Input [5]: [ws_quantity#85, ws_list_price#86, i_brand_id#91, i_class_id#92, i_category_id#93]

(96) HashAggregate [codegen id : 5]
Input [5]: [ws_quantity#85, ws_list_price#86, i_brand_id#91, i_class_id#92, i_category_id#93]
Keys [3]: [i_brand_id#91, i_class_id#92, i_category_id#93]
Functions [2]: [partial_sum((cast(ws_quantity#85 as decimal(10,0)) * ws_list_price#86)), partial_count(1)]
Aggregate Attributes [3]: [sum#95, isEmpty#96, count#97]
Results [6]: [i_brand_id#91, i_class_id#92, i_category_id#93, sum#98, isEmpty#99, count#100]

(97) CometColumnarExchange
Input [6]: [i_brand_id#91, i_class_id#92, i_category_id#93, sum#98, isEmpty#99, count#100]
Arguments: hashpartitioning(i_brand_id#91, i_class_id#92, i_category_id#93, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=4]

(98) CometColumnarToRow [codegen id : 6]
Input [6]: [i_brand_id#91, i_class_id#92, i_category_id#93, sum#98, isEmpty#99, count#100]

(99) HashAggregate [codegen id : 6]
Input [6]: [i_brand_id#91, i_class_id#92, i_category_id#93, sum#98, isEmpty#99, count#100]
Keys [3]: [i_brand_id#91, i_class_id#92, i_category_id#93]
Functions [2]: [sum((cast(ws_quantity#85 as decimal(10,0)) * ws_list_price#86)), count(1)]
Aggregate Attributes [2]: [sum((cast(ws_quantity#85 as decimal(10,0)) * ws_list_price#86))#101, count(1)#102]
Results [5]: [i_brand_id#91, i_class_id#92, i_category_id#93, sum((cast(ws_quantity#85 as decimal(10,0)) * ws_list_price#86))#101 AS sales#103, count(1)#102 AS number_sales#104]

(100) Filter [codegen id : 6]
Input [5]: [i_brand_id#91, i_class_id#92, i_category_id#93, sales#103, number_sales#104]
Condition : (isnotnull(sales#103) AND (cast(sales#103 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#56, [id=#57] as decimal(32,6))))

(101) Project [codegen id : 6]
Output [6]: [sales#103, number_sales#104, web AS channel#105, i_brand_id#91, i_class_id#92, i_category_id#93]
Input [5]: [i_brand_id#91, i_class_id#92, i_category_id#93, sales#103, number_sales#104]

(102) Union

(103) Expand [codegen id : 7]
Input [6]: [sales#54, number_sales#55, channel#58, i_brand_id#59, i_class_id#60, i_category_id#61]
Arguments: [[sales#54, number_sales#55, channel#58, i_brand_id#59, i_class_id#60, i_category_id#61, 0], [sales#54, number_sales#55, channel#58, i_brand_id#59, i_class_id#60, null, 1], [sales#54, number_sales#55, channel#58, i_brand_id#59, null, null, 3], [sales#54, number_sales#55, channel#58, null, null, null, 7], [sales#54, number_sales#55, null, null, null, null, 15]], [sales#54, number_sales#55, channel#106, i_brand_id#107, i_class_id#108, i_category_id#109, spark_grouping_id#110]

(104) HashAggregate [codegen id : 7]
Input [7]: [sales#54, number_sales#55, channel#106, i_brand_id#107, i_class_id#108, i_category_id#109, spark_grouping_id#110]
Keys [5]: [channel#106, i_brand_id#107, i_class_id#108, i_category_id#109, spark_grouping_id#110]
Functions [2]: [partial_sum(sales#54), partial_sum(number_sales#55)]
Aggregate Attributes [3]: [sum#111, isEmpty#112, sum#113]
Results [8]: [channel#106, i_brand_id#107, i_class_id#108, i_category_id#109, spark_grouping_id#110, sum#114, isEmpty#115, sum#116]

(105) CometColumnarExchange
Input [8]: [channel#106, i_brand_id#107, i_class_id#108, i_category_id#109, spark_grouping_id#110, sum#114, isEmpty#115, sum#116]
Arguments: hashpartitioning(channel#106, i_brand_id#107, i_class_id#108, i_category_id#109, spark_grouping_id#110, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=5]

(106) CometColumnarToRow [codegen id : 8]
Input [8]: [channel#106, i_brand_id#107, i_class_id#108, i_category_id#109, spark_grouping_id#110, sum#114, isEmpty#115, sum#116]

(107) HashAggregate [codegen id : 8]
Input [8]: [channel#106, i_brand_id#107, i_class_id#108, i_category_id#109, spark_grouping_id#110, sum#114, isEmpty#115, sum#116]
Keys [5]: [channel#106, i_brand_id#107, i_class_id#108, i_category_id#109, spark_grouping_id#110]
Functions [2]: [sum(sales#54), sum(number_sales#55)]
Aggregate Attributes [2]: [sum(sales#54)#117, sum(number_sales#55)#118]
Results [6]: [channel#106, i_brand_id#107, i_class_id#108, i_category_id#109, sum(sales#54)#117 AS sum(sales)#119, sum(number_sales#55)#118 AS sum(number_sales)#120]

(108) TakeOrderedAndProject
Input [6]: [channel#106, i_brand_id#107, i_class_id#108, i_category_id#109, sum(sales)#119, sum(number_sales)#120]
Arguments: 100, [channel#106 ASC NULLS FIRST, i_brand_id#107 ASC NULLS FIRST, i_class_id#108 ASC NULLS FIRST, i_category_id#109 ASC NULLS FIRST], [channel#106, i_brand_id#107, i_class_id#108, i_category_id#109, sum(sales)#119, sum(number_sales)#120]

===== Subqueries =====

Subquery:1 Hosting operator id = 66 Hosting Expression = Subquery scalar-subquery#56, [id=#57]
* HashAggregate (126)
+- * CometColumnarToRow (125)
   +- CometColumnarExchange (124)
      +- * HashAggregate (123)
         +- * CometColumnarToRow (122)
            +- CometUnion (121)
               :- CometProject (112)
               :  +- CometBroadcastHashJoin (111)
               :     :- CometScan parquet spark_catalog.default.store_sales (109)
               :     +- ReusedExchange (110)
               :- CometProject (116)
               :  +- CometBroadcastHashJoin (115)
               :     :- CometScan parquet spark_catalog.default.catalog_sales (113)
               :     +- ReusedExchange (114)
               +- CometProject (120)
                  +- CometBroadcastHashJoin (119)
                     :- CometScan parquet spark_catalog.default.web_sales (117)
                     +- ReusedExchange (118)


(109) CometScan parquet spark_catalog.default.store_sales
Output [3]: [ss_quantity#121, ss_list_price#122, ss_sold_date_sk#123]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#123), dynamicpruningexpression(ss_sold_date_sk#123 IN dynamicpruning#124)]
ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>

(110) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#125]

(111) CometBroadcastHashJoin
Left output [3]: [ss_quantity#121, ss_list_price#122, ss_sold_date_sk#123]
Right output [1]: [d_date_sk#125]
Arguments: [ss_sold_date_sk#123], [d_date_sk#125], Inner, BuildRight

(112) CometProject
Input [4]: [ss_quantity#121, ss_list_price#122, ss_sold_date_sk#123, d_date_sk#125]
Arguments: [quantity#126, list_price#127], [ss_quantity#121 AS quantity#126, ss_list_price#122 AS list_price#127]

(113) CometScan parquet spark_catalog.default.catalog_sales
Output [3]: [cs_quantity#128, cs_list_price#129, cs_sold_date_sk#130]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#130), dynamicpruningexpression(cs_sold_date_sk#130 IN dynamicpruning#131)]
ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>

(114) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#132]

(115) CometBroadcastHashJoin
Left output [3]: [cs_quantity#128, cs_list_price#129, cs_sold_date_sk#130]
Right output [1]: [d_date_sk#132]
Arguments: [cs_sold_date_sk#130], [d_date_sk#132], Inner, BuildRight

(116) CometProject
Input [4]: [cs_quantity#128, cs_list_price#129, cs_sold_date_sk#130, d_date_sk#132]
Arguments: [quantity#133, list_price#134], [cs_quantity#128 AS quantity#133, cs_list_price#129 AS list_price#134]

(117) CometScan parquet spark_catalog.default.web_sales
Output [3]: [ws_quantity#135, ws_list_price#136, ws_sold_date_sk#137]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#137), dynamicpruningexpression(ws_sold_date_sk#137 IN dynamicpruning#138)]
ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>

(118) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#139]

(119) CometBroadcastHashJoin
Left output [3]: [ws_quantity#135, ws_list_price#136, ws_sold_date_sk#137]
Right output [1]: [d_date_sk#139]
Arguments: [ws_sold_date_sk#137], [d_date_sk#139], Inner, BuildRight

(120) CometProject
Input [4]: [ws_quantity#135, ws_list_price#136, ws_sold_date_sk#137, d_date_sk#139]
Arguments: [quantity#140, list_price#141], [ws_quantity#135 AS quantity#140, ws_list_price#136 AS list_price#141]

(121) CometUnion
Child 0 Input [2]: [quantity#126, list_price#127]
Child 1 Input [2]: [quantity#133, list_price#134]
Child 2 Input [2]: [quantity#140, list_price#141]

(122) CometColumnarToRow [codegen id : 1]
Input [2]: [quantity#126, list_price#127]

(123) HashAggregate [codegen id : 1]
Input [2]: [quantity#126, list_price#127]
Keys: []
Functions [1]: [partial_avg((cast(quantity#126 as decimal(10,0)) * list_price#127))]
Aggregate Attributes [2]: [sum#142, count#143]
Results [2]: [sum#144, count#145]

(124) CometColumnarExchange
Input [2]: [sum#144, count#145]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=6]

(125) CometColumnarToRow [codegen id : 2]
Input [2]: [sum#144, count#145]

(126) HashAggregate [codegen id : 2]
Input [2]: [sum#144, count#145]
Keys: []
Functions [1]: [avg((cast(quantity#126 as decimal(10,0)) * list_price#127))]
Aggregate Attributes [1]: [avg((cast(quantity#126 as decimal(10,0)) * list_price#127))#146]
Results [1]: [avg((cast(quantity#126 as decimal(10,0)) * list_price#127))#146 AS average_sales#147]

Subquery:2 Hosting operator id = 109 Hosting Expression = ss_sold_date_sk#123 IN dynamicpruning#12

Subquery:3 Hosting operator id = 113 Hosting Expression = cs_sold_date_sk#130 IN dynamicpruning#12

Subquery:4 Hosting operator id = 117 Hosting Expression = ws_sold_date_sk#137 IN dynamicpruning#12

Subquery:5 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#4 IN dynamicpruning#5
BroadcastExchange (131)
+- * CometColumnarToRow (130)
   +- CometProject (129)
      +- CometFilter (128)
         +- CometScan parquet spark_catalog.default.date_dim (127)


(127) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#43, d_year#44, d_moy#45]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,11), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(128) CometFilter
Input [3]: [d_date_sk#43, d_year#44, d_moy#45]
Condition : ((((isnotnull(d_year#44) AND isnotnull(d_moy#45)) AND (d_year#44 = 2001)) AND (d_moy#45 = 11)) AND isnotnull(d_date_sk#43))

(129) CometProject
Input [3]: [d_date_sk#43, d_year#44, d_moy#45]
Arguments: [d_date_sk#43], [d_date_sk#43]

(130) CometColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#43]

(131) BroadcastExchange
Input [1]: [d_date_sk#43]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7]

Subquery:6 Hosting operator id = 5 Hosting Expression = ss_sold_date_sk#11 IN dynamicpruning#12
BroadcastExchange (136)
+- * CometColumnarToRow (135)
   +- CometProject (134)
      +- CometFilter (133)
         +- CometScan parquet spark_catalog.default.date_dim (132)


(132) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#26, d_year#148]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(133) CometFilter
Input [2]: [d_date_sk#26, d_year#148]
Condition : (((isnotnull(d_year#148) AND (d_year#148 >= 1999)) AND (d_year#148 <= 2001)) AND isnotnull(d_date_sk#26))

(134) CometProject
Input [2]: [d_date_sk#26, d_year#148]
Arguments: [d_date_sk#26], [d_date_sk#26]

(135) CometColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#26]

(136) BroadcastExchange
Input [1]: [d_date_sk#26]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=8]

Subquery:7 Hosting operator id = 9 Hosting Expression = cs_sold_date_sk#18 IN dynamicpruning#12

Subquery:8 Hosting operator id = 33 Hosting Expression = ws_sold_date_sk#31 IN dynamicpruning#12

Subquery:9 Hosting operator id = 83 Hosting Expression = ReusedSubquery Subquery scalar-subquery#56, [id=#57]

Subquery:10 Hosting operator id = 68 Hosting Expression = cs_sold_date_sk#65 IN dynamicpruning#5

Subquery:11 Hosting operator id = 100 Hosting Expression = ReusedSubquery Subquery scalar-subquery#56, [id=#57]

Subquery:12 Hosting operator id = 85 Hosting Expression = ws_sold_date_sk#87 IN dynamicpruning#5


