== Physical Plan ==
* CometColumnarToRow (101)
+- CometTakeOrderedAndProject (100)
   +- CometProject (99)
      +- CometBroadcastHashJoin (98)
         :- CometProject (84)
         :  +- CometBroadcastHashJoin (83)
         :     :- CometProject (66)
         :     :  +- CometBroadcastHashJoin (65)
         :     :     :- CometProject (51)
         :     :     :  +- CometBroadcastHashJoin (50)
         :     :     :     :- CometBroadcastHashJoin (33)
         :     :     :     :  :- CometFilter (17)
         :     :     :     :  :  +- CometHashAggregate (16)
         :     :     :     :  :     +- CometExchange (15)
         :     :     :     :  :        +- CometHashAggregate (14)
         :     :     :     :  :           +- CometProject (13)
         :     :     :     :  :              +- CometBroadcastHashJoin (12)
         :     :     :     :  :                 :- CometProject (8)
         :     :     :     :  :                 :  +- CometBroadcastHashJoin (7)
         :     :     :     :  :                 :     :- CometProject (3)
         :     :     :     :  :                 :     :  +- CometFilter (2)
         :     :     :     :  :                 :     :     +- CometNativeScan parquet spark_catalog.default.customer (1)
         :     :     :     :  :                 :     +- CometBroadcastExchange (6)
         :     :     :     :  :                 :        +- CometFilter (5)
         :     :     :     :  :                 :           +- CometNativeScan parquet spark_catalog.default.store_sales (4)
         :     :     :     :  :                 +- CometBroadcastExchange (11)
         :     :     :     :  :                    +- CometFilter (10)
         :     :     :     :  :                       +- CometNativeScan parquet spark_catalog.default.date_dim (9)
         :     :     :     :  +- CometBroadcastExchange (32)
         :     :     :     :     +- CometHashAggregate (31)
         :     :     :     :        +- CometExchange (30)
         :     :     :     :           +- CometHashAggregate (29)
         :     :     :     :              +- CometProject (28)
         :     :     :     :                 +- CometBroadcastHashJoin (27)
         :     :     :     :                    :- CometProject (23)
         :     :     :     :                    :  +- CometBroadcastHashJoin (22)
         :     :     :     :                    :     :- CometProject (20)
         :     :     :     :                    :     :  +- CometFilter (19)
         :     :     :     :                    :     :     +- CometNativeScan parquet spark_catalog.default.customer (18)
         :     :     :     :                    :     +- ReusedExchange (21)
         :     :     :     :                    +- CometBroadcastExchange (26)
         :     :     :     :                       +- CometFilter (25)
         :     :     :     :                          +- CometNativeScan parquet spark_catalog.default.date_dim (24)
         :     :     :     +- CometBroadcastExchange (49)
         :     :     :        +- CometFilter (48)
         :     :     :           +- CometHashAggregate (47)
         :     :     :              +- CometExchange (46)
         :     :     :                 +- CometHashAggregate (45)
         :     :     :                    +- CometProject (44)
         :     :     :                       +- CometBroadcastHashJoin (43)
         :     :     :                          :- CometProject (41)
         :     :     :                          :  +- CometBroadcastHashJoin (40)
         :     :     :                          :     :- CometProject (36)
         :     :     :                          :     :  +- CometFilter (35)
         :     :     :                          :     :     +- CometNativeScan parquet spark_catalog.default.customer (34)
         :     :     :                          :     +- CometBroadcastExchange (39)
         :     :     :                          :        +- CometFilter (38)
         :     :     :                          :           +- CometNativeScan parquet spark_catalog.default.catalog_sales (37)
         :     :     :                          +- ReusedExchange (42)
         :     :     +- CometBroadcastExchange (64)
         :     :        +- CometHashAggregate (63)
         :     :           +- CometExchange (62)
         :     :              +- CometHashAggregate (61)
         :     :                 +- CometProject (60)
         :     :                    +- CometBroadcastHashJoin (59)
         :     :                       :- CometProject (57)
         :     :                       :  +- CometBroadcastHashJoin (56)
         :     :                       :     :- CometProject (54)
         :     :                       :     :  +- CometFilter (53)
         :     :                       :     :     +- CometNativeScan parquet spark_catalog.default.customer (52)
         :     :                       :     +- ReusedExchange (55)
         :     :                       +- ReusedExchange (58)
         :     +- CometBroadcastExchange (82)
         :        +- CometFilter (81)
         :           +- CometHashAggregate (80)
         :              +- CometExchange (79)
         :                 +- CometHashAggregate (78)
         :                    +- CometProject (77)
         :                       +- CometBroadcastHashJoin (76)
         :                          :- CometProject (74)
         :                          :  +- CometBroadcastHashJoin (73)
         :                          :     :- CometProject (69)
         :                          :     :  +- CometFilter (68)
         :                          :     :     +- CometNativeScan parquet spark_catalog.default.customer (67)
         :                          :     +- CometBroadcastExchange (72)
         :                          :        +- CometFilter (71)
         :                          :           +- CometNativeScan parquet spark_catalog.default.web_sales (70)
         :                          +- ReusedExchange (75)
         +- CometBroadcastExchange (97)
            +- CometHashAggregate (96)
               +- CometExchange (95)
                  +- CometHashAggregate (94)
                     +- CometProject (93)
                        +- CometBroadcastHashJoin (92)
                           :- CometProject (90)
                           :  +- CometBroadcastHashJoin (89)
                           :     :- CometProject (87)
                           :     :  +- CometFilter (86)
                           :     :     +- CometNativeScan parquet spark_catalog.default.customer (85)
                           :     +- ReusedExchange (88)
                           +- ReusedExchange (91)


(1) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(2) CometFilter
Input [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Condition : (isnotnull(c_customer_sk#1) AND isnotnull(static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#2, 16))))

(3) CometProject
Input [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Arguments: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14], [c_customer_sk#1, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#2, 16)) AS c_customer_id#9, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_first_name#3, 20)) AS c_first_name#10, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_last_name#4, 30)) AS c_last_name#11, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_preferred_cust_flag#5, 1)) AS c_preferred_cust_flag#12, c_birth_country#6, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_login#7, 13)) AS c_login#13, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_email_address#8, 50)) AS c_email_address#14]

(4) CometNativeScan parquet spark_catalog.default.store_sales
Output [6]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#20)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2)>

(5) CometFilter
Input [6]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Condition : isnotnull(ss_customer_sk#15)

(6) CometBroadcastExchange
Input [6]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Arguments: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]

(7) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14]
Right output [6]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Arguments: [c_customer_sk#1], [ss_customer_sk#15], Inner, BuildRight

(8) CometProject
Input [14]: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]

(9) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#21, d_year#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(10) CometFilter
Input [2]: [d_date_sk#21, d_year#22]
Condition : ((isnotnull(d_year#22) AND (d_year#22 = 2001)) AND isnotnull(d_date_sk#21))

(11) CometBroadcastExchange
Input [2]: [d_date_sk#21, d_year#22]
Arguments: [d_date_sk#21, d_year#22]

(12) CometBroadcastHashJoin
Left output [12]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Right output [2]: [d_date_sk#21, d_year#22]
Arguments: [ss_sold_date_sk#20], [d_date_sk#21], Inner, BuildRight

(13) CometProject
Input [14]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20, d_date_sk#21, d_year#22]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, d_year#22], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, d_year#22]

(14) CometHashAggregate
Input [12]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, d_year#22]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#22]
Functions [1]: [partial_sum(((((ss_ext_list_price#19 - ss_ext_wholesale_cost#18) - ss_ext_discount_amt#16) + ss_ext_sales_price#17) / 2))]

(15) CometExchange
Input [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#22, sum#23, isEmpty#24]
Arguments: hashpartitioning(c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#22, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(16) CometHashAggregate
Input [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#22, sum#23, isEmpty#24]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#22]
Functions [1]: [sum(((((ss_ext_list_price#19 - ss_ext_wholesale_cost#18) - ss_ext_discount_amt#16) + ss_ext_sales_price#17) / 2))]

(17) CometFilter
Input [2]: [customer_id#25, year_total#26]
Condition : (isnotnull(year_total#26) AND (year_total#26 > 0.000000))

(18) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#27, c_customer_id#28, c_first_name#29, c_last_name#30, c_preferred_cust_flag#31, c_birth_country#32, c_login#33, c_email_address#34]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(19) CometFilter
Input [8]: [c_customer_sk#27, c_customer_id#28, c_first_name#29, c_last_name#30, c_preferred_cust_flag#31, c_birth_country#32, c_login#33, c_email_address#34]
Condition : (isnotnull(c_customer_sk#27) AND isnotnull(static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#28, 16))))

(20) CometProject
Input [8]: [c_customer_sk#27, c_customer_id#28, c_first_name#29, c_last_name#30, c_preferred_cust_flag#31, c_birth_country#32, c_login#33, c_email_address#34]
Arguments: [c_customer_sk#27, c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40], [c_customer_sk#27, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#28, 16)) AS c_customer_id#35, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_first_name#29, 20)) AS c_first_name#36, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_last_name#30, 30)) AS c_last_name#37, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_preferred_cust_flag#31, 1)) AS c_preferred_cust_flag#38, c_birth_country#32, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_login#33, 13)) AS c_login#39, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_email_address#34, 50)) AS c_email_address#40]

(21) ReusedExchange [Reuses operator id: 6]
Output [6]: [ss_customer_sk#41, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, ss_sold_date_sk#46]

(22) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#27, c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40]
Right output [6]: [ss_customer_sk#41, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, ss_sold_date_sk#46]
Arguments: [c_customer_sk#27], [ss_customer_sk#41], Inner, BuildRight

(23) CometProject
Input [14]: [c_customer_sk#27, c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40, ss_customer_sk#41, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, ss_sold_date_sk#46]
Arguments: [c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, ss_sold_date_sk#46], [c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, ss_sold_date_sk#46]

(24) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#47, d_year#48]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(25) CometFilter
Input [2]: [d_date_sk#47, d_year#48]
Condition : ((isnotnull(d_year#48) AND (d_year#48 = 2002)) AND isnotnull(d_date_sk#47))

(26) CometBroadcastExchange
Input [2]: [d_date_sk#47, d_year#48]
Arguments: [d_date_sk#47, d_year#48]

(27) CometBroadcastHashJoin
Left output [12]: [c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, ss_sold_date_sk#46]
Right output [2]: [d_date_sk#47, d_year#48]
Arguments: [ss_sold_date_sk#46], [d_date_sk#47], Inner, BuildRight

(28) CometProject
Input [14]: [c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, ss_sold_date_sk#46, d_date_sk#47, d_year#48]
Arguments: [c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, d_year#48], [c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, d_year#48]

(29) CometHashAggregate
Input [12]: [c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40, ss_ext_discount_amt#42, ss_ext_sales_price#43, ss_ext_wholesale_cost#44, ss_ext_list_price#45, d_year#48]
Keys [8]: [c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40, d_year#48]
Functions [1]: [partial_sum(((((ss_ext_list_price#45 - ss_ext_wholesale_cost#44) - ss_ext_discount_amt#42) + ss_ext_sales_price#43) / 2))]

(30) CometExchange
Input [10]: [c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40, d_year#48, sum#49, isEmpty#50]
Arguments: hashpartitioning(c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40, d_year#48, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(31) CometHashAggregate
Input [10]: [c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40, d_year#48, sum#49, isEmpty#50]
Keys [8]: [c_customer_id#35, c_first_name#36, c_last_name#37, c_preferred_cust_flag#38, c_birth_country#32, c_login#39, c_email_address#40, d_year#48]
Functions [1]: [sum(((((ss_ext_list_price#45 - ss_ext_wholesale_cost#44) - ss_ext_discount_amt#42) + ss_ext_sales_price#43) / 2))]

(32) CometBroadcastExchange
Input [8]: [customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#58]
Arguments: [customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#58]

(33) CometBroadcastHashJoin
Left output [2]: [customer_id#25, year_total#26]
Right output [8]: [customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#58]
Arguments: [customer_id#25], [customer_id#51], Inner, BuildRight

(34) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#59, c_customer_id#60, c_first_name#61, c_last_name#62, c_preferred_cust_flag#63, c_birth_country#64, c_login#65, c_email_address#66]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(35) CometFilter
Input [8]: [c_customer_sk#59, c_customer_id#60, c_first_name#61, c_last_name#62, c_preferred_cust_flag#63, c_birth_country#64, c_login#65, c_email_address#66]
Condition : (isnotnull(c_customer_sk#59) AND isnotnull(static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#60, 16))))

(36) CometProject
Input [8]: [c_customer_sk#59, c_customer_id#60, c_first_name#61, c_last_name#62, c_preferred_cust_flag#63, c_birth_country#64, c_login#65, c_email_address#66]
Arguments: [c_customer_sk#59, c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72], [c_customer_sk#59, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#60, 16)) AS c_customer_id#67, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_first_name#61, 20)) AS c_first_name#68, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_last_name#62, 30)) AS c_last_name#69, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_preferred_cust_flag#63, 1)) AS c_preferred_cust_flag#70, c_birth_country#64, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_login#65, 13)) AS c_login#71, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_email_address#66, 50)) AS c_email_address#72]

(37) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [6]: [cs_bill_customer_sk#73, cs_ext_discount_amt#74, cs_ext_sales_price#75, cs_ext_wholesale_cost#76, cs_ext_list_price#77, cs_sold_date_sk#78]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#78)]
PushedFilters: [IsNotNull(cs_bill_customer_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2)>

(38) CometFilter
Input [6]: [cs_bill_customer_sk#73, cs_ext_discount_amt#74, cs_ext_sales_price#75, cs_ext_wholesale_cost#76, cs_ext_list_price#77, cs_sold_date_sk#78]
Condition : isnotnull(cs_bill_customer_sk#73)

(39) CometBroadcastExchange
Input [6]: [cs_bill_customer_sk#73, cs_ext_discount_amt#74, cs_ext_sales_price#75, cs_ext_wholesale_cost#76, cs_ext_list_price#77, cs_sold_date_sk#78]
Arguments: [cs_bill_customer_sk#73, cs_ext_discount_amt#74, cs_ext_sales_price#75, cs_ext_wholesale_cost#76, cs_ext_list_price#77, cs_sold_date_sk#78]

(40) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#59, c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72]
Right output [6]: [cs_bill_customer_sk#73, cs_ext_discount_amt#74, cs_ext_sales_price#75, cs_ext_wholesale_cost#76, cs_ext_list_price#77, cs_sold_date_sk#78]
Arguments: [c_customer_sk#59], [cs_bill_customer_sk#73], Inner, BuildRight

(41) CometProject
Input [14]: [c_customer_sk#59, c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72, cs_bill_customer_sk#73, cs_ext_discount_amt#74, cs_ext_sales_price#75, cs_ext_wholesale_cost#76, cs_ext_list_price#77, cs_sold_date_sk#78]
Arguments: [c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72, cs_ext_discount_amt#74, cs_ext_sales_price#75, cs_ext_wholesale_cost#76, cs_ext_list_price#77, cs_sold_date_sk#78], [c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72, cs_ext_discount_amt#74, cs_ext_sales_price#75, cs_ext_wholesale_cost#76, cs_ext_list_price#77, cs_sold_date_sk#78]

(42) ReusedExchange [Reuses operator id: 11]
Output [2]: [d_date_sk#79, d_year#80]

(43) CometBroadcastHashJoin
Left output [12]: [c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72, cs_ext_discount_amt#74, cs_ext_sales_price#75, cs_ext_wholesale_cost#76, cs_ext_list_price#77, cs_sold_date_sk#78]
Right output [2]: [d_date_sk#79, d_year#80]
Arguments: [cs_sold_date_sk#78], [d_date_sk#79], Inner, BuildRight

(44) CometProject
Input [14]: [c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72, cs_ext_discount_amt#74, cs_ext_sales_price#75, cs_ext_wholesale_cost#76, cs_ext_list_price#77, cs_sold_date_sk#78, d_date_sk#79, d_year#80]
Arguments: [c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72, cs_ext_discount_amt#74, cs_ext_sales_price#75, cs_ext_wholesale_cost#76, cs_ext_list_price#77, d_year#80], [c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72, cs_ext_discount_amt#74, cs_ext_sales_price#75, cs_ext_wholesale_cost#76, cs_ext_list_price#77, d_year#80]

(45) CometHashAggregate
Input [12]: [c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72, cs_ext_discount_amt#74, cs_ext_sales_price#75, cs_ext_wholesale_cost#76, cs_ext_list_price#77, d_year#80]
Keys [8]: [c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72, d_year#80]
Functions [1]: [partial_sum(((((cs_ext_list_price#77 - cs_ext_wholesale_cost#76) - cs_ext_discount_amt#74) + cs_ext_sales_price#75) / 2))]

(46) CometExchange
Input [10]: [c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72, d_year#80, sum#81, isEmpty#82]
Arguments: hashpartitioning(c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72, d_year#80, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(47) CometHashAggregate
Input [10]: [c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72, d_year#80, sum#81, isEmpty#82]
Keys [8]: [c_customer_id#67, c_first_name#68, c_last_name#69, c_preferred_cust_flag#70, c_birth_country#64, c_login#71, c_email_address#72, d_year#80]
Functions [1]: [sum(((((cs_ext_list_price#77 - cs_ext_wholesale_cost#76) - cs_ext_discount_amt#74) + cs_ext_sales_price#75) / 2))]

(48) CometFilter
Input [2]: [customer_id#83, year_total#84]
Condition : (isnotnull(year_total#84) AND (year_total#84 > 0.000000))

(49) CometBroadcastExchange
Input [2]: [customer_id#83, year_total#84]
Arguments: [customer_id#83, year_total#84]

(50) CometBroadcastHashJoin
Left output [10]: [customer_id#25, year_total#26, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#58]
Right output [2]: [customer_id#83, year_total#84]
Arguments: [customer_id#25], [customer_id#83], Inner, BuildRight

(51) CometProject
Input [12]: [customer_id#25, year_total#26, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#58, customer_id#83, year_total#84]
Arguments: [customer_id#25, year_total#26, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#58, year_total#84], [customer_id#25, year_total#26, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#58, year_total#84]

(52) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#85, c_customer_id#86, c_first_name#87, c_last_name#88, c_preferred_cust_flag#89, c_birth_country#90, c_login#91, c_email_address#92]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(53) CometFilter
Input [8]: [c_customer_sk#85, c_customer_id#86, c_first_name#87, c_last_name#88, c_preferred_cust_flag#89, c_birth_country#90, c_login#91, c_email_address#92]
Condition : (isnotnull(c_customer_sk#85) AND isnotnull(static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#86, 16))))

(54) CometProject
Input [8]: [c_customer_sk#85, c_customer_id#86, c_first_name#87, c_last_name#88, c_preferred_cust_flag#89, c_birth_country#90, c_login#91, c_email_address#92]
Arguments: [c_customer_sk#85, c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98], [c_customer_sk#85, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#86, 16)) AS c_customer_id#93, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_first_name#87, 20)) AS c_first_name#94, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_last_name#88, 30)) AS c_last_name#95, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_preferred_cust_flag#89, 1)) AS c_preferred_cust_flag#96, c_birth_country#90, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_login#91, 13)) AS c_login#97, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_email_address#92, 50)) AS c_email_address#98]

(55) ReusedExchange [Reuses operator id: 39]
Output [6]: [cs_bill_customer_sk#99, cs_ext_discount_amt#100, cs_ext_sales_price#101, cs_ext_wholesale_cost#102, cs_ext_list_price#103, cs_sold_date_sk#104]

(56) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#85, c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98]
Right output [6]: [cs_bill_customer_sk#99, cs_ext_discount_amt#100, cs_ext_sales_price#101, cs_ext_wholesale_cost#102, cs_ext_list_price#103, cs_sold_date_sk#104]
Arguments: [c_customer_sk#85], [cs_bill_customer_sk#99], Inner, BuildRight

(57) CometProject
Input [14]: [c_customer_sk#85, c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98, cs_bill_customer_sk#99, cs_ext_discount_amt#100, cs_ext_sales_price#101, cs_ext_wholesale_cost#102, cs_ext_list_price#103, cs_sold_date_sk#104]
Arguments: [c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98, cs_ext_discount_amt#100, cs_ext_sales_price#101, cs_ext_wholesale_cost#102, cs_ext_list_price#103, cs_sold_date_sk#104], [c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98, cs_ext_discount_amt#100, cs_ext_sales_price#101, cs_ext_wholesale_cost#102, cs_ext_list_price#103, cs_sold_date_sk#104]

(58) ReusedExchange [Reuses operator id: 26]
Output [2]: [d_date_sk#105, d_year#106]

(59) CometBroadcastHashJoin
Left output [12]: [c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98, cs_ext_discount_amt#100, cs_ext_sales_price#101, cs_ext_wholesale_cost#102, cs_ext_list_price#103, cs_sold_date_sk#104]
Right output [2]: [d_date_sk#105, d_year#106]
Arguments: [cs_sold_date_sk#104], [d_date_sk#105], Inner, BuildRight

(60) CometProject
Input [14]: [c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98, cs_ext_discount_amt#100, cs_ext_sales_price#101, cs_ext_wholesale_cost#102, cs_ext_list_price#103, cs_sold_date_sk#104, d_date_sk#105, d_year#106]
Arguments: [c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98, cs_ext_discount_amt#100, cs_ext_sales_price#101, cs_ext_wholesale_cost#102, cs_ext_list_price#103, d_year#106], [c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98, cs_ext_discount_amt#100, cs_ext_sales_price#101, cs_ext_wholesale_cost#102, cs_ext_list_price#103, d_year#106]

(61) CometHashAggregate
Input [12]: [c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98, cs_ext_discount_amt#100, cs_ext_sales_price#101, cs_ext_wholesale_cost#102, cs_ext_list_price#103, d_year#106]
Keys [8]: [c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98, d_year#106]
Functions [1]: [partial_sum(((((cs_ext_list_price#103 - cs_ext_wholesale_cost#102) - cs_ext_discount_amt#100) + cs_ext_sales_price#101) / 2))]

(62) CometExchange
Input [10]: [c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98, d_year#106, sum#107, isEmpty#108]
Arguments: hashpartitioning(c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98, d_year#106, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(63) CometHashAggregate
Input [10]: [c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98, d_year#106, sum#107, isEmpty#108]
Keys [8]: [c_customer_id#93, c_first_name#94, c_last_name#95, c_preferred_cust_flag#96, c_birth_country#90, c_login#97, c_email_address#98, d_year#106]
Functions [1]: [sum(((((cs_ext_list_price#103 - cs_ext_wholesale_cost#102) - cs_ext_discount_amt#100) + cs_ext_sales_price#101) / 2))]

(64) CometBroadcastExchange
Input [2]: [customer_id#109, year_total#110]
Arguments: [customer_id#109, year_total#110]

(65) CometBroadcastHashJoin
Left output [11]: [customer_id#25, year_total#26, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#58, year_total#84]
Right output [2]: [customer_id#109, year_total#110]
Arguments: [customer_id#25], [customer_id#109], Inner, (CASE WHEN (year_total#84 > 0.000000) THEN (year_total#110 / year_total#84) END > CASE WHEN (year_total#26 > 0.000000) THEN (year_total#58 / year_total#26) END), BuildRight

(66) CometProject
Input [13]: [customer_id#25, year_total#26, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#58, year_total#84, customer_id#109, year_total#110]
Arguments: [customer_id#25, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#84, year_total#110], [customer_id#25, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#84, year_total#110]

(67) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#111, c_customer_id#112, c_first_name#113, c_last_name#114, c_preferred_cust_flag#115, c_birth_country#116, c_login#117, c_email_address#118]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(68) CometFilter
Input [8]: [c_customer_sk#111, c_customer_id#112, c_first_name#113, c_last_name#114, c_preferred_cust_flag#115, c_birth_country#116, c_login#117, c_email_address#118]
Condition : (isnotnull(c_customer_sk#111) AND isnotnull(static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#112, 16))))

(69) CometProject
Input [8]: [c_customer_sk#111, c_customer_id#112, c_first_name#113, c_last_name#114, c_preferred_cust_flag#115, c_birth_country#116, c_login#117, c_email_address#118]
Arguments: [c_customer_sk#111, c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124], [c_customer_sk#111, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#112, 16)) AS c_customer_id#119, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_first_name#113, 20)) AS c_first_name#120, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_last_name#114, 30)) AS c_last_name#121, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_preferred_cust_flag#115, 1)) AS c_preferred_cust_flag#122, c_birth_country#116, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_login#117, 13)) AS c_login#123, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_email_address#118, 50)) AS c_email_address#124]

(70) CometNativeScan parquet spark_catalog.default.web_sales
Output [6]: [ws_bill_customer_sk#125, ws_ext_discount_amt#126, ws_ext_sales_price#127, ws_ext_wholesale_cost#128, ws_ext_list_price#129, ws_sold_date_sk#130]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#130)]
PushedFilters: [IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2)>

(71) CometFilter
Input [6]: [ws_bill_customer_sk#125, ws_ext_discount_amt#126, ws_ext_sales_price#127, ws_ext_wholesale_cost#128, ws_ext_list_price#129, ws_sold_date_sk#130]
Condition : isnotnull(ws_bill_customer_sk#125)

(72) CometBroadcastExchange
Input [6]: [ws_bill_customer_sk#125, ws_ext_discount_amt#126, ws_ext_sales_price#127, ws_ext_wholesale_cost#128, ws_ext_list_price#129, ws_sold_date_sk#130]
Arguments: [ws_bill_customer_sk#125, ws_ext_discount_amt#126, ws_ext_sales_price#127, ws_ext_wholesale_cost#128, ws_ext_list_price#129, ws_sold_date_sk#130]

(73) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#111, c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124]
Right output [6]: [ws_bill_customer_sk#125, ws_ext_discount_amt#126, ws_ext_sales_price#127, ws_ext_wholesale_cost#128, ws_ext_list_price#129, ws_sold_date_sk#130]
Arguments: [c_customer_sk#111], [ws_bill_customer_sk#125], Inner, BuildRight

(74) CometProject
Input [14]: [c_customer_sk#111, c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124, ws_bill_customer_sk#125, ws_ext_discount_amt#126, ws_ext_sales_price#127, ws_ext_wholesale_cost#128, ws_ext_list_price#129, ws_sold_date_sk#130]
Arguments: [c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124, ws_ext_discount_amt#126, ws_ext_sales_price#127, ws_ext_wholesale_cost#128, ws_ext_list_price#129, ws_sold_date_sk#130], [c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124, ws_ext_discount_amt#126, ws_ext_sales_price#127, ws_ext_wholesale_cost#128, ws_ext_list_price#129, ws_sold_date_sk#130]

(75) ReusedExchange [Reuses operator id: 11]
Output [2]: [d_date_sk#131, d_year#132]

(76) CometBroadcastHashJoin
Left output [12]: [c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124, ws_ext_discount_amt#126, ws_ext_sales_price#127, ws_ext_wholesale_cost#128, ws_ext_list_price#129, ws_sold_date_sk#130]
Right output [2]: [d_date_sk#131, d_year#132]
Arguments: [ws_sold_date_sk#130], [d_date_sk#131], Inner, BuildRight

(77) CometProject
Input [14]: [c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124, ws_ext_discount_amt#126, ws_ext_sales_price#127, ws_ext_wholesale_cost#128, ws_ext_list_price#129, ws_sold_date_sk#130, d_date_sk#131, d_year#132]
Arguments: [c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124, ws_ext_discount_amt#126, ws_ext_sales_price#127, ws_ext_wholesale_cost#128, ws_ext_list_price#129, d_year#132], [c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124, ws_ext_discount_amt#126, ws_ext_sales_price#127, ws_ext_wholesale_cost#128, ws_ext_list_price#129, d_year#132]

(78) CometHashAggregate
Input [12]: [c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124, ws_ext_discount_amt#126, ws_ext_sales_price#127, ws_ext_wholesale_cost#128, ws_ext_list_price#129, d_year#132]
Keys [8]: [c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124, d_year#132]
Functions [1]: [partial_sum(((((ws_ext_list_price#129 - ws_ext_wholesale_cost#128) - ws_ext_discount_amt#126) + ws_ext_sales_price#127) / 2))]

(79) CometExchange
Input [10]: [c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124, d_year#132, sum#133, isEmpty#134]
Arguments: hashpartitioning(c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124, d_year#132, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(80) CometHashAggregate
Input [10]: [c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124, d_year#132, sum#133, isEmpty#134]
Keys [8]: [c_customer_id#119, c_first_name#120, c_last_name#121, c_preferred_cust_flag#122, c_birth_country#116, c_login#123, c_email_address#124, d_year#132]
Functions [1]: [sum(((((ws_ext_list_price#129 - ws_ext_wholesale_cost#128) - ws_ext_discount_amt#126) + ws_ext_sales_price#127) / 2))]

(81) CometFilter
Input [2]: [customer_id#135, year_total#136]
Condition : (isnotnull(year_total#136) AND (year_total#136 > 0.000000))

(82) CometBroadcastExchange
Input [2]: [customer_id#135, year_total#136]
Arguments: [customer_id#135, year_total#136]

(83) CometBroadcastHashJoin
Left output [10]: [customer_id#25, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#84, year_total#110]
Right output [2]: [customer_id#135, year_total#136]
Arguments: [customer_id#25], [customer_id#135], Inner, BuildRight

(84) CometProject
Input [12]: [customer_id#25, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#84, year_total#110, customer_id#135, year_total#136]
Arguments: [customer_id#25, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#84, year_total#110, year_total#136], [customer_id#25, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#84, year_total#110, year_total#136]

(85) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#137, c_customer_id#138, c_first_name#139, c_last_name#140, c_preferred_cust_flag#141, c_birth_country#142, c_login#143, c_email_address#144]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(86) CometFilter
Input [8]: [c_customer_sk#137, c_customer_id#138, c_first_name#139, c_last_name#140, c_preferred_cust_flag#141, c_birth_country#142, c_login#143, c_email_address#144]
Condition : (isnotnull(c_customer_sk#137) AND isnotnull(static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#138, 16))))

(87) CometProject
Input [8]: [c_customer_sk#137, c_customer_id#138, c_first_name#139, c_last_name#140, c_preferred_cust_flag#141, c_birth_country#142, c_login#143, c_email_address#144]
Arguments: [c_customer_sk#137, c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150], [c_customer_sk#137, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_customer_id#138, 16)) AS c_customer_id#145, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_first_name#139, 20)) AS c_first_name#146, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_last_name#140, 30)) AS c_last_name#147, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_preferred_cust_flag#141, 1)) AS c_preferred_cust_flag#148, c_birth_country#142, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_login#143, 13)) AS c_login#149, static_invoke(CharVarcharCodegenUtils.readSidePadding(c_email_address#144, 50)) AS c_email_address#150]

(88) ReusedExchange [Reuses operator id: 72]
Output [6]: [ws_bill_customer_sk#151, ws_ext_discount_amt#152, ws_ext_sales_price#153, ws_ext_wholesale_cost#154, ws_ext_list_price#155, ws_sold_date_sk#156]

(89) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#137, c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150]
Right output [6]: [ws_bill_customer_sk#151, ws_ext_discount_amt#152, ws_ext_sales_price#153, ws_ext_wholesale_cost#154, ws_ext_list_price#155, ws_sold_date_sk#156]
Arguments: [c_customer_sk#137], [ws_bill_customer_sk#151], Inner, BuildRight

(90) CometProject
Input [14]: [c_customer_sk#137, c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150, ws_bill_customer_sk#151, ws_ext_discount_amt#152, ws_ext_sales_price#153, ws_ext_wholesale_cost#154, ws_ext_list_price#155, ws_sold_date_sk#156]
Arguments: [c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150, ws_ext_discount_amt#152, ws_ext_sales_price#153, ws_ext_wholesale_cost#154, ws_ext_list_price#155, ws_sold_date_sk#156], [c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150, ws_ext_discount_amt#152, ws_ext_sales_price#153, ws_ext_wholesale_cost#154, ws_ext_list_price#155, ws_sold_date_sk#156]

(91) ReusedExchange [Reuses operator id: 26]
Output [2]: [d_date_sk#157, d_year#158]

(92) CometBroadcastHashJoin
Left output [12]: [c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150, ws_ext_discount_amt#152, ws_ext_sales_price#153, ws_ext_wholesale_cost#154, ws_ext_list_price#155, ws_sold_date_sk#156]
Right output [2]: [d_date_sk#157, d_year#158]
Arguments: [ws_sold_date_sk#156], [d_date_sk#157], Inner, BuildRight

(93) CometProject
Input [14]: [c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150, ws_ext_discount_amt#152, ws_ext_sales_price#153, ws_ext_wholesale_cost#154, ws_ext_list_price#155, ws_sold_date_sk#156, d_date_sk#157, d_year#158]
Arguments: [c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150, ws_ext_discount_amt#152, ws_ext_sales_price#153, ws_ext_wholesale_cost#154, ws_ext_list_price#155, d_year#158], [c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150, ws_ext_discount_amt#152, ws_ext_sales_price#153, ws_ext_wholesale_cost#154, ws_ext_list_price#155, d_year#158]

(94) CometHashAggregate
Input [12]: [c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150, ws_ext_discount_amt#152, ws_ext_sales_price#153, ws_ext_wholesale_cost#154, ws_ext_list_price#155, d_year#158]
Keys [8]: [c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150, d_year#158]
Functions [1]: [partial_sum(((((ws_ext_list_price#155 - ws_ext_wholesale_cost#154) - ws_ext_discount_amt#152) + ws_ext_sales_price#153) / 2))]

(95) CometExchange
Input [10]: [c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150, d_year#158, sum#159, isEmpty#160]
Arguments: hashpartitioning(c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150, d_year#158, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(96) CometHashAggregate
Input [10]: [c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150, d_year#158, sum#159, isEmpty#160]
Keys [8]: [c_customer_id#145, c_first_name#146, c_last_name#147, c_preferred_cust_flag#148, c_birth_country#142, c_login#149, c_email_address#150, d_year#158]
Functions [1]: [sum(((((ws_ext_list_price#155 - ws_ext_wholesale_cost#154) - ws_ext_discount_amt#152) + ws_ext_sales_price#153) / 2))]

(97) CometBroadcastExchange
Input [2]: [customer_id#161, year_total#162]
Arguments: [customer_id#161, year_total#162]

(98) CometBroadcastHashJoin
Left output [11]: [customer_id#25, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#84, year_total#110, year_total#136]
Right output [2]: [customer_id#161, year_total#162]
Arguments: [customer_id#25], [customer_id#161], Inner, (CASE WHEN (year_total#84 > 0.000000) THEN (year_total#110 / year_total#84) END > CASE WHEN (year_total#136 > 0.000000) THEN (year_total#162 / year_total#136) END), BuildRight

(99) CometProject
Input [13]: [customer_id#25, customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57, year_total#84, year_total#110, year_total#136, customer_id#161, year_total#162]
Arguments: [customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57], [customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57]

(100) CometTakeOrderedAndProject
Input [7]: [customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[customer_id#51 ASC NULLS FIRST,customer_first_name#52 ASC NULLS FIRST,customer_last_name#53 ASC NULLS FIRST,customer_preferred_cust_flag#54 ASC NULLS FIRST,customer_birth_country#55 ASC NULLS FIRST,customer_login#56 ASC NULLS FIRST,customer_email_address#57 ASC NULLS FIRST], output=[customer_id#51,customer_first_name#52,customer_last_name#53,customer_preferred_cust_flag#54,customer_birth_country#55,customer_login#56,customer_email_address#57]), [customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57], 100, 0, [customer_id#51 ASC NULLS FIRST, customer_first_name#52 ASC NULLS FIRST, customer_last_name#53 ASC NULLS FIRST, customer_preferred_cust_flag#54 ASC NULLS FIRST, customer_birth_country#55 ASC NULLS FIRST, customer_login#56 ASC NULLS FIRST, customer_email_address#57 ASC NULLS FIRST], [customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57]

(101) CometColumnarToRow [codegen id : 1]
Input [7]: [customer_id#51, customer_first_name#52, customer_last_name#53, customer_preferred_cust_flag#54, customer_birth_country#55, customer_login#56, customer_email_address#57]

