== Physical Plan ==
* HashAggregate (33)
+- * CometColumnarToRow (32)
   +- CometColumnarExchange (31)
      +- * HashAggregate (30)
         +- * Project (29)
            +- * BroadcastHashJoin Inner BuildRight (28)
               :- * Project (26)
               :  +- * BroadcastHashJoin Inner BuildRight (25)
               :     :- * CometColumnarToRow (9)
               :     :  +- CometProject (8)
               :     :     +- CometBroadcastHashJoin (7)
               :     :        :- CometFilter (2)
               :     :        :  +- CometScan parquet spark_catalog.default.catalog_sales (1)
               :     :        +- CometBroadcastExchange (6)
               :     :           +- CometProject (5)
               :     :              +- CometFilter (4)
               :     :                 +- CometScan parquet spark_catalog.default.item (3)
               :     +- BroadcastExchange (24)
               :        +- * Filter (23)
               :           +- * HashAggregate (22)
               :              +- * CometColumnarToRow (21)
               :                 +- CometColumnarExchange (20)
               :                    +- * HashAggregate (19)
               :                       +- * CometColumnarToRow (18)
               :                          +- CometProject (17)
               :                             +- CometBroadcastHashJoin (16)
               :                                :- CometFilter (11)
               :                                :  +- CometScan parquet spark_catalog.default.catalog_sales (10)
               :                                +- CometBroadcastExchange (15)
               :                                   +- CometProject (14)
               :                                      +- CometFilter (13)
               :                                         +- CometScan parquet spark_catalog.default.date_dim (12)
               +- ReusedExchange (27)


(1) CometScan parquet spark_catalog.default.catalog_sales
Output [3]: [cs_item_sk#1, cs_ext_discount_amt#2, cs_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#3), dynamicpruningexpression(cs_sold_date_sk#3 IN dynamicpruning#4)]
PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_ext_discount_amt)]
ReadSchema: struct<cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>

(2) CometFilter
Input [3]: [cs_item_sk#1, cs_ext_discount_amt#2, cs_sold_date_sk#3]
Condition : (isnotnull(cs_item_sk#1) AND isnotnull(cs_ext_discount_amt#2))

(3) CometScan parquet spark_catalog.default.item
Output [2]: [i_item_sk#5, i_manufact_id#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_manufact_id), EqualTo(i_manufact_id,977), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_manufact_id:int>

(4) CometFilter
Input [2]: [i_item_sk#5, i_manufact_id#6]
Condition : ((isnotnull(i_manufact_id#6) AND (i_manufact_id#6 = 977)) AND isnotnull(i_item_sk#5))

(5) CometProject
Input [2]: [i_item_sk#5, i_manufact_id#6]
Arguments: [i_item_sk#5], [i_item_sk#5]

(6) CometBroadcastExchange
Input [1]: [i_item_sk#5]
Arguments: [i_item_sk#5]

(7) CometBroadcastHashJoin
Left output [3]: [cs_item_sk#1, cs_ext_discount_amt#2, cs_sold_date_sk#3]
Right output [1]: [i_item_sk#5]
Arguments: [cs_item_sk#1], [i_item_sk#5], Inner, BuildRight

(8) CometProject
Input [4]: [cs_item_sk#1, cs_ext_discount_amt#2, cs_sold_date_sk#3, i_item_sk#5]
Arguments: [cs_ext_discount_amt#2, cs_sold_date_sk#3, i_item_sk#5], [cs_ext_discount_amt#2, cs_sold_date_sk#3, i_item_sk#5]

(9) CometColumnarToRow [codegen id : 4]
Input [3]: [cs_ext_discount_amt#2, cs_sold_date_sk#3, i_item_sk#5]

(10) CometScan parquet spark_catalog.default.catalog_sales
Output [3]: [cs_item_sk#7, cs_ext_discount_amt#8, cs_sold_date_sk#9]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#9), dynamicpruningexpression(cs_sold_date_sk#9 IN dynamicpruning#10)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>

(11) CometFilter
Input [3]: [cs_item_sk#7, cs_ext_discount_amt#8, cs_sold_date_sk#9]
Condition : isnotnull(cs_item_sk#7)

(12) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#11, d_date#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-01-27), LessThanOrEqual(d_date,2000-04-26), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(13) CometFilter
Input [2]: [d_date_sk#11, d_date#12]
Condition : (((isnotnull(d_date#12) AND (d_date#12 >= 2000-01-27)) AND (d_date#12 <= 2000-04-26)) AND isnotnull(d_date_sk#11))

(14) CometProject
Input [2]: [d_date_sk#11, d_date#12]
Arguments: [d_date_sk#11], [d_date_sk#11]

(15) CometBroadcastExchange
Input [1]: [d_date_sk#11]
Arguments: [d_date_sk#11]

(16) CometBroadcastHashJoin
Left output [3]: [cs_item_sk#7, cs_ext_discount_amt#8, cs_sold_date_sk#9]
Right output [1]: [d_date_sk#11]
Arguments: [cs_sold_date_sk#9], [d_date_sk#11], Inner, BuildRight

(17) CometProject
Input [4]: [cs_item_sk#7, cs_ext_discount_amt#8, cs_sold_date_sk#9, d_date_sk#11]
Arguments: [cs_item_sk#7, cs_ext_discount_amt#8], [cs_item_sk#7, cs_ext_discount_amt#8]

(18) CometColumnarToRow [codegen id : 1]
Input [2]: [cs_item_sk#7, cs_ext_discount_amt#8]

(19) HashAggregate [codegen id : 1]
Input [2]: [cs_item_sk#7, cs_ext_discount_amt#8]
Keys [1]: [cs_item_sk#7]
Functions [1]: [partial_avg(UnscaledValue(cs_ext_discount_amt#8))]
Aggregate Attributes [2]: [sum#13, count#14]
Results [3]: [cs_item_sk#7, sum#15, count#16]

(20) CometColumnarExchange
Input [3]: [cs_item_sk#7, sum#15, count#16]
Arguments: hashpartitioning(cs_item_sk#7, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=1]

(21) CometColumnarToRow [codegen id : 2]
Input [3]: [cs_item_sk#7, sum#15, count#16]

(22) HashAggregate [codegen id : 2]
Input [3]: [cs_item_sk#7, sum#15, count#16]
Keys [1]: [cs_item_sk#7]
Functions [1]: [avg(UnscaledValue(cs_ext_discount_amt#8))]
Aggregate Attributes [1]: [avg(UnscaledValue(cs_ext_discount_amt#8))#17]
Results [2]: [(1.3 * cast((avg(UnscaledValue(cs_ext_discount_amt#8))#17 / 100.0) as decimal(11,6))) AS (1.3 * avg(cs_ext_discount_amt))#18, cs_item_sk#7]

(23) Filter [codegen id : 2]
Input [2]: [(1.3 * avg(cs_ext_discount_amt))#18, cs_item_sk#7]
Condition : isnotnull((1.3 * avg(cs_ext_discount_amt))#18)

(24) BroadcastExchange
Input [2]: [(1.3 * avg(cs_ext_discount_amt))#18, cs_item_sk#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=2]

(25) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [i_item_sk#5]
Right keys [1]: [cs_item_sk#7]
Join type: Inner
Join condition: (cast(cs_ext_discount_amt#2 as decimal(14,7)) > (1.3 * avg(cs_ext_discount_amt))#18)

(26) Project [codegen id : 4]
Output [2]: [cs_ext_discount_amt#2, cs_sold_date_sk#3]
Input [5]: [cs_ext_discount_amt#2, cs_sold_date_sk#3, i_item_sk#5, (1.3 * avg(cs_ext_discount_amt))#18, cs_item_sk#7]

(27) ReusedExchange [Reuses operator id: 38]
Output [1]: [d_date_sk#19]

(28) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [cs_sold_date_sk#3]
Right keys [1]: [d_date_sk#19]
Join type: Inner
Join condition: None

(29) Project [codegen id : 4]
Output [1]: [cs_ext_discount_amt#2]
Input [3]: [cs_ext_discount_amt#2, cs_sold_date_sk#3, d_date_sk#19]

(30) HashAggregate [codegen id : 4]
Input [1]: [cs_ext_discount_amt#2]
Keys: []
Functions [1]: [partial_sum(UnscaledValue(cs_ext_discount_amt#2))]
Aggregate Attributes [1]: [sum#20]
Results [1]: [sum#21]

(31) CometColumnarExchange
Input [1]: [sum#21]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=3]

(32) CometColumnarToRow [codegen id : 5]
Input [1]: [sum#21]

(33) HashAggregate [codegen id : 5]
Input [1]: [sum#21]
Keys: []
Functions [1]: [sum(UnscaledValue(cs_ext_discount_amt#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(cs_ext_discount_amt#2))#22]
Results [1]: [MakeDecimal(sum(UnscaledValue(cs_ext_discount_amt#2))#22,17,2) AS excess discount amount#23]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = cs_sold_date_sk#3 IN dynamicpruning#4
BroadcastExchange (38)
+- * CometColumnarToRow (37)
   +- CometProject (36)
      +- CometFilter (35)
         +- CometScan parquet spark_catalog.default.date_dim (34)


(34) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#19, d_date#24]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-01-27), LessThanOrEqual(d_date,2000-04-26), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(35) CometFilter
Input [2]: [d_date_sk#19, d_date#24]
Condition : (((isnotnull(d_date#24) AND (d_date#24 >= 2000-01-27)) AND (d_date#24 <= 2000-04-26)) AND isnotnull(d_date_sk#19))

(36) CometProject
Input [2]: [d_date_sk#19, d_date#24]
Arguments: [d_date_sk#19], [d_date_sk#19]

(37) CometColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#19]

(38) BroadcastExchange
Input [1]: [d_date_sk#19]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]

Subquery:2 Hosting operator id = 10 Hosting Expression = cs_sold_date_sk#9 IN dynamicpruning#4


