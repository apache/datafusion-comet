== Physical Plan ==
* CometColumnarToRow (96)
+- CometSort (95)
   +- CometColumnarExchange (94)
      +- * Project (93)
         +- * BroadcastHashJoin Inner BuildRight (92)
            :- * Project (78)
            :  +- * BroadcastHashJoin Inner BuildRight (77)
            :     :- * BroadcastHashJoin Inner BuildRight (63)
            :     :  :- * Project (49)
            :     :  :  +- * BroadcastHashJoin Inner BuildRight (48)
            :     :  :     :- * BroadcastHashJoin Inner BuildRight (32)
            :     :  :     :  :- * HashAggregate (16)
            :     :  :     :  :  +- * CometColumnarToRow (15)
            :     :  :     :  :     +- CometExchange (14)
            :     :  :     :  :        +- CometHashAggregate (13)
            :     :  :     :  :           +- CometProject (12)
            :     :  :     :  :              +- CometBroadcastHashJoin (11)
            :     :  :     :  :                 :- CometProject (7)
            :     :  :     :  :                 :  +- CometBroadcastHashJoin (6)
            :     :  :     :  :                 :     :- CometFilter (2)
            :     :  :     :  :                 :     :  +- CometNativeScan parquet spark_catalog.default.store_sales (1)
            :     :  :     :  :                 :     +- CometBroadcastExchange (5)
            :     :  :     :  :                 :        +- CometFilter (4)
            :     :  :     :  :                 :           +- CometNativeScan parquet spark_catalog.default.date_dim (3)
            :     :  :     :  :                 +- CometBroadcastExchange (10)
            :     :  :     :  :                    +- CometFilter (9)
            :     :  :     :  :                       +- CometNativeScan parquet spark_catalog.default.customer_address (8)
            :     :  :     :  +- BroadcastExchange (31)
            :     :  :     :     +- * HashAggregate (30)
            :     :  :     :        +- * CometColumnarToRow (29)
            :     :  :     :           +- CometExchange (28)
            :     :  :     :              +- CometHashAggregate (27)
            :     :  :     :                 +- CometProject (26)
            :     :  :     :                    +- CometBroadcastHashJoin (25)
            :     :  :     :                       :- CometProject (23)
            :     :  :     :                       :  +- CometBroadcastHashJoin (22)
            :     :  :     :                       :     :- CometFilter (18)
            :     :  :     :                       :     :  +- CometNativeScan parquet spark_catalog.default.store_sales (17)
            :     :  :     :                       :     +- CometBroadcastExchange (21)
            :     :  :     :                       :        +- CometFilter (20)
            :     :  :     :                       :           +- CometNativeScan parquet spark_catalog.default.date_dim (19)
            :     :  :     :                       +- ReusedExchange (24)
            :     :  :     +- BroadcastExchange (47)
            :     :  :        +- * HashAggregate (46)
            :     :  :           +- * CometColumnarToRow (45)
            :     :  :              +- CometExchange (44)
            :     :  :                 +- CometHashAggregate (43)
            :     :  :                    +- CometProject (42)
            :     :  :                       +- CometBroadcastHashJoin (41)
            :     :  :                          :- CometProject (39)
            :     :  :                          :  +- CometBroadcastHashJoin (38)
            :     :  :                          :     :- CometFilter (34)
            :     :  :                          :     :  +- CometNativeScan parquet spark_catalog.default.store_sales (33)
            :     :  :                          :     +- CometBroadcastExchange (37)
            :     :  :                          :        +- CometFilter (36)
            :     :  :                          :           +- CometNativeScan parquet spark_catalog.default.date_dim (35)
            :     :  :                          +- ReusedExchange (40)
            :     :  +- BroadcastExchange (62)
            :     :     +- * HashAggregate (61)
            :     :        +- * CometColumnarToRow (60)
            :     :           +- CometExchange (59)
            :     :              +- CometHashAggregate (58)
            :     :                 +- CometProject (57)
            :     :                    +- CometBroadcastHashJoin (56)
            :     :                       :- CometProject (54)
            :     :                       :  +- CometBroadcastHashJoin (53)
            :     :                       :     :- CometFilter (51)
            :     :                       :     :  +- CometNativeScan parquet spark_catalog.default.web_sales (50)
            :     :                       :     +- ReusedExchange (52)
            :     :                       +- ReusedExchange (55)
            :     +- BroadcastExchange (76)
            :        +- * HashAggregate (75)
            :           +- * CometColumnarToRow (74)
            :              +- CometExchange (73)
            :                 +- CometHashAggregate (72)
            :                    +- CometProject (71)
            :                       +- CometBroadcastHashJoin (70)
            :                          :- CometProject (68)
            :                          :  +- CometBroadcastHashJoin (67)
            :                          :     :- CometFilter (65)
            :                          :     :  +- CometNativeScan parquet spark_catalog.default.web_sales (64)
            :                          :     +- ReusedExchange (66)
            :                          +- ReusedExchange (69)
            +- BroadcastExchange (91)
               +- * HashAggregate (90)
                  +- * CometColumnarToRow (89)
                     +- CometExchange (88)
                        +- CometHashAggregate (87)
                           +- CometProject (86)
                              +- CometBroadcastHashJoin (85)
                                 :- CometProject (83)
                                 :  +- CometBroadcastHashJoin (82)
                                 :     :- CometFilter (80)
                                 :     :  +- CometNativeScan parquet spark_catalog.default.web_sales (79)
                                 :     +- ReusedExchange (81)
                                 +- ReusedExchange (84)


(1) CometNativeScan parquet spark_catalog.default.store_sales
Output [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#3)]
PushedFilters: [IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) CometFilter
Input [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Condition : isnotnull(ss_addr_sk#1)

(3) CometNativeScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#4, d_year#5, d_qoy#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(4) CometFilter
Input [3]: [d_date_sk#4, d_year#5, d_qoy#6]
Condition : ((((isnotnull(d_qoy#6) AND isnotnull(d_year#5)) AND (d_qoy#6 = 1)) AND (d_year#5 = 2000)) AND isnotnull(d_date_sk#4))

(5) CometBroadcastExchange
Input [3]: [d_date_sk#4, d_year#5, d_qoy#6]
Arguments: [d_date_sk#4, d_year#5, d_qoy#6]

(6) CometBroadcastHashJoin
Left output [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Right output [3]: [d_date_sk#4, d_year#5, d_qoy#6]
Arguments: [ss_sold_date_sk#3], [d_date_sk#4], Inner, BuildRight

(7) CometProject
Input [6]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3, d_date_sk#4, d_year#5, d_qoy#6]
Arguments: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#5, d_qoy#6], [ss_addr_sk#1, ss_ext_sales_price#2, d_year#5, d_qoy#6]

(8) CometNativeScan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#7, ca_county#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county)]
ReadSchema: struct<ca_address_sk:int,ca_county:string>

(9) CometFilter
Input [2]: [ca_address_sk#7, ca_county#8]
Condition : (isnotnull(ca_address_sk#7) AND isnotnull(ca_county#8))

(10) CometBroadcastExchange
Input [2]: [ca_address_sk#7, ca_county#8]
Arguments: [ca_address_sk#7, ca_county#8]

(11) CometBroadcastHashJoin
Left output [4]: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#5, d_qoy#6]
Right output [2]: [ca_address_sk#7, ca_county#8]
Arguments: [ss_addr_sk#1], [ca_address_sk#7], Inner, BuildRight

(12) CometProject
Input [6]: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#5, d_qoy#6, ca_address_sk#7, ca_county#8]
Arguments: [ss_ext_sales_price#2, d_year#5, d_qoy#6, ca_county#8], [ss_ext_sales_price#2, d_year#5, d_qoy#6, ca_county#8]

(13) CometHashAggregate
Input [4]: [ss_ext_sales_price#2, d_year#5, d_qoy#6, ca_county#8]
Keys [3]: [ca_county#8, d_qoy#6, d_year#5]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#2))]

(14) CometExchange
Input [4]: [ca_county#8, d_qoy#6, d_year#5, sum#9]
Arguments: hashpartitioning(ca_county#8, d_qoy#6, d_year#5, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(15) CometColumnarToRow [codegen id : 6]
Input [4]: [ca_county#8, d_qoy#6, d_year#5, sum#9]

(16) HashAggregate [codegen id : 6]
Input [4]: [ca_county#8, d_qoy#6, d_year#5, sum#9]
Keys [3]: [ca_county#8, d_qoy#6, d_year#5]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#2))#10]
Results [3]: [ca_county#8, d_year#5, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#2))#10,17,2) AS store_sales#11]

(17) CometNativeScan parquet spark_catalog.default.store_sales
Output [3]: [ss_addr_sk#12, ss_ext_sales_price#13, ss_sold_date_sk#14]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#14)]
PushedFilters: [IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(18) CometFilter
Input [3]: [ss_addr_sk#12, ss_ext_sales_price#13, ss_sold_date_sk#14]
Condition : isnotnull(ss_addr_sk#12)

(19) CometNativeScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#15, d_year#16, d_qoy#17]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(20) CometFilter
Input [3]: [d_date_sk#15, d_year#16, d_qoy#17]
Condition : ((((isnotnull(d_qoy#17) AND isnotnull(d_year#16)) AND (d_qoy#17 = 2)) AND (d_year#16 = 2000)) AND isnotnull(d_date_sk#15))

(21) CometBroadcastExchange
Input [3]: [d_date_sk#15, d_year#16, d_qoy#17]
Arguments: [d_date_sk#15, d_year#16, d_qoy#17]

(22) CometBroadcastHashJoin
Left output [3]: [ss_addr_sk#12, ss_ext_sales_price#13, ss_sold_date_sk#14]
Right output [3]: [d_date_sk#15, d_year#16, d_qoy#17]
Arguments: [ss_sold_date_sk#14], [d_date_sk#15], Inner, BuildRight

(23) CometProject
Input [6]: [ss_addr_sk#12, ss_ext_sales_price#13, ss_sold_date_sk#14, d_date_sk#15, d_year#16, d_qoy#17]
Arguments: [ss_addr_sk#12, ss_ext_sales_price#13, d_year#16, d_qoy#17], [ss_addr_sk#12, ss_ext_sales_price#13, d_year#16, d_qoy#17]

(24) ReusedExchange [Reuses operator id: 10]
Output [2]: [ca_address_sk#18, ca_county#19]

(25) CometBroadcastHashJoin
Left output [4]: [ss_addr_sk#12, ss_ext_sales_price#13, d_year#16, d_qoy#17]
Right output [2]: [ca_address_sk#18, ca_county#19]
Arguments: [ss_addr_sk#12], [ca_address_sk#18], Inner, BuildRight

(26) CometProject
Input [6]: [ss_addr_sk#12, ss_ext_sales_price#13, d_year#16, d_qoy#17, ca_address_sk#18, ca_county#19]
Arguments: [ss_ext_sales_price#13, d_year#16, d_qoy#17, ca_county#19], [ss_ext_sales_price#13, d_year#16, d_qoy#17, ca_county#19]

(27) CometHashAggregate
Input [4]: [ss_ext_sales_price#13, d_year#16, d_qoy#17, ca_county#19]
Keys [3]: [ca_county#19, d_qoy#17, d_year#16]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#13))]

(28) CometExchange
Input [4]: [ca_county#19, d_qoy#17, d_year#16, sum#20]
Arguments: hashpartitioning(ca_county#19, d_qoy#17, d_year#16, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(29) CometColumnarToRow [codegen id : 1]
Input [4]: [ca_county#19, d_qoy#17, d_year#16, sum#20]

(30) HashAggregate [codegen id : 1]
Input [4]: [ca_county#19, d_qoy#17, d_year#16, sum#20]
Keys [3]: [ca_county#19, d_qoy#17, d_year#16]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#13))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#13))#10]
Results [2]: [ca_county#19, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#13))#10,17,2) AS store_sales#21]

(31) BroadcastExchange
Input [2]: [ca_county#19, store_sales#21]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=3]

(32) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ca_county#8]
Right keys [1]: [ca_county#19]
Join type: Inner
Join condition: None

(33) CometNativeScan parquet spark_catalog.default.store_sales
Output [3]: [ss_addr_sk#22, ss_ext_sales_price#23, ss_sold_date_sk#24]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#24)]
PushedFilters: [IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(34) CometFilter
Input [3]: [ss_addr_sk#22, ss_ext_sales_price#23, ss_sold_date_sk#24]
Condition : isnotnull(ss_addr_sk#22)

(35) CometNativeScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#25, d_year#26, d_qoy#27]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(36) CometFilter
Input [3]: [d_date_sk#25, d_year#26, d_qoy#27]
Condition : ((((isnotnull(d_qoy#27) AND isnotnull(d_year#26)) AND (d_qoy#27 = 3)) AND (d_year#26 = 2000)) AND isnotnull(d_date_sk#25))

(37) CometBroadcastExchange
Input [3]: [d_date_sk#25, d_year#26, d_qoy#27]
Arguments: [d_date_sk#25, d_year#26, d_qoy#27]

(38) CometBroadcastHashJoin
Left output [3]: [ss_addr_sk#22, ss_ext_sales_price#23, ss_sold_date_sk#24]
Right output [3]: [d_date_sk#25, d_year#26, d_qoy#27]
Arguments: [ss_sold_date_sk#24], [d_date_sk#25], Inner, BuildRight

(39) CometProject
Input [6]: [ss_addr_sk#22, ss_ext_sales_price#23, ss_sold_date_sk#24, d_date_sk#25, d_year#26, d_qoy#27]
Arguments: [ss_addr_sk#22, ss_ext_sales_price#23, d_year#26, d_qoy#27], [ss_addr_sk#22, ss_ext_sales_price#23, d_year#26, d_qoy#27]

(40) ReusedExchange [Reuses operator id: 10]
Output [2]: [ca_address_sk#28, ca_county#29]

(41) CometBroadcastHashJoin
Left output [4]: [ss_addr_sk#22, ss_ext_sales_price#23, d_year#26, d_qoy#27]
Right output [2]: [ca_address_sk#28, ca_county#29]
Arguments: [ss_addr_sk#22], [ca_address_sk#28], Inner, BuildRight

(42) CometProject
Input [6]: [ss_addr_sk#22, ss_ext_sales_price#23, d_year#26, d_qoy#27, ca_address_sk#28, ca_county#29]
Arguments: [ss_ext_sales_price#23, d_year#26, d_qoy#27, ca_county#29], [ss_ext_sales_price#23, d_year#26, d_qoy#27, ca_county#29]

(43) CometHashAggregate
Input [4]: [ss_ext_sales_price#23, d_year#26, d_qoy#27, ca_county#29]
Keys [3]: [ca_county#29, d_qoy#27, d_year#26]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#23))]

(44) CometExchange
Input [4]: [ca_county#29, d_qoy#27, d_year#26, sum#30]
Arguments: hashpartitioning(ca_county#29, d_qoy#27, d_year#26, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(45) CometColumnarToRow [codegen id : 2]
Input [4]: [ca_county#29, d_qoy#27, d_year#26, sum#30]

(46) HashAggregate [codegen id : 2]
Input [4]: [ca_county#29, d_qoy#27, d_year#26, sum#30]
Keys [3]: [ca_county#29, d_qoy#27, d_year#26]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#23))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#23))#10]
Results [2]: [ca_county#29, MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#23))#10,17,2) AS store_sales#31]

(47) BroadcastExchange
Input [2]: [ca_county#29, store_sales#31]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=5]

(48) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ca_county#19]
Right keys [1]: [ca_county#29]
Join type: Inner
Join condition: None

(49) Project [codegen id : 6]
Output [5]: [ca_county#8, d_year#5, store_sales#11, store_sales#21, store_sales#31]
Input [7]: [ca_county#8, d_year#5, store_sales#11, ca_county#19, store_sales#21, ca_county#29, store_sales#31]

(50) CometNativeScan parquet spark_catalog.default.web_sales
Output [3]: [ws_bill_addr_sk#32, ws_ext_sales_price#33, ws_sold_date_sk#34]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#34)]
PushedFilters: [IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(51) CometFilter
Input [3]: [ws_bill_addr_sk#32, ws_ext_sales_price#33, ws_sold_date_sk#34]
Condition : isnotnull(ws_bill_addr_sk#32)

(52) ReusedExchange [Reuses operator id: 5]
Output [3]: [d_date_sk#35, d_year#36, d_qoy#37]

(53) CometBroadcastHashJoin
Left output [3]: [ws_bill_addr_sk#32, ws_ext_sales_price#33, ws_sold_date_sk#34]
Right output [3]: [d_date_sk#35, d_year#36, d_qoy#37]
Arguments: [ws_sold_date_sk#34], [d_date_sk#35], Inner, BuildRight

(54) CometProject
Input [6]: [ws_bill_addr_sk#32, ws_ext_sales_price#33, ws_sold_date_sk#34, d_date_sk#35, d_year#36, d_qoy#37]
Arguments: [ws_bill_addr_sk#32, ws_ext_sales_price#33, d_year#36, d_qoy#37], [ws_bill_addr_sk#32, ws_ext_sales_price#33, d_year#36, d_qoy#37]

(55) ReusedExchange [Reuses operator id: 10]
Output [2]: [ca_address_sk#38, ca_county#39]

(56) CometBroadcastHashJoin
Left output [4]: [ws_bill_addr_sk#32, ws_ext_sales_price#33, d_year#36, d_qoy#37]
Right output [2]: [ca_address_sk#38, ca_county#39]
Arguments: [ws_bill_addr_sk#32], [ca_address_sk#38], Inner, BuildRight

(57) CometProject
Input [6]: [ws_bill_addr_sk#32, ws_ext_sales_price#33, d_year#36, d_qoy#37, ca_address_sk#38, ca_county#39]
Arguments: [ws_ext_sales_price#33, d_year#36, d_qoy#37, ca_county#39], [ws_ext_sales_price#33, d_year#36, d_qoy#37, ca_county#39]

(58) CometHashAggregate
Input [4]: [ws_ext_sales_price#33, d_year#36, d_qoy#37, ca_county#39]
Keys [3]: [ca_county#39, d_qoy#37, d_year#36]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#33))]

(59) CometExchange
Input [4]: [ca_county#39, d_qoy#37, d_year#36, sum#40]
Arguments: hashpartitioning(ca_county#39, d_qoy#37, d_year#36, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(60) CometColumnarToRow [codegen id : 3]
Input [4]: [ca_county#39, d_qoy#37, d_year#36, sum#40]

(61) HashAggregate [codegen id : 3]
Input [4]: [ca_county#39, d_qoy#37, d_year#36, sum#40]
Keys [3]: [ca_county#39, d_qoy#37, d_year#36]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#33))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#33))#41]
Results [2]: [ca_county#39, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#33))#41,17,2) AS web_sales#42]

(62) BroadcastExchange
Input [2]: [ca_county#39, web_sales#42]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=7]

(63) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ca_county#8]
Right keys [1]: [ca_county#39]
Join type: Inner
Join condition: None

(64) CometNativeScan parquet spark_catalog.default.web_sales
Output [3]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#45)]
PushedFilters: [IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(65) CometFilter
Input [3]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45]
Condition : isnotnull(ws_bill_addr_sk#43)

(66) ReusedExchange [Reuses operator id: 21]
Output [3]: [d_date_sk#46, d_year#47, d_qoy#48]

(67) CometBroadcastHashJoin
Left output [3]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45]
Right output [3]: [d_date_sk#46, d_year#47, d_qoy#48]
Arguments: [ws_sold_date_sk#45], [d_date_sk#46], Inner, BuildRight

(68) CometProject
Input [6]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, ws_sold_date_sk#45, d_date_sk#46, d_year#47, d_qoy#48]
Arguments: [ws_bill_addr_sk#43, ws_ext_sales_price#44, d_year#47, d_qoy#48], [ws_bill_addr_sk#43, ws_ext_sales_price#44, d_year#47, d_qoy#48]

(69) ReusedExchange [Reuses operator id: 10]
Output [2]: [ca_address_sk#49, ca_county#50]

(70) CometBroadcastHashJoin
Left output [4]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, d_year#47, d_qoy#48]
Right output [2]: [ca_address_sk#49, ca_county#50]
Arguments: [ws_bill_addr_sk#43], [ca_address_sk#49], Inner, BuildRight

(71) CometProject
Input [6]: [ws_bill_addr_sk#43, ws_ext_sales_price#44, d_year#47, d_qoy#48, ca_address_sk#49, ca_county#50]
Arguments: [ws_ext_sales_price#44, d_year#47, d_qoy#48, ca_county#50], [ws_ext_sales_price#44, d_year#47, d_qoy#48, ca_county#50]

(72) CometHashAggregate
Input [4]: [ws_ext_sales_price#44, d_year#47, d_qoy#48, ca_county#50]
Keys [3]: [ca_county#50, d_qoy#48, d_year#47]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#44))]

(73) CometExchange
Input [4]: [ca_county#50, d_qoy#48, d_year#47, sum#51]
Arguments: hashpartitioning(ca_county#50, d_qoy#48, d_year#47, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=8]

(74) CometColumnarToRow [codegen id : 4]
Input [4]: [ca_county#50, d_qoy#48, d_year#47, sum#51]

(75) HashAggregate [codegen id : 4]
Input [4]: [ca_county#50, d_qoy#48, d_year#47, sum#51]
Keys [3]: [ca_county#50, d_qoy#48, d_year#47]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#44))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#44))#41]
Results [2]: [ca_county#50, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#44))#41,17,2) AS web_sales#52]

(76) BroadcastExchange
Input [2]: [ca_county#50, web_sales#52]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=9]

(77) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ca_county#39]
Right keys [1]: [ca_county#50]
Join type: Inner
Join condition: (CASE WHEN (web_sales#42 > 0.00) THEN (web_sales#52 / web_sales#42) END > CASE WHEN (store_sales#11 > 0.00) THEN (store_sales#21 / store_sales#11) END)

(78) Project [codegen id : 6]
Output [8]: [ca_county#8, d_year#5, store_sales#11, store_sales#21, store_sales#31, ca_county#39, web_sales#42, web_sales#52]
Input [9]: [ca_county#8, d_year#5, store_sales#11, store_sales#21, store_sales#31, ca_county#39, web_sales#42, ca_county#50, web_sales#52]

(79) CometNativeScan parquet spark_catalog.default.web_sales
Output [3]: [ws_bill_addr_sk#53, ws_ext_sales_price#54, ws_sold_date_sk#55]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#55)]
PushedFilters: [IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(80) CometFilter
Input [3]: [ws_bill_addr_sk#53, ws_ext_sales_price#54, ws_sold_date_sk#55]
Condition : isnotnull(ws_bill_addr_sk#53)

(81) ReusedExchange [Reuses operator id: 37]
Output [3]: [d_date_sk#56, d_year#57, d_qoy#58]

(82) CometBroadcastHashJoin
Left output [3]: [ws_bill_addr_sk#53, ws_ext_sales_price#54, ws_sold_date_sk#55]
Right output [3]: [d_date_sk#56, d_year#57, d_qoy#58]
Arguments: [ws_sold_date_sk#55], [d_date_sk#56], Inner, BuildRight

(83) CometProject
Input [6]: [ws_bill_addr_sk#53, ws_ext_sales_price#54, ws_sold_date_sk#55, d_date_sk#56, d_year#57, d_qoy#58]
Arguments: [ws_bill_addr_sk#53, ws_ext_sales_price#54, d_year#57, d_qoy#58], [ws_bill_addr_sk#53, ws_ext_sales_price#54, d_year#57, d_qoy#58]

(84) ReusedExchange [Reuses operator id: 10]
Output [2]: [ca_address_sk#59, ca_county#60]

(85) CometBroadcastHashJoin
Left output [4]: [ws_bill_addr_sk#53, ws_ext_sales_price#54, d_year#57, d_qoy#58]
Right output [2]: [ca_address_sk#59, ca_county#60]
Arguments: [ws_bill_addr_sk#53], [ca_address_sk#59], Inner, BuildRight

(86) CometProject
Input [6]: [ws_bill_addr_sk#53, ws_ext_sales_price#54, d_year#57, d_qoy#58, ca_address_sk#59, ca_county#60]
Arguments: [ws_ext_sales_price#54, d_year#57, d_qoy#58, ca_county#60], [ws_ext_sales_price#54, d_year#57, d_qoy#58, ca_county#60]

(87) CometHashAggregate
Input [4]: [ws_ext_sales_price#54, d_year#57, d_qoy#58, ca_county#60]
Keys [3]: [ca_county#60, d_qoy#58, d_year#57]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#54))]

(88) CometExchange
Input [4]: [ca_county#60, d_qoy#58, d_year#57, sum#61]
Arguments: hashpartitioning(ca_county#60, d_qoy#58, d_year#57, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=10]

(89) CometColumnarToRow [codegen id : 5]
Input [4]: [ca_county#60, d_qoy#58, d_year#57, sum#61]

(90) HashAggregate [codegen id : 5]
Input [4]: [ca_county#60, d_qoy#58, d_year#57, sum#61]
Keys [3]: [ca_county#60, d_qoy#58, d_year#57]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#54))]
Aggregate Attributes [1]: [sum(UnscaledValue(ws_ext_sales_price#54))#41]
Results [2]: [ca_county#60, MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#54))#41,17,2) AS web_sales#62]

(91) BroadcastExchange
Input [2]: [ca_county#60, web_sales#62]
Arguments: HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=11]

(92) BroadcastHashJoin [codegen id : 6]
Left keys [1]: [ca_county#39]
Right keys [1]: [ca_county#60]
Join type: Inner
Join condition: (CASE WHEN (web_sales#52 > 0.00) THEN (web_sales#62 / web_sales#52) END > CASE WHEN (store_sales#21 > 0.00) THEN (store_sales#31 / store_sales#21) END)

(93) Project [codegen id : 6]
Output [6]: [ca_county#8, d_year#5, (web_sales#52 / web_sales#42) AS web_q1_q2_increase#63, (store_sales#21 / store_sales#11) AS store_q1_q2_increase#64, (web_sales#62 / web_sales#52) AS web_q2_q3_increase#65, (store_sales#31 / store_sales#21) AS store_q2_q3_increase#66]
Input [10]: [ca_county#8, d_year#5, store_sales#11, store_sales#21, store_sales#31, ca_county#39, web_sales#42, web_sales#52, ca_county#60, web_sales#62]

(94) CometColumnarExchange
Input [6]: [ca_county#8, d_year#5, web_q1_q2_increase#63, store_q1_q2_increase#64, web_q2_q3_increase#65, store_q2_q3_increase#66]
Arguments: rangepartitioning(ca_county#8 ASC NULLS FIRST, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=12]

(95) CometSort
Input [6]: [ca_county#8, d_year#5, web_q1_q2_increase#63, store_q1_q2_increase#64, web_q2_q3_increase#65, store_q2_q3_increase#66]
Arguments: [ca_county#8, d_year#5, web_q1_q2_increase#63, store_q1_q2_increase#64, web_q2_q3_increase#65, store_q2_q3_increase#66], [ca_county#8 ASC NULLS FIRST]

(96) CometColumnarToRow [codegen id : 7]
Input [6]: [ca_county#8, d_year#5, web_q1_q2_increase#63, store_q1_q2_increase#64, web_q2_q3_increase#65, store_q2_q3_increase#66]

