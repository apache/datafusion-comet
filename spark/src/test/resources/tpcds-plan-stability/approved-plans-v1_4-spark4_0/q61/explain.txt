== Physical Plan ==
* Project (67)
+- * BroadcastNestedLoopJoin Inner BuildRight (66)
   :- * HashAggregate (42)
   :  +- * CometColumnarToRow (41)
   :     +- CometColumnarExchange (40)
   :        +- * HashAggregate (39)
   :           +- * CometColumnarToRow (38)
   :              +- CometProject (37)
   :                 +- CometBroadcastHashJoin (36)
   :                    :- CometProject (31)
   :                    :  +- CometBroadcastHashJoin (30)
   :                    :     :- CometProject (25)
   :                    :     :  +- CometBroadcastHashJoin (24)
   :                    :     :     :- CometProject (20)
   :                    :     :     :  +- CometBroadcastHashJoin (19)
   :                    :     :     :     :- CometProject (14)
   :                    :     :     :     :  +- CometBroadcastHashJoin (13)
   :                    :     :     :     :     :- CometProject (8)
   :                    :     :     :     :     :  +- CometBroadcastHashJoin (7)
   :                    :     :     :     :     :     :- CometFilter (2)
   :                    :     :     :     :     :     :  +- CometScan parquet spark_catalog.default.store_sales (1)
   :                    :     :     :     :     :     +- CometBroadcastExchange (6)
   :                    :     :     :     :     :        +- CometProject (5)
   :                    :     :     :     :     :           +- CometFilter (4)
   :                    :     :     :     :     :              +- CometScan parquet spark_catalog.default.store (3)
   :                    :     :     :     :     +- CometBroadcastExchange (12)
   :                    :     :     :     :        +- CometProject (11)
   :                    :     :     :     :           +- CometFilter (10)
   :                    :     :     :     :              +- CometScan parquet spark_catalog.default.promotion (9)
   :                    :     :     :     +- CometBroadcastExchange (18)
   :                    :     :     :        +- CometProject (17)
   :                    :     :     :           +- CometFilter (16)
   :                    :     :     :              +- CometScan parquet spark_catalog.default.date_dim (15)
   :                    :     :     +- CometBroadcastExchange (23)
   :                    :     :        +- CometFilter (22)
   :                    :     :           +- CometScan parquet spark_catalog.default.customer (21)
   :                    :     +- CometBroadcastExchange (29)
   :                    :        +- CometProject (28)
   :                    :           +- CometFilter (27)
   :                    :              +- CometScan parquet spark_catalog.default.customer_address (26)
   :                    +- CometBroadcastExchange (35)
   :                       +- CometProject (34)
   :                          +- CometFilter (33)
   :                             +- CometScan parquet spark_catalog.default.item (32)
   +- BroadcastExchange (65)
      +- * HashAggregate (64)
         +- * CometColumnarToRow (63)
            +- CometColumnarExchange (62)
               +- * HashAggregate (61)
                  +- * CometColumnarToRow (60)
                     +- CometProject (59)
                        +- CometBroadcastHashJoin (58)
                           :- CometProject (56)
                           :  +- CometBroadcastHashJoin (55)
                           :     :- CometProject (53)
                           :     :  +- CometBroadcastHashJoin (52)
                           :     :     :- CometProject (50)
                           :     :     :  +- CometBroadcastHashJoin (49)
                           :     :     :     :- CometProject (47)
                           :     :     :     :  +- CometBroadcastHashJoin (46)
                           :     :     :     :     :- CometFilter (44)
                           :     :     :     :     :  +- CometScan parquet spark_catalog.default.store_sales (43)
                           :     :     :     :     +- ReusedExchange (45)
                           :     :     :     +- ReusedExchange (48)
                           :     :     +- ReusedExchange (51)
                           :     +- ReusedExchange (54)
                           +- ReusedExchange (57)


(1) CometScan parquet spark_catalog.default.store_sales
Output [6]: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#6), dynamicpruningexpression(ss_sold_date_sk#6 IN dynamicpruning#7)]
PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_promo_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) CometFilter
Input [6]: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6]
Condition : (((isnotnull(ss_store_sk#3) AND isnotnull(ss_promo_sk#4)) AND isnotnull(ss_customer_sk#2)) AND isnotnull(ss_item_sk#1))

(3) CometScan parquet spark_catalog.default.store
Output [2]: [s_store_sk#8, s_gmt_offset#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_gmt_offset), EqualTo(s_gmt_offset,-5.00), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_gmt_offset:decimal(5,2)>

(4) CometFilter
Input [2]: [s_store_sk#8, s_gmt_offset#9]
Condition : ((isnotnull(s_gmt_offset#9) AND (s_gmt_offset#9 = -5.00)) AND isnotnull(s_store_sk#8))

(5) CometProject
Input [2]: [s_store_sk#8, s_gmt_offset#9]
Arguments: [s_store_sk#8], [s_store_sk#8]

(6) CometBroadcastExchange
Input [1]: [s_store_sk#8]
Arguments: [s_store_sk#8]

(7) CometBroadcastHashJoin
Left output [6]: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6]
Right output [1]: [s_store_sk#8]
Arguments: [ss_store_sk#3], [s_store_sk#8], Inner, BuildRight

(8) CometProject
Input [7]: [ss_item_sk#1, ss_customer_sk#2, ss_store_sk#3, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6, s_store_sk#8]
Arguments: [ss_item_sk#1, ss_customer_sk#2, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6], [ss_item_sk#1, ss_customer_sk#2, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6]

(9) CometScan parquet spark_catalog.default.promotion
Output [4]: [p_promo_sk#10, p_channel_dmail#11, p_channel_email#12, p_channel_tv#13]
Batched: true
Location [not included in comparison]/{warehouse_dir}/promotion]
PushedFilters: [Or(Or(EqualTo(p_channel_dmail,Y),EqualTo(p_channel_email,Y)),EqualTo(p_channel_tv,Y)), IsNotNull(p_promo_sk)]
ReadSchema: struct<p_promo_sk:int,p_channel_dmail:string,p_channel_email:string,p_channel_tv:string>

(10) CometFilter
Input [4]: [p_promo_sk#10, p_channel_dmail#11, p_channel_email#12, p_channel_tv#13]
Condition : ((((p_channel_dmail#11 = Y) OR (p_channel_email#12 = Y)) OR (p_channel_tv#13 = Y)) AND isnotnull(p_promo_sk#10))

(11) CometProject
Input [4]: [p_promo_sk#10, p_channel_dmail#11, p_channel_email#12, p_channel_tv#13]
Arguments: [p_promo_sk#10], [p_promo_sk#10]

(12) CometBroadcastExchange
Input [1]: [p_promo_sk#10]
Arguments: [p_promo_sk#10]

(13) CometBroadcastHashJoin
Left output [5]: [ss_item_sk#1, ss_customer_sk#2, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6]
Right output [1]: [p_promo_sk#10]
Arguments: [ss_promo_sk#4], [p_promo_sk#10], Inner, BuildRight

(14) CometProject
Input [6]: [ss_item_sk#1, ss_customer_sk#2, ss_promo_sk#4, ss_ext_sales_price#5, ss_sold_date_sk#6, p_promo_sk#10]
Arguments: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5, ss_sold_date_sk#6], [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5, ss_sold_date_sk#6]

(15) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#14, d_year#15, d_moy#16]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,11), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(16) CometFilter
Input [3]: [d_date_sk#14, d_year#15, d_moy#16]
Condition : ((((isnotnull(d_year#15) AND isnotnull(d_moy#16)) AND (d_year#15 = 1998)) AND (d_moy#16 = 11)) AND isnotnull(d_date_sk#14))

(17) CometProject
Input [3]: [d_date_sk#14, d_year#15, d_moy#16]
Arguments: [d_date_sk#14], [d_date_sk#14]

(18) CometBroadcastExchange
Input [1]: [d_date_sk#14]
Arguments: [d_date_sk#14]

(19) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5, ss_sold_date_sk#6]
Right output [1]: [d_date_sk#14]
Arguments: [ss_sold_date_sk#6], [d_date_sk#14], Inner, BuildRight

(20) CometProject
Input [5]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5, ss_sold_date_sk#6, d_date_sk#14]
Arguments: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5], [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5]

(21) CometScan parquet spark_catalog.default.customer
Output [2]: [c_customer_sk#17, c_current_addr_sk#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>

(22) CometFilter
Input [2]: [c_customer_sk#17, c_current_addr_sk#18]
Condition : (isnotnull(c_customer_sk#17) AND isnotnull(c_current_addr_sk#18))

(23) CometBroadcastExchange
Input [2]: [c_customer_sk#17, c_current_addr_sk#18]
Arguments: [c_customer_sk#17, c_current_addr_sk#18]

(24) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5]
Right output [2]: [c_customer_sk#17, c_current_addr_sk#18]
Arguments: [ss_customer_sk#2], [c_customer_sk#17], Inner, BuildRight

(25) CometProject
Input [5]: [ss_item_sk#1, ss_customer_sk#2, ss_ext_sales_price#5, c_customer_sk#17, c_current_addr_sk#18]
Arguments: [ss_item_sk#1, ss_ext_sales_price#5, c_current_addr_sk#18], [ss_item_sk#1, ss_ext_sales_price#5, c_current_addr_sk#18]

(26) CometScan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#19, ca_gmt_offset#20]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>

(27) CometFilter
Input [2]: [ca_address_sk#19, ca_gmt_offset#20]
Condition : ((isnotnull(ca_gmt_offset#20) AND (ca_gmt_offset#20 = -5.00)) AND isnotnull(ca_address_sk#19))

(28) CometProject
Input [2]: [ca_address_sk#19, ca_gmt_offset#20]
Arguments: [ca_address_sk#19], [ca_address_sk#19]

(29) CometBroadcastExchange
Input [1]: [ca_address_sk#19]
Arguments: [ca_address_sk#19]

(30) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#1, ss_ext_sales_price#5, c_current_addr_sk#18]
Right output [1]: [ca_address_sk#19]
Arguments: [c_current_addr_sk#18], [ca_address_sk#19], Inner, BuildRight

(31) CometProject
Input [4]: [ss_item_sk#1, ss_ext_sales_price#5, c_current_addr_sk#18, ca_address_sk#19]
Arguments: [ss_item_sk#1, ss_ext_sales_price#5], [ss_item_sk#1, ss_ext_sales_price#5]

(32) CometScan parquet spark_catalog.default.item
Output [2]: [i_item_sk#21, i_category#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Jewelry                                           ), IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_category:string>

(33) CometFilter
Input [2]: [i_item_sk#21, i_category#22]
Condition : ((isnotnull(i_category#22) AND (i_category#22 = Jewelry                                           )) AND isnotnull(i_item_sk#21))

(34) CometProject
Input [2]: [i_item_sk#21, i_category#22]
Arguments: [i_item_sk#21], [i_item_sk#21]

(35) CometBroadcastExchange
Input [1]: [i_item_sk#21]
Arguments: [i_item_sk#21]

(36) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#1, ss_ext_sales_price#5]
Right output [1]: [i_item_sk#21]
Arguments: [ss_item_sk#1], [i_item_sk#21], Inner, BuildRight

(37) CometProject
Input [3]: [ss_item_sk#1, ss_ext_sales_price#5, i_item_sk#21]
Arguments: [ss_ext_sales_price#5], [ss_ext_sales_price#5]

(38) CometColumnarToRow [codegen id : 1]
Input [1]: [ss_ext_sales_price#5]

(39) HashAggregate [codegen id : 1]
Input [1]: [ss_ext_sales_price#5]
Keys: []
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#5))]
Aggregate Attributes [1]: [sum#23]
Results [1]: [sum#24]

(40) CometColumnarExchange
Input [1]: [sum#24]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=1]

(41) CometColumnarToRow [codegen id : 4]
Input [1]: [sum#24]

(42) HashAggregate [codegen id : 4]
Input [1]: [sum#24]
Keys: []
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#5))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#5))#25]
Results [1]: [MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#5))#25,17,2) AS promotions#26]

(43) CometScan parquet spark_catalog.default.store_sales
Output [5]: [ss_item_sk#27, ss_customer_sk#28, ss_store_sk#29, ss_ext_sales_price#30, ss_sold_date_sk#31]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#31), dynamicpruningexpression(ss_sold_date_sk#31 IN dynamicpruning#32)]
PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2)>

(44) CometFilter
Input [5]: [ss_item_sk#27, ss_customer_sk#28, ss_store_sk#29, ss_ext_sales_price#30, ss_sold_date_sk#31]
Condition : ((isnotnull(ss_store_sk#29) AND isnotnull(ss_customer_sk#28)) AND isnotnull(ss_item_sk#27))

(45) ReusedExchange [Reuses operator id: 6]
Output [1]: [s_store_sk#33]

(46) CometBroadcastHashJoin
Left output [5]: [ss_item_sk#27, ss_customer_sk#28, ss_store_sk#29, ss_ext_sales_price#30, ss_sold_date_sk#31]
Right output [1]: [s_store_sk#33]
Arguments: [ss_store_sk#29], [s_store_sk#33], Inner, BuildRight

(47) CometProject
Input [6]: [ss_item_sk#27, ss_customer_sk#28, ss_store_sk#29, ss_ext_sales_price#30, ss_sold_date_sk#31, s_store_sk#33]
Arguments: [ss_item_sk#27, ss_customer_sk#28, ss_ext_sales_price#30, ss_sold_date_sk#31], [ss_item_sk#27, ss_customer_sk#28, ss_ext_sales_price#30, ss_sold_date_sk#31]

(48) ReusedExchange [Reuses operator id: 18]
Output [1]: [d_date_sk#34]

(49) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#27, ss_customer_sk#28, ss_ext_sales_price#30, ss_sold_date_sk#31]
Right output [1]: [d_date_sk#34]
Arguments: [ss_sold_date_sk#31], [d_date_sk#34], Inner, BuildRight

(50) CometProject
Input [5]: [ss_item_sk#27, ss_customer_sk#28, ss_ext_sales_price#30, ss_sold_date_sk#31, d_date_sk#34]
Arguments: [ss_item_sk#27, ss_customer_sk#28, ss_ext_sales_price#30], [ss_item_sk#27, ss_customer_sk#28, ss_ext_sales_price#30]

(51) ReusedExchange [Reuses operator id: 23]
Output [2]: [c_customer_sk#35, c_current_addr_sk#36]

(52) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#27, ss_customer_sk#28, ss_ext_sales_price#30]
Right output [2]: [c_customer_sk#35, c_current_addr_sk#36]
Arguments: [ss_customer_sk#28], [c_customer_sk#35], Inner, BuildRight

(53) CometProject
Input [5]: [ss_item_sk#27, ss_customer_sk#28, ss_ext_sales_price#30, c_customer_sk#35, c_current_addr_sk#36]
Arguments: [ss_item_sk#27, ss_ext_sales_price#30, c_current_addr_sk#36], [ss_item_sk#27, ss_ext_sales_price#30, c_current_addr_sk#36]

(54) ReusedExchange [Reuses operator id: 29]
Output [1]: [ca_address_sk#37]

(55) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#27, ss_ext_sales_price#30, c_current_addr_sk#36]
Right output [1]: [ca_address_sk#37]
Arguments: [c_current_addr_sk#36], [ca_address_sk#37], Inner, BuildRight

(56) CometProject
Input [4]: [ss_item_sk#27, ss_ext_sales_price#30, c_current_addr_sk#36, ca_address_sk#37]
Arguments: [ss_item_sk#27, ss_ext_sales_price#30], [ss_item_sk#27, ss_ext_sales_price#30]

(57) ReusedExchange [Reuses operator id: 35]
Output [1]: [i_item_sk#38]

(58) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#27, ss_ext_sales_price#30]
Right output [1]: [i_item_sk#38]
Arguments: [ss_item_sk#27], [i_item_sk#38], Inner, BuildRight

(59) CometProject
Input [3]: [ss_item_sk#27, ss_ext_sales_price#30, i_item_sk#38]
Arguments: [ss_ext_sales_price#30], [ss_ext_sales_price#30]

(60) CometColumnarToRow [codegen id : 2]
Input [1]: [ss_ext_sales_price#30]

(61) HashAggregate [codegen id : 2]
Input [1]: [ss_ext_sales_price#30]
Keys: []
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#30))]
Aggregate Attributes [1]: [sum#39]
Results [1]: [sum#40]

(62) CometColumnarExchange
Input [1]: [sum#40]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=2]

(63) CometColumnarToRow [codegen id : 3]
Input [1]: [sum#40]

(64) HashAggregate [codegen id : 3]
Input [1]: [sum#40]
Keys: []
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#30))]
Aggregate Attributes [1]: [sum(UnscaledValue(ss_ext_sales_price#30))#41]
Results [1]: [MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#30))#41,17,2) AS total#42]

(65) BroadcastExchange
Input [1]: [total#42]
Arguments: IdentityBroadcastMode, [plan_id=3]

(66) BroadcastNestedLoopJoin [codegen id : 4]
Join type: Inner
Join condition: None

(67) Project [codegen id : 4]
Output [3]: [promotions#26, total#42, ((cast(promotions#26 as decimal(15,4)) / cast(total#42 as decimal(15,4))) * 100) AS ((CAST(promotions AS DECIMAL(15,4)) / CAST(total AS DECIMAL(15,4))) * 100)#43]
Input [2]: [promotions#26, total#42]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#6 IN dynamicpruning#7
BroadcastExchange (72)
+- * CometColumnarToRow (71)
   +- CometProject (70)
      +- CometFilter (69)
         +- CometScan parquet spark_catalog.default.date_dim (68)


(68) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#14, d_year#15, d_moy#16]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,11), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(69) CometFilter
Input [3]: [d_date_sk#14, d_year#15, d_moy#16]
Condition : ((((isnotnull(d_year#15) AND isnotnull(d_moy#16)) AND (d_year#15 = 1998)) AND (d_moy#16 = 11)) AND isnotnull(d_date_sk#14))

(70) CometProject
Input [3]: [d_date_sk#14, d_year#15, d_moy#16]
Arguments: [d_date_sk#14], [d_date_sk#14]

(71) CometColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#14]

(72) BroadcastExchange
Input [1]: [d_date_sk#14]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]

Subquery:2 Hosting operator id = 43 Hosting Expression = ss_sold_date_sk#31 IN dynamicpruning#7


