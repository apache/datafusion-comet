== Physical Plan ==
TakeOrderedAndProject (46)
+- * Project (45)
   +- * BroadcastHashJoin Inner BuildRight (44)
      :- * Project (39)
      :  +- * BroadcastHashJoin Inner BuildRight (38)
      :     :- * Project (32)
      :     :  +- * BroadcastHashJoin Inner BuildRight (31)
      :     :     :- * Filter (14)
      :     :     :  +- * HashAggregate (13)
      :     :     :     +- * CometColumnarToRow (12)
      :     :     :        +- CometColumnarExchange (11)
      :     :     :           +- * HashAggregate (10)
      :     :     :              +- * CometColumnarToRow (9)
      :     :     :                 +- CometProject (8)
      :     :     :                    +- CometBroadcastHashJoin (7)
      :     :     :                       :- CometFilter (2)
      :     :     :                       :  +- CometScan parquet spark_catalog.default.store_returns (1)
      :     :     :                       +- CometBroadcastExchange (6)
      :     :     :                          +- CometProject (5)
      :     :     :                             +- CometFilter (4)
      :     :     :                                +- CometScan parquet spark_catalog.default.date_dim (3)
      :     :     +- BroadcastExchange (30)
      :     :        +- * Filter (29)
      :     :           +- * HashAggregate (28)
      :     :              +- * CometColumnarToRow (27)
      :     :                 +- CometColumnarExchange (26)
      :     :                    +- * HashAggregate (25)
      :     :                       +- * HashAggregate (24)
      :     :                          +- * CometColumnarToRow (23)
      :     :                             +- CometColumnarExchange (22)
      :     :                                +- * HashAggregate (21)
      :     :                                   +- * CometColumnarToRow (20)
      :     :                                      +- CometProject (19)
      :     :                                         +- CometBroadcastHashJoin (18)
      :     :                                            :- CometFilter (16)
      :     :                                            :  +- CometScan parquet spark_catalog.default.store_returns (15)
      :     :                                            +- ReusedExchange (17)
      :     +- BroadcastExchange (37)
      :        +- * CometColumnarToRow (36)
      :           +- CometProject (35)
      :              +- CometFilter (34)
      :                 +- CometScan parquet spark_catalog.default.store (33)
      +- BroadcastExchange (43)
         +- * CometColumnarToRow (42)
            +- CometFilter (41)
               +- CometScan parquet spark_catalog.default.customer (40)


(1) CometScan parquet spark_catalog.default.store_returns
Output [4]: [sr_customer_sk#1, sr_store_sk#2, sr_return_amt#3, sr_returned_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(sr_returned_date_sk#4), dynamicpruningexpression(sr_returned_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(sr_store_sk), IsNotNull(sr_customer_sk)]
ReadSchema: struct<sr_customer_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2)>

(2) CometFilter
Input [4]: [sr_customer_sk#1, sr_store_sk#2, sr_return_amt#3, sr_returned_date_sk#4]
Condition : (isnotnull(sr_store_sk#2) AND isnotnull(sr_customer_sk#1))

(3) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#6, d_year#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(4) CometFilter
Input [2]: [d_date_sk#6, d_year#7]
Condition : ((isnotnull(d_year#7) AND (d_year#7 = 2000)) AND isnotnull(d_date_sk#6))

(5) CometProject
Input [2]: [d_date_sk#6, d_year#7]
Arguments: [d_date_sk#6], [d_date_sk#6]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: [d_date_sk#6]

(7) CometBroadcastHashJoin
Left output [4]: [sr_customer_sk#1, sr_store_sk#2, sr_return_amt#3, sr_returned_date_sk#4]
Right output [1]: [d_date_sk#6]
Arguments: [sr_returned_date_sk#4], [d_date_sk#6], Inner, BuildRight

(8) CometProject
Input [5]: [sr_customer_sk#1, sr_store_sk#2, sr_return_amt#3, sr_returned_date_sk#4, d_date_sk#6]
Arguments: [sr_customer_sk#1, sr_store_sk#2, sr_return_amt#3], [sr_customer_sk#1, sr_store_sk#2, sr_return_amt#3]

(9) CometColumnarToRow [codegen id : 1]
Input [3]: [sr_customer_sk#1, sr_store_sk#2, sr_return_amt#3]

(10) HashAggregate [codegen id : 1]
Input [3]: [sr_customer_sk#1, sr_store_sk#2, sr_return_amt#3]
Keys [2]: [sr_customer_sk#1, sr_store_sk#2]
Functions [1]: [partial_sum(UnscaledValue(sr_return_amt#3))]
Aggregate Attributes [1]: [sum#8]
Results [3]: [sr_customer_sk#1, sr_store_sk#2, sum#9]

(11) CometColumnarExchange
Input [3]: [sr_customer_sk#1, sr_store_sk#2, sum#9]
Arguments: hashpartitioning(sr_customer_sk#1, sr_store_sk#2, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=1]

(12) CometColumnarToRow [codegen id : 7]
Input [3]: [sr_customer_sk#1, sr_store_sk#2, sum#9]

(13) HashAggregate [codegen id : 7]
Input [3]: [sr_customer_sk#1, sr_store_sk#2, sum#9]
Keys [2]: [sr_customer_sk#1, sr_store_sk#2]
Functions [1]: [sum(UnscaledValue(sr_return_amt#3))]
Aggregate Attributes [1]: [sum(UnscaledValue(sr_return_amt#3))#10]
Results [3]: [sr_customer_sk#1 AS ctr_customer_sk#11, sr_store_sk#2 AS ctr_store_sk#12, MakeDecimal(sum(UnscaledValue(sr_return_amt#3))#10,17,2) AS ctr_total_return#13]

(14) Filter [codegen id : 7]
Input [3]: [ctr_customer_sk#11, ctr_store_sk#12, ctr_total_return#13]
Condition : isnotnull(ctr_total_return#13)

(15) CometScan parquet spark_catalog.default.store_returns
Output [4]: [sr_customer_sk#14, sr_store_sk#15, sr_return_amt#16, sr_returned_date_sk#17]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(sr_returned_date_sk#17), dynamicpruningexpression(sr_returned_date_sk#17 IN dynamicpruning#18)]
PushedFilters: [IsNotNull(sr_store_sk)]
ReadSchema: struct<sr_customer_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2)>

(16) CometFilter
Input [4]: [sr_customer_sk#14, sr_store_sk#15, sr_return_amt#16, sr_returned_date_sk#17]
Condition : isnotnull(sr_store_sk#15)

(17) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#19]

(18) CometBroadcastHashJoin
Left output [4]: [sr_customer_sk#14, sr_store_sk#15, sr_return_amt#16, sr_returned_date_sk#17]
Right output [1]: [d_date_sk#19]
Arguments: [sr_returned_date_sk#17], [d_date_sk#19], Inner, BuildRight

(19) CometProject
Input [5]: [sr_customer_sk#14, sr_store_sk#15, sr_return_amt#16, sr_returned_date_sk#17, d_date_sk#19]
Arguments: [sr_customer_sk#14, sr_store_sk#15, sr_return_amt#16], [sr_customer_sk#14, sr_store_sk#15, sr_return_amt#16]

(20) CometColumnarToRow [codegen id : 2]
Input [3]: [sr_customer_sk#14, sr_store_sk#15, sr_return_amt#16]

(21) HashAggregate [codegen id : 2]
Input [3]: [sr_customer_sk#14, sr_store_sk#15, sr_return_amt#16]
Keys [2]: [sr_customer_sk#14, sr_store_sk#15]
Functions [1]: [partial_sum(UnscaledValue(sr_return_amt#16))]
Aggregate Attributes [1]: [sum#20]
Results [3]: [sr_customer_sk#14, sr_store_sk#15, sum#21]

(22) CometColumnarExchange
Input [3]: [sr_customer_sk#14, sr_store_sk#15, sum#21]
Arguments: hashpartitioning(sr_customer_sk#14, sr_store_sk#15, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=2]

(23) CometColumnarToRow [codegen id : 3]
Input [3]: [sr_customer_sk#14, sr_store_sk#15, sum#21]

(24) HashAggregate [codegen id : 3]
Input [3]: [sr_customer_sk#14, sr_store_sk#15, sum#21]
Keys [2]: [sr_customer_sk#14, sr_store_sk#15]
Functions [1]: [sum(UnscaledValue(sr_return_amt#16))]
Aggregate Attributes [1]: [sum(UnscaledValue(sr_return_amt#16))#10]
Results [2]: [sr_store_sk#15 AS ctr_store_sk#22, MakeDecimal(sum(UnscaledValue(sr_return_amt#16))#10,17,2) AS ctr_total_return#23]

(25) HashAggregate [codegen id : 3]
Input [2]: [ctr_store_sk#22, ctr_total_return#23]
Keys [1]: [ctr_store_sk#22]
Functions [1]: [partial_avg(ctr_total_return#23)]
Aggregate Attributes [2]: [sum#24, count#25]
Results [3]: [ctr_store_sk#22, sum#26, count#27]

(26) CometColumnarExchange
Input [3]: [ctr_store_sk#22, sum#26, count#27]
Arguments: hashpartitioning(ctr_store_sk#22, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=3]

(27) CometColumnarToRow [codegen id : 4]
Input [3]: [ctr_store_sk#22, sum#26, count#27]

(28) HashAggregate [codegen id : 4]
Input [3]: [ctr_store_sk#22, sum#26, count#27]
Keys [1]: [ctr_store_sk#22]
Functions [1]: [avg(ctr_total_return#23)]
Aggregate Attributes [1]: [avg(ctr_total_return#23)#28]
Results [2]: [(avg(ctr_total_return#23)#28 * 1.2) AS (avg(ctr_total_return) * 1.2)#29, ctr_store_sk#22]

(29) Filter [codegen id : 4]
Input [2]: [(avg(ctr_total_return) * 1.2)#29, ctr_store_sk#22]
Condition : isnotnull((avg(ctr_total_return) * 1.2)#29)

(30) BroadcastExchange
Input [2]: [(avg(ctr_total_return) * 1.2)#29, ctr_store_sk#22]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=4]

(31) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [ctr_store_sk#12]
Right keys [1]: [ctr_store_sk#22]
Join type: Inner
Join condition: (cast(ctr_total_return#13 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#29)

(32) Project [codegen id : 7]
Output [2]: [ctr_customer_sk#11, ctr_store_sk#12]
Input [5]: [ctr_customer_sk#11, ctr_store_sk#12, ctr_total_return#13, (avg(ctr_total_return) * 1.2)#29, ctr_store_sk#22]

(33) CometScan parquet spark_catalog.default.store
Output [2]: [s_store_sk#30, s_state#31]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_state), EqualTo(s_state,TN), IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_state:string>

(34) CometFilter
Input [2]: [s_store_sk#30, s_state#31]
Condition : ((isnotnull(s_state#31) AND (s_state#31 = TN)) AND isnotnull(s_store_sk#30))

(35) CometProject
Input [2]: [s_store_sk#30, s_state#31]
Arguments: [s_store_sk#30], [s_store_sk#30]

(36) CometColumnarToRow [codegen id : 5]
Input [1]: [s_store_sk#30]

(37) BroadcastExchange
Input [1]: [s_store_sk#30]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

(38) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [ctr_store_sk#12]
Right keys [1]: [s_store_sk#30]
Join type: Inner
Join condition: None

(39) Project [codegen id : 7]
Output [1]: [ctr_customer_sk#11]
Input [3]: [ctr_customer_sk#11, ctr_store_sk#12, s_store_sk#30]

(40) CometScan parquet spark_catalog.default.customer
Output [2]: [c_customer_sk#32, c_customer_id#33]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string>

(41) CometFilter
Input [2]: [c_customer_sk#32, c_customer_id#33]
Condition : isnotnull(c_customer_sk#32)

(42) CometColumnarToRow [codegen id : 6]
Input [2]: [c_customer_sk#32, c_customer_id#33]

(43) BroadcastExchange
Input [2]: [c_customer_sk#32, c_customer_id#33]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6]

(44) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [ctr_customer_sk#11]
Right keys [1]: [c_customer_sk#32]
Join type: Inner
Join condition: None

(45) Project [codegen id : 7]
Output [1]: [c_customer_id#33]
Input [3]: [ctr_customer_sk#11, c_customer_sk#32, c_customer_id#33]

(46) TakeOrderedAndProject
Input [1]: [c_customer_id#33]
Arguments: 100, [c_customer_id#33 ASC NULLS FIRST], [c_customer_id#33]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = sr_returned_date_sk#4 IN dynamicpruning#5
BroadcastExchange (51)
+- * CometColumnarToRow (50)
   +- CometProject (49)
      +- CometFilter (48)
         +- CometScan parquet spark_catalog.default.date_dim (47)


(47) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#6, d_year#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(48) CometFilter
Input [2]: [d_date_sk#6, d_year#7]
Condition : ((isnotnull(d_year#7) AND (d_year#7 = 2000)) AND isnotnull(d_date_sk#6))

(49) CometProject
Input [2]: [d_date_sk#6, d_year#7]
Arguments: [d_date_sk#6], [d_date_sk#6]

(50) CometColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#6]

(51) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7]

Subquery:2 Hosting operator id = 15 Hosting Expression = sr_returned_date_sk#17 IN dynamicpruning#5


