== Physical Plan ==
* CometColumnarToRow (51)
+- CometTakeOrderedAndProject (50)
   +- CometHashAggregate (49)
      +- CometExchange (48)
         +- CometHashAggregate (47)
            +- CometUnion (46)
               :- CometHashAggregate (28)
               :  +- CometExchange (27)
               :     +- CometHashAggregate (26)
               :        +- CometProject (25)
               :           +- CometBroadcastHashJoin (24)
               :              :- CometProject (19)
               :              :  +- CometBroadcastHashJoin (18)
               :              :     :- CometProject (13)
               :              :     :  +- CometBroadcastHashJoin (12)
               :              :     :     :- CometProject (8)
               :              :     :     :  +- CometBroadcastHashJoin (7)
               :              :     :     :     :- CometFilter (2)
               :              :     :     :     :  +- CometNativeScan parquet spark_catalog.default.web_sales (1)
               :              :     :     :     +- CometBroadcastExchange (6)
               :              :     :     :        +- CometProject (5)
               :              :     :     :           +- CometFilter (4)
               :              :     :     :              +- CometNativeScan parquet spark_catalog.default.warehouse (3)
               :              :     :     +- CometBroadcastExchange (11)
               :              :     :        +- CometFilter (10)
               :              :     :           +- CometNativeScan parquet spark_catalog.default.date_dim (9)
               :              :     +- CometBroadcastExchange (17)
               :              :        +- CometProject (16)
               :              :           +- CometFilter (15)
               :              :              +- CometNativeScan parquet spark_catalog.default.time_dim (14)
               :              +- CometBroadcastExchange (23)
               :                 +- CometProject (22)
               :                    +- CometFilter (21)
               :                       +- CometNativeScan parquet spark_catalog.default.ship_mode (20)
               +- CometHashAggregate (45)
                  +- CometExchange (44)
                     +- CometHashAggregate (43)
                        +- CometProject (42)
                           +- CometBroadcastHashJoin (41)
                              :- CometProject (39)
                              :  +- CometBroadcastHashJoin (38)
                              :     :- CometProject (36)
                              :     :  +- CometBroadcastHashJoin (35)
                              :     :     :- CometProject (33)
                              :     :     :  +- CometBroadcastHashJoin (32)
                              :     :     :     :- CometFilter (30)
                              :     :     :     :  +- CometNativeScan parquet spark_catalog.default.catalog_sales (29)
                              :     :     :     +- ReusedExchange (31)
                              :     :     +- ReusedExchange (34)
                              :     +- ReusedExchange (37)
                              +- ReusedExchange (40)


(1) CometNativeScan parquet spark_catalog.default.web_sales
Output [7]: [ws_sold_time_sk#1, ws_ship_mode_sk#2, ws_warehouse_sk#3, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, ws_sold_date_sk#7]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#7)]
PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws_ship_mode_sk)]
ReadSchema: struct<ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantity:int,ws_ext_sales_price:decimal(7,2),ws_net_paid:decimal(7,2)>

(2) CometFilter
Input [7]: [ws_sold_time_sk#1, ws_ship_mode_sk#2, ws_warehouse_sk#3, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, ws_sold_date_sk#7]
Condition : ((isnotnull(ws_warehouse_sk#3) AND isnotnull(ws_sold_time_sk#1)) AND isnotnull(ws_ship_mode_sk#2))

(3) CometNativeScan parquet spark_catalog.default.warehouse
Output [7]: [w_warehouse_sk#8, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#13, w_country#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:string,w_state:string,w_country:string>

(4) CometFilter
Input [7]: [w_warehouse_sk#8, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#13, w_country#14]
Condition : isnotnull(w_warehouse_sk#8)

(5) CometProject
Input [7]: [w_warehouse_sk#8, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#13, w_country#14]
Arguments: [w_warehouse_sk#8, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14], [w_warehouse_sk#8, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, static_invoke(CharVarcharCodegenUtils.readSidePadding(w_state#13, 2)) AS w_state#15, w_country#14]

(6) CometBroadcastExchange
Input [7]: [w_warehouse_sk#8, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14]
Arguments: [w_warehouse_sk#8, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14]

(7) CometBroadcastHashJoin
Left output [7]: [ws_sold_time_sk#1, ws_ship_mode_sk#2, ws_warehouse_sk#3, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, ws_sold_date_sk#7]
Right output [7]: [w_warehouse_sk#8, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14]
Arguments: [ws_warehouse_sk#3], [w_warehouse_sk#8], Inner, BuildRight

(8) CometProject
Input [14]: [ws_sold_time_sk#1, ws_ship_mode_sk#2, ws_warehouse_sk#3, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, ws_sold_date_sk#7, w_warehouse_sk#8, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14]
Arguments: [ws_sold_time_sk#1, ws_ship_mode_sk#2, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, ws_sold_date_sk#7, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14], [ws_sold_time_sk#1, ws_ship_mode_sk#2, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, ws_sold_date_sk#7, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14]

(9) CometNativeScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#16, d_year#17, d_moy#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(10) CometFilter
Input [3]: [d_date_sk#16, d_year#17, d_moy#18]
Condition : ((isnotnull(d_year#17) AND (d_year#17 = 2001)) AND isnotnull(d_date_sk#16))

(11) CometBroadcastExchange
Input [3]: [d_date_sk#16, d_year#17, d_moy#18]
Arguments: [d_date_sk#16, d_year#17, d_moy#18]

(12) CometBroadcastHashJoin
Left output [12]: [ws_sold_time_sk#1, ws_ship_mode_sk#2, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, ws_sold_date_sk#7, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14]
Right output [3]: [d_date_sk#16, d_year#17, d_moy#18]
Arguments: [ws_sold_date_sk#7], [d_date_sk#16], Inner, BuildRight

(13) CometProject
Input [15]: [ws_sold_time_sk#1, ws_ship_mode_sk#2, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, ws_sold_date_sk#7, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_date_sk#16, d_year#17, d_moy#18]
Arguments: [ws_sold_time_sk#1, ws_ship_mode_sk#2, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, d_moy#18], [ws_sold_time_sk#1, ws_ship_mode_sk#2, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, d_moy#18]

(14) CometNativeScan parquet spark_catalog.default.time_dim
Output [2]: [t_time_sk#19, t_time#20]
Batched: true
Location [not included in comparison]/{warehouse_dir}/time_dim]
PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,30838), LessThanOrEqual(t_time,59638), IsNotNull(t_time_sk)]
ReadSchema: struct<t_time_sk:int,t_time:int>

(15) CometFilter
Input [2]: [t_time_sk#19, t_time#20]
Condition : (((isnotnull(t_time#20) AND (t_time#20 >= 30838)) AND (t_time#20 <= 59638)) AND isnotnull(t_time_sk#19))

(16) CometProject
Input [2]: [t_time_sk#19, t_time#20]
Arguments: [t_time_sk#19], [t_time_sk#19]

(17) CometBroadcastExchange
Input [1]: [t_time_sk#19]
Arguments: [t_time_sk#19]

(18) CometBroadcastHashJoin
Left output [13]: [ws_sold_time_sk#1, ws_ship_mode_sk#2, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, d_moy#18]
Right output [1]: [t_time_sk#19]
Arguments: [ws_sold_time_sk#1], [t_time_sk#19], Inner, BuildRight

(19) CometProject
Input [14]: [ws_sold_time_sk#1, ws_ship_mode_sk#2, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, d_moy#18, t_time_sk#19]
Arguments: [ws_ship_mode_sk#2, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, d_moy#18], [ws_ship_mode_sk#2, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, d_moy#18]

(20) CometNativeScan parquet spark_catalog.default.ship_mode
Output [2]: [sm_ship_mode_sk#21, sm_carrier#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/ship_mode]
PushedFilters: [IsNotNull(sm_ship_mode_sk)]
ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>

(21) CometFilter
Input [2]: [sm_ship_mode_sk#21, sm_carrier#22]
Condition : (static_invoke(CharVarcharCodegenUtils.readSidePadding(sm_carrier#22, 20)) IN (DHL                 ,BARIAN              ) AND isnotnull(sm_ship_mode_sk#21))

(22) CometProject
Input [2]: [sm_ship_mode_sk#21, sm_carrier#22]
Arguments: [sm_ship_mode_sk#21], [sm_ship_mode_sk#21]

(23) CometBroadcastExchange
Input [1]: [sm_ship_mode_sk#21]
Arguments: [sm_ship_mode_sk#21]

(24) CometBroadcastHashJoin
Left output [12]: [ws_ship_mode_sk#2, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, d_moy#18]
Right output [1]: [sm_ship_mode_sk#21]
Arguments: [ws_ship_mode_sk#2], [sm_ship_mode_sk#21], Inner, BuildRight

(25) CometProject
Input [13]: [ws_ship_mode_sk#2, ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, d_moy#18, sm_ship_mode_sk#21]
Arguments: [ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, d_moy#18], [ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, d_moy#18]

(26) CometHashAggregate
Input [11]: [ws_quantity#4, ws_ext_sales_price#5, ws_net_paid#6, w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, d_moy#18]
Keys [7]: [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17]
Functions [24]: [partial_sum(CASE WHEN (d_moy#18 = 1) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 2) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 3) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 4) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 5) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 6) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 7) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 8) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 9) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 10) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 11) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 12) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 1) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 2) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 3) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 4) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 5) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 6) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 7) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 8) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 9) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 10) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 11) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#18 = 12) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END)]

(27) CometExchange
Input [55]: [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, sum#23, isEmpty#24, sum#25, isEmpty#26, sum#27, isEmpty#28, sum#29, isEmpty#30, sum#31, isEmpty#32, sum#33, isEmpty#34, sum#35, isEmpty#36, sum#37, isEmpty#38, sum#39, isEmpty#40, sum#41, isEmpty#42, sum#43, isEmpty#44, sum#45, isEmpty#46, sum#47, isEmpty#48, sum#49, isEmpty#50, sum#51, isEmpty#52, sum#53, isEmpty#54, sum#55, isEmpty#56, sum#57, isEmpty#58, sum#59, isEmpty#60, sum#61, isEmpty#62, sum#63, isEmpty#64, sum#65, isEmpty#66, sum#67, isEmpty#68, sum#69, isEmpty#70]
Arguments: hashpartitioning(w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(28) CometHashAggregate
Input [55]: [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17, sum#23, isEmpty#24, sum#25, isEmpty#26, sum#27, isEmpty#28, sum#29, isEmpty#30, sum#31, isEmpty#32, sum#33, isEmpty#34, sum#35, isEmpty#36, sum#37, isEmpty#38, sum#39, isEmpty#40, sum#41, isEmpty#42, sum#43, isEmpty#44, sum#45, isEmpty#46, sum#47, isEmpty#48, sum#49, isEmpty#50, sum#51, isEmpty#52, sum#53, isEmpty#54, sum#55, isEmpty#56, sum#57, isEmpty#58, sum#59, isEmpty#60, sum#61, isEmpty#62, sum#63, isEmpty#64, sum#65, isEmpty#66, sum#67, isEmpty#68, sum#69, isEmpty#70]
Keys [7]: [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, d_year#17]
Functions [24]: [sum(CASE WHEN (d_moy#18 = 1) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 2) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 3) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 4) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 5) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 6) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 7) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 8) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 9) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 10) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 11) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 12) THEN (ws_ext_sales_price#5 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 1) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 2) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 3) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 4) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 5) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 6) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 7) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 8) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 9) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 10) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 11) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#18 = 12) THEN (ws_net_paid#6 * cast(ws_quantity#4 as decimal(10,0))) ELSE 0.00 END)]

(29) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [7]: [cs_sold_time_sk#71, cs_ship_mode_sk#72, cs_warehouse_sk#73, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, cs_sold_date_sk#77]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#77)]
PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs_ship_mode_sk)]
ReadSchema: struct<cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantity:int,cs_sales_price:decimal(7,2),cs_net_paid_inc_tax:decimal(7,2)>

(30) CometFilter
Input [7]: [cs_sold_time_sk#71, cs_ship_mode_sk#72, cs_warehouse_sk#73, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, cs_sold_date_sk#77]
Condition : ((isnotnull(cs_warehouse_sk#73) AND isnotnull(cs_sold_time_sk#71)) AND isnotnull(cs_ship_mode_sk#72))

(31) ReusedExchange [Reuses operator id: 6]
Output [7]: [w_warehouse_sk#78, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84]

(32) CometBroadcastHashJoin
Left output [7]: [cs_sold_time_sk#71, cs_ship_mode_sk#72, cs_warehouse_sk#73, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, cs_sold_date_sk#77]
Right output [7]: [w_warehouse_sk#78, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84]
Arguments: [cs_warehouse_sk#73], [w_warehouse_sk#78], Inner, BuildRight

(33) CometProject
Input [14]: [cs_sold_time_sk#71, cs_ship_mode_sk#72, cs_warehouse_sk#73, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, cs_sold_date_sk#77, w_warehouse_sk#78, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84]
Arguments: [cs_sold_time_sk#71, cs_ship_mode_sk#72, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, cs_sold_date_sk#77, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84], [cs_sold_time_sk#71, cs_ship_mode_sk#72, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, cs_sold_date_sk#77, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84]

(34) ReusedExchange [Reuses operator id: 11]
Output [3]: [d_date_sk#85, d_year#86, d_moy#87]

(35) CometBroadcastHashJoin
Left output [12]: [cs_sold_time_sk#71, cs_ship_mode_sk#72, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, cs_sold_date_sk#77, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84]
Right output [3]: [d_date_sk#85, d_year#86, d_moy#87]
Arguments: [cs_sold_date_sk#77], [d_date_sk#85], Inner, BuildRight

(36) CometProject
Input [15]: [cs_sold_time_sk#71, cs_ship_mode_sk#72, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, cs_sold_date_sk#77, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_date_sk#85, d_year#86, d_moy#87]
Arguments: [cs_sold_time_sk#71, cs_ship_mode_sk#72, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, d_moy#87], [cs_sold_time_sk#71, cs_ship_mode_sk#72, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, d_moy#87]

(37) ReusedExchange [Reuses operator id: 17]
Output [1]: [t_time_sk#88]

(38) CometBroadcastHashJoin
Left output [13]: [cs_sold_time_sk#71, cs_ship_mode_sk#72, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, d_moy#87]
Right output [1]: [t_time_sk#88]
Arguments: [cs_sold_time_sk#71], [t_time_sk#88], Inner, BuildRight

(39) CometProject
Input [14]: [cs_sold_time_sk#71, cs_ship_mode_sk#72, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, d_moy#87, t_time_sk#88]
Arguments: [cs_ship_mode_sk#72, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, d_moy#87], [cs_ship_mode_sk#72, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, d_moy#87]

(40) ReusedExchange [Reuses operator id: 23]
Output [1]: [sm_ship_mode_sk#89]

(41) CometBroadcastHashJoin
Left output [12]: [cs_ship_mode_sk#72, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, d_moy#87]
Right output [1]: [sm_ship_mode_sk#89]
Arguments: [cs_ship_mode_sk#72], [sm_ship_mode_sk#89], Inner, BuildRight

(42) CometProject
Input [13]: [cs_ship_mode_sk#72, cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, d_moy#87, sm_ship_mode_sk#89]
Arguments: [cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, d_moy#87], [cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, d_moy#87]

(43) CometHashAggregate
Input [11]: [cs_quantity#74, cs_sales_price#75, cs_net_paid_inc_tax#76, w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, d_moy#87]
Keys [7]: [w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86]
Functions [24]: [partial_sum(CASE WHEN (d_moy#87 = 1) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 2) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 3) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 4) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 5) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 6) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 7) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 8) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 9) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 10) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 11) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 12) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 1) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 2) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 3) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 4) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 5) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 6) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 7) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 8) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 9) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 10) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 11) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#87 = 12) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END)]

(44) CometExchange
Input [55]: [w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, sum#90, isEmpty#91, sum#92, isEmpty#93, sum#94, isEmpty#95, sum#96, isEmpty#97, sum#98, isEmpty#99, sum#100, isEmpty#101, sum#102, isEmpty#103, sum#104, isEmpty#105, sum#106, isEmpty#107, sum#108, isEmpty#109, sum#110, isEmpty#111, sum#112, isEmpty#113, sum#114, isEmpty#115, sum#116, isEmpty#117, sum#118, isEmpty#119, sum#120, isEmpty#121, sum#122, isEmpty#123, sum#124, isEmpty#125, sum#126, isEmpty#127, sum#128, isEmpty#129, sum#130, isEmpty#131, sum#132, isEmpty#133, sum#134, isEmpty#135, sum#136, isEmpty#137]
Arguments: hashpartitioning(w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(45) CometHashAggregate
Input [55]: [w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86, sum#90, isEmpty#91, sum#92, isEmpty#93, sum#94, isEmpty#95, sum#96, isEmpty#97, sum#98, isEmpty#99, sum#100, isEmpty#101, sum#102, isEmpty#103, sum#104, isEmpty#105, sum#106, isEmpty#107, sum#108, isEmpty#109, sum#110, isEmpty#111, sum#112, isEmpty#113, sum#114, isEmpty#115, sum#116, isEmpty#117, sum#118, isEmpty#119, sum#120, isEmpty#121, sum#122, isEmpty#123, sum#124, isEmpty#125, sum#126, isEmpty#127, sum#128, isEmpty#129, sum#130, isEmpty#131, sum#132, isEmpty#133, sum#134, isEmpty#135, sum#136, isEmpty#137]
Keys [7]: [w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, d_year#86]
Functions [24]: [sum(CASE WHEN (d_moy#87 = 1) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 2) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 3) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 4) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 5) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 6) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 7) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 8) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 9) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 10) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 11) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 12) THEN (cs_sales_price#75 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 1) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 2) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 3) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 4) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 5) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 6) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 7) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 8) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 9) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 10) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 11) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END), sum(CASE WHEN (d_moy#87 = 12) THEN (cs_net_paid_inc_tax#76 * cast(cs_quantity#74 as decimal(10,0))) ELSE 0.00 END)]

(46) CometUnion
Child 0 Input [32]: [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, ship_carriers#138, year#139, jan_sales#140, feb_sales#141, mar_sales#142, apr_sales#143, may_sales#144, jun_sales#145, jul_sales#146, aug_sales#147, sep_sales#148, oct_sales#149, nov_sales#150, dec_sales#151, jan_net#152, feb_net#153, mar_net#154, apr_net#155, may_net#156, jun_net#157, jul_net#158, aug_net#159, sep_net#160, oct_net#161, nov_net#162, dec_net#163]
Child 1 Input [32]: [w_warehouse_name#79, w_warehouse_sq_ft#80, w_city#81, w_county#82, w_state#83, w_country#84, ship_carriers#164, year#165, jan_sales#166, feb_sales#167, mar_sales#168, apr_sales#169, may_sales#170, jun_sales#171, jul_sales#172, aug_sales#173, sep_sales#174, oct_sales#175, nov_sales#176, dec_sales#177, jan_net#178, feb_net#179, mar_net#180, apr_net#181, may_net#182, jun_net#183, jul_net#184, aug_net#185, sep_net#186, oct_net#187, nov_net#188, dec_net#189]

(47) CometHashAggregate
Input [32]: [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, ship_carriers#138, year#139, jan_sales#140, feb_sales#141, mar_sales#142, apr_sales#143, may_sales#144, jun_sales#145, jul_sales#146, aug_sales#147, sep_sales#148, oct_sales#149, nov_sales#150, dec_sales#151, jan_net#152, feb_net#153, mar_net#154, apr_net#155, may_net#156, jun_net#157, jul_net#158, aug_net#159, sep_net#160, oct_net#161, nov_net#162, dec_net#163]
Keys [8]: [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, ship_carriers#138, year#139]
Functions [36]: [partial_sum(jan_sales#140), partial_sum(feb_sales#141), partial_sum(mar_sales#142), partial_sum(apr_sales#143), partial_sum(may_sales#144), partial_sum(jun_sales#145), partial_sum(jul_sales#146), partial_sum(aug_sales#147), partial_sum(sep_sales#148), partial_sum(oct_sales#149), partial_sum(nov_sales#150), partial_sum(dec_sales#151), partial_sum((jan_sales#140 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), partial_sum((feb_sales#141 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), partial_sum((mar_sales#142 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), partial_sum((apr_sales#143 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), partial_sum((may_sales#144 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), partial_sum((jun_sales#145 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), partial_sum((jul_sales#146 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), partial_sum((aug_sales#147 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), partial_sum((sep_sales#148 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), partial_sum((oct_sales#149 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), partial_sum((nov_sales#150 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), partial_sum((dec_sales#151 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), partial_sum(jan_net#152), partial_sum(feb_net#153), partial_sum(mar_net#154), partial_sum(apr_net#155), partial_sum(may_net#156), partial_sum(jun_net#157), partial_sum(jul_net#158), partial_sum(aug_net#159), partial_sum(sep_net#160), partial_sum(oct_net#161), partial_sum(nov_net#162), partial_sum(dec_net#163)]

(48) CometExchange
Input [80]: [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, ship_carriers#138, year#139, sum#190, isEmpty#191, sum#192, isEmpty#193, sum#194, isEmpty#195, sum#196, isEmpty#197, sum#198, isEmpty#199, sum#200, isEmpty#201, sum#202, isEmpty#203, sum#204, isEmpty#205, sum#206, isEmpty#207, sum#208, isEmpty#209, sum#210, isEmpty#211, sum#212, isEmpty#213, sum#214, isEmpty#215, sum#216, isEmpty#217, sum#218, isEmpty#219, sum#220, isEmpty#221, sum#222, isEmpty#223, sum#224, isEmpty#225, sum#226, isEmpty#227, sum#228, isEmpty#229, sum#230, isEmpty#231, sum#232, isEmpty#233, sum#234, isEmpty#235, sum#236, isEmpty#237, sum#238, isEmpty#239, sum#240, isEmpty#241, sum#242, isEmpty#243, sum#244, isEmpty#245, sum#246, isEmpty#247, sum#248, isEmpty#249, sum#250, isEmpty#251, sum#252, isEmpty#253, sum#254, isEmpty#255, sum#256, isEmpty#257, sum#258, isEmpty#259, sum#260, isEmpty#261]
Arguments: hashpartitioning(w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, ship_carriers#138, year#139, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(49) CometHashAggregate
Input [80]: [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, ship_carriers#138, year#139, sum#190, isEmpty#191, sum#192, isEmpty#193, sum#194, isEmpty#195, sum#196, isEmpty#197, sum#198, isEmpty#199, sum#200, isEmpty#201, sum#202, isEmpty#203, sum#204, isEmpty#205, sum#206, isEmpty#207, sum#208, isEmpty#209, sum#210, isEmpty#211, sum#212, isEmpty#213, sum#214, isEmpty#215, sum#216, isEmpty#217, sum#218, isEmpty#219, sum#220, isEmpty#221, sum#222, isEmpty#223, sum#224, isEmpty#225, sum#226, isEmpty#227, sum#228, isEmpty#229, sum#230, isEmpty#231, sum#232, isEmpty#233, sum#234, isEmpty#235, sum#236, isEmpty#237, sum#238, isEmpty#239, sum#240, isEmpty#241, sum#242, isEmpty#243, sum#244, isEmpty#245, sum#246, isEmpty#247, sum#248, isEmpty#249, sum#250, isEmpty#251, sum#252, isEmpty#253, sum#254, isEmpty#255, sum#256, isEmpty#257, sum#258, isEmpty#259, sum#260, isEmpty#261]
Keys [8]: [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, ship_carriers#138, year#139]
Functions [36]: [sum(jan_sales#140), sum(feb_sales#141), sum(mar_sales#142), sum(apr_sales#143), sum(may_sales#144), sum(jun_sales#145), sum(jul_sales#146), sum(aug_sales#147), sum(sep_sales#148), sum(oct_sales#149), sum(nov_sales#150), sum(dec_sales#151), sum((jan_sales#140 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), sum((feb_sales#141 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), sum((mar_sales#142 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), sum((apr_sales#143 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), sum((may_sales#144 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), sum((jun_sales#145 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), sum((jul_sales#146 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), sum((aug_sales#147 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), sum((sep_sales#148 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), sum((oct_sales#149 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), sum((nov_sales#150 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), sum((dec_sales#151 / cast(w_warehouse_sq_ft#10 as decimal(10,0)))), sum(jan_net#152), sum(feb_net#153), sum(mar_net#154), sum(apr_net#155), sum(may_net#156), sum(jun_net#157), sum(jul_net#158), sum(aug_net#159), sum(sep_net#160), sum(oct_net#161), sum(nov_net#162), sum(dec_net#163)]

(50) CometTakeOrderedAndProject
Input [44]: [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, ship_carriers#138, year#139, jan_sales#262, feb_sales#263, mar_sales#264, apr_sales#265, may_sales#266, jun_sales#267, jul_sales#268, aug_sales#269, sep_sales#270, oct_sales#271, nov_sales#272, dec_sales#273, jan_sales_per_sq_foot#274, feb_sales_per_sq_foot#275, mar_sales_per_sq_foot#276, apr_sales_per_sq_foot#277, may_sales_per_sq_foot#278, jun_sales_per_sq_foot#279, jul_sales_per_sq_foot#280, aug_sales_per_sq_foot#281, sep_sales_per_sq_foot#282, oct_sales_per_sq_foot#283, nov_sales_per_sq_foot#284, dec_sales_per_sq_foot#285, jan_net#286, feb_net#287, mar_net#288, apr_net#289, may_net#290, jun_net#291, jul_net#292, aug_net#293, sep_net#294, oct_net#295, nov_net#296, dec_net#297]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#9 ASC NULLS FIRST], output=[w_warehouse_name#9,w_warehouse_sq_ft#10,w_city#11,w_county#12,w_state#15,w_country#14,ship_carriers#138,year#139,jan_sales#262,feb_sales#263,mar_sales#264,apr_sales#265,may_sales#266,jun_sales#267,jul_sales#268,aug_sales#269,sep_sales#270,oct_sales#271,nov_sales#272,dec_sales#273,jan_sales_per_sq_foot#274,feb_sales_per_sq_foot#275,mar_sales_per_sq_foot#276,apr_sales_per_sq_foot#277,may_sales_per_sq_foot#278,jun_sales_per_sq_foot#279,jul_sales_per_sq_foot#280,aug_sales_per_sq_foot#281,sep_sales_per_sq_foot#282,oct_sales_per_sq_foot#283,nov_sales_per_sq_foot#284,dec_sales_per_sq_foot#285,jan_net#286,feb_net#287,mar_net#288,apr_net#289,may_net#290,jun_net#291,jul_net#292,aug_net#293,sep_net#294,oct_net#295,nov_net#296,dec_net#297]), [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, ship_carriers#138, year#139, jan_sales#262, feb_sales#263, mar_sales#264, apr_sales#265, may_sales#266, jun_sales#267, jul_sales#268, aug_sales#269, sep_sales#270, oct_sales#271, nov_sales#272, dec_sales#273, jan_sales_per_sq_foot#274, feb_sales_per_sq_foot#275, mar_sales_per_sq_foot#276, apr_sales_per_sq_foot#277, may_sales_per_sq_foot#278, jun_sales_per_sq_foot#279, jul_sales_per_sq_foot#280, aug_sales_per_sq_foot#281, sep_sales_per_sq_foot#282, oct_sales_per_sq_foot#283, nov_sales_per_sq_foot#284, dec_sales_per_sq_foot#285, jan_net#286, feb_net#287, mar_net#288, apr_net#289, may_net#290, jun_net#291, jul_net#292, aug_net#293, sep_net#294, oct_net#295, nov_net#296, dec_net#297], 100, 0, [w_warehouse_name#9 ASC NULLS FIRST], [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, ship_carriers#138, year#139, jan_sales#262, feb_sales#263, mar_sales#264, apr_sales#265, may_sales#266, jun_sales#267, jul_sales#268, aug_sales#269, sep_sales#270, oct_sales#271, nov_sales#272, dec_sales#273, jan_sales_per_sq_foot#274, feb_sales_per_sq_foot#275, mar_sales_per_sq_foot#276, apr_sales_per_sq_foot#277, may_sales_per_sq_foot#278, jun_sales_per_sq_foot#279, jul_sales_per_sq_foot#280, aug_sales_per_sq_foot#281, sep_sales_per_sq_foot#282, oct_sales_per_sq_foot#283, nov_sales_per_sq_foot#284, dec_sales_per_sq_foot#285, jan_net#286, feb_net#287, mar_net#288, apr_net#289, may_net#290, jun_net#291, jul_net#292, aug_net#293, sep_net#294, oct_net#295, nov_net#296, dec_net#297]

(51) CometColumnarToRow [codegen id : 1]
Input [44]: [w_warehouse_name#9, w_warehouse_sq_ft#10, w_city#11, w_county#12, w_state#15, w_country#14, ship_carriers#138, year#139, jan_sales#262, feb_sales#263, mar_sales#264, apr_sales#265, may_sales#266, jun_sales#267, jul_sales#268, aug_sales#269, sep_sales#270, oct_sales#271, nov_sales#272, dec_sales#273, jan_sales_per_sq_foot#274, feb_sales_per_sq_foot#275, mar_sales_per_sq_foot#276, apr_sales_per_sq_foot#277, may_sales_per_sq_foot#278, jun_sales_per_sq_foot#279, jul_sales_per_sq_foot#280, aug_sales_per_sq_foot#281, sep_sales_per_sq_foot#282, oct_sales_per_sq_foot#283, nov_sales_per_sq_foot#284, dec_sales_per_sq_foot#285, jan_net#286, feb_net#287, mar_net#288, apr_net#289, may_net#290, jun_net#291, jul_net#292, aug_net#293, sep_net#294, oct_net#295, nov_net#296, dec_net#297]

