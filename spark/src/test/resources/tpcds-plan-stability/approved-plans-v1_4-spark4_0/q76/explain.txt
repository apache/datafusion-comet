== Physical Plan ==
TakeOrderedAndProject (36)
+- * HashAggregate (35)
   +- * CometColumnarToRow (34)
      +- CometColumnarExchange (33)
         +- * HashAggregate (32)
            +- * CometColumnarToRow (31)
               +- CometUnion (30)
                  :- CometProject (13)
                  :  +- CometBroadcastHashJoin (12)
                  :     :- CometProject (8)
                  :     :  +- CometBroadcastHashJoin (7)
                  :     :     :- CometFilter (2)
                  :     :     :  +- CometScan parquet spark_catalog.default.store_sales (1)
                  :     :     +- CometBroadcastExchange (6)
                  :     :        +- CometProject (5)
                  :     :           +- CometFilter (4)
                  :     :              +- CometScan parquet spark_catalog.default.item (3)
                  :     +- CometBroadcastExchange (11)
                  :        +- CometFilter (10)
                  :           +- CometScan parquet spark_catalog.default.date_dim (9)
                  :- CometProject (21)
                  :  +- CometBroadcastHashJoin (20)
                  :     :- CometProject (18)
                  :     :  +- CometBroadcastHashJoin (17)
                  :     :     :- CometFilter (15)
                  :     :     :  +- CometScan parquet spark_catalog.default.web_sales (14)
                  :     :     +- ReusedExchange (16)
                  :     +- ReusedExchange (19)
                  +- CometProject (29)
                     +- CometBroadcastHashJoin (28)
                        :- CometProject (26)
                        :  +- CometBroadcastHashJoin (25)
                        :     :- CometFilter (23)
                        :     :  +- CometScan parquet spark_catalog.default.catalog_sales (22)
                        :     +- ReusedExchange (24)
                        +- ReusedExchange (27)


(1) CometScan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#1, ss_store_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4)]
PushedFilters: [IsNull(ss_store_sk), IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_store_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Condition : (isnull(ss_store_sk#2) AND isnotnull(ss_item_sk#1))

(3) CometScan parquet spark_catalog.default.item
Output [2]: [i_item_sk#5, i_category#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_category:string>

(4) CometFilter
Input [2]: [i_item_sk#5, i_category#6]
Condition : isnotnull(i_item_sk#5)

(5) CometProject
Input [2]: [i_item_sk#5, i_category#6]
Arguments: [i_item_sk#5, i_category#7], [i_item_sk#5, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_category#6, 50, true, false, true) AS i_category#7]

(6) CometBroadcastExchange
Input [2]: [i_item_sk#5, i_category#7]
Arguments: [i_item_sk#5, i_category#7]

(7) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_store_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Right output [2]: [i_item_sk#5, i_category#7]
Arguments: [ss_item_sk#1], [i_item_sk#5], Inner, BuildRight

(8) CometProject
Input [6]: [ss_item_sk#1, ss_store_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, i_item_sk#5, i_category#7]
Arguments: [ss_store_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, i_category#7], [ss_store_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, i_category#7]

(9) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#8, d_year#9, d_qoy#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(10) CometFilter
Input [3]: [d_date_sk#8, d_year#9, d_qoy#10]
Condition : isnotnull(d_date_sk#8)

(11) CometBroadcastExchange
Input [3]: [d_date_sk#8, d_year#9, d_qoy#10]
Arguments: [d_date_sk#8, d_year#9, d_qoy#10]

(12) CometBroadcastHashJoin
Left output [4]: [ss_store_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, i_category#7]
Right output [3]: [d_date_sk#8, d_year#9, d_qoy#10]
Arguments: [ss_sold_date_sk#4], [d_date_sk#8], Inner, BuildRight

(13) CometProject
Input [7]: [ss_store_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, i_category#7, d_date_sk#8, d_year#9, d_qoy#10]
Arguments: [channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7, ext_sales_price#13], [store AS channel#11, ss_store_sk#2 AS col_name#12, d_year#9, d_qoy#10, i_category#7, ss_ext_sales_price#3 AS ext_sales_price#13]

(14) CometScan parquet spark_catalog.default.web_sales
Output [4]: [ws_item_sk#14, ws_ship_customer_sk#15, ws_ext_sales_price#16, ws_sold_date_sk#17]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#17)]
PushedFilters: [IsNull(ws_ship_customer_sk), IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_ship_customer_sk:int,ws_ext_sales_price:decimal(7,2)>

(15) CometFilter
Input [4]: [ws_item_sk#14, ws_ship_customer_sk#15, ws_ext_sales_price#16, ws_sold_date_sk#17]
Condition : (isnull(ws_ship_customer_sk#15) AND isnotnull(ws_item_sk#14))

(16) ReusedExchange [Reuses operator id: 6]
Output [2]: [i_item_sk#18, i_category#19]

(17) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#14, ws_ship_customer_sk#15, ws_ext_sales_price#16, ws_sold_date_sk#17]
Right output [2]: [i_item_sk#18, i_category#19]
Arguments: [ws_item_sk#14], [i_item_sk#18], Inner, BuildRight

(18) CometProject
Input [6]: [ws_item_sk#14, ws_ship_customer_sk#15, ws_ext_sales_price#16, ws_sold_date_sk#17, i_item_sk#18, i_category#19]
Arguments: [ws_ship_customer_sk#15, ws_ext_sales_price#16, ws_sold_date_sk#17, i_category#19], [ws_ship_customer_sk#15, ws_ext_sales_price#16, ws_sold_date_sk#17, i_category#19]

(19) ReusedExchange [Reuses operator id: 11]
Output [3]: [d_date_sk#20, d_year#21, d_qoy#22]

(20) CometBroadcastHashJoin
Left output [4]: [ws_ship_customer_sk#15, ws_ext_sales_price#16, ws_sold_date_sk#17, i_category#19]
Right output [3]: [d_date_sk#20, d_year#21, d_qoy#22]
Arguments: [ws_sold_date_sk#17], [d_date_sk#20], Inner, BuildRight

(21) CometProject
Input [7]: [ws_ship_customer_sk#15, ws_ext_sales_price#16, ws_sold_date_sk#17, i_category#19, d_date_sk#20, d_year#21, d_qoy#22]
Arguments: [channel#23, col_name#24, d_year#21, d_qoy#22, i_category#19, ext_sales_price#25], [web AS channel#23, ws_ship_customer_sk#15 AS col_name#24, d_year#21, d_qoy#22, i_category#19, ws_ext_sales_price#16 AS ext_sales_price#25]

(22) CometScan parquet spark_catalog.default.catalog_sales
Output [4]: [cs_ship_addr_sk#26, cs_item_sk#27, cs_ext_sales_price#28, cs_sold_date_sk#29]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#29)]
PushedFilters: [IsNull(cs_ship_addr_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_ship_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>

(23) CometFilter
Input [4]: [cs_ship_addr_sk#26, cs_item_sk#27, cs_ext_sales_price#28, cs_sold_date_sk#29]
Condition : (isnull(cs_ship_addr_sk#26) AND isnotnull(cs_item_sk#27))

(24) ReusedExchange [Reuses operator id: 6]
Output [2]: [i_item_sk#30, i_category#31]

(25) CometBroadcastHashJoin
Left output [4]: [cs_ship_addr_sk#26, cs_item_sk#27, cs_ext_sales_price#28, cs_sold_date_sk#29]
Right output [2]: [i_item_sk#30, i_category#31]
Arguments: [cs_item_sk#27], [i_item_sk#30], Inner, BuildRight

(26) CometProject
Input [6]: [cs_ship_addr_sk#26, cs_item_sk#27, cs_ext_sales_price#28, cs_sold_date_sk#29, i_item_sk#30, i_category#31]
Arguments: [cs_ship_addr_sk#26, cs_ext_sales_price#28, cs_sold_date_sk#29, i_category#31], [cs_ship_addr_sk#26, cs_ext_sales_price#28, cs_sold_date_sk#29, i_category#31]

(27) ReusedExchange [Reuses operator id: 11]
Output [3]: [d_date_sk#32, d_year#33, d_qoy#34]

(28) CometBroadcastHashJoin
Left output [4]: [cs_ship_addr_sk#26, cs_ext_sales_price#28, cs_sold_date_sk#29, i_category#31]
Right output [3]: [d_date_sk#32, d_year#33, d_qoy#34]
Arguments: [cs_sold_date_sk#29], [d_date_sk#32], Inner, BuildRight

(29) CometProject
Input [7]: [cs_ship_addr_sk#26, cs_ext_sales_price#28, cs_sold_date_sk#29, i_category#31, d_date_sk#32, d_year#33, d_qoy#34]
Arguments: [channel#35, col_name#36, d_year#33, d_qoy#34, i_category#31, ext_sales_price#37], [catalog AS channel#35, cs_ship_addr_sk#26 AS col_name#36, d_year#33, d_qoy#34, i_category#31, cs_ext_sales_price#28 AS ext_sales_price#37]

(30) CometUnion
Child 0 Input [6]: [channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7, ext_sales_price#13]
Child 1 Input [6]: [channel#23, col_name#24, d_year#21, d_qoy#22, i_category#19, ext_sales_price#25]
Child 2 Input [6]: [channel#35, col_name#36, d_year#33, d_qoy#34, i_category#31, ext_sales_price#37]

(31) CometColumnarToRow [codegen id : 1]
Input [6]: [channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7, ext_sales_price#13]

(32) HashAggregate [codegen id : 1]
Input [6]: [channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7, ext_sales_price#13]
Keys [5]: [channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7]
Functions [2]: [partial_count(1), partial_sum(UnscaledValue(ext_sales_price#13))]
Aggregate Attributes [2]: [count#38, sum#39]
Results [7]: [channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7, count#40, sum#41]

(33) CometColumnarExchange
Input [7]: [channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7, count#40, sum#41]
Arguments: hashpartitioning(channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=1]

(34) CometColumnarToRow [codegen id : 2]
Input [7]: [channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7, count#40, sum#41]

(35) HashAggregate [codegen id : 2]
Input [7]: [channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7, count#40, sum#41]
Keys [5]: [channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7]
Functions [2]: [count(1), sum(UnscaledValue(ext_sales_price#13))]
Aggregate Attributes [2]: [count(1)#42, sum(UnscaledValue(ext_sales_price#13))#43]
Results [7]: [channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7, count(1)#42 AS sales_cnt#44, MakeDecimal(sum(UnscaledValue(ext_sales_price#13))#43,17,2) AS sales_amt#45]

(36) TakeOrderedAndProject
Input [7]: [channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7, sales_cnt#44, sales_amt#45]
Arguments: 100, [channel#11 ASC NULLS FIRST, col_name#12 ASC NULLS FIRST, d_year#9 ASC NULLS FIRST, d_qoy#10 ASC NULLS FIRST, i_category#7 ASC NULLS FIRST], [channel#11, col_name#12, d_year#9, d_qoy#10, i_category#7, sales_cnt#44, sales_amt#45]

