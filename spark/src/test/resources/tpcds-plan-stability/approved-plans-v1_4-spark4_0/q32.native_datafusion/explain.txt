== Physical Plan ==
* HashAggregate (35)
+- Exchange (34)
   +- * HashAggregate (33)
      +- * Project (32)
         +- * BroadcastHashJoin Inner BuildRight (31)
            :- * Project (25)
            :  +- * BroadcastHashJoin Inner BuildRight (24)
            :     :- * ColumnarToRow (9)
            :     :  +- CometProject (8)
            :     :     +- CometBroadcastHashJoin (7)
            :     :        :- CometFilter (2)
            :     :        :  +- CometNativeScan: `spark_catalog`.`default`.`catalog_sales` (1)
            :     :        +- CometBroadcastExchange (6)
            :     :           +- CometProject (5)
            :     :              +- CometFilter (4)
            :     :                 +- CometNativeScan: `spark_catalog`.`default`.`item` (3)
            :     +- BroadcastExchange (23)
            :        +- * Filter (22)
            :           +- * HashAggregate (21)
            :              +- Exchange (20)
            :                 +- * HashAggregate (19)
            :                    +- * ColumnarToRow (18)
            :                       +- CometProject (17)
            :                          +- CometBroadcastHashJoin (16)
            :                             :- CometFilter (11)
            :                             :  +- CometNativeScan: `spark_catalog`.`default`.`catalog_sales` (10)
            :                             +- CometBroadcastExchange (15)
            :                                +- CometProject (14)
            :                                   +- CometFilter (13)
            :                                      +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (12)
            +- BroadcastExchange (30)
               +- * ColumnarToRow (29)
                  +- CometProject (28)
                     +- CometFilter (27)
                        +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (26)


(1) CometNativeScan: `spark_catalog`.`default`.`catalog_sales`
Output [3]: [cs_item_sk#1, cs_ext_discount_amt#2, cs_sold_date_sk#3]
Arguments: [cs_item_sk#1, cs_ext_discount_amt#2, cs_sold_date_sk#3]

(2) CometFilter
Input [3]: [cs_item_sk#1, cs_ext_discount_amt#2, cs_sold_date_sk#3]
Condition : (isnotnull(cs_item_sk#1) AND isnotnull(cs_ext_discount_amt#2))

(3) CometNativeScan: `spark_catalog`.`default`.`item`
Output [2]: [i_item_sk#4, i_manufact_id#5]
Arguments: [i_item_sk#4, i_manufact_id#5]

(4) CometFilter
Input [2]: [i_item_sk#4, i_manufact_id#5]
Condition : ((isnotnull(i_manufact_id#5) AND (i_manufact_id#5 = 977)) AND isnotnull(i_item_sk#4))

(5) CometProject
Input [2]: [i_item_sk#4, i_manufact_id#5]
Arguments: [i_item_sk#4], [i_item_sk#4]

(6) CometBroadcastExchange
Input [1]: [i_item_sk#4]
Arguments: [i_item_sk#4]

(7) CometBroadcastHashJoin
Left output [3]: [cs_item_sk#1, cs_ext_discount_amt#2, cs_sold_date_sk#3]
Right output [1]: [i_item_sk#4]
Arguments: [cs_item_sk#1], [i_item_sk#4], Inner, BuildRight

(8) CometProject
Input [4]: [cs_item_sk#1, cs_ext_discount_amt#2, cs_sold_date_sk#3, i_item_sk#4]
Arguments: [cs_ext_discount_amt#2, cs_sold_date_sk#3, i_item_sk#4], [cs_ext_discount_amt#2, cs_sold_date_sk#3, i_item_sk#4]

(9) ColumnarToRow [codegen id : 4]
Input [3]: [cs_ext_discount_amt#2, cs_sold_date_sk#3, i_item_sk#4]

(10) CometNativeScan: `spark_catalog`.`default`.`catalog_sales`
Output [3]: [cs_item_sk#6, cs_ext_discount_amt#7, cs_sold_date_sk#8]
Arguments: [cs_item_sk#6, cs_ext_discount_amt#7, cs_sold_date_sk#8]

(11) CometFilter
Input [3]: [cs_item_sk#6, cs_ext_discount_amt#7, cs_sold_date_sk#8]
Condition : isnotnull(cs_item_sk#6)

(12) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [2]: [d_date_sk#9, d_date#10]
Arguments: [d_date_sk#9, d_date#10]

(13) CometFilter
Input [2]: [d_date_sk#9, d_date#10]
Condition : (((isnotnull(d_date#10) AND (d_date#10 >= 2000-01-27)) AND (d_date#10 <= 2000-04-26)) AND isnotnull(d_date_sk#9))

(14) CometProject
Input [2]: [d_date_sk#9, d_date#10]
Arguments: [d_date_sk#9], [d_date_sk#9]

(15) CometBroadcastExchange
Input [1]: [d_date_sk#9]
Arguments: [d_date_sk#9]

(16) CometBroadcastHashJoin
Left output [3]: [cs_item_sk#6, cs_ext_discount_amt#7, cs_sold_date_sk#8]
Right output [1]: [d_date_sk#9]
Arguments: [cs_sold_date_sk#8], [d_date_sk#9], Inner, BuildRight

(17) CometProject
Input [4]: [cs_item_sk#6, cs_ext_discount_amt#7, cs_sold_date_sk#8, d_date_sk#9]
Arguments: [cs_item_sk#6, cs_ext_discount_amt#7], [cs_item_sk#6, cs_ext_discount_amt#7]

(18) ColumnarToRow [codegen id : 1]
Input [2]: [cs_item_sk#6, cs_ext_discount_amt#7]

(19) HashAggregate [codegen id : 1]
Input [2]: [cs_item_sk#6, cs_ext_discount_amt#7]
Keys [1]: [cs_item_sk#6]
Functions [1]: [partial_avg(UnscaledValue(cs_ext_discount_amt#7))]
Aggregate Attributes [2]: [sum#11, count#12]
Results [3]: [cs_item_sk#6, sum#13, count#14]

(20) Exchange
Input [3]: [cs_item_sk#6, sum#13, count#14]
Arguments: hashpartitioning(cs_item_sk#6, 5), ENSURE_REQUIREMENTS, [plan_id=1]

(21) HashAggregate [codegen id : 2]
Input [3]: [cs_item_sk#6, sum#13, count#14]
Keys [1]: [cs_item_sk#6]
Functions [1]: [avg(UnscaledValue(cs_ext_discount_amt#7))]
Aggregate Attributes [1]: [avg(UnscaledValue(cs_ext_discount_amt#7))#15]
Results [2]: [(1.3 * cast((avg(UnscaledValue(cs_ext_discount_amt#7))#15 / 100.0) as decimal(11,6))) AS (1.3 * avg(cs_ext_discount_amt))#16, cs_item_sk#6]

(22) Filter [codegen id : 2]
Input [2]: [(1.3 * avg(cs_ext_discount_amt))#16, cs_item_sk#6]
Condition : isnotnull((1.3 * avg(cs_ext_discount_amt))#16)

(23) BroadcastExchange
Input [2]: [(1.3 * avg(cs_ext_discount_amt))#16, cs_item_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=2]

(24) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [i_item_sk#4]
Right keys [1]: [cs_item_sk#6]
Join type: Inner
Join condition: (cast(cs_ext_discount_amt#2 as decimal(14,7)) > (1.3 * avg(cs_ext_discount_amt))#16)

(25) Project [codegen id : 4]
Output [2]: [cs_ext_discount_amt#2, cs_sold_date_sk#3]
Input [5]: [cs_ext_discount_amt#2, cs_sold_date_sk#3, i_item_sk#4, (1.3 * avg(cs_ext_discount_amt))#16, cs_item_sk#6]

(26) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [2]: [d_date_sk#17, d_date#18]
Arguments: [d_date_sk#17, d_date#18]

(27) CometFilter
Input [2]: [d_date_sk#17, d_date#18]
Condition : (((isnotnull(d_date#18) AND (d_date#18 >= 2000-01-27)) AND (d_date#18 <= 2000-04-26)) AND isnotnull(d_date_sk#17))

(28) CometProject
Input [2]: [d_date_sk#17, d_date#18]
Arguments: [d_date_sk#17], [d_date_sk#17]

(29) ColumnarToRow [codegen id : 3]
Input [1]: [d_date_sk#17]

(30) BroadcastExchange
Input [1]: [d_date_sk#17]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=3]

(31) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [cs_sold_date_sk#3]
Right keys [1]: [d_date_sk#17]
Join type: Inner
Join condition: None

(32) Project [codegen id : 4]
Output [1]: [cs_ext_discount_amt#2]
Input [3]: [cs_ext_discount_amt#2, cs_sold_date_sk#3, d_date_sk#17]

(33) HashAggregate [codegen id : 4]
Input [1]: [cs_ext_discount_amt#2]
Keys: []
Functions [1]: [partial_sum(UnscaledValue(cs_ext_discount_amt#2))]
Aggregate Attributes [1]: [sum#19]
Results [1]: [sum#20]

(34) Exchange
Input [1]: [sum#20]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=4]

(35) HashAggregate [codegen id : 5]
Input [1]: [sum#20]
Keys: []
Functions [1]: [sum(UnscaledValue(cs_ext_discount_amt#2))]
Aggregate Attributes [1]: [sum(UnscaledValue(cs_ext_discount_amt#2))#21]
Results [1]: [MakeDecimal(sum(UnscaledValue(cs_ext_discount_amt#2))#21,17,2) AS excess discount amount#22]

