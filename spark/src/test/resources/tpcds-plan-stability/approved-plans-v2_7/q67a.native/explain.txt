== Physical Plan ==
TakeOrderedAndProject (68)
+- * Filter (67)
   +- Window (66)
      +- * ColumnarToRow (65)
         +- CometSort (64)
            +- CometExchange (63)
               +- CometUnion (62)
                  :- CometHashAggregate (21)
                  :  +- CometExchange (20)
                  :     +- CometHashAggregate (19)
                  :        +- CometProject (18)
                  :           +- CometBroadcastHashJoin (17)
                  :              :- CometProject (13)
                  :              :  +- CometBroadcastHashJoin (12)
                  :              :     :- CometProject (8)
                  :              :     :  +- CometBroadcastHashJoin (7)
                  :              :     :     :- CometFilter (2)
                  :              :     :     :  +- CometNativeScan: `spark_catalog`.`default`.`store_sales` (1)
                  :              :     :     +- CometBroadcastExchange (6)
                  :              :     :        +- CometProject (5)
                  :              :     :           +- CometFilter (4)
                  :              :     :              +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (3)
                  :              :     +- CometBroadcastExchange (11)
                  :              :        +- CometFilter (10)
                  :              :           +- CometNativeScan: `spark_catalog`.`default`.`store` (9)
                  :              +- CometBroadcastExchange (16)
                  :                 +- CometFilter (15)
                  :                    +- CometNativeScan: `spark_catalog`.`default`.`item` (14)
                  :- CometHashAggregate (26)
                  :  +- CometExchange (25)
                  :     +- CometHashAggregate (24)
                  :        +- CometHashAggregate (23)
                  :           +- ReusedExchange (22)
                  :- CometHashAggregate (31)
                  :  +- CometExchange (30)
                  :     +- CometHashAggregate (29)
                  :        +- CometHashAggregate (28)
                  :           +- ReusedExchange (27)
                  :- CometHashAggregate (36)
                  :  +- CometExchange (35)
                  :     +- CometHashAggregate (34)
                  :        +- CometHashAggregate (33)
                  :           +- ReusedExchange (32)
                  :- CometHashAggregate (41)
                  :  +- CometExchange (40)
                  :     +- CometHashAggregate (39)
                  :        +- CometHashAggregate (38)
                  :           +- ReusedExchange (37)
                  :- CometHashAggregate (46)
                  :  +- CometExchange (45)
                  :     +- CometHashAggregate (44)
                  :        +- CometHashAggregate (43)
                  :           +- ReusedExchange (42)
                  :- CometHashAggregate (51)
                  :  +- CometExchange (50)
                  :     +- CometHashAggregate (49)
                  :        +- CometHashAggregate (48)
                  :           +- ReusedExchange (47)
                  :- CometHashAggregate (56)
                  :  +- CometExchange (55)
                  :     +- CometHashAggregate (54)
                  :        +- CometHashAggregate (53)
                  :           +- ReusedExchange (52)
                  +- CometHashAggregate (61)
                     +- CometExchange (60)
                        +- CometHashAggregate (59)
                           +- CometHashAggregate (58)
                              +- ReusedExchange (57)


(1) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [5]: [ss_item_sk#1, ss_store_sk#2, ss_quantity#3, ss_sales_price#4, ss_sold_date_sk#5]
Arguments: [ss_item_sk#1, ss_store_sk#2, ss_quantity#3, ss_sales_price#4, ss_sold_date_sk#5]

(2) CometFilter
Input [5]: [ss_item_sk#1, ss_store_sk#2, ss_quantity#3, ss_sales_price#4, ss_sold_date_sk#5]
Condition : (isnotnull(ss_store_sk#2) AND isnotnull(ss_item_sk#1))

(3) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [5]: [d_date_sk#6, d_month_seq#7, d_year#8, d_moy#9, d_qoy#10]
Arguments: [d_date_sk#6, d_month_seq#7, d_year#8, d_moy#9, d_qoy#10]

(4) CometFilter
Input [5]: [d_date_sk#6, d_month_seq#7, d_year#8, d_moy#9, d_qoy#10]
Condition : (((isnotnull(d_month_seq#7) AND (d_month_seq#7 >= 1212)) AND (d_month_seq#7 <= 1223)) AND isnotnull(d_date_sk#6))

(5) CometProject
Input [5]: [d_date_sk#6, d_month_seq#7, d_year#8, d_moy#9, d_qoy#10]
Arguments: [d_date_sk#6, d_year#8, d_moy#9, d_qoy#10], [d_date_sk#6, d_year#8, d_moy#9, d_qoy#10]

(6) CometBroadcastExchange
Input [4]: [d_date_sk#6, d_year#8, d_moy#9, d_qoy#10]
Arguments: [d_date_sk#6, d_year#8, d_moy#9, d_qoy#10]

(7) CometBroadcastHashJoin
Left output [5]: [ss_item_sk#1, ss_store_sk#2, ss_quantity#3, ss_sales_price#4, ss_sold_date_sk#5]
Right output [4]: [d_date_sk#6, d_year#8, d_moy#9, d_qoy#10]
Arguments: [ss_sold_date_sk#5], [d_date_sk#6], Inner, BuildRight

(8) CometProject
Input [9]: [ss_item_sk#1, ss_store_sk#2, ss_quantity#3, ss_sales_price#4, ss_sold_date_sk#5, d_date_sk#6, d_year#8, d_moy#9, d_qoy#10]
Arguments: [ss_item_sk#1, ss_store_sk#2, ss_quantity#3, ss_sales_price#4, d_year#8, d_moy#9, d_qoy#10], [ss_item_sk#1, ss_store_sk#2, ss_quantity#3, ss_sales_price#4, d_year#8, d_moy#9, d_qoy#10]

(9) CometNativeScan: `spark_catalog`.`default`.`store`
Output [2]: [s_store_sk#11, s_store_id#12]
Arguments: [s_store_sk#11, s_store_id#12]

(10) CometFilter
Input [2]: [s_store_sk#11, s_store_id#12]
Condition : isnotnull(s_store_sk#11)

(11) CometBroadcastExchange
Input [2]: [s_store_sk#11, s_store_id#12]
Arguments: [s_store_sk#11, s_store_id#12]

(12) CometBroadcastHashJoin
Left output [7]: [ss_item_sk#1, ss_store_sk#2, ss_quantity#3, ss_sales_price#4, d_year#8, d_moy#9, d_qoy#10]
Right output [2]: [s_store_sk#11, s_store_id#12]
Arguments: [ss_store_sk#2], [s_store_sk#11], Inner, BuildRight

(13) CometProject
Input [9]: [ss_item_sk#1, ss_store_sk#2, ss_quantity#3, ss_sales_price#4, d_year#8, d_moy#9, d_qoy#10, s_store_sk#11, s_store_id#12]
Arguments: [ss_item_sk#1, ss_quantity#3, ss_sales_price#4, d_year#8, d_moy#9, d_qoy#10, s_store_id#12], [ss_item_sk#1, ss_quantity#3, ss_sales_price#4, d_year#8, d_moy#9, d_qoy#10, s_store_id#12]

(14) CometNativeScan: `spark_catalog`.`default`.`item`
Output [5]: [i_item_sk#13, i_brand#14, i_class#15, i_category#16, i_product_name#17]
Arguments: [i_item_sk#13, i_brand#14, i_class#15, i_category#16, i_product_name#17]

(15) CometFilter
Input [5]: [i_item_sk#13, i_brand#14, i_class#15, i_category#16, i_product_name#17]
Condition : isnotnull(i_item_sk#13)

(16) CometBroadcastExchange
Input [5]: [i_item_sk#13, i_brand#14, i_class#15, i_category#16, i_product_name#17]
Arguments: [i_item_sk#13, i_brand#14, i_class#15, i_category#16, i_product_name#17]

(17) CometBroadcastHashJoin
Left output [7]: [ss_item_sk#1, ss_quantity#3, ss_sales_price#4, d_year#8, d_moy#9, d_qoy#10, s_store_id#12]
Right output [5]: [i_item_sk#13, i_brand#14, i_class#15, i_category#16, i_product_name#17]
Arguments: [ss_item_sk#1], [i_item_sk#13], Inner, BuildRight

(18) CometProject
Input [12]: [ss_item_sk#1, ss_quantity#3, ss_sales_price#4, d_year#8, d_moy#9, d_qoy#10, s_store_id#12, i_item_sk#13, i_brand#14, i_class#15, i_category#16, i_product_name#17]
Arguments: [ss_quantity#3, ss_sales_price#4, d_year#8, d_moy#9, d_qoy#10, s_store_id#12, i_brand#14, i_class#15, i_category#16, i_product_name#17], [ss_quantity#3, ss_sales_price#4, d_year#8, d_moy#9, d_qoy#10, s_store_id#12, i_brand#14, i_class#15, i_category#16, i_product_name#17]

(19) CometHashAggregate
Input [10]: [ss_quantity#3, ss_sales_price#4, d_year#8, d_moy#9, d_qoy#10, s_store_id#12, i_brand#14, i_class#15, i_category#16, i_product_name#17]
Keys [8]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12]
Functions [1]: [partial_sum(coalesce((ss_sales_price#4 * cast(ss_quantity#3 as decimal(10,0))), 0.00))]

(20) CometExchange
Input [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#18, isEmpty#19]
Arguments: hashpartitioning(i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(21) CometHashAggregate
Input [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#18, isEmpty#19]
Keys [8]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12]
Functions [1]: [sum(coalesce((ss_sales_price#4 * cast(ss_quantity#3 as decimal(10,0))), 0.00))]

(22) ReusedExchange [Reuses operator id: 20]
Output [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#20, isEmpty#21]

(23) CometHashAggregate
Input [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#20, isEmpty#21]
Keys [8]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12]
Functions [1]: [sum(coalesce((ss_sales_price#4 * cast(ss_quantity#3 as decimal(10,0))), 0.00))]

(24) CometHashAggregate
Input [8]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, sumsales#22]
Keys [7]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9]
Functions [1]: [partial_sum(sumsales#22)]

(25) CometExchange
Input [9]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, sum#23, isEmpty#24]
Arguments: hashpartitioning(i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(26) CometHashAggregate
Input [9]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, sum#23, isEmpty#24]
Keys [7]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9]
Functions [1]: [sum(sumsales#22)]

(27) ReusedExchange [Reuses operator id: 20]
Output [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#25, isEmpty#26]

(28) CometHashAggregate
Input [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#25, isEmpty#26]
Keys [8]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12]
Functions [1]: [sum(coalesce((ss_sales_price#4 * cast(ss_quantity#3 as decimal(10,0))), 0.00))]

(29) CometHashAggregate
Input [7]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, sumsales#22]
Keys [6]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10]
Functions [1]: [partial_sum(sumsales#22)]

(30) CometExchange
Input [8]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, sum#27, isEmpty#28]
Arguments: hashpartitioning(i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(31) CometHashAggregate
Input [8]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, sum#27, isEmpty#28]
Keys [6]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10]
Functions [1]: [sum(sumsales#22)]

(32) ReusedExchange [Reuses operator id: 20]
Output [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#29, isEmpty#30]

(33) CometHashAggregate
Input [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#29, isEmpty#30]
Keys [8]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12]
Functions [1]: [sum(coalesce((ss_sales_price#4 * cast(ss_quantity#3 as decimal(10,0))), 0.00))]

(34) CometHashAggregate
Input [6]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, sumsales#22]
Keys [5]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8]
Functions [1]: [partial_sum(sumsales#22)]

(35) CometExchange
Input [7]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, sum#31, isEmpty#32]
Arguments: hashpartitioning(i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(36) CometHashAggregate
Input [7]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, sum#31, isEmpty#32]
Keys [5]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8]
Functions [1]: [sum(sumsales#22)]

(37) ReusedExchange [Reuses operator id: 20]
Output [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#33, isEmpty#34]

(38) CometHashAggregate
Input [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#33, isEmpty#34]
Keys [8]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12]
Functions [1]: [sum(coalesce((ss_sales_price#4 * cast(ss_quantity#3 as decimal(10,0))), 0.00))]

(39) CometHashAggregate
Input [5]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, sumsales#22]
Keys [4]: [i_category#16, i_class#15, i_brand#14, i_product_name#17]
Functions [1]: [partial_sum(sumsales#22)]

(40) CometExchange
Input [6]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, sum#35, isEmpty#36]
Arguments: hashpartitioning(i_category#16, i_class#15, i_brand#14, i_product_name#17, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(41) CometHashAggregate
Input [6]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, sum#35, isEmpty#36]
Keys [4]: [i_category#16, i_class#15, i_brand#14, i_product_name#17]
Functions [1]: [sum(sumsales#22)]

(42) ReusedExchange [Reuses operator id: 20]
Output [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#37, isEmpty#38]

(43) CometHashAggregate
Input [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#37, isEmpty#38]
Keys [8]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12]
Functions [1]: [sum(coalesce((ss_sales_price#4 * cast(ss_quantity#3 as decimal(10,0))), 0.00))]

(44) CometHashAggregate
Input [4]: [i_category#16, i_class#15, i_brand#14, sumsales#22]
Keys [3]: [i_category#16, i_class#15, i_brand#14]
Functions [1]: [partial_sum(sumsales#22)]

(45) CometExchange
Input [5]: [i_category#16, i_class#15, i_brand#14, sum#39, isEmpty#40]
Arguments: hashpartitioning(i_category#16, i_class#15, i_brand#14, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(46) CometHashAggregate
Input [5]: [i_category#16, i_class#15, i_brand#14, sum#39, isEmpty#40]
Keys [3]: [i_category#16, i_class#15, i_brand#14]
Functions [1]: [sum(sumsales#22)]

(47) ReusedExchange [Reuses operator id: 20]
Output [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#41, isEmpty#42]

(48) CometHashAggregate
Input [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#41, isEmpty#42]
Keys [8]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12]
Functions [1]: [sum(coalesce((ss_sales_price#4 * cast(ss_quantity#3 as decimal(10,0))), 0.00))]

(49) CometHashAggregate
Input [3]: [i_category#16, i_class#15, sumsales#22]
Keys [2]: [i_category#16, i_class#15]
Functions [1]: [partial_sum(sumsales#22)]

(50) CometExchange
Input [4]: [i_category#16, i_class#15, sum#43, isEmpty#44]
Arguments: hashpartitioning(i_category#16, i_class#15, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=7]

(51) CometHashAggregate
Input [4]: [i_category#16, i_class#15, sum#43, isEmpty#44]
Keys [2]: [i_category#16, i_class#15]
Functions [1]: [sum(sumsales#22)]

(52) ReusedExchange [Reuses operator id: 20]
Output [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#45, isEmpty#46]

(53) CometHashAggregate
Input [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#45, isEmpty#46]
Keys [8]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12]
Functions [1]: [sum(coalesce((ss_sales_price#4 * cast(ss_quantity#3 as decimal(10,0))), 0.00))]

(54) CometHashAggregate
Input [2]: [i_category#16, sumsales#22]
Keys [1]: [i_category#16]
Functions [1]: [partial_sum(sumsales#22)]

(55) CometExchange
Input [3]: [i_category#16, sum#47, isEmpty#48]
Arguments: hashpartitioning(i_category#16, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=8]

(56) CometHashAggregate
Input [3]: [i_category#16, sum#47, isEmpty#48]
Keys [1]: [i_category#16]
Functions [1]: [sum(sumsales#22)]

(57) ReusedExchange [Reuses operator id: 20]
Output [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#49, isEmpty#50]

(58) CometHashAggregate
Input [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sum#49, isEmpty#50]
Keys [8]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12]
Functions [1]: [sum(coalesce((ss_sales_price#4 * cast(ss_quantity#3 as decimal(10,0))), 0.00))]

(59) CometHashAggregate
Input [1]: [sumsales#22]
Keys: []
Functions [1]: [partial_sum(sumsales#22)]

(60) CometExchange
Input [2]: [sum#51, isEmpty#52]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=9]

(61) CometHashAggregate
Input [2]: [sum#51, isEmpty#52]
Keys: []
Functions [1]: [sum(sumsales#22)]

(62) CometUnion
Child 0 Input [9]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sumsales#53]
Child 1 Input [9]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#54, sumsales#55]
Child 2 Input [9]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#56, s_store_id#57, sumsales#58]
Child 3 Input [9]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#59, d_moy#60, s_store_id#61, sumsales#62]
Child 4 Input [9]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#63, d_qoy#64, d_moy#65, s_store_id#66, sumsales#67]
Child 5 Input [9]: [i_category#16, i_class#15, i_brand#14, i_product_name#68, d_year#69, d_qoy#70, d_moy#71, s_store_id#72, sumsales#73]
Child 6 Input [9]: [i_category#16, i_class#15, i_brand#74, i_product_name#75, d_year#76, d_qoy#77, d_moy#78, s_store_id#79, sumsales#80]
Child 7 Input [9]: [i_category#16, i_class#81, i_brand#82, i_product_name#83, d_year#84, d_qoy#85, d_moy#86, s_store_id#87, sumsales#88]
Child 8 Input [9]: [i_category#89, i_class#90, i_brand#91, i_product_name#92, d_year#93, d_qoy#94, d_moy#95, s_store_id#96, sumsales#97]

(63) CometExchange
Input [9]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sumsales#53]
Arguments: hashpartitioning(i_category#16, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=10]

(64) CometSort
Input [9]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sumsales#53]
Arguments: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sumsales#53], [i_category#16 ASC NULLS FIRST, sumsales#53 DESC NULLS LAST]

(65) ColumnarToRow [codegen id : 1]
Input [9]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sumsales#53]

(66) Window
Input [9]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sumsales#53]
Arguments: [rank(sumsales#53) windowspecdefinition(i_category#16, sumsales#53 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#98], [i_category#16], [sumsales#53 DESC NULLS LAST]

(67) Filter [codegen id : 2]
Input [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sumsales#53, rk#98]
Condition : (rk#98 <= 100)

(68) TakeOrderedAndProject
Input [10]: [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sumsales#53, rk#98]
Arguments: 100, [i_category#16 ASC NULLS FIRST, i_class#15 ASC NULLS FIRST, i_brand#14 ASC NULLS FIRST, i_product_name#17 ASC NULLS FIRST, d_year#8 ASC NULLS FIRST, d_qoy#10 ASC NULLS FIRST, d_moy#9 ASC NULLS FIRST, s_store_id#12 ASC NULLS FIRST, sumsales#53 ASC NULLS FIRST, rk#98 ASC NULLS FIRST], [i_category#16, i_class#15, i_brand#14, i_product_name#17, d_year#8, d_qoy#10, d_moy#9, s_store_id#12, sumsales#53, rk#98]

