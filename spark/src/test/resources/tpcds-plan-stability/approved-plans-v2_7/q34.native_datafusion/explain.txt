== Physical Plan ==
* ColumnarToRow (32)
+- CometSort (31)
   +- CometColumnarExchange (30)
      +- CometProject (29)
         +- CometBroadcastHashJoin (28)
            :- CometFilter (24)
            :  +- CometHashAggregate (23)
            :     +- CometExchange (22)
            :        +- CometHashAggregate (21)
            :           +- CometProject (20)
            :              +- CometBroadcastHashJoin (19)
            :                 :- CometProject (14)
            :                 :  +- CometBroadcastHashJoin (13)
            :                 :     :- CometProject (8)
            :                 :     :  +- CometBroadcastHashJoin (7)
            :                 :     :     :- CometFilter (2)
            :                 :     :     :  +- CometNativeScan: `spark_catalog`.`default`.`store_sales` (1)
            :                 :     :     +- CometBroadcastExchange (6)
            :                 :     :        +- CometProject (5)
            :                 :     :           +- CometFilter (4)
            :                 :     :              +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (3)
            :                 :     +- CometBroadcastExchange (12)
            :                 :        +- CometProject (11)
            :                 :           +- CometFilter (10)
            :                 :              +- CometNativeScan: `spark_catalog`.`default`.`store` (9)
            :                 +- CometBroadcastExchange (18)
            :                    +- CometProject (17)
            :                       +- CometFilter (16)
            :                          +- CometNativeScan: `spark_catalog`.`default`.`household_demographics` (15)
            +- CometBroadcastExchange (27)
               +- CometFilter (26)
                  +- CometNativeScan: `spark_catalog`.`default`.`customer` (25)


(1) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [5]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_store_sk#3, ss_ticket_number#4, ss_sold_date_sk#5]
Arguments: [ss_customer_sk#1, ss_hdemo_sk#2, ss_store_sk#3, ss_ticket_number#4, ss_sold_date_sk#5]

(2) CometFilter
Input [5]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_store_sk#3, ss_ticket_number#4, ss_sold_date_sk#5]
Condition : ((isnotnull(ss_store_sk#3) AND isnotnull(ss_hdemo_sk#2)) AND isnotnull(ss_customer_sk#1))

(3) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [3]: [d_date_sk#6, d_year#7, d_dom#8]
Arguments: [d_date_sk#6, d_year#7, d_dom#8]

(4) CometFilter
Input [3]: [d_date_sk#6, d_year#7, d_dom#8]
Condition : (((((d_dom#8 >= 1) AND (d_dom#8 <= 3)) OR ((d_dom#8 >= 25) AND (d_dom#8 <= 28))) AND d_year#7 IN (1999,2000,2001)) AND isnotnull(d_date_sk#6))

(5) CometProject
Input [3]: [d_date_sk#6, d_year#7, d_dom#8]
Arguments: [d_date_sk#6], [d_date_sk#6]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: [d_date_sk#6]

(7) CometBroadcastHashJoin
Left output [5]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_store_sk#3, ss_ticket_number#4, ss_sold_date_sk#5]
Right output [1]: [d_date_sk#6]
Arguments: [ss_sold_date_sk#5], [d_date_sk#6], Inner, BuildRight

(8) CometProject
Input [6]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_store_sk#3, ss_ticket_number#4, ss_sold_date_sk#5, d_date_sk#6]
Arguments: [ss_customer_sk#1, ss_hdemo_sk#2, ss_store_sk#3, ss_ticket_number#4], [ss_customer_sk#1, ss_hdemo_sk#2, ss_store_sk#3, ss_ticket_number#4]

(9) CometNativeScan: `spark_catalog`.`default`.`store`
Output [2]: [s_store_sk#9, s_county#10]
Arguments: [s_store_sk#9, s_county#10]

(10) CometFilter
Input [2]: [s_store_sk#9, s_county#10]
Condition : ((isnotnull(s_county#10) AND (s_county#10 = Williamson County)) AND isnotnull(s_store_sk#9))

(11) CometProject
Input [2]: [s_store_sk#9, s_county#10]
Arguments: [s_store_sk#9], [s_store_sk#9]

(12) CometBroadcastExchange
Input [1]: [s_store_sk#9]
Arguments: [s_store_sk#9]

(13) CometBroadcastHashJoin
Left output [4]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_store_sk#3, ss_ticket_number#4]
Right output [1]: [s_store_sk#9]
Arguments: [ss_store_sk#3], [s_store_sk#9], Inner, BuildRight

(14) CometProject
Input [5]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_store_sk#3, ss_ticket_number#4, s_store_sk#9]
Arguments: [ss_customer_sk#1, ss_hdemo_sk#2, ss_ticket_number#4], [ss_customer_sk#1, ss_hdemo_sk#2, ss_ticket_number#4]

(15) CometNativeScan: `spark_catalog`.`default`.`household_demographics`
Output [4]: [hd_demo_sk#11, hd_buy_potential#12, hd_dep_count#13, hd_vehicle_count#14]
Arguments: [hd_demo_sk#11, hd_buy_potential#12, hd_dep_count#13, hd_vehicle_count#14]

(16) CometFilter
Input [4]: [hd_demo_sk#11, hd_buy_potential#12, hd_dep_count#13, hd_vehicle_count#14]
Condition : ((((isnotnull(hd_vehicle_count#14) AND ((hd_buy_potential#12 = >10000         ) OR (hd_buy_potential#12 = unknown        ))) AND (hd_vehicle_count#14 > 0)) AND CASE WHEN (hd_vehicle_count#14 > 0) THEN (knownfloatingpointnormalized(normalizenanandzero((cast(hd_dep_count#13 as double) / knownfloatingpointnormalized(normalizenanandzero(cast(hd_vehicle_count#14 as double)))))) > 1.2) END) AND isnotnull(hd_demo_sk#11))

(17) CometProject
Input [4]: [hd_demo_sk#11, hd_buy_potential#12, hd_dep_count#13, hd_vehicle_count#14]
Arguments: [hd_demo_sk#11], [hd_demo_sk#11]

(18) CometBroadcastExchange
Input [1]: [hd_demo_sk#11]
Arguments: [hd_demo_sk#11]

(19) CometBroadcastHashJoin
Left output [3]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_ticket_number#4]
Right output [1]: [hd_demo_sk#11]
Arguments: [ss_hdemo_sk#2], [hd_demo_sk#11], Inner, BuildRight

(20) CometProject
Input [4]: [ss_customer_sk#1, ss_hdemo_sk#2, ss_ticket_number#4, hd_demo_sk#11]
Arguments: [ss_customer_sk#1, ss_ticket_number#4], [ss_customer_sk#1, ss_ticket_number#4]

(21) CometHashAggregate
Input [2]: [ss_customer_sk#1, ss_ticket_number#4]
Keys [2]: [ss_ticket_number#4, ss_customer_sk#1]
Functions [1]: [partial_count(1)]

(22) CometExchange
Input [3]: [ss_ticket_number#4, ss_customer_sk#1, count#15]
Arguments: hashpartitioning(ss_ticket_number#4, ss_customer_sk#1, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(23) CometHashAggregate
Input [3]: [ss_ticket_number#4, ss_customer_sk#1, count#15]
Keys [2]: [ss_ticket_number#4, ss_customer_sk#1]
Functions [1]: [count(1)]

(24) CometFilter
Input [3]: [ss_ticket_number#4, ss_customer_sk#1, cnt#16]
Condition : ((cnt#16 >= 15) AND (cnt#16 <= 20))

(25) CometNativeScan: `spark_catalog`.`default`.`customer`
Output [5]: [c_customer_sk#17, c_salutation#18, c_first_name#19, c_last_name#20, c_preferred_cust_flag#21]
Arguments: [c_customer_sk#17, c_salutation#18, c_first_name#19, c_last_name#20, c_preferred_cust_flag#21]

(26) CometFilter
Input [5]: [c_customer_sk#17, c_salutation#18, c_first_name#19, c_last_name#20, c_preferred_cust_flag#21]
Condition : isnotnull(c_customer_sk#17)

(27) CometBroadcastExchange
Input [5]: [c_customer_sk#17, c_salutation#18, c_first_name#19, c_last_name#20, c_preferred_cust_flag#21]
Arguments: [c_customer_sk#17, c_salutation#18, c_first_name#19, c_last_name#20, c_preferred_cust_flag#21]

(28) CometBroadcastHashJoin
Left output [3]: [ss_ticket_number#4, ss_customer_sk#1, cnt#16]
Right output [5]: [c_customer_sk#17, c_salutation#18, c_first_name#19, c_last_name#20, c_preferred_cust_flag#21]
Arguments: [ss_customer_sk#1], [c_customer_sk#17], Inner, BuildRight

(29) CometProject
Input [8]: [ss_ticket_number#4, ss_customer_sk#1, cnt#16, c_customer_sk#17, c_salutation#18, c_first_name#19, c_last_name#20, c_preferred_cust_flag#21]
Arguments: [c_last_name#20, c_first_name#19, c_salutation#18, c_preferred_cust_flag#21, ss_ticket_number#4, cnt#16], [c_last_name#20, c_first_name#19, c_salutation#18, c_preferred_cust_flag#21, ss_ticket_number#4, cnt#16]

(30) CometColumnarExchange
Input [6]: [c_last_name#20, c_first_name#19, c_salutation#18, c_preferred_cust_flag#21, ss_ticket_number#4, cnt#16]
Arguments: rangepartitioning(c_last_name#20 ASC NULLS FIRST, c_first_name#19 ASC NULLS FIRST, c_salutation#18 ASC NULLS FIRST, c_preferred_cust_flag#21 DESC NULLS LAST, ss_ticket_number#4 ASC NULLS FIRST, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=2]

(31) CometSort
Input [6]: [c_last_name#20, c_first_name#19, c_salutation#18, c_preferred_cust_flag#21, ss_ticket_number#4, cnt#16]
Arguments: [c_last_name#20, c_first_name#19, c_salutation#18, c_preferred_cust_flag#21, ss_ticket_number#4, cnt#16], [c_last_name#20 ASC NULLS FIRST, c_first_name#19 ASC NULLS FIRST, c_salutation#18 ASC NULLS FIRST, c_preferred_cust_flag#21 DESC NULLS LAST, ss_ticket_number#4 ASC NULLS FIRST]

(32) ColumnarToRow [codegen id : 1]
Input [6]: [c_last_name#20, c_first_name#19, c_salutation#18, c_preferred_cust_flag#21, ss_ticket_number#4, cnt#16]

