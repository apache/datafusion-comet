== Physical Plan ==
TakeOrderedAndProject (49)
+- Union (48)
   :- * HashAggregate (27)
   :  +- * HashAggregate (26)
   :     +- * HashAggregate (25)
   :        +- Exchange (24)
   :           +- * HashAggregate (23)
   :              +- * Project (22)
   :                 +- * BroadcastHashJoin Inner BuildRight (21)
   :                    :- * Project (16)
   :                    :  +- * BroadcastHashJoin Inner BuildRight (15)
   :                    :     :- * Project (10)
   :                    :     :  +- * BroadcastHashJoin Inner BuildRight (9)
   :                    :     :     :- * Filter (3)
   :                    :     :     :  +- * ColumnarToRow (2)
   :                    :     :     :     +- Scan parquet spark_catalog.default.inventory (1)
   :                    :     :     +- BroadcastExchange (8)
   :                    :     :        +- * Project (7)
   :                    :     :           +- * Filter (6)
   :                    :     :              +- * ColumnarToRow (5)
   :                    :     :                 +- Scan parquet spark_catalog.default.date_dim (4)
   :                    :     +- BroadcastExchange (14)
   :                    :        +- * Filter (13)
   :                    :           +- * ColumnarToRow (12)
   :                    :              +- Scan parquet spark_catalog.default.item (11)
   :                    +- BroadcastExchange (20)
   :                       +- * Filter (19)
   :                          +- * ColumnarToRow (18)
   :                             +- Scan parquet spark_catalog.default.warehouse (17)
   :- * HashAggregate (32)
   :  +- Exchange (31)
   :     +- * HashAggregate (30)
   :        +- * HashAggregate (29)
   :           +- ReusedExchange (28)
   :- * HashAggregate (37)
   :  +- Exchange (36)
   :     +- * HashAggregate (35)
   :        +- * HashAggregate (34)
   :           +- ReusedExchange (33)
   :- * HashAggregate (42)
   :  +- Exchange (41)
   :     +- * HashAggregate (40)
   :        +- * HashAggregate (39)
   :           +- ReusedExchange (38)
   +- * HashAggregate (47)
      +- Exchange (46)
         +- * HashAggregate (45)
            +- * HashAggregate (44)
               +- ReusedExchange (43)


(1) Scan parquet spark_catalog.default.inventory
Output [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(inv_date_sk#4)]
PushedFilters: [IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)]
ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(2) ColumnarToRow [codegen id : 4]
Input [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]

(3) Filter [codegen id : 4]
Input [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Condition : (isnotnull(inv_item_sk#1) AND isnotnull(inv_warehouse_sk#2))

(4) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#5, d_month_seq#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(5) ColumnarToRow [codegen id : 1]
Input [2]: [d_date_sk#5, d_month_seq#6]

(6) Filter [codegen id : 1]
Input [2]: [d_date_sk#5, d_month_seq#6]
Condition : (((isnotnull(d_month_seq#6) AND (d_month_seq#6 >= 1212)) AND (d_month_seq#6 <= 1223)) AND isnotnull(d_date_sk#5))

(7) Project [codegen id : 1]
Output [1]: [d_date_sk#5]
Input [2]: [d_date_sk#5, d_month_seq#6]

(8) BroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(9) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_date_sk#4]
Right keys [1]: [d_date_sk#5]
Join type: Inner
Join condition: None

(10) Project [codegen id : 4]
Output [3]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]
Input [5]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4, d_date_sk#5]

(11) Scan parquet spark_catalog.default.item
Output [5]: [i_item_sk#7, i_brand#8, i_class#9, i_category#10, i_product_name#11]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>

(12) ColumnarToRow [codegen id : 2]
Input [5]: [i_item_sk#7, i_brand#8, i_class#9, i_category#10, i_product_name#11]

(13) Filter [codegen id : 2]
Input [5]: [i_item_sk#7, i_brand#8, i_class#9, i_category#10, i_product_name#11]
Condition : isnotnull(i_item_sk#7)

(14) BroadcastExchange
Input [5]: [i_item_sk#7, i_brand#8, i_class#9, i_category#10, i_product_name#11]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2]

(15) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_item_sk#1]
Right keys [1]: [i_item_sk#7]
Join type: Inner
Join condition: None

(16) Project [codegen id : 4]
Output [6]: [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_brand#8, i_class#9, i_category#10, i_product_name#11]
Input [8]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, i_item_sk#7, i_brand#8, i_class#9, i_category#10, i_product_name#11]

(17) Scan parquet spark_catalog.default.warehouse
Output [1]: [w_warehouse_sk#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int>

(18) ColumnarToRow [codegen id : 3]
Input [1]: [w_warehouse_sk#12]

(19) Filter [codegen id : 3]
Input [1]: [w_warehouse_sk#12]
Condition : isnotnull(w_warehouse_sk#12)

(20) BroadcastExchange
Input [1]: [w_warehouse_sk#12]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=3]

(21) BroadcastHashJoin [codegen id : 4]
Left keys [1]: [inv_warehouse_sk#2]
Right keys [1]: [w_warehouse_sk#12]
Join type: Inner
Join condition: None

(22) Project [codegen id : 4]
Output [5]: [inv_quantity_on_hand#3, i_brand#8, i_class#9, i_category#10, i_product_name#11]
Input [7]: [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_brand#8, i_class#9, i_category#10, i_product_name#11, w_warehouse_sk#12]

(23) HashAggregate [codegen id : 4]
Input [5]: [inv_quantity_on_hand#3, i_brand#8, i_class#9, i_category#10, i_product_name#11]
Keys [4]: [i_product_name#11, i_brand#8, i_class#9, i_category#10]
Functions [1]: [partial_avg(inv_quantity_on_hand#3)]
Aggregate Attributes [2]: [sum#13, count#14]
Results [6]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, sum#15, count#16]

(24) Exchange
Input [6]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, sum#15, count#16]
Arguments: hashpartitioning(i_product_name#11, i_brand#8, i_class#9, i_category#10, 5), ENSURE_REQUIREMENTS, [plan_id=4]

(25) HashAggregate [codegen id : 5]
Input [6]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, sum#15, count#16]
Keys [4]: [i_product_name#11, i_brand#8, i_class#9, i_category#10]
Functions [1]: [avg(inv_quantity_on_hand#3)]
Aggregate Attributes [1]: [avg(inv_quantity_on_hand#3)#17]
Results [5]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, avg(inv_quantity_on_hand#3)#17 AS qoh#18]

(26) HashAggregate [codegen id : 5]
Input [5]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, qoh#18]
Keys [4]: [i_product_name#11, i_brand#8, i_class#9, i_category#10]
Functions [1]: [partial_avg(qoh#18)]
Aggregate Attributes [2]: [sum#19, count#20]
Results [6]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, sum#21, count#22]

(27) HashAggregate [codegen id : 5]
Input [6]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, sum#21, count#22]
Keys [4]: [i_product_name#11, i_brand#8, i_class#9, i_category#10]
Functions [1]: [avg(qoh#18)]
Aggregate Attributes [1]: [avg(qoh#18)#23]
Results [5]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, avg(qoh#18)#23 AS qoh#24]

(28) ReusedExchange [Reuses operator id: 24]
Output [6]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, sum#15, count#16]

(29) HashAggregate [codegen id : 10]
Input [6]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, sum#15, count#16]
Keys [4]: [i_product_name#11, i_brand#8, i_class#9, i_category#10]
Functions [1]: [avg(inv_quantity_on_hand#3)]
Aggregate Attributes [1]: [avg(inv_quantity_on_hand#3)#17]
Results [4]: [i_product_name#11, i_brand#8, i_class#9, avg(inv_quantity_on_hand#3)#17 AS qoh#18]

(30) HashAggregate [codegen id : 10]
Input [4]: [i_product_name#11, i_brand#8, i_class#9, qoh#18]
Keys [3]: [i_product_name#11, i_brand#8, i_class#9]
Functions [1]: [partial_avg(qoh#18)]
Aggregate Attributes [2]: [sum#25, count#26]
Results [5]: [i_product_name#11, i_brand#8, i_class#9, sum#27, count#28]

(31) Exchange
Input [5]: [i_product_name#11, i_brand#8, i_class#9, sum#27, count#28]
Arguments: hashpartitioning(i_product_name#11, i_brand#8, i_class#9, 5), ENSURE_REQUIREMENTS, [plan_id=5]

(32) HashAggregate [codegen id : 11]
Input [5]: [i_product_name#11, i_brand#8, i_class#9, sum#27, count#28]
Keys [3]: [i_product_name#11, i_brand#8, i_class#9]
Functions [1]: [avg(qoh#18)]
Aggregate Attributes [1]: [avg(qoh#18)#29]
Results [5]: [i_product_name#11, i_brand#8, i_class#9, null AS i_category#30, avg(qoh#18)#29 AS qoh#31]

(33) ReusedExchange [Reuses operator id: 24]
Output [6]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, sum#15, count#16]

(34) HashAggregate [codegen id : 16]
Input [6]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, sum#15, count#16]
Keys [4]: [i_product_name#11, i_brand#8, i_class#9, i_category#10]
Functions [1]: [avg(inv_quantity_on_hand#3)]
Aggregate Attributes [1]: [avg(inv_quantity_on_hand#3)#17]
Results [3]: [i_product_name#11, i_brand#8, avg(inv_quantity_on_hand#3)#17 AS qoh#18]

(35) HashAggregate [codegen id : 16]
Input [3]: [i_product_name#11, i_brand#8, qoh#18]
Keys [2]: [i_product_name#11, i_brand#8]
Functions [1]: [partial_avg(qoh#18)]
Aggregate Attributes [2]: [sum#32, count#33]
Results [4]: [i_product_name#11, i_brand#8, sum#34, count#35]

(36) Exchange
Input [4]: [i_product_name#11, i_brand#8, sum#34, count#35]
Arguments: hashpartitioning(i_product_name#11, i_brand#8, 5), ENSURE_REQUIREMENTS, [plan_id=6]

(37) HashAggregate [codegen id : 17]
Input [4]: [i_product_name#11, i_brand#8, sum#34, count#35]
Keys [2]: [i_product_name#11, i_brand#8]
Functions [1]: [avg(qoh#18)]
Aggregate Attributes [1]: [avg(qoh#18)#36]
Results [5]: [i_product_name#11, i_brand#8, null AS i_class#37, null AS i_category#38, avg(qoh#18)#36 AS qoh#39]

(38) ReusedExchange [Reuses operator id: 24]
Output [6]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, sum#15, count#16]

(39) HashAggregate [codegen id : 22]
Input [6]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, sum#15, count#16]
Keys [4]: [i_product_name#11, i_brand#8, i_class#9, i_category#10]
Functions [1]: [avg(inv_quantity_on_hand#3)]
Aggregate Attributes [1]: [avg(inv_quantity_on_hand#3)#17]
Results [2]: [i_product_name#11, avg(inv_quantity_on_hand#3)#17 AS qoh#18]

(40) HashAggregate [codegen id : 22]
Input [2]: [i_product_name#11, qoh#18]
Keys [1]: [i_product_name#11]
Functions [1]: [partial_avg(qoh#18)]
Aggregate Attributes [2]: [sum#40, count#41]
Results [3]: [i_product_name#11, sum#42, count#43]

(41) Exchange
Input [3]: [i_product_name#11, sum#42, count#43]
Arguments: hashpartitioning(i_product_name#11, 5), ENSURE_REQUIREMENTS, [plan_id=7]

(42) HashAggregate [codegen id : 23]
Input [3]: [i_product_name#11, sum#42, count#43]
Keys [1]: [i_product_name#11]
Functions [1]: [avg(qoh#18)]
Aggregate Attributes [1]: [avg(qoh#18)#44]
Results [5]: [i_product_name#11, null AS i_brand#45, null AS i_class#46, null AS i_category#47, avg(qoh#18)#44 AS qoh#48]

(43) ReusedExchange [Reuses operator id: 24]
Output [6]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, sum#15, count#16]

(44) HashAggregate [codegen id : 28]
Input [6]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, sum#15, count#16]
Keys [4]: [i_product_name#11, i_brand#8, i_class#9, i_category#10]
Functions [1]: [avg(inv_quantity_on_hand#3)]
Aggregate Attributes [1]: [avg(inv_quantity_on_hand#3)#17]
Results [1]: [avg(inv_quantity_on_hand#3)#17 AS qoh#18]

(45) HashAggregate [codegen id : 28]
Input [1]: [qoh#18]
Keys: []
Functions [1]: [partial_avg(qoh#18)]
Aggregate Attributes [2]: [sum#49, count#50]
Results [2]: [sum#51, count#52]

(46) Exchange
Input [2]: [sum#51, count#52]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=8]

(47) HashAggregate [codegen id : 29]
Input [2]: [sum#51, count#52]
Keys: []
Functions [1]: [avg(qoh#18)]
Aggregate Attributes [1]: [avg(qoh#18)#53]
Results [5]: [null AS i_product_name#54, null AS i_brand#55, null AS i_class#56, null AS i_category#57, avg(qoh#18)#53 AS qoh#58]

(48) Union

(49) TakeOrderedAndProject
Input [5]: [i_product_name#11, i_brand#8, i_class#9, i_category#10, qoh#24]
Arguments: 100, [qoh#24 ASC NULLS FIRST, i_product_name#11 ASC NULLS FIRST, i_brand#8 ASC NULLS FIRST, i_class#9 ASC NULLS FIRST, i_category#10 ASC NULLS FIRST], [i_product_name#11, i_brand#8, i_class#9, i_category#10, qoh#24]

