== Physical Plan ==
* CometColumnarToRow (40)
+- CometTakeOrderedAndProject (39)
   +- CometHashAggregate (38)
      +- CometExchange (37)
         +- CometHashAggregate (36)
            +- CometProject (35)
               +- CometBroadcastHashJoin (34)
                  :- CometProject (29)
                  :  +- CometBroadcastHashJoin (28)
                  :     :- CometProject (23)
                  :     :  +- CometBroadcastHashJoin (22)
                  :     :     :- CometBroadcastHashJoin (11)
                  :     :     :  :- CometFilter (2)
                  :     :     :  :  +- CometNativeScan parquet spark_catalog.default.customer (1)
                  :     :     :  +- CometBroadcastExchange (10)
                  :     :     :     +- CometProject (9)
                  :     :     :        +- CometBroadcastHashJoin (8)
                  :     :     :           :- CometNativeScan parquet spark_catalog.default.store_sales (3)
                  :     :     :           +- CometBroadcastExchange (7)
                  :     :     :              +- CometProject (6)
                  :     :     :                 +- CometFilter (5)
                  :     :     :                    +- CometNativeScan parquet spark_catalog.default.date_dim (4)
                  :     :     +- CometBroadcastExchange (21)
                  :     :        +- CometUnion (20)
                  :     :           :- CometProject (15)
                  :     :           :  +- CometBroadcastHashJoin (14)
                  :     :           :     :- CometNativeScan parquet spark_catalog.default.web_sales (12)
                  :     :           :     +- ReusedExchange (13)
                  :     :           +- CometProject (19)
                  :     :              +- CometBroadcastHashJoin (18)
                  :     :                 :- CometNativeScan parquet spark_catalog.default.catalog_sales (16)
                  :     :                 +- ReusedExchange (17)
                  :     +- CometBroadcastExchange (27)
                  :        +- CometProject (26)
                  :           +- CometFilter (25)
                  :              +- CometNativeScan parquet spark_catalog.default.customer_address (24)
                  +- CometBroadcastExchange (33)
                     +- CometProject (32)
                        +- CometFilter (31)
                           +- CometNativeScan parquet spark_catalog.default.customer_demographics (30)


(1) CometNativeScan parquet spark_catalog.default.customer
Output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int>

(2) CometFilter
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Condition : (isnotnull(c_current_addr_sk#3) AND isnotnull(c_current_cdemo_sk#2))

(3) CometNativeScan parquet spark_catalog.default.store_sales
Output [2]: [ss_customer_sk#4, ss_sold_date_sk#5]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#5)]
ReadSchema: struct<ss_customer_sk:int>

(4) CometNativeScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#6, d_year#7, d_moy#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2002), GreaterThanOrEqual(d_moy,4), LessThanOrEqual(d_moy,7), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(5) CometFilter
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Condition : (((((isnotnull(d_year#7) AND isnotnull(d_moy#8)) AND (d_year#7 = 2002)) AND (d_moy#8 >= 4)) AND (d_moy#8 <= 7)) AND isnotnull(d_date_sk#6))

(6) CometProject
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Arguments: [d_date_sk#6], [d_date_sk#6]

(7) CometBroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: [d_date_sk#6]

(8) CometBroadcastHashJoin
Left output [2]: [ss_customer_sk#4, ss_sold_date_sk#5]
Right output [1]: [d_date_sk#6]
Arguments: [ss_sold_date_sk#5], [d_date_sk#6], Inner, BuildRight

(9) CometProject
Input [3]: [ss_customer_sk#4, ss_sold_date_sk#5, d_date_sk#6]
Arguments: [ss_customer_sk#4], [ss_customer_sk#4]

(10) CometBroadcastExchange
Input [1]: [ss_customer_sk#4]
Arguments: [ss_customer_sk#4]

(11) CometBroadcastHashJoin
Left output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Right output [1]: [ss_customer_sk#4]
Arguments: [c_customer_sk#1], [ss_customer_sk#4], LeftSemi, BuildRight

(12) CometNativeScan parquet spark_catalog.default.web_sales
Output [2]: [ws_bill_customer_sk#9, ws_sold_date_sk#10]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#10)]
ReadSchema: struct<ws_bill_customer_sk:int>

(13) ReusedExchange [Reuses operator id: 7]
Output [1]: [d_date_sk#6]

(14) CometBroadcastHashJoin
Left output [2]: [ws_bill_customer_sk#9, ws_sold_date_sk#10]
Right output [1]: [d_date_sk#6]
Arguments: [ws_sold_date_sk#10], [d_date_sk#6], Inner, BuildRight

(15) CometProject
Input [3]: [ws_bill_customer_sk#9, ws_sold_date_sk#10, d_date_sk#6]
Arguments: [customer_sk#11], [ws_bill_customer_sk#9 AS customer_sk#11]

(16) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [2]: [cs_ship_customer_sk#12, cs_sold_date_sk#13]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#13)]
ReadSchema: struct<cs_ship_customer_sk:int>

(17) ReusedExchange [Reuses operator id: 7]
Output [1]: [d_date_sk#14]

(18) CometBroadcastHashJoin
Left output [2]: [cs_ship_customer_sk#12, cs_sold_date_sk#13]
Right output [1]: [d_date_sk#14]
Arguments: [cs_sold_date_sk#13], [d_date_sk#14], Inner, BuildRight

(19) CometProject
Input [3]: [cs_ship_customer_sk#12, cs_sold_date_sk#13, d_date_sk#14]
Arguments: [customer_sk#15], [cs_ship_customer_sk#12 AS customer_sk#15]

(20) CometUnion
Child 0 Input [1]: [customer_sk#11]
Child 1 Input [1]: [customer_sk#15]

(21) CometBroadcastExchange
Input [1]: [customer_sk#11]
Arguments: [customer_sk#11]

(22) CometBroadcastHashJoin
Left output [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Right output [1]: [customer_sk#11]
Arguments: [c_customer_sk#1], [customer_sk#11], LeftSemi, BuildRight

(23) CometProject
Input [3]: [c_customer_sk#1, c_current_cdemo_sk#2, c_current_addr_sk#3]
Arguments: [c_current_cdemo_sk#2, c_current_addr_sk#3], [c_current_cdemo_sk#2, c_current_addr_sk#3]

(24) CometNativeScan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#16, ca_county#17]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [In(ca_county, [Dona Ana County,Douglas County,Gaines County,Richland County,Walker County]), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_county:string>

(25) CometFilter
Input [2]: [ca_address_sk#16, ca_county#17]
Condition : (ca_county#17 IN (Walker County,Richland County,Gaines County,Douglas County,Dona Ana County) AND isnotnull(ca_address_sk#16))

(26) CometProject
Input [2]: [ca_address_sk#16, ca_county#17]
Arguments: [ca_address_sk#16], [ca_address_sk#16]

(27) CometBroadcastExchange
Input [1]: [ca_address_sk#16]
Arguments: [ca_address_sk#16]

(28) CometBroadcastHashJoin
Left output [2]: [c_current_cdemo_sk#2, c_current_addr_sk#3]
Right output [1]: [ca_address_sk#16]
Arguments: [c_current_addr_sk#3], [ca_address_sk#16], Inner, BuildRight

(29) CometProject
Input [3]: [c_current_cdemo_sk#2, c_current_addr_sk#3, ca_address_sk#16]
Arguments: [c_current_cdemo_sk#2], [c_current_cdemo_sk#2]

(30) CometNativeScan parquet spark_catalog.default.customer_demographics
Output [9]: [cd_demo_sk#18, cd_gender#19, cd_marital_status#20, cd_education_status#21, cd_purchase_estimate#22, cd_credit_rating#23, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string,cd_purchase_estimate:int,cd_credit_rating:string,cd_dep_count:int,cd_dep_employed_count:int,cd_dep_college_count:int>

(31) CometFilter
Input [9]: [cd_demo_sk#18, cd_gender#19, cd_marital_status#20, cd_education_status#21, cd_purchase_estimate#22, cd_credit_rating#23, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26]
Condition : isnotnull(cd_demo_sk#18)

(32) CometProject
Input [9]: [cd_demo_sk#18, cd_gender#19, cd_marital_status#20, cd_education_status#21, cd_purchase_estimate#22, cd_credit_rating#23, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26]
Arguments: [cd_demo_sk#18, cd_gender#27, cd_marital_status#28, cd_education_status#29, cd_purchase_estimate#22, cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26], [cd_demo_sk#18, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, cd_gender#19, 1, true, false, true) AS cd_gender#27, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, cd_marital_status#20, 1, true, false, true) AS cd_marital_status#28, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, cd_education_status#21, 20, true, false, true) AS cd_education_status#29, cd_purchase_estimate#22, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, cd_credit_rating#23, 10, true, false, true) AS cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26]

(33) CometBroadcastExchange
Input [9]: [cd_demo_sk#18, cd_gender#27, cd_marital_status#28, cd_education_status#29, cd_purchase_estimate#22, cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26]
Arguments: [cd_demo_sk#18, cd_gender#27, cd_marital_status#28, cd_education_status#29, cd_purchase_estimate#22, cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26]

(34) CometBroadcastHashJoin
Left output [1]: [c_current_cdemo_sk#2]
Right output [9]: [cd_demo_sk#18, cd_gender#27, cd_marital_status#28, cd_education_status#29, cd_purchase_estimate#22, cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26]
Arguments: [c_current_cdemo_sk#2], [cd_demo_sk#18], Inner, BuildRight

(35) CometProject
Input [10]: [c_current_cdemo_sk#2, cd_demo_sk#18, cd_gender#27, cd_marital_status#28, cd_education_status#29, cd_purchase_estimate#22, cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26]
Arguments: [cd_gender#27, cd_marital_status#28, cd_education_status#29, cd_purchase_estimate#22, cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26], [cd_gender#27, cd_marital_status#28, cd_education_status#29, cd_purchase_estimate#22, cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26]

(36) CometHashAggregate
Input [8]: [cd_gender#27, cd_marital_status#28, cd_education_status#29, cd_purchase_estimate#22, cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26]
Keys [8]: [cd_gender#27, cd_marital_status#28, cd_education_status#29, cd_purchase_estimate#22, cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26]
Functions [1]: [partial_count(1)]

(37) CometExchange
Input [9]: [cd_gender#27, cd_marital_status#28, cd_education_status#29, cd_purchase_estimate#22, cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26, count#31]
Arguments: hashpartitioning(cd_gender#27, cd_marital_status#28, cd_education_status#29, cd_purchase_estimate#22, cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(38) CometHashAggregate
Input [9]: [cd_gender#27, cd_marital_status#28, cd_education_status#29, cd_purchase_estimate#22, cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26, count#31]
Keys [8]: [cd_gender#27, cd_marital_status#28, cd_education_status#29, cd_purchase_estimate#22, cd_credit_rating#30, cd_dep_count#24, cd_dep_employed_count#25, cd_dep_college_count#26]
Functions [1]: [count(1)]

(39) CometTakeOrderedAndProject
Input [14]: [cd_gender#27, cd_marital_status#28, cd_education_status#29, cnt1#32, cd_purchase_estimate#22, cnt2#33, cd_credit_rating#30, cnt3#34, cd_dep_count#24, cnt4#35, cd_dep_employed_count#25, cnt5#36, cd_dep_college_count#26, cnt6#37]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[cd_gender#27 ASC NULLS FIRST,cd_marital_status#28 ASC NULLS FIRST,cd_education_status#29 ASC NULLS FIRST,cd_purchase_estimate#22 ASC NULLS FIRST,cd_credit_rating#30 ASC NULLS FIRST,cd_dep_count#24 ASC NULLS FIRST,cd_dep_employed_count#25 ASC NULLS FIRST,cd_dep_college_count#26 ASC NULLS FIRST], output=[cd_gender#27,cd_marital_status#28,cd_education_status#29,cnt1#32,cd_purchase_estimate#22,cnt2#33,cd_credit_rating#30,cnt3#34,cd_dep_count#24,cnt4#35,cd_dep_employed_count#25,cnt5#36,cd_dep_college_count#26,cnt6#37]), [cd_gender#27, cd_marital_status#28, cd_education_status#29, cnt1#32, cd_purchase_estimate#22, cnt2#33, cd_credit_rating#30, cnt3#34, cd_dep_count#24, cnt4#35, cd_dep_employed_count#25, cnt5#36, cd_dep_college_count#26, cnt6#37], 100, 0, [cd_gender#27 ASC NULLS FIRST, cd_marital_status#28 ASC NULLS FIRST, cd_education_status#29 ASC NULLS FIRST, cd_purchase_estimate#22 ASC NULLS FIRST, cd_credit_rating#30 ASC NULLS FIRST, cd_dep_count#24 ASC NULLS FIRST, cd_dep_employed_count#25 ASC NULLS FIRST, cd_dep_college_count#26 ASC NULLS FIRST], [cd_gender#27, cd_marital_status#28, cd_education_status#29, cnt1#32, cd_purchase_estimate#22, cnt2#33, cd_credit_rating#30, cnt3#34, cd_dep_count#24, cnt4#35, cd_dep_employed_count#25, cnt5#36, cd_dep_college_count#26, cnt6#37]

(40) CometColumnarToRow [codegen id : 1]
Input [14]: [cd_gender#27, cd_marital_status#28, cd_education_status#29, cnt1#32, cd_purchase_estimate#22, cnt2#33, cd_credit_rating#30, cnt3#34, cd_dep_count#24, cnt4#35, cd_dep_employed_count#25, cnt5#36, cd_dep_college_count#26, cnt6#37]

