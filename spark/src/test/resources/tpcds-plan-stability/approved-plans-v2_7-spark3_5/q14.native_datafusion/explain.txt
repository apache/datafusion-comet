== Physical Plan ==
* ColumnarToRow (77)
+- CometTakeOrderedAndProject (76)
   +- CometBroadcastHashJoin (75)
      :- CometFilter (56)
      :  +- CometHashAggregate (55)
      :     +- CometExchange (54)
      :        +- CometHashAggregate (53)
      :           +- CometProject (52)
      :              +- CometBroadcastHashJoin (51)
      :                 :- CometProject (46)
      :                 :  +- CometBroadcastHashJoin (45)
      :                 :     :- CometBroadcastHashJoin (39)
      :                 :     :  :- CometFilter (2)
      :                 :     :  :  +- CometNativeScan: `spark_catalog`.`default`.`store_sales` (1)
      :                 :     :  +- CometBroadcastExchange (38)
      :                 :     :     +- CometProject (37)
      :                 :     :        +- CometBroadcastHashJoin (36)
      :                 :     :           :- CometFilter (4)
      :                 :     :           :  +- CometNativeScan: `spark_catalog`.`default`.`item` (3)
      :                 :     :           +- CometBroadcastExchange (35)
      :                 :     :              +- CometBroadcastHashJoin (34)
      :                 :     :                 :- CometHashAggregate (32)
      :                 :     :                 :  +- CometExchange (31)
      :                 :     :                 :     +- CometHashAggregate (30)
      :                 :     :                 :        +- CometProject (29)
      :                 :     :                 :           +- CometBroadcastHashJoin (28)
      :                 :     :                 :              :- CometProject (26)
      :                 :     :                 :              :  +- CometBroadcastHashJoin (25)
      :                 :     :                 :              :     :- CometFilter (6)
      :                 :     :                 :              :     :  +- CometNativeScan: `spark_catalog`.`default`.`store_sales` (5)
      :                 :     :                 :              :     +- CometBroadcastExchange (24)
      :                 :     :                 :              :        +- CometBroadcastHashJoin (23)
      :                 :     :                 :              :           :- CometFilter (8)
      :                 :     :                 :              :           :  +- CometNativeScan: `spark_catalog`.`default`.`item` (7)
      :                 :     :                 :              :           +- CometBroadcastExchange (22)
      :                 :     :                 :              :              +- CometProject (21)
      :                 :     :                 :              :                 +- CometBroadcastHashJoin (20)
      :                 :     :                 :              :                    :- CometProject (15)
      :                 :     :                 :              :                    :  +- CometBroadcastHashJoin (14)
      :                 :     :                 :              :                    :     :- CometFilter (10)
      :                 :     :                 :              :                    :     :  +- CometNativeScan: `spark_catalog`.`default`.`catalog_sales` (9)
      :                 :     :                 :              :                    :     +- CometBroadcastExchange (13)
      :                 :     :                 :              :                    :        +- CometFilter (12)
      :                 :     :                 :              :                    :           +- CometNativeScan: `spark_catalog`.`default`.`item` (11)
      :                 :     :                 :              :                    +- CometBroadcastExchange (19)
      :                 :     :                 :              :                       +- CometProject (18)
      :                 :     :                 :              :                          +- CometFilter (17)
      :                 :     :                 :              :                             +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (16)
      :                 :     :                 :              +- ReusedExchange (27)
      :                 :     :                 +- ReusedExchange (33)
      :                 :     +- CometBroadcastExchange (44)
      :                 :        +- CometBroadcastHashJoin (43)
      :                 :           :- CometFilter (41)
      :                 :           :  +- CometNativeScan: `spark_catalog`.`default`.`item` (40)
      :                 :           +- ReusedExchange (42)
      :                 +- CometBroadcastExchange (50)
      :                    +- CometProject (49)
      :                       +- CometFilter (48)
      :                          +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (47)
      +- CometBroadcastExchange (74)
         +- CometFilter (73)
            +- CometHashAggregate (72)
               +- CometExchange (71)
                  +- CometHashAggregate (70)
                     +- CometProject (69)
                        +- CometBroadcastHashJoin (68)
                           :- CometProject (63)
                           :  +- CometBroadcastHashJoin (62)
                           :     :- CometBroadcastHashJoin (60)
                           :     :  :- CometFilter (58)
                           :     :  :  +- CometNativeScan: `spark_catalog`.`default`.`store_sales` (57)
                           :     :  +- ReusedExchange (59)
                           :     +- ReusedExchange (61)
                           +- CometBroadcastExchange (67)
                              +- CometProject (66)
                                 +- CometFilter (65)
                                    +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (64)


(1) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Arguments: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Condition : isnotnull(ss_item_sk#1)

(3) CometNativeScan: `spark_catalog`.`default`.`item`
Output [4]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8]
Arguments: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8]

(4) CometFilter
Input [4]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8]
Condition : ((isnotnull(i_brand_id#6) AND isnotnull(i_class_id#7)) AND isnotnull(i_category_id#8))

(5) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [2]: [ss_item_sk#9, ss_sold_date_sk#10]
Arguments: [ss_item_sk#9, ss_sold_date_sk#10]

(6) CometFilter
Input [2]: [ss_item_sk#9, ss_sold_date_sk#10]
Condition : isnotnull(ss_item_sk#9)

(7) CometNativeScan: `spark_catalog`.`default`.`item`
Output [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Arguments: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]

(8) CometFilter
Input [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Condition : (((isnotnull(i_item_sk#11) AND isnotnull(i_brand_id#12)) AND isnotnull(i_class_id#13)) AND isnotnull(i_category_id#14))

(9) CometNativeScan: `spark_catalog`.`default`.`catalog_sales`
Output [2]: [cs_item_sk#15, cs_sold_date_sk#16]
Arguments: [cs_item_sk#15, cs_sold_date_sk#16]

(10) CometFilter
Input [2]: [cs_item_sk#15, cs_sold_date_sk#16]
Condition : isnotnull(cs_item_sk#15)

(11) CometNativeScan: `spark_catalog`.`default`.`item`
Output [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]

(12) CometFilter
Input [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Condition : isnotnull(i_item_sk#17)

(13) CometBroadcastExchange
Input [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]

(14) CometBroadcastHashJoin
Left output [2]: [cs_item_sk#15, cs_sold_date_sk#16]
Right output [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [cs_item_sk#15], [i_item_sk#17], Inner, BuildRight

(15) CometProject
Input [6]: [cs_item_sk#15, cs_sold_date_sk#16, i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20], [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20]

(16) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [2]: [d_date_sk#21, d_year#22]
Arguments: [d_date_sk#21, d_year#22]

(17) CometFilter
Input [2]: [d_date_sk#21, d_year#22]
Condition : (((isnotnull(d_year#22) AND (d_year#22 >= 1998)) AND (d_year#22 <= 2000)) AND isnotnull(d_date_sk#21))

(18) CometProject
Input [2]: [d_date_sk#21, d_year#22]
Arguments: [d_date_sk#21], [d_date_sk#21]

(19) CometBroadcastExchange
Input [1]: [d_date_sk#21]
Arguments: [d_date_sk#21]

(20) CometBroadcastHashJoin
Left output [4]: [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20]
Right output [1]: [d_date_sk#21]
Arguments: [cs_sold_date_sk#16], [d_date_sk#21], Inner, BuildRight

(21) CometProject
Input [5]: [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20, d_date_sk#21]
Arguments: [i_brand_id#18, i_class_id#19, i_category_id#20], [i_brand_id#18, i_class_id#19, i_category_id#20]

(22) CometBroadcastExchange
Input [3]: [i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [i_brand_id#18, i_class_id#19, i_category_id#20]

(23) CometBroadcastHashJoin
Left output [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Right output [3]: [i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [coalesce(i_brand_id#12, 0), isnull(i_brand_id#12), coalesce(i_class_id#13, 0), isnull(i_class_id#13), coalesce(i_category_id#14, 0), isnull(i_category_id#14)], [coalesce(i_brand_id#18, 0), isnull(i_brand_id#18), coalesce(i_class_id#19, 0), isnull(i_class_id#19), coalesce(i_category_id#20, 0), isnull(i_category_id#20)], LeftSemi, BuildRight

(24) CometBroadcastExchange
Input [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Arguments: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]

(25) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#9, ss_sold_date_sk#10]
Right output [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Arguments: [ss_item_sk#9], [i_item_sk#11], Inner, BuildRight

(26) CometProject
Input [6]: [ss_item_sk#9, ss_sold_date_sk#10, i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Arguments: [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14], [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14]

(27) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#23]

(28) CometBroadcastHashJoin
Left output [4]: [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14]
Right output [1]: [d_date_sk#23]
Arguments: [ss_sold_date_sk#10], [d_date_sk#23], Inner, BuildRight

(29) CometProject
Input [5]: [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14, d_date_sk#23]
Arguments: [brand_id#24, class_id#25, category_id#26], [i_brand_id#12 AS brand_id#24, i_class_id#13 AS class_id#25, i_category_id#14 AS category_id#26]

(30) CometHashAggregate
Input [3]: [brand_id#24, class_id#25, category_id#26]
Keys [3]: [brand_id#24, class_id#25, category_id#26]
Functions: []

(31) CometExchange
Input [3]: [brand_id#24, class_id#25, category_id#26]
Arguments: hashpartitioning(brand_id#24, class_id#25, category_id#26, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(32) CometHashAggregate
Input [3]: [brand_id#24, class_id#25, category_id#26]
Keys [3]: [brand_id#24, class_id#25, category_id#26]
Functions: []

(33) ReusedExchange [Reuses operator id: 22]
Output [3]: [i_brand_id#27, i_class_id#28, i_category_id#29]

(34) CometBroadcastHashJoin
Left output [3]: [brand_id#24, class_id#25, category_id#26]
Right output [3]: [i_brand_id#27, i_class_id#28, i_category_id#29]
Arguments: [coalesce(brand_id#24, 0), isnull(brand_id#24), coalesce(class_id#25, 0), isnull(class_id#25), coalesce(category_id#26, 0), isnull(category_id#26)], [coalesce(i_brand_id#27, 0), isnull(i_brand_id#27), coalesce(i_class_id#28, 0), isnull(i_class_id#28), coalesce(i_category_id#29, 0), isnull(i_category_id#29)], LeftSemi, BuildRight

(35) CometBroadcastExchange
Input [3]: [brand_id#24, class_id#25, category_id#26]
Arguments: [brand_id#24, class_id#25, category_id#26]

(36) CometBroadcastHashJoin
Left output [4]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8]
Right output [3]: [brand_id#24, class_id#25, category_id#26]
Arguments: [i_brand_id#6, i_class_id#7, i_category_id#8], [brand_id#24, class_id#25, category_id#26], Inner, BuildRight

(37) CometProject
Input [7]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8, brand_id#24, class_id#25, category_id#26]
Arguments: [ss_item_sk#30], [i_item_sk#5 AS ss_item_sk#30]

(38) CometBroadcastExchange
Input [1]: [ss_item_sk#30]
Arguments: [ss_item_sk#30]

(39) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [1]: [ss_item_sk#30]
Arguments: [ss_item_sk#1], [ss_item_sk#30], LeftSemi, BuildRight

(40) CometNativeScan: `spark_catalog`.`default`.`item`
Output [4]: [i_item_sk#31, i_brand_id#32, i_class_id#33, i_category_id#34]
Arguments: [i_item_sk#31, i_brand_id#32, i_class_id#33, i_category_id#34]

(41) CometFilter
Input [4]: [i_item_sk#31, i_brand_id#32, i_class_id#33, i_category_id#34]
Condition : (((isnotnull(i_item_sk#31) AND isnotnull(i_brand_id#32)) AND isnotnull(i_class_id#33)) AND isnotnull(i_category_id#34))

(42) ReusedExchange [Reuses operator id: 38]
Output [1]: [ss_item_sk#30]

(43) CometBroadcastHashJoin
Left output [4]: [i_item_sk#31, i_brand_id#32, i_class_id#33, i_category_id#34]
Right output [1]: [ss_item_sk#30]
Arguments: [i_item_sk#31], [ss_item_sk#30], LeftSemi, BuildRight

(44) CometBroadcastExchange
Input [4]: [i_item_sk#31, i_brand_id#32, i_class_id#33, i_category_id#34]
Arguments: [i_item_sk#31, i_brand_id#32, i_class_id#33, i_category_id#34]

(45) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [4]: [i_item_sk#31, i_brand_id#32, i_class_id#33, i_category_id#34]
Arguments: [ss_item_sk#1], [i_item_sk#31], Inner, BuildRight

(46) CometProject
Input [8]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_item_sk#31, i_brand_id#32, i_class_id#33, i_category_id#34]
Arguments: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#32, i_class_id#33, i_category_id#34], [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#32, i_class_id#33, i_category_id#34]

(47) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [2]: [d_date_sk#35, d_week_seq#36]
Arguments: [d_date_sk#35, d_week_seq#36]

(48) CometFilter
Input [2]: [d_date_sk#35, d_week_seq#36]
Condition : ((isnotnull(d_week_seq#36) AND (d_week_seq#36 = Subquery scalar-subquery#37, [id=#38])) AND isnotnull(d_date_sk#35))

(49) CometProject
Input [2]: [d_date_sk#35, d_week_seq#36]
Arguments: [d_date_sk#35], [d_date_sk#35]

(50) CometBroadcastExchange
Input [1]: [d_date_sk#35]
Arguments: [d_date_sk#35]

(51) CometBroadcastHashJoin
Left output [6]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#32, i_class_id#33, i_category_id#34]
Right output [1]: [d_date_sk#35]
Arguments: [ss_sold_date_sk#4], [d_date_sk#35], Inner, BuildRight

(52) CometProject
Input [7]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#32, i_class_id#33, i_category_id#34, d_date_sk#35]
Arguments: [ss_quantity#2, ss_list_price#3, i_brand_id#32, i_class_id#33, i_category_id#34], [ss_quantity#2, ss_list_price#3, i_brand_id#32, i_class_id#33, i_category_id#34]

(53) CometHashAggregate
Input [5]: [ss_quantity#2, ss_list_price#3, i_brand_id#32, i_class_id#33, i_category_id#34]
Keys [3]: [i_brand_id#32, i_class_id#33, i_category_id#34]
Functions [2]: [partial_sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), partial_count(1)]

(54) CometExchange
Input [6]: [i_brand_id#32, i_class_id#33, i_category_id#34, sum#39, isEmpty#40, count#41]
Arguments: hashpartitioning(i_brand_id#32, i_class_id#33, i_category_id#34, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(55) CometHashAggregate
Input [6]: [i_brand_id#32, i_class_id#33, i_category_id#34, sum#39, isEmpty#40, count#41]
Keys [3]: [i_brand_id#32, i_class_id#33, i_category_id#34]
Functions [2]: [sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), count(1)]

(56) CometFilter
Input [6]: [channel#42, i_brand_id#32, i_class_id#33, i_category_id#34, sales#43, number_sales#44]
Condition : (isnotnull(sales#43) AND (cast(sales#43 as decimal(32,6)) > cast(Subquery scalar-subquery#45, [id=#46] as decimal(32,6))))

(57) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [4]: [ss_item_sk#47, ss_quantity#48, ss_list_price#49, ss_sold_date_sk#50]
Arguments: [ss_item_sk#47, ss_quantity#48, ss_list_price#49, ss_sold_date_sk#50]

(58) CometFilter
Input [4]: [ss_item_sk#47, ss_quantity#48, ss_list_price#49, ss_sold_date_sk#50]
Condition : isnotnull(ss_item_sk#47)

(59) ReusedExchange [Reuses operator id: 38]
Output [1]: [ss_item_sk#51]

(60) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#47, ss_quantity#48, ss_list_price#49, ss_sold_date_sk#50]
Right output [1]: [ss_item_sk#51]
Arguments: [ss_item_sk#47], [ss_item_sk#51], LeftSemi, BuildRight

(61) ReusedExchange [Reuses operator id: 44]
Output [4]: [i_item_sk#52, i_brand_id#53, i_class_id#54, i_category_id#55]

(62) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#47, ss_quantity#48, ss_list_price#49, ss_sold_date_sk#50]
Right output [4]: [i_item_sk#52, i_brand_id#53, i_class_id#54, i_category_id#55]
Arguments: [ss_item_sk#47], [i_item_sk#52], Inner, BuildRight

(63) CometProject
Input [8]: [ss_item_sk#47, ss_quantity#48, ss_list_price#49, ss_sold_date_sk#50, i_item_sk#52, i_brand_id#53, i_class_id#54, i_category_id#55]
Arguments: [ss_quantity#48, ss_list_price#49, ss_sold_date_sk#50, i_brand_id#53, i_class_id#54, i_category_id#55], [ss_quantity#48, ss_list_price#49, ss_sold_date_sk#50, i_brand_id#53, i_class_id#54, i_category_id#55]

(64) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [2]: [d_date_sk#56, d_week_seq#57]
Arguments: [d_date_sk#56, d_week_seq#57]

(65) CometFilter
Input [2]: [d_date_sk#56, d_week_seq#57]
Condition : ((isnotnull(d_week_seq#57) AND (d_week_seq#57 = Subquery scalar-subquery#58, [id=#59])) AND isnotnull(d_date_sk#56))

(66) CometProject
Input [2]: [d_date_sk#56, d_week_seq#57]
Arguments: [d_date_sk#56], [d_date_sk#56]

(67) CometBroadcastExchange
Input [1]: [d_date_sk#56]
Arguments: [d_date_sk#56]

(68) CometBroadcastHashJoin
Left output [6]: [ss_quantity#48, ss_list_price#49, ss_sold_date_sk#50, i_brand_id#53, i_class_id#54, i_category_id#55]
Right output [1]: [d_date_sk#56]
Arguments: [ss_sold_date_sk#50], [d_date_sk#56], Inner, BuildRight

(69) CometProject
Input [7]: [ss_quantity#48, ss_list_price#49, ss_sold_date_sk#50, i_brand_id#53, i_class_id#54, i_category_id#55, d_date_sk#56]
Arguments: [ss_quantity#48, ss_list_price#49, i_brand_id#53, i_class_id#54, i_category_id#55], [ss_quantity#48, ss_list_price#49, i_brand_id#53, i_class_id#54, i_category_id#55]

(70) CometHashAggregate
Input [5]: [ss_quantity#48, ss_list_price#49, i_brand_id#53, i_class_id#54, i_category_id#55]
Keys [3]: [i_brand_id#53, i_class_id#54, i_category_id#55]
Functions [2]: [partial_sum((cast(ss_quantity#48 as decimal(10,0)) * ss_list_price#49)), partial_count(1)]

(71) CometExchange
Input [6]: [i_brand_id#53, i_class_id#54, i_category_id#55, sum#60, isEmpty#61, count#62]
Arguments: hashpartitioning(i_brand_id#53, i_class_id#54, i_category_id#55, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(72) CometHashAggregate
Input [6]: [i_brand_id#53, i_class_id#54, i_category_id#55, sum#60, isEmpty#61, count#62]
Keys [3]: [i_brand_id#53, i_class_id#54, i_category_id#55]
Functions [2]: [sum((cast(ss_quantity#48 as decimal(10,0)) * ss_list_price#49)), count(1)]

(73) CometFilter
Input [6]: [channel#63, i_brand_id#53, i_class_id#54, i_category_id#55, sales#64, number_sales#65]
Condition : (isnotnull(sales#64) AND (cast(sales#64 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#45, [id=#46] as decimal(32,6))))

(74) CometBroadcastExchange
Input [6]: [channel#63, i_brand_id#53, i_class_id#54, i_category_id#55, sales#64, number_sales#65]
Arguments: [channel#63, i_brand_id#53, i_class_id#54, i_category_id#55, sales#64, number_sales#65]

(75) CometBroadcastHashJoin
Left output [6]: [channel#42, i_brand_id#32, i_class_id#33, i_category_id#34, sales#43, number_sales#44]
Right output [6]: [channel#63, i_brand_id#53, i_class_id#54, i_category_id#55, sales#64, number_sales#65]
Arguments: [i_brand_id#32, i_class_id#33, i_category_id#34], [i_brand_id#53, i_class_id#54, i_category_id#55], Inner, BuildRight

(76) CometTakeOrderedAndProject
Input [12]: [channel#42, i_brand_id#32, i_class_id#33, i_category_id#34, sales#43, number_sales#44, channel#63, i_brand_id#53, i_class_id#54, i_category_id#55, sales#64, number_sales#65]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[i_brand_id#32 ASC NULLS FIRST,i_class_id#33 ASC NULLS FIRST,i_category_id#34 ASC NULLS FIRST], output=[channel#42,i_brand_id#32,i_class_id#33,i_category_id#34,sales#43,number_sales#44,channel#63,i_brand_id#53,i_class_id#54,i_category_id#55,sales#64,number_sales#65]), [channel#42, i_brand_id#32, i_class_id#33, i_category_id#34, sales#43, number_sales#44, channel#63, i_brand_id#53, i_class_id#54, i_category_id#55, sales#64, number_sales#65], 100, [i_brand_id#32 ASC NULLS FIRST, i_class_id#33 ASC NULLS FIRST, i_category_id#34 ASC NULLS FIRST], [channel#42, i_brand_id#32, i_class_id#33, i_category_id#34, sales#43, number_sales#44, channel#63, i_brand_id#53, i_class_id#54, i_category_id#55, sales#64, number_sales#65]

(77) ColumnarToRow [codegen id : 1]
Input [12]: [channel#42, i_brand_id#32, i_class_id#33, i_category_id#34, sales#43, number_sales#44, channel#63, i_brand_id#53, i_class_id#54, i_category_id#55, sales#64, number_sales#65]

===== Subqueries =====

Subquery:1 Hosting operator id = 56 Hosting Expression = Subquery scalar-subquery#45, [id=#46]
* ColumnarToRow (94)
+- CometHashAggregate (93)
   +- CometExchange (92)
      +- CometHashAggregate (91)
         +- CometUnion (90)
            :- CometProject (81)
            :  +- CometBroadcastHashJoin (80)
            :     :- CometNativeScan: `spark_catalog`.`default`.`store_sales` (78)
            :     +- ReusedExchange (79)
            :- CometProject (85)
            :  +- CometBroadcastHashJoin (84)
            :     :- CometNativeScan: `spark_catalog`.`default`.`catalog_sales` (82)
            :     +- ReusedExchange (83)
            +- CometProject (89)
               +- CometBroadcastHashJoin (88)
                  :- CometNativeScan: `spark_catalog`.`default`.`web_sales` (86)
                  +- ReusedExchange (87)


(78) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [3]: [ss_quantity#66, ss_list_price#67, ss_sold_date_sk#68]
Arguments: [ss_quantity#66, ss_list_price#67, ss_sold_date_sk#68]

(79) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#69]

(80) CometBroadcastHashJoin
Left output [3]: [ss_quantity#66, ss_list_price#67, ss_sold_date_sk#68]
Right output [1]: [d_date_sk#69]
Arguments: [ss_sold_date_sk#68], [d_date_sk#69], Inner, BuildRight

(81) CometProject
Input [4]: [ss_quantity#66, ss_list_price#67, ss_sold_date_sk#68, d_date_sk#69]
Arguments: [quantity#70, list_price#71], [ss_quantity#66 AS quantity#70, ss_list_price#67 AS list_price#71]

(82) CometNativeScan: `spark_catalog`.`default`.`catalog_sales`
Output [3]: [cs_quantity#72, cs_list_price#73, cs_sold_date_sk#74]
Arguments: [cs_quantity#72, cs_list_price#73, cs_sold_date_sk#74]

(83) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#75]

(84) CometBroadcastHashJoin
Left output [3]: [cs_quantity#72, cs_list_price#73, cs_sold_date_sk#74]
Right output [1]: [d_date_sk#75]
Arguments: [cs_sold_date_sk#74], [d_date_sk#75], Inner, BuildRight

(85) CometProject
Input [4]: [cs_quantity#72, cs_list_price#73, cs_sold_date_sk#74, d_date_sk#75]
Arguments: [quantity#76, list_price#77], [cs_quantity#72 AS quantity#76, cs_list_price#73 AS list_price#77]

(86) CometNativeScan: `spark_catalog`.`default`.`web_sales`
Output [3]: [ws_quantity#78, ws_list_price#79, ws_sold_date_sk#80]
Arguments: [ws_quantity#78, ws_list_price#79, ws_sold_date_sk#80]

(87) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#81]

(88) CometBroadcastHashJoin
Left output [3]: [ws_quantity#78, ws_list_price#79, ws_sold_date_sk#80]
Right output [1]: [d_date_sk#81]
Arguments: [ws_sold_date_sk#80], [d_date_sk#81], Inner, BuildRight

(89) CometProject
Input [4]: [ws_quantity#78, ws_list_price#79, ws_sold_date_sk#80, d_date_sk#81]
Arguments: [quantity#82, list_price#83], [ws_quantity#78 AS quantity#82, ws_list_price#79 AS list_price#83]

(90) CometUnion
Child 0 Input [2]: [quantity#70, list_price#71]
Child 1 Input [2]: [quantity#76, list_price#77]
Child 2 Input [2]: [quantity#82, list_price#83]

(91) CometHashAggregate
Input [2]: [quantity#70, list_price#71]
Keys: []
Functions [1]: [partial_avg((cast(quantity#70 as decimal(10,0)) * list_price#71))]

(92) CometExchange
Input [2]: [sum#84, count#85]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(93) CometHashAggregate
Input [2]: [sum#84, count#85]
Keys: []
Functions [1]: [avg((cast(quantity#70 as decimal(10,0)) * list_price#71))]

(94) ColumnarToRow [codegen id : 1]
Input [1]: [average_sales#86]

Subquery:2 Hosting operator id = 48 Hosting Expression = Subquery scalar-subquery#37, [id=#38]
* ColumnarToRow (98)
+- CometProject (97)
   +- CometFilter (96)
      +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (95)


(95) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [4]: [d_week_seq#87, d_year#88, d_moy#89, d_dom#90]
Arguments: [d_week_seq#87, d_year#88, d_moy#89, d_dom#90]

(96) CometFilter
Input [4]: [d_week_seq#87, d_year#88, d_moy#89, d_dom#90]
Condition : (((((isnotnull(d_year#88) AND isnotnull(d_moy#89)) AND isnotnull(d_dom#90)) AND (d_year#88 = 1999)) AND (d_moy#89 = 12)) AND (d_dom#90 = 16))

(97) CometProject
Input [4]: [d_week_seq#87, d_year#88, d_moy#89, d_dom#90]
Arguments: [d_week_seq#87], [d_week_seq#87]

(98) ColumnarToRow [codegen id : 1]
Input [1]: [d_week_seq#87]

Subquery:3 Hosting operator id = 73 Hosting Expression = ReusedSubquery Subquery scalar-subquery#45, [id=#46]

Subquery:4 Hosting operator id = 65 Hosting Expression = Subquery scalar-subquery#58, [id=#59]
* ColumnarToRow (102)
+- CometProject (101)
   +- CometFilter (100)
      +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (99)


(99) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [4]: [d_week_seq#91, d_year#92, d_moy#93, d_dom#94]
Arguments: [d_week_seq#91, d_year#92, d_moy#93, d_dom#94]

(100) CometFilter
Input [4]: [d_week_seq#91, d_year#92, d_moy#93, d_dom#94]
Condition : (((((isnotnull(d_year#92) AND isnotnull(d_moy#93)) AND isnotnull(d_dom#94)) AND (d_year#92 = 1998)) AND (d_moy#93 = 12)) AND (d_dom#94 = 16))

(101) CometProject
Input [4]: [d_week_seq#91, d_year#92, d_moy#93, d_dom#94]
Arguments: [d_week_seq#91], [d_week_seq#91]

(102) ColumnarToRow [codegen id : 1]
Input [1]: [d_week_seq#91]


