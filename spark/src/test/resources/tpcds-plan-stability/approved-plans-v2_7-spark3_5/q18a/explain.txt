== Physical Plan ==
TakeOrderedAndProject (158)
+- Union (157)
   :- * HashAggregate (42)
   :  +- * CometColumnarToRow (41)
   :     +- CometColumnarExchange (40)
   :        +- * HashAggregate (39)
   :           +- * Project (38)
   :              +- * BroadcastHashJoin Inner BuildRight (37)
   :                 :- * Project (32)
   :                 :  +- * BroadcastHashJoin Inner BuildRight (31)
   :                 :     :- * Project (29)
   :                 :     :  +- * BroadcastHashJoin Inner BuildRight (28)
   :                 :     :     :- * Project (23)
   :                 :     :     :  +- * BroadcastHashJoin Inner BuildRight (22)
   :                 :     :     :     :- * Project (17)
   :                 :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (16)
   :                 :     :     :     :     :- * Project (10)
   :                 :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (9)
   :                 :     :     :     :     :     :- * CometColumnarToRow (3)
   :                 :     :     :     :     :     :  +- CometFilter (2)
   :                 :     :     :     :     :     :     +- CometScan parquet spark_catalog.default.catalog_sales (1)
   :                 :     :     :     :     :     +- BroadcastExchange (8)
   :                 :     :     :     :     :        +- * Project (7)
   :                 :     :     :     :     :           +- * Filter (6)
   :                 :     :     :     :     :              +- * CometColumnarToRow (5)
   :                 :     :     :     :     :                 +- CometScan parquet spark_catalog.default.customer_demographics (4)
   :                 :     :     :     :     +- BroadcastExchange (15)
   :                 :     :     :     :        +- * CometColumnarToRow (14)
   :                 :     :     :     :           +- CometProject (13)
   :                 :     :     :     :              +- CometFilter (12)
   :                 :     :     :     :                 +- CometScan parquet spark_catalog.default.customer (11)
   :                 :     :     :     +- BroadcastExchange (21)
   :                 :     :     :        +- * CometColumnarToRow (20)
   :                 :     :     :           +- CometFilter (19)
   :                 :     :     :              +- CometScan parquet spark_catalog.default.customer_demographics (18)
   :                 :     :     +- BroadcastExchange (27)
   :                 :     :        +- * Filter (26)
   :                 :     :           +- * CometColumnarToRow (25)
   :                 :     :              +- CometScan parquet spark_catalog.default.customer_address (24)
   :                 :     +- ReusedExchange (30)
   :                 +- BroadcastExchange (36)
   :                    +- * CometColumnarToRow (35)
   :                       +- CometFilter (34)
   :                          +- CometScan parquet spark_catalog.default.item (33)
   :- * HashAggregate (70)
   :  +- * CometColumnarToRow (69)
   :     +- CometColumnarExchange (68)
   :        +- * HashAggregate (67)
   :           +- * Project (66)
   :              +- * BroadcastHashJoin Inner BuildRight (65)
   :                 :- * Project (63)
   :                 :  +- * BroadcastHashJoin Inner BuildRight (62)
   :                 :     :- * Project (60)
   :                 :     :  +- * BroadcastHashJoin Inner BuildRight (59)
   :                 :     :     :- * Project (54)
   :                 :     :     :  +- * BroadcastHashJoin Inner BuildRight (53)
   :                 :     :     :     :- * Project (51)
   :                 :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (50)
   :                 :     :     :     :     :- * Project (48)
   :                 :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (47)
   :                 :     :     :     :     :     :- * CometColumnarToRow (45)
   :                 :     :     :     :     :     :  +- CometFilter (44)
   :                 :     :     :     :     :     :     +- CometScan parquet spark_catalog.default.catalog_sales (43)
   :                 :     :     :     :     :     +- ReusedExchange (46)
   :                 :     :     :     :     +- ReusedExchange (49)
   :                 :     :     :     +- ReusedExchange (52)
   :                 :     :     +- BroadcastExchange (58)
   :                 :     :        +- * Filter (57)
   :                 :     :           +- * CometColumnarToRow (56)
   :                 :     :              +- CometScan parquet spark_catalog.default.customer_address (55)
   :                 :     +- ReusedExchange (61)
   :                 +- ReusedExchange (64)
   :- * HashAggregate (99)
   :  +- * CometColumnarToRow (98)
   :     +- CometColumnarExchange (97)
   :        +- * HashAggregate (96)
   :           +- * Project (95)
   :              +- * BroadcastHashJoin Inner BuildRight (94)
   :                 :- * Project (92)
   :                 :  +- * BroadcastHashJoin Inner BuildRight (91)
   :                 :     :- * Project (89)
   :                 :     :  +- * BroadcastHashJoin Inner BuildRight (88)
   :                 :     :     :- * Project (82)
   :                 :     :     :  +- * BroadcastHashJoin Inner BuildRight (81)
   :                 :     :     :     :- * Project (79)
   :                 :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (78)
   :                 :     :     :     :     :- * Project (76)
   :                 :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (75)
   :                 :     :     :     :     :     :- * CometColumnarToRow (73)
   :                 :     :     :     :     :     :  +- CometFilter (72)
   :                 :     :     :     :     :     :     +- CometScan parquet spark_catalog.default.catalog_sales (71)
   :                 :     :     :     :     :     +- ReusedExchange (74)
   :                 :     :     :     :     +- ReusedExchange (77)
   :                 :     :     :     +- ReusedExchange (80)
   :                 :     :     +- BroadcastExchange (87)
   :                 :     :        +- * Project (86)
   :                 :     :           +- * Filter (85)
   :                 :     :              +- * CometColumnarToRow (84)
   :                 :     :                 +- CometScan parquet spark_catalog.default.customer_address (83)
   :                 :     +- ReusedExchange (90)
   :                 +- ReusedExchange (93)
   :- * HashAggregate (128)
   :  +- * CometColumnarToRow (127)
   :     +- CometColumnarExchange (126)
   :        +- * HashAggregate (125)
   :           +- * Project (124)
   :              +- * BroadcastHashJoin Inner BuildRight (123)
   :                 :- * Project (121)
   :                 :  +- * BroadcastHashJoin Inner BuildRight (120)
   :                 :     :- * Project (118)
   :                 :     :  +- * BroadcastHashJoin Inner BuildRight (117)
   :                 :     :     :- * Project (111)
   :                 :     :     :  +- * BroadcastHashJoin Inner BuildRight (110)
   :                 :     :     :     :- * Project (108)
   :                 :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (107)
   :                 :     :     :     :     :- * Project (105)
   :                 :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (104)
   :                 :     :     :     :     :     :- * CometColumnarToRow (102)
   :                 :     :     :     :     :     :  +- CometFilter (101)
   :                 :     :     :     :     :     :     +- CometScan parquet spark_catalog.default.catalog_sales (100)
   :                 :     :     :     :     :     +- ReusedExchange (103)
   :                 :     :     :     :     +- ReusedExchange (106)
   :                 :     :     :     +- ReusedExchange (109)
   :                 :     :     +- BroadcastExchange (116)
   :                 :     :        +- * Project (115)
   :                 :     :           +- * Filter (114)
   :                 :     :              +- * CometColumnarToRow (113)
   :                 :     :                 +- CometScan parquet spark_catalog.default.customer_address (112)
   :                 :     +- ReusedExchange (119)
   :                 +- ReusedExchange (122)
   +- * HashAggregate (156)
      +- * CometColumnarToRow (155)
         +- CometColumnarExchange (154)
            +- * HashAggregate (153)
               +- * Project (152)
                  +- * BroadcastHashJoin Inner BuildRight (151)
                     :- * Project (146)
                     :  +- * BroadcastHashJoin Inner BuildRight (145)
                     :     :- * Project (143)
                     :     :  +- * BroadcastHashJoin Inner BuildRight (142)
                     :     :     :- * Project (140)
                     :     :     :  +- * BroadcastHashJoin Inner BuildRight (139)
                     :     :     :     :- * Project (137)
                     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (136)
                     :     :     :     :     :- * Project (134)
                     :     :     :     :     :  +- * BroadcastHashJoin Inner BuildRight (133)
                     :     :     :     :     :     :- * CometColumnarToRow (131)
                     :     :     :     :     :     :  +- CometFilter (130)
                     :     :     :     :     :     :     +- CometScan parquet spark_catalog.default.catalog_sales (129)
                     :     :     :     :     :     +- ReusedExchange (132)
                     :     :     :     :     +- ReusedExchange (135)
                     :     :     :     +- ReusedExchange (138)
                     :     :     +- ReusedExchange (141)
                     :     +- ReusedExchange (144)
                     +- BroadcastExchange (150)
                        +- * CometColumnarToRow (149)
                           +- CometFilter (148)
                              +- CometScan parquet spark_catalog.default.item (147)


(1) CometScan parquet spark_catalog.default.catalog_sales
Output [9]: [cs_bill_customer_sk#1, cs_bill_cdemo_sk#2, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#9), dynamicpruningexpression(cs_sold_date_sk#9 IN dynamicpruning#10)]
PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_net_profit:decimal(7,2)>

(2) CometFilter
Input [9]: [cs_bill_customer_sk#1, cs_bill_cdemo_sk#2, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9]
Condition : ((isnotnull(cs_bill_cdemo_sk#2) AND isnotnull(cs_bill_customer_sk#1)) AND isnotnull(cs_item_sk#3))

(3) CometColumnarToRow [codegen id : 7]
Input [9]: [cs_bill_customer_sk#1, cs_bill_cdemo_sk#2, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9]

(4) CometScan parquet spark_catalog.default.customer_demographics
Output [4]: [cd_demo_sk#11, cd_gender#12, cd_education_status#13, cd_dep_count#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_education_status), IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_education_status:string,cd_dep_count:int>

(5) CometColumnarToRow [codegen id : 1]
Input [4]: [cd_demo_sk#11, cd_gender#12, cd_education_status#13, cd_dep_count#14]

(6) Filter [codegen id : 1]
Input [4]: [cd_demo_sk#11, cd_gender#12, cd_education_status#13, cd_dep_count#14]
Condition : ((((isnotnull(cd_gender#12) AND isnotnull(cd_education_status#13)) AND (rpad(cd_gender#12, 1,  ) = M)) AND (rpad(cd_education_status#13, 20,  ) = College             )) AND isnotnull(cd_demo_sk#11))

(7) Project [codegen id : 1]
Output [2]: [cd_demo_sk#11, cd_dep_count#14]
Input [4]: [cd_demo_sk#11, cd_gender#12, cd_education_status#13, cd_dep_count#14]

(8) BroadcastExchange
Input [2]: [cd_demo_sk#11, cd_dep_count#14]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1]

(9) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cs_bill_cdemo_sk#2]
Right keys [1]: [cd_demo_sk#11]
Join type: Inner
Join condition: None

(10) Project [codegen id : 7]
Output [9]: [cs_bill_customer_sk#1, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#14]
Input [11]: [cs_bill_customer_sk#1, cs_bill_cdemo_sk#2, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_demo_sk#11, cd_dep_count#14]

(11) CometScan parquet spark_catalog.default.customer
Output [5]: [c_customer_sk#15, c_current_cdemo_sk#16, c_current_addr_sk#17, c_birth_month#18, c_birth_year#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [In(c_birth_month, [1,10,12,4,5,9]), IsNotNull(c_customer_sk), IsNotNull(c_current_cdemo_sk), IsNotNull(c_current_addr_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int,c_birth_month:int,c_birth_year:int>

(12) CometFilter
Input [5]: [c_customer_sk#15, c_current_cdemo_sk#16, c_current_addr_sk#17, c_birth_month#18, c_birth_year#19]
Condition : (((c_birth_month#18 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#15)) AND isnotnull(c_current_cdemo_sk#16)) AND isnotnull(c_current_addr_sk#17))

(13) CometProject
Input [5]: [c_customer_sk#15, c_current_cdemo_sk#16, c_current_addr_sk#17, c_birth_month#18, c_birth_year#19]
Arguments: [c_customer_sk#15, c_current_cdemo_sk#16, c_current_addr_sk#17, c_birth_year#19], [c_customer_sk#15, c_current_cdemo_sk#16, c_current_addr_sk#17, c_birth_year#19]

(14) CometColumnarToRow [codegen id : 2]
Input [4]: [c_customer_sk#15, c_current_cdemo_sk#16, c_current_addr_sk#17, c_birth_year#19]

(15) BroadcastExchange
Input [4]: [c_customer_sk#15, c_current_cdemo_sk#16, c_current_addr_sk#17, c_birth_year#19]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2]

(16) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cs_bill_customer_sk#1]
Right keys [1]: [c_customer_sk#15]
Join type: Inner
Join condition: None

(17) Project [codegen id : 7]
Output [11]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#14, c_current_cdemo_sk#16, c_current_addr_sk#17, c_birth_year#19]
Input [13]: [cs_bill_customer_sk#1, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#14, c_customer_sk#15, c_current_cdemo_sk#16, c_current_addr_sk#17, c_birth_year#19]

(18) CometScan parquet spark_catalog.default.customer_demographics
Output [1]: [cd_demo_sk#20]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int>

(19) CometFilter
Input [1]: [cd_demo_sk#20]
Condition : isnotnull(cd_demo_sk#20)

(20) CometColumnarToRow [codegen id : 3]
Input [1]: [cd_demo_sk#20]

(21) BroadcastExchange
Input [1]: [cd_demo_sk#20]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=3]

(22) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [c_current_cdemo_sk#16]
Right keys [1]: [cd_demo_sk#20]
Join type: Inner
Join condition: None

(23) Project [codegen id : 7]
Output [10]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#14, c_current_addr_sk#17, c_birth_year#19]
Input [12]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#14, c_current_cdemo_sk#16, c_current_addr_sk#17, c_birth_year#19, cd_demo_sk#20]

(24) CometScan parquet spark_catalog.default.customer_address
Output [4]: [ca_address_sk#21, ca_county#22, ca_state#23, ca_country#24]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string,ca_country:string>

(25) CometColumnarToRow [codegen id : 4]
Input [4]: [ca_address_sk#21, ca_county#22, ca_state#23, ca_country#24]

(26) Filter [codegen id : 4]
Input [4]: [ca_address_sk#21, ca_county#22, ca_state#23, ca_country#24]
Condition : (rpad(ca_state#23, 2,  ) IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#21))

(27) BroadcastExchange
Input [4]: [ca_address_sk#21, ca_county#22, ca_state#23, ca_country#24]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=4]

(28) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [c_current_addr_sk#17]
Right keys [1]: [ca_address_sk#21]
Join type: Inner
Join condition: None

(29) Project [codegen id : 7]
Output [12]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#14, c_birth_year#19, ca_county#22, ca_state#23, ca_country#24]
Input [14]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#14, c_current_addr_sk#17, c_birth_year#19, ca_address_sk#21, ca_county#22, ca_state#23, ca_country#24]

(30) ReusedExchange [Reuses operator id: 163]
Output [1]: [d_date_sk#25]

(31) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cs_sold_date_sk#9]
Right keys [1]: [d_date_sk#25]
Join type: Inner
Join condition: None

(32) Project [codegen id : 7]
Output [11]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cd_dep_count#14, c_birth_year#19, ca_county#22, ca_state#23, ca_country#24]
Input [13]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#14, c_birth_year#19, ca_county#22, ca_state#23, ca_country#24, d_date_sk#25]

(33) CometScan parquet spark_catalog.default.item
Output [2]: [i_item_sk#26, i_item_id#27]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(34) CometFilter
Input [2]: [i_item_sk#26, i_item_id#27]
Condition : isnotnull(i_item_sk#26)

(35) CometColumnarToRow [codegen id : 6]
Input [2]: [i_item_sk#26, i_item_id#27]

(36) BroadcastExchange
Input [2]: [i_item_sk#26, i_item_id#27]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=5]

(37) BroadcastHashJoin [codegen id : 7]
Left keys [1]: [cs_item_sk#3]
Right keys [1]: [i_item_sk#26]
Join type: Inner
Join condition: None

(38) Project [codegen id : 7]
Output [11]: [i_item_id#27, ca_country#24, ca_state#23, ca_county#22, cast(cs_quantity#4 as decimal(12,2)) AS agg1#28, cast(cs_list_price#5 as decimal(12,2)) AS agg2#29, cast(cs_coupon_amt#7 as decimal(12,2)) AS agg3#30, cast(cs_sales_price#6 as decimal(12,2)) AS agg4#31, cast(cs_net_profit#8 as decimal(12,2)) AS agg5#32, cast(c_birth_year#19 as decimal(12,2)) AS agg6#33, cast(cd_dep_count#14 as decimal(12,2)) AS agg7#34]
Input [13]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cd_dep_count#14, c_birth_year#19, ca_county#22, ca_state#23, ca_country#24, i_item_sk#26, i_item_id#27]

(39) HashAggregate [codegen id : 7]
Input [11]: [i_item_id#27, ca_country#24, ca_state#23, ca_county#22, agg1#28, agg2#29, agg3#30, agg4#31, agg5#32, agg6#33, agg7#34]
Keys [4]: [i_item_id#27, ca_country#24, ca_state#23, ca_county#22]
Functions [7]: [partial_avg(agg1#28), partial_avg(agg2#29), partial_avg(agg3#30), partial_avg(agg4#31), partial_avg(agg5#32), partial_avg(agg6#33), partial_avg(agg7#34)]
Aggregate Attributes [14]: [sum#35, count#36, sum#37, count#38, sum#39, count#40, sum#41, count#42, sum#43, count#44, sum#45, count#46, sum#47, count#48]
Results [18]: [i_item_id#27, ca_country#24, ca_state#23, ca_county#22, sum#49, count#50, sum#51, count#52, sum#53, count#54, sum#55, count#56, sum#57, count#58, sum#59, count#60, sum#61, count#62]

(40) CometColumnarExchange
Input [18]: [i_item_id#27, ca_country#24, ca_state#23, ca_county#22, sum#49, count#50, sum#51, count#52, sum#53, count#54, sum#55, count#56, sum#57, count#58, sum#59, count#60, sum#61, count#62]
Arguments: hashpartitioning(i_item_id#27, ca_country#24, ca_state#23, ca_county#22, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=6]

(41) CometColumnarToRow [codegen id : 8]
Input [18]: [i_item_id#27, ca_country#24, ca_state#23, ca_county#22, sum#49, count#50, sum#51, count#52, sum#53, count#54, sum#55, count#56, sum#57, count#58, sum#59, count#60, sum#61, count#62]

(42) HashAggregate [codegen id : 8]
Input [18]: [i_item_id#27, ca_country#24, ca_state#23, ca_county#22, sum#49, count#50, sum#51, count#52, sum#53, count#54, sum#55, count#56, sum#57, count#58, sum#59, count#60, sum#61, count#62]
Keys [4]: [i_item_id#27, ca_country#24, ca_state#23, ca_county#22]
Functions [7]: [avg(agg1#28), avg(agg2#29), avg(agg3#30), avg(agg4#31), avg(agg5#32), avg(agg6#33), avg(agg7#34)]
Aggregate Attributes [7]: [avg(agg1#28)#63, avg(agg2#29)#64, avg(agg3#30)#65, avg(agg4#31)#66, avg(agg5#32)#67, avg(agg6#33)#68, avg(agg7#34)#69]
Results [11]: [i_item_id#27, ca_country#24, ca_state#23, ca_county#22, avg(agg1#28)#63 AS agg1#70, avg(agg2#29)#64 AS agg2#71, avg(agg3#30)#65 AS agg3#72, avg(agg4#31)#66 AS agg4#73, avg(agg5#32)#67 AS agg5#74, avg(agg6#33)#68 AS agg6#75, avg(agg7#34)#69 AS agg7#76]

(43) CometScan parquet spark_catalog.default.catalog_sales
Output [9]: [cs_bill_customer_sk#77, cs_bill_cdemo_sk#78, cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cs_sold_date_sk#85]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#85), dynamicpruningexpression(cs_sold_date_sk#85 IN dynamicpruning#86)]
PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_net_profit:decimal(7,2)>

(44) CometFilter
Input [9]: [cs_bill_customer_sk#77, cs_bill_cdemo_sk#78, cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cs_sold_date_sk#85]
Condition : ((isnotnull(cs_bill_cdemo_sk#78) AND isnotnull(cs_bill_customer_sk#77)) AND isnotnull(cs_item_sk#79))

(45) CometColumnarToRow [codegen id : 15]
Input [9]: [cs_bill_customer_sk#77, cs_bill_cdemo_sk#78, cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cs_sold_date_sk#85]

(46) ReusedExchange [Reuses operator id: 8]
Output [2]: [cd_demo_sk#87, cd_dep_count#88]

(47) BroadcastHashJoin [codegen id : 15]
Left keys [1]: [cs_bill_cdemo_sk#78]
Right keys [1]: [cd_demo_sk#87]
Join type: Inner
Join condition: None

(48) Project [codegen id : 15]
Output [9]: [cs_bill_customer_sk#77, cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cs_sold_date_sk#85, cd_dep_count#88]
Input [11]: [cs_bill_customer_sk#77, cs_bill_cdemo_sk#78, cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cs_sold_date_sk#85, cd_demo_sk#87, cd_dep_count#88]

(49) ReusedExchange [Reuses operator id: 15]
Output [4]: [c_customer_sk#89, c_current_cdemo_sk#90, c_current_addr_sk#91, c_birth_year#92]

(50) BroadcastHashJoin [codegen id : 15]
Left keys [1]: [cs_bill_customer_sk#77]
Right keys [1]: [c_customer_sk#89]
Join type: Inner
Join condition: None

(51) Project [codegen id : 15]
Output [11]: [cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cs_sold_date_sk#85, cd_dep_count#88, c_current_cdemo_sk#90, c_current_addr_sk#91, c_birth_year#92]
Input [13]: [cs_bill_customer_sk#77, cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cs_sold_date_sk#85, cd_dep_count#88, c_customer_sk#89, c_current_cdemo_sk#90, c_current_addr_sk#91, c_birth_year#92]

(52) ReusedExchange [Reuses operator id: 21]
Output [1]: [cd_demo_sk#93]

(53) BroadcastHashJoin [codegen id : 15]
Left keys [1]: [c_current_cdemo_sk#90]
Right keys [1]: [cd_demo_sk#93]
Join type: Inner
Join condition: None

(54) Project [codegen id : 15]
Output [10]: [cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cs_sold_date_sk#85, cd_dep_count#88, c_current_addr_sk#91, c_birth_year#92]
Input [12]: [cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cs_sold_date_sk#85, cd_dep_count#88, c_current_cdemo_sk#90, c_current_addr_sk#91, c_birth_year#92, cd_demo_sk#93]

(55) CometScan parquet spark_catalog.default.customer_address
Output [3]: [ca_address_sk#94, ca_state#95, ca_country#96]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>

(56) CometColumnarToRow [codegen id : 12]
Input [3]: [ca_address_sk#94, ca_state#95, ca_country#96]

(57) Filter [codegen id : 12]
Input [3]: [ca_address_sk#94, ca_state#95, ca_country#96]
Condition : (rpad(ca_state#95, 2,  ) IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#94))

(58) BroadcastExchange
Input [3]: [ca_address_sk#94, ca_state#95, ca_country#96]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=7]

(59) BroadcastHashJoin [codegen id : 15]
Left keys [1]: [c_current_addr_sk#91]
Right keys [1]: [ca_address_sk#94]
Join type: Inner
Join condition: None

(60) Project [codegen id : 15]
Output [11]: [cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cs_sold_date_sk#85, cd_dep_count#88, c_birth_year#92, ca_state#95, ca_country#96]
Input [13]: [cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cs_sold_date_sk#85, cd_dep_count#88, c_current_addr_sk#91, c_birth_year#92, ca_address_sk#94, ca_state#95, ca_country#96]

(61) ReusedExchange [Reuses operator id: 163]
Output [1]: [d_date_sk#97]

(62) BroadcastHashJoin [codegen id : 15]
Left keys [1]: [cs_sold_date_sk#85]
Right keys [1]: [d_date_sk#97]
Join type: Inner
Join condition: None

(63) Project [codegen id : 15]
Output [10]: [cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cd_dep_count#88, c_birth_year#92, ca_state#95, ca_country#96]
Input [12]: [cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cs_sold_date_sk#85, cd_dep_count#88, c_birth_year#92, ca_state#95, ca_country#96, d_date_sk#97]

(64) ReusedExchange [Reuses operator id: 36]
Output [2]: [i_item_sk#98, i_item_id#99]

(65) BroadcastHashJoin [codegen id : 15]
Left keys [1]: [cs_item_sk#79]
Right keys [1]: [i_item_sk#98]
Join type: Inner
Join condition: None

(66) Project [codegen id : 15]
Output [10]: [i_item_id#99, ca_country#96, ca_state#95, cast(cs_quantity#80 as decimal(12,2)) AS agg1#100, cast(cs_list_price#81 as decimal(12,2)) AS agg2#101, cast(cs_coupon_amt#83 as decimal(12,2)) AS agg3#102, cast(cs_sales_price#82 as decimal(12,2)) AS agg4#103, cast(cs_net_profit#84 as decimal(12,2)) AS agg5#104, cast(c_birth_year#92 as decimal(12,2)) AS agg6#105, cast(cd_dep_count#88 as decimal(12,2)) AS agg7#106]
Input [12]: [cs_item_sk#79, cs_quantity#80, cs_list_price#81, cs_sales_price#82, cs_coupon_amt#83, cs_net_profit#84, cd_dep_count#88, c_birth_year#92, ca_state#95, ca_country#96, i_item_sk#98, i_item_id#99]

(67) HashAggregate [codegen id : 15]
Input [10]: [i_item_id#99, ca_country#96, ca_state#95, agg1#100, agg2#101, agg3#102, agg4#103, agg5#104, agg6#105, agg7#106]
Keys [3]: [i_item_id#99, ca_country#96, ca_state#95]
Functions [7]: [partial_avg(agg1#100), partial_avg(agg2#101), partial_avg(agg3#102), partial_avg(agg4#103), partial_avg(agg5#104), partial_avg(agg6#105), partial_avg(agg7#106)]
Aggregate Attributes [14]: [sum#107, count#108, sum#109, count#110, sum#111, count#112, sum#113, count#114, sum#115, count#116, sum#117, count#118, sum#119, count#120]
Results [17]: [i_item_id#99, ca_country#96, ca_state#95, sum#121, count#122, sum#123, count#124, sum#125, count#126, sum#127, count#128, sum#129, count#130, sum#131, count#132, sum#133, count#134]

(68) CometColumnarExchange
Input [17]: [i_item_id#99, ca_country#96, ca_state#95, sum#121, count#122, sum#123, count#124, sum#125, count#126, sum#127, count#128, sum#129, count#130, sum#131, count#132, sum#133, count#134]
Arguments: hashpartitioning(i_item_id#99, ca_country#96, ca_state#95, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=8]

(69) CometColumnarToRow [codegen id : 16]
Input [17]: [i_item_id#99, ca_country#96, ca_state#95, sum#121, count#122, sum#123, count#124, sum#125, count#126, sum#127, count#128, sum#129, count#130, sum#131, count#132, sum#133, count#134]

(70) HashAggregate [codegen id : 16]
Input [17]: [i_item_id#99, ca_country#96, ca_state#95, sum#121, count#122, sum#123, count#124, sum#125, count#126, sum#127, count#128, sum#129, count#130, sum#131, count#132, sum#133, count#134]
Keys [3]: [i_item_id#99, ca_country#96, ca_state#95]
Functions [7]: [avg(agg1#100), avg(agg2#101), avg(agg3#102), avg(agg4#103), avg(agg5#104), avg(agg6#105), avg(agg7#106)]
Aggregate Attributes [7]: [avg(agg1#100)#135, avg(agg2#101)#136, avg(agg3#102)#137, avg(agg4#103)#138, avg(agg5#104)#139, avg(agg6#105)#140, avg(agg7#106)#141]
Results [11]: [i_item_id#99, ca_country#96, ca_state#95, null AS county#142, avg(agg1#100)#135 AS agg1#143, avg(agg2#101)#136 AS agg2#144, avg(agg3#102)#137 AS agg3#145, avg(agg4#103)#138 AS agg4#146, avg(agg5#104)#139 AS agg5#147, avg(agg6#105)#140 AS agg6#148, avg(agg7#106)#141 AS agg7#149]

(71) CometScan parquet spark_catalog.default.catalog_sales
Output [9]: [cs_bill_customer_sk#150, cs_bill_cdemo_sk#151, cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cs_sold_date_sk#158]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#158), dynamicpruningexpression(cs_sold_date_sk#158 IN dynamicpruning#159)]
PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_net_profit:decimal(7,2)>

(72) CometFilter
Input [9]: [cs_bill_customer_sk#150, cs_bill_cdemo_sk#151, cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cs_sold_date_sk#158]
Condition : ((isnotnull(cs_bill_cdemo_sk#151) AND isnotnull(cs_bill_customer_sk#150)) AND isnotnull(cs_item_sk#152))

(73) CometColumnarToRow [codegen id : 23]
Input [9]: [cs_bill_customer_sk#150, cs_bill_cdemo_sk#151, cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cs_sold_date_sk#158]

(74) ReusedExchange [Reuses operator id: 8]
Output [2]: [cd_demo_sk#160, cd_dep_count#161]

(75) BroadcastHashJoin [codegen id : 23]
Left keys [1]: [cs_bill_cdemo_sk#151]
Right keys [1]: [cd_demo_sk#160]
Join type: Inner
Join condition: None

(76) Project [codegen id : 23]
Output [9]: [cs_bill_customer_sk#150, cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cs_sold_date_sk#158, cd_dep_count#161]
Input [11]: [cs_bill_customer_sk#150, cs_bill_cdemo_sk#151, cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cs_sold_date_sk#158, cd_demo_sk#160, cd_dep_count#161]

(77) ReusedExchange [Reuses operator id: 15]
Output [4]: [c_customer_sk#162, c_current_cdemo_sk#163, c_current_addr_sk#164, c_birth_year#165]

(78) BroadcastHashJoin [codegen id : 23]
Left keys [1]: [cs_bill_customer_sk#150]
Right keys [1]: [c_customer_sk#162]
Join type: Inner
Join condition: None

(79) Project [codegen id : 23]
Output [11]: [cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cs_sold_date_sk#158, cd_dep_count#161, c_current_cdemo_sk#163, c_current_addr_sk#164, c_birth_year#165]
Input [13]: [cs_bill_customer_sk#150, cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cs_sold_date_sk#158, cd_dep_count#161, c_customer_sk#162, c_current_cdemo_sk#163, c_current_addr_sk#164, c_birth_year#165]

(80) ReusedExchange [Reuses operator id: 21]
Output [1]: [cd_demo_sk#166]

(81) BroadcastHashJoin [codegen id : 23]
Left keys [1]: [c_current_cdemo_sk#163]
Right keys [1]: [cd_demo_sk#166]
Join type: Inner
Join condition: None

(82) Project [codegen id : 23]
Output [10]: [cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cs_sold_date_sk#158, cd_dep_count#161, c_current_addr_sk#164, c_birth_year#165]
Input [12]: [cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cs_sold_date_sk#158, cd_dep_count#161, c_current_cdemo_sk#163, c_current_addr_sk#164, c_birth_year#165, cd_demo_sk#166]

(83) CometScan parquet spark_catalog.default.customer_address
Output [3]: [ca_address_sk#167, ca_state#168, ca_country#169]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>

(84) CometColumnarToRow [codegen id : 20]
Input [3]: [ca_address_sk#167, ca_state#168, ca_country#169]

(85) Filter [codegen id : 20]
Input [3]: [ca_address_sk#167, ca_state#168, ca_country#169]
Condition : (rpad(ca_state#168, 2,  ) IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#167))

(86) Project [codegen id : 20]
Output [2]: [ca_address_sk#167, ca_country#169]
Input [3]: [ca_address_sk#167, ca_state#168, ca_country#169]

(87) BroadcastExchange
Input [2]: [ca_address_sk#167, ca_country#169]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=9]

(88) BroadcastHashJoin [codegen id : 23]
Left keys [1]: [c_current_addr_sk#164]
Right keys [1]: [ca_address_sk#167]
Join type: Inner
Join condition: None

(89) Project [codegen id : 23]
Output [10]: [cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cs_sold_date_sk#158, cd_dep_count#161, c_birth_year#165, ca_country#169]
Input [12]: [cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cs_sold_date_sk#158, cd_dep_count#161, c_current_addr_sk#164, c_birth_year#165, ca_address_sk#167, ca_country#169]

(90) ReusedExchange [Reuses operator id: 163]
Output [1]: [d_date_sk#170]

(91) BroadcastHashJoin [codegen id : 23]
Left keys [1]: [cs_sold_date_sk#158]
Right keys [1]: [d_date_sk#170]
Join type: Inner
Join condition: None

(92) Project [codegen id : 23]
Output [9]: [cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cd_dep_count#161, c_birth_year#165, ca_country#169]
Input [11]: [cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cs_sold_date_sk#158, cd_dep_count#161, c_birth_year#165, ca_country#169, d_date_sk#170]

(93) ReusedExchange [Reuses operator id: 36]
Output [2]: [i_item_sk#171, i_item_id#172]

(94) BroadcastHashJoin [codegen id : 23]
Left keys [1]: [cs_item_sk#152]
Right keys [1]: [i_item_sk#171]
Join type: Inner
Join condition: None

(95) Project [codegen id : 23]
Output [9]: [i_item_id#172, ca_country#169, cast(cs_quantity#153 as decimal(12,2)) AS agg1#173, cast(cs_list_price#154 as decimal(12,2)) AS agg2#174, cast(cs_coupon_amt#156 as decimal(12,2)) AS agg3#175, cast(cs_sales_price#155 as decimal(12,2)) AS agg4#176, cast(cs_net_profit#157 as decimal(12,2)) AS agg5#177, cast(c_birth_year#165 as decimal(12,2)) AS agg6#178, cast(cd_dep_count#161 as decimal(12,2)) AS agg7#179]
Input [11]: [cs_item_sk#152, cs_quantity#153, cs_list_price#154, cs_sales_price#155, cs_coupon_amt#156, cs_net_profit#157, cd_dep_count#161, c_birth_year#165, ca_country#169, i_item_sk#171, i_item_id#172]

(96) HashAggregate [codegen id : 23]
Input [9]: [i_item_id#172, ca_country#169, agg1#173, agg2#174, agg3#175, agg4#176, agg5#177, agg6#178, agg7#179]
Keys [2]: [i_item_id#172, ca_country#169]
Functions [7]: [partial_avg(agg1#173), partial_avg(agg2#174), partial_avg(agg3#175), partial_avg(agg4#176), partial_avg(agg5#177), partial_avg(agg6#178), partial_avg(agg7#179)]
Aggregate Attributes [14]: [sum#180, count#181, sum#182, count#183, sum#184, count#185, sum#186, count#187, sum#188, count#189, sum#190, count#191, sum#192, count#193]
Results [16]: [i_item_id#172, ca_country#169, sum#194, count#195, sum#196, count#197, sum#198, count#199, sum#200, count#201, sum#202, count#203, sum#204, count#205, sum#206, count#207]

(97) CometColumnarExchange
Input [16]: [i_item_id#172, ca_country#169, sum#194, count#195, sum#196, count#197, sum#198, count#199, sum#200, count#201, sum#202, count#203, sum#204, count#205, sum#206, count#207]
Arguments: hashpartitioning(i_item_id#172, ca_country#169, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=10]

(98) CometColumnarToRow [codegen id : 24]
Input [16]: [i_item_id#172, ca_country#169, sum#194, count#195, sum#196, count#197, sum#198, count#199, sum#200, count#201, sum#202, count#203, sum#204, count#205, sum#206, count#207]

(99) HashAggregate [codegen id : 24]
Input [16]: [i_item_id#172, ca_country#169, sum#194, count#195, sum#196, count#197, sum#198, count#199, sum#200, count#201, sum#202, count#203, sum#204, count#205, sum#206, count#207]
Keys [2]: [i_item_id#172, ca_country#169]
Functions [7]: [avg(agg1#173), avg(agg2#174), avg(agg3#175), avg(agg4#176), avg(agg5#177), avg(agg6#178), avg(agg7#179)]
Aggregate Attributes [7]: [avg(agg1#173)#208, avg(agg2#174)#209, avg(agg3#175)#210, avg(agg4#176)#211, avg(agg5#177)#212, avg(agg6#178)#213, avg(agg7#179)#214]
Results [11]: [i_item_id#172, ca_country#169, null AS ca_state#215, null AS county#216, avg(agg1#173)#208 AS agg1#217, avg(agg2#174)#209 AS agg2#218, avg(agg3#175)#210 AS agg3#219, avg(agg4#176)#211 AS agg4#220, avg(agg5#177)#212 AS agg5#221, avg(agg6#178)#213 AS agg6#222, avg(agg7#179)#214 AS agg7#223]

(100) CometScan parquet spark_catalog.default.catalog_sales
Output [9]: [cs_bill_customer_sk#224, cs_bill_cdemo_sk#225, cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cs_sold_date_sk#232]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#232), dynamicpruningexpression(cs_sold_date_sk#232 IN dynamicpruning#233)]
PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_net_profit:decimal(7,2)>

(101) CometFilter
Input [9]: [cs_bill_customer_sk#224, cs_bill_cdemo_sk#225, cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cs_sold_date_sk#232]
Condition : ((isnotnull(cs_bill_cdemo_sk#225) AND isnotnull(cs_bill_customer_sk#224)) AND isnotnull(cs_item_sk#226))

(102) CometColumnarToRow [codegen id : 31]
Input [9]: [cs_bill_customer_sk#224, cs_bill_cdemo_sk#225, cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cs_sold_date_sk#232]

(103) ReusedExchange [Reuses operator id: 8]
Output [2]: [cd_demo_sk#234, cd_dep_count#235]

(104) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [cs_bill_cdemo_sk#225]
Right keys [1]: [cd_demo_sk#234]
Join type: Inner
Join condition: None

(105) Project [codegen id : 31]
Output [9]: [cs_bill_customer_sk#224, cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cs_sold_date_sk#232, cd_dep_count#235]
Input [11]: [cs_bill_customer_sk#224, cs_bill_cdemo_sk#225, cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cs_sold_date_sk#232, cd_demo_sk#234, cd_dep_count#235]

(106) ReusedExchange [Reuses operator id: 15]
Output [4]: [c_customer_sk#236, c_current_cdemo_sk#237, c_current_addr_sk#238, c_birth_year#239]

(107) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [cs_bill_customer_sk#224]
Right keys [1]: [c_customer_sk#236]
Join type: Inner
Join condition: None

(108) Project [codegen id : 31]
Output [11]: [cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cs_sold_date_sk#232, cd_dep_count#235, c_current_cdemo_sk#237, c_current_addr_sk#238, c_birth_year#239]
Input [13]: [cs_bill_customer_sk#224, cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cs_sold_date_sk#232, cd_dep_count#235, c_customer_sk#236, c_current_cdemo_sk#237, c_current_addr_sk#238, c_birth_year#239]

(109) ReusedExchange [Reuses operator id: 21]
Output [1]: [cd_demo_sk#240]

(110) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [c_current_cdemo_sk#237]
Right keys [1]: [cd_demo_sk#240]
Join type: Inner
Join condition: None

(111) Project [codegen id : 31]
Output [10]: [cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cs_sold_date_sk#232, cd_dep_count#235, c_current_addr_sk#238, c_birth_year#239]
Input [12]: [cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cs_sold_date_sk#232, cd_dep_count#235, c_current_cdemo_sk#237, c_current_addr_sk#238, c_birth_year#239, cd_demo_sk#240]

(112) CometScan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#241, ca_state#242]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string>

(113) CometColumnarToRow [codegen id : 28]
Input [2]: [ca_address_sk#241, ca_state#242]

(114) Filter [codegen id : 28]
Input [2]: [ca_address_sk#241, ca_state#242]
Condition : (rpad(ca_state#242, 2,  ) IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#241))

(115) Project [codegen id : 28]
Output [1]: [ca_address_sk#241]
Input [2]: [ca_address_sk#241, ca_state#242]

(116) BroadcastExchange
Input [1]: [ca_address_sk#241]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=11]

(117) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [c_current_addr_sk#238]
Right keys [1]: [ca_address_sk#241]
Join type: Inner
Join condition: None

(118) Project [codegen id : 31]
Output [9]: [cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cs_sold_date_sk#232, cd_dep_count#235, c_birth_year#239]
Input [11]: [cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cs_sold_date_sk#232, cd_dep_count#235, c_current_addr_sk#238, c_birth_year#239, ca_address_sk#241]

(119) ReusedExchange [Reuses operator id: 163]
Output [1]: [d_date_sk#243]

(120) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [cs_sold_date_sk#232]
Right keys [1]: [d_date_sk#243]
Join type: Inner
Join condition: None

(121) Project [codegen id : 31]
Output [8]: [cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cd_dep_count#235, c_birth_year#239]
Input [10]: [cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cs_sold_date_sk#232, cd_dep_count#235, c_birth_year#239, d_date_sk#243]

(122) ReusedExchange [Reuses operator id: 36]
Output [2]: [i_item_sk#244, i_item_id#245]

(123) BroadcastHashJoin [codegen id : 31]
Left keys [1]: [cs_item_sk#226]
Right keys [1]: [i_item_sk#244]
Join type: Inner
Join condition: None

(124) Project [codegen id : 31]
Output [8]: [i_item_id#245, cast(cs_quantity#227 as decimal(12,2)) AS agg1#246, cast(cs_list_price#228 as decimal(12,2)) AS agg2#247, cast(cs_coupon_amt#230 as decimal(12,2)) AS agg3#248, cast(cs_sales_price#229 as decimal(12,2)) AS agg4#249, cast(cs_net_profit#231 as decimal(12,2)) AS agg5#250, cast(c_birth_year#239 as decimal(12,2)) AS agg6#251, cast(cd_dep_count#235 as decimal(12,2)) AS agg7#252]
Input [10]: [cs_item_sk#226, cs_quantity#227, cs_list_price#228, cs_sales_price#229, cs_coupon_amt#230, cs_net_profit#231, cd_dep_count#235, c_birth_year#239, i_item_sk#244, i_item_id#245]

(125) HashAggregate [codegen id : 31]
Input [8]: [i_item_id#245, agg1#246, agg2#247, agg3#248, agg4#249, agg5#250, agg6#251, agg7#252]
Keys [1]: [i_item_id#245]
Functions [7]: [partial_avg(agg1#246), partial_avg(agg2#247), partial_avg(agg3#248), partial_avg(agg4#249), partial_avg(agg5#250), partial_avg(agg6#251), partial_avg(agg7#252)]
Aggregate Attributes [14]: [sum#253, count#254, sum#255, count#256, sum#257, count#258, sum#259, count#260, sum#261, count#262, sum#263, count#264, sum#265, count#266]
Results [15]: [i_item_id#245, sum#267, count#268, sum#269, count#270, sum#271, count#272, sum#273, count#274, sum#275, count#276, sum#277, count#278, sum#279, count#280]

(126) CometColumnarExchange
Input [15]: [i_item_id#245, sum#267, count#268, sum#269, count#270, sum#271, count#272, sum#273, count#274, sum#275, count#276, sum#277, count#278, sum#279, count#280]
Arguments: hashpartitioning(i_item_id#245, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=12]

(127) CometColumnarToRow [codegen id : 32]
Input [15]: [i_item_id#245, sum#267, count#268, sum#269, count#270, sum#271, count#272, sum#273, count#274, sum#275, count#276, sum#277, count#278, sum#279, count#280]

(128) HashAggregate [codegen id : 32]
Input [15]: [i_item_id#245, sum#267, count#268, sum#269, count#270, sum#271, count#272, sum#273, count#274, sum#275, count#276, sum#277, count#278, sum#279, count#280]
Keys [1]: [i_item_id#245]
Functions [7]: [avg(agg1#246), avg(agg2#247), avg(agg3#248), avg(agg4#249), avg(agg5#250), avg(agg6#251), avg(agg7#252)]
Aggregate Attributes [7]: [avg(agg1#246)#281, avg(agg2#247)#282, avg(agg3#248)#283, avg(agg4#249)#284, avg(agg5#250)#285, avg(agg6#251)#286, avg(agg7#252)#287]
Results [11]: [i_item_id#245, null AS ca_country#288, null AS ca_state#289, null AS county#290, avg(agg1#246)#281 AS agg1#291, avg(agg2#247)#282 AS agg2#292, avg(agg3#248)#283 AS agg3#293, avg(agg4#249)#284 AS agg4#294, avg(agg5#250)#285 AS agg5#295, avg(agg6#251)#286 AS agg6#296, avg(agg7#252)#287 AS agg7#297]

(129) CometScan parquet spark_catalog.default.catalog_sales
Output [9]: [cs_bill_customer_sk#298, cs_bill_cdemo_sk#299, cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cs_sold_date_sk#306]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#306), dynamicpruningexpression(cs_sold_date_sk#306 IN dynamicpruning#307)]
PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_net_profit:decimal(7,2)>

(130) CometFilter
Input [9]: [cs_bill_customer_sk#298, cs_bill_cdemo_sk#299, cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cs_sold_date_sk#306]
Condition : ((isnotnull(cs_bill_cdemo_sk#299) AND isnotnull(cs_bill_customer_sk#298)) AND isnotnull(cs_item_sk#300))

(131) CometColumnarToRow [codegen id : 39]
Input [9]: [cs_bill_customer_sk#298, cs_bill_cdemo_sk#299, cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cs_sold_date_sk#306]

(132) ReusedExchange [Reuses operator id: 8]
Output [2]: [cd_demo_sk#308, cd_dep_count#309]

(133) BroadcastHashJoin [codegen id : 39]
Left keys [1]: [cs_bill_cdemo_sk#299]
Right keys [1]: [cd_demo_sk#308]
Join type: Inner
Join condition: None

(134) Project [codegen id : 39]
Output [9]: [cs_bill_customer_sk#298, cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cs_sold_date_sk#306, cd_dep_count#309]
Input [11]: [cs_bill_customer_sk#298, cs_bill_cdemo_sk#299, cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cs_sold_date_sk#306, cd_demo_sk#308, cd_dep_count#309]

(135) ReusedExchange [Reuses operator id: 15]
Output [4]: [c_customer_sk#310, c_current_cdemo_sk#311, c_current_addr_sk#312, c_birth_year#313]

(136) BroadcastHashJoin [codegen id : 39]
Left keys [1]: [cs_bill_customer_sk#298]
Right keys [1]: [c_customer_sk#310]
Join type: Inner
Join condition: None

(137) Project [codegen id : 39]
Output [11]: [cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cs_sold_date_sk#306, cd_dep_count#309, c_current_cdemo_sk#311, c_current_addr_sk#312, c_birth_year#313]
Input [13]: [cs_bill_customer_sk#298, cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cs_sold_date_sk#306, cd_dep_count#309, c_customer_sk#310, c_current_cdemo_sk#311, c_current_addr_sk#312, c_birth_year#313]

(138) ReusedExchange [Reuses operator id: 21]
Output [1]: [cd_demo_sk#314]

(139) BroadcastHashJoin [codegen id : 39]
Left keys [1]: [c_current_cdemo_sk#311]
Right keys [1]: [cd_demo_sk#314]
Join type: Inner
Join condition: None

(140) Project [codegen id : 39]
Output [10]: [cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cs_sold_date_sk#306, cd_dep_count#309, c_current_addr_sk#312, c_birth_year#313]
Input [12]: [cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cs_sold_date_sk#306, cd_dep_count#309, c_current_cdemo_sk#311, c_current_addr_sk#312, c_birth_year#313, cd_demo_sk#314]

(141) ReusedExchange [Reuses operator id: 116]
Output [1]: [ca_address_sk#315]

(142) BroadcastHashJoin [codegen id : 39]
Left keys [1]: [c_current_addr_sk#312]
Right keys [1]: [ca_address_sk#315]
Join type: Inner
Join condition: None

(143) Project [codegen id : 39]
Output [9]: [cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cs_sold_date_sk#306, cd_dep_count#309, c_birth_year#313]
Input [11]: [cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cs_sold_date_sk#306, cd_dep_count#309, c_current_addr_sk#312, c_birth_year#313, ca_address_sk#315]

(144) ReusedExchange [Reuses operator id: 163]
Output [1]: [d_date_sk#316]

(145) BroadcastHashJoin [codegen id : 39]
Left keys [1]: [cs_sold_date_sk#306]
Right keys [1]: [d_date_sk#316]
Join type: Inner
Join condition: None

(146) Project [codegen id : 39]
Output [8]: [cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cd_dep_count#309, c_birth_year#313]
Input [10]: [cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cs_sold_date_sk#306, cd_dep_count#309, c_birth_year#313, d_date_sk#316]

(147) CometScan parquet spark_catalog.default.item
Output [1]: [i_item_sk#317]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int>

(148) CometFilter
Input [1]: [i_item_sk#317]
Condition : isnotnull(i_item_sk#317)

(149) CometColumnarToRow [codegen id : 38]
Input [1]: [i_item_sk#317]

(150) BroadcastExchange
Input [1]: [i_item_sk#317]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=13]

(151) BroadcastHashJoin [codegen id : 39]
Left keys [1]: [cs_item_sk#300]
Right keys [1]: [i_item_sk#317]
Join type: Inner
Join condition: None

(152) Project [codegen id : 39]
Output [7]: [cast(cs_quantity#301 as decimal(12,2)) AS agg1#318, cast(cs_list_price#302 as decimal(12,2)) AS agg2#319, cast(cs_coupon_amt#304 as decimal(12,2)) AS agg3#320, cast(cs_sales_price#303 as decimal(12,2)) AS agg4#321, cast(cs_net_profit#305 as decimal(12,2)) AS agg5#322, cast(c_birth_year#313 as decimal(12,2)) AS agg6#323, cast(cd_dep_count#309 as decimal(12,2)) AS agg7#324]
Input [9]: [cs_item_sk#300, cs_quantity#301, cs_list_price#302, cs_sales_price#303, cs_coupon_amt#304, cs_net_profit#305, cd_dep_count#309, c_birth_year#313, i_item_sk#317]

(153) HashAggregate [codegen id : 39]
Input [7]: [agg1#318, agg2#319, agg3#320, agg4#321, agg5#322, agg6#323, agg7#324]
Keys: []
Functions [7]: [partial_avg(agg1#318), partial_avg(agg2#319), partial_avg(agg3#320), partial_avg(agg4#321), partial_avg(agg5#322), partial_avg(agg6#323), partial_avg(agg7#324)]
Aggregate Attributes [14]: [sum#325, count#326, sum#327, count#328, sum#329, count#330, sum#331, count#332, sum#333, count#334, sum#335, count#336, sum#337, count#338]
Results [14]: [sum#339, count#340, sum#341, count#342, sum#343, count#344, sum#345, count#346, sum#347, count#348, sum#349, count#350, sum#351, count#352]

(154) CometColumnarExchange
Input [14]: [sum#339, count#340, sum#341, count#342, sum#343, count#344, sum#345, count#346, sum#347, count#348, sum#349, count#350, sum#351, count#352]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=14]

(155) CometColumnarToRow [codegen id : 40]
Input [14]: [sum#339, count#340, sum#341, count#342, sum#343, count#344, sum#345, count#346, sum#347, count#348, sum#349, count#350, sum#351, count#352]

(156) HashAggregate [codegen id : 40]
Input [14]: [sum#339, count#340, sum#341, count#342, sum#343, count#344, sum#345, count#346, sum#347, count#348, sum#349, count#350, sum#351, count#352]
Keys: []
Functions [7]: [avg(agg1#318), avg(agg2#319), avg(agg3#320), avg(agg4#321), avg(agg5#322), avg(agg6#323), avg(agg7#324)]
Aggregate Attributes [7]: [avg(agg1#318)#353, avg(agg2#319)#354, avg(agg3#320)#355, avg(agg4#321)#356, avg(agg5#322)#357, avg(agg6#323)#358, avg(agg7#324)#359]
Results [11]: [null AS i_item_id#360, null AS ca_country#361, null AS ca_state#362, null AS county#363, avg(agg1#318)#353 AS agg1#364, avg(agg2#319)#354 AS agg2#365, avg(agg3#320)#355 AS agg3#366, avg(agg4#321)#356 AS agg4#367, avg(agg5#322)#357 AS agg5#368, avg(agg6#323)#358 AS agg6#369, avg(agg7#324)#359 AS agg7#370]

(157) Union

(158) TakeOrderedAndProject
Input [11]: [i_item_id#27, ca_country#24, ca_state#23, ca_county#22, agg1#70, agg2#71, agg3#72, agg4#73, agg5#74, agg6#75, agg7#76]
Arguments: 100, [ca_country#24 ASC NULLS FIRST, ca_state#23 ASC NULLS FIRST, ca_county#22 ASC NULLS FIRST, i_item_id#27 ASC NULLS FIRST], [i_item_id#27, ca_country#24, ca_state#23, ca_county#22, agg1#70, agg2#71, agg3#72, agg4#73, agg5#74, agg6#75, agg7#76]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = cs_sold_date_sk#9 IN dynamicpruning#10
BroadcastExchange (163)
+- * CometColumnarToRow (162)
   +- CometProject (161)
      +- CometFilter (160)
         +- CometScan parquet spark_catalog.default.date_dim (159)


(159) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#25, d_year#371]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(160) CometFilter
Input [2]: [d_date_sk#25, d_year#371]
Condition : ((isnotnull(d_year#371) AND (d_year#371 = 2001)) AND isnotnull(d_date_sk#25))

(161) CometProject
Input [2]: [d_date_sk#25, d_year#371]
Arguments: [d_date_sk#25], [d_date_sk#25]

(162) CometColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#25]

(163) BroadcastExchange
Input [1]: [d_date_sk#25]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=15]

Subquery:2 Hosting operator id = 43 Hosting Expression = cs_sold_date_sk#85 IN dynamicpruning#10

Subquery:3 Hosting operator id = 71 Hosting Expression = cs_sold_date_sk#158 IN dynamicpruning#10

Subquery:4 Hosting operator id = 100 Hosting Expression = cs_sold_date_sk#232 IN dynamicpruning#10

Subquery:5 Hosting operator id = 129 Hosting Expression = cs_sold_date_sk#306 IN dynamicpruning#10


