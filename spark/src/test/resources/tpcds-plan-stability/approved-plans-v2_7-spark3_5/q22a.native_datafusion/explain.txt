== Physical Plan ==
* CometColumnarToRow (47)
+- CometTakeOrderedAndProject (46)
   +- CometUnion (45)
      :- CometHashAggregate (24)
      :  +- CometHashAggregate (23)
      :     +- CometHashAggregate (22)
      :        +- CometExchange (21)
      :           +- CometHashAggregate (20)
      :              +- CometProject (19)
      :                 +- CometBroadcastHashJoin (18)
      :                    :- CometProject (14)
      :                    :  +- CometBroadcastHashJoin (13)
      :                    :     :- CometProject (8)
      :                    :     :  +- CometBroadcastHashJoin (7)
      :                    :     :     :- CometFilter (2)
      :                    :     :     :  +- CometNativeScan parquet spark_catalog.default.inventory (1)
      :                    :     :     +- CometBroadcastExchange (6)
      :                    :     :        +- CometProject (5)
      :                    :     :           +- CometFilter (4)
      :                    :     :              +- CometNativeScan parquet spark_catalog.default.date_dim (3)
      :                    :     +- CometBroadcastExchange (12)
      :                    :        +- CometProject (11)
      :                    :           +- CometFilter (10)
      :                    :              +- CometNativeScan parquet spark_catalog.default.item (9)
      :                    +- CometBroadcastExchange (17)
      :                       +- CometFilter (16)
      :                          +- CometNativeScan parquet spark_catalog.default.warehouse (15)
      :- CometHashAggregate (29)
      :  +- CometExchange (28)
      :     +- CometHashAggregate (27)
      :        +- CometHashAggregate (26)
      :           +- ReusedExchange (25)
      :- CometHashAggregate (34)
      :  +- CometExchange (33)
      :     +- CometHashAggregate (32)
      :        +- CometHashAggregate (31)
      :           +- ReusedExchange (30)
      :- CometHashAggregate (39)
      :  +- CometExchange (38)
      :     +- CometHashAggregate (37)
      :        +- CometHashAggregate (36)
      :           +- ReusedExchange (35)
      +- CometHashAggregate (44)
         +- CometExchange (43)
            +- CometHashAggregate (42)
               +- CometHashAggregate (41)
                  +- ReusedExchange (40)


(1) CometNativeScan parquet spark_catalog.default.inventory
Output [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(inv_date_sk#4)]
PushedFilters: [IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)]
ReadSchema: struct<inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>

(2) CometFilter
Input [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Condition : (isnotnull(inv_item_sk#1) AND isnotnull(inv_warehouse_sk#2))

(3) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#5, d_month_seq#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(4) CometFilter
Input [2]: [d_date_sk#5, d_month_seq#6]
Condition : (((isnotnull(d_month_seq#6) AND (d_month_seq#6 >= 1212)) AND (d_month_seq#6 <= 1223)) AND isnotnull(d_date_sk#5))

(5) CometProject
Input [2]: [d_date_sk#5, d_month_seq#6]
Arguments: [d_date_sk#5], [d_date_sk#5]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: [d_date_sk#5]

(7) CometBroadcastHashJoin
Left output [4]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4]
Right output [1]: [d_date_sk#5]
Arguments: [inv_date_sk#4], [d_date_sk#5], Inner, BuildRight

(8) CometProject
Input [5]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, inv_date_sk#4, d_date_sk#5]
Arguments: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3], [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]

(9) CometNativeScan parquet spark_catalog.default.item
Output [5]: [i_item_sk#7, i_brand#8, i_class#9, i_category#10, i_product_name#11]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>

(10) CometFilter
Input [5]: [i_item_sk#7, i_brand#8, i_class#9, i_category#10, i_product_name#11]
Condition : isnotnull(i_item_sk#7)

(11) CometProject
Input [5]: [i_item_sk#7, i_brand#8, i_class#9, i_category#10, i_product_name#11]
Arguments: [i_item_sk#7, i_brand#12, i_class#13, i_category#14, i_product_name#15], [i_item_sk#7, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_brand#8, 50, true, false, true) AS i_brand#12, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_class#9, 50, true, false, true) AS i_class#13, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_category#10, 50, true, false, true) AS i_category#14, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_product_name#11, 50, true, false, true) AS i_product_name#15]

(12) CometBroadcastExchange
Input [5]: [i_item_sk#7, i_brand#12, i_class#13, i_category#14, i_product_name#15]
Arguments: [i_item_sk#7, i_brand#12, i_class#13, i_category#14, i_product_name#15]

(13) CometBroadcastHashJoin
Left output [3]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3]
Right output [5]: [i_item_sk#7, i_brand#12, i_class#13, i_category#14, i_product_name#15]
Arguments: [inv_item_sk#1], [i_item_sk#7], Inner, BuildRight

(14) CometProject
Input [8]: [inv_item_sk#1, inv_warehouse_sk#2, inv_quantity_on_hand#3, i_item_sk#7, i_brand#12, i_class#13, i_category#14, i_product_name#15]
Arguments: [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_brand#12, i_class#13, i_category#14, i_product_name#15], [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_brand#12, i_class#13, i_category#14, i_product_name#15]

(15) CometNativeScan parquet spark_catalog.default.warehouse
Output [1]: [w_warehouse_sk#16]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int>

(16) CometFilter
Input [1]: [w_warehouse_sk#16]
Condition : isnotnull(w_warehouse_sk#16)

(17) CometBroadcastExchange
Input [1]: [w_warehouse_sk#16]
Arguments: [w_warehouse_sk#16]

(18) CometBroadcastHashJoin
Left output [6]: [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_brand#12, i_class#13, i_category#14, i_product_name#15]
Right output [1]: [w_warehouse_sk#16]
Arguments: [inv_warehouse_sk#2], [w_warehouse_sk#16], Inner, BuildRight

(19) CometProject
Input [7]: [inv_warehouse_sk#2, inv_quantity_on_hand#3, i_brand#12, i_class#13, i_category#14, i_product_name#15, w_warehouse_sk#16]
Arguments: [inv_quantity_on_hand#3, i_brand#12, i_class#13, i_category#14, i_product_name#15], [inv_quantity_on_hand#3, i_brand#12, i_class#13, i_category#14, i_product_name#15]

(20) CometHashAggregate
Input [5]: [inv_quantity_on_hand#3, i_brand#12, i_class#13, i_category#14, i_product_name#15]
Keys [4]: [i_product_name#15, i_brand#12, i_class#13, i_category#14]
Functions [1]: [partial_avg(inv_quantity_on_hand#3)]

(21) CometExchange
Input [6]: [i_product_name#15, i_brand#12, i_class#13, i_category#14, sum#17, count#18]
Arguments: hashpartitioning(i_product_name#15, i_brand#12, i_class#13, i_category#14, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(22) CometHashAggregate
Input [6]: [i_product_name#15, i_brand#12, i_class#13, i_category#14, sum#17, count#18]
Keys [4]: [i_product_name#15, i_brand#12, i_class#13, i_category#14]
Functions [1]: [avg(inv_quantity_on_hand#3)]

(23) CometHashAggregate
Input [5]: [i_product_name#19, i_brand#20, i_class#21, i_category#22, qoh#23]
Keys [4]: [i_product_name#19, i_brand#20, i_class#21, i_category#22]
Functions [1]: [partial_avg(qoh#23)]

(24) CometHashAggregate
Input [6]: [i_product_name#19, i_brand#20, i_class#21, i_category#22, sum#24, count#25]
Keys [4]: [i_product_name#19, i_brand#20, i_class#21, i_category#22]
Functions [1]: [avg(qoh#23)]

(25) ReusedExchange [Reuses operator id: 21]
Output [6]: [i_product_name#15, i_brand#12, i_class#13, i_category#14, sum#26, count#27]

(26) CometHashAggregate
Input [6]: [i_product_name#15, i_brand#12, i_class#13, i_category#14, sum#26, count#27]
Keys [4]: [i_product_name#15, i_brand#12, i_class#13, i_category#14]
Functions [1]: [avg(inv_quantity_on_hand#28)]

(27) CometHashAggregate
Input [4]: [i_product_name#15, i_brand#12, i_class#13, qoh#29]
Keys [3]: [i_product_name#15, i_brand#12, i_class#13]
Functions [1]: [partial_avg(qoh#29)]

(28) CometExchange
Input [5]: [i_product_name#15, i_brand#12, i_class#13, sum#30, count#31]
Arguments: hashpartitioning(i_product_name#15, i_brand#12, i_class#13, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(29) CometHashAggregate
Input [5]: [i_product_name#15, i_brand#12, i_class#13, sum#30, count#31]
Keys [3]: [i_product_name#15, i_brand#12, i_class#13]
Functions [1]: [avg(qoh#29)]

(30) ReusedExchange [Reuses operator id: 21]
Output [6]: [i_product_name#15, i_brand#12, i_class#13, i_category#14, sum#32, count#33]

(31) CometHashAggregate
Input [6]: [i_product_name#15, i_brand#12, i_class#13, i_category#14, sum#32, count#33]
Keys [4]: [i_product_name#15, i_brand#12, i_class#13, i_category#14]
Functions [1]: [avg(inv_quantity_on_hand#34)]

(32) CometHashAggregate
Input [3]: [i_product_name#15, i_brand#12, qoh#35]
Keys [2]: [i_product_name#15, i_brand#12]
Functions [1]: [partial_avg(qoh#35)]

(33) CometExchange
Input [4]: [i_product_name#15, i_brand#12, sum#36, count#37]
Arguments: hashpartitioning(i_product_name#15, i_brand#12, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(34) CometHashAggregate
Input [4]: [i_product_name#15, i_brand#12, sum#36, count#37]
Keys [2]: [i_product_name#15, i_brand#12]
Functions [1]: [avg(qoh#35)]

(35) ReusedExchange [Reuses operator id: 21]
Output [6]: [i_product_name#15, i_brand#12, i_class#13, i_category#14, sum#38, count#39]

(36) CometHashAggregate
Input [6]: [i_product_name#15, i_brand#12, i_class#13, i_category#14, sum#38, count#39]
Keys [4]: [i_product_name#15, i_brand#12, i_class#13, i_category#14]
Functions [1]: [avg(inv_quantity_on_hand#40)]

(37) CometHashAggregate
Input [2]: [i_product_name#15, qoh#41]
Keys [1]: [i_product_name#15]
Functions [1]: [partial_avg(qoh#41)]

(38) CometExchange
Input [3]: [i_product_name#15, sum#42, count#43]
Arguments: hashpartitioning(i_product_name#15, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(39) CometHashAggregate
Input [3]: [i_product_name#15, sum#42, count#43]
Keys [1]: [i_product_name#15]
Functions [1]: [avg(qoh#41)]

(40) ReusedExchange [Reuses operator id: 21]
Output [6]: [i_product_name#15, i_brand#12, i_class#13, i_category#14, sum#44, count#45]

(41) CometHashAggregate
Input [6]: [i_product_name#15, i_brand#12, i_class#13, i_category#14, sum#44, count#45]
Keys [4]: [i_product_name#15, i_brand#12, i_class#13, i_category#14]
Functions [1]: [avg(inv_quantity_on_hand#46)]

(42) CometHashAggregate
Input [1]: [qoh#47]
Keys: []
Functions [1]: [partial_avg(qoh#47)]

(43) CometExchange
Input [2]: [sum#48, count#49]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(44) CometHashAggregate
Input [2]: [sum#48, count#49]
Keys: []
Functions [1]: [avg(qoh#47)]

(45) CometUnion
Child 0 Input [5]: [i_product_name#19, i_brand#20, i_class#21, i_category#22, qoh#50]
Child 1 Input [5]: [i_product_name#15, i_brand#12, i_class#13, i_category#51, qoh#52]
Child 2 Input [5]: [i_product_name#15, i_brand#12, i_class#53, i_category#54, qoh#55]
Child 3 Input [5]: [i_product_name#15, i_brand#56, i_class#57, i_category#58, qoh#59]
Child 4 Input [5]: [i_product_name#60, i_brand#61, i_class#62, i_category#63, qoh#64]

(46) CometTakeOrderedAndProject
Input [5]: [i_product_name#19, i_brand#20, i_class#21, i_category#22, qoh#50]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[qoh#50 ASC NULLS FIRST,i_product_name#19 ASC NULLS FIRST,i_brand#20 ASC NULLS FIRST,i_class#21 ASC NULLS FIRST,i_category#22 ASC NULLS FIRST], output=[i_product_name#19,i_brand#20,i_class#21,i_category#22,qoh#50]), [i_product_name#19, i_brand#20, i_class#21, i_category#22, qoh#50], 100, 0, [qoh#50 ASC NULLS FIRST, i_product_name#19 ASC NULLS FIRST, i_brand#20 ASC NULLS FIRST, i_class#21 ASC NULLS FIRST, i_category#22 ASC NULLS FIRST], [i_product_name#19, i_brand#20, i_class#21, i_category#22, qoh#50]

(47) CometColumnarToRow [codegen id : 1]
Input [5]: [i_product_name#19, i_brand#20, i_class#21, i_category#22, qoh#50]

