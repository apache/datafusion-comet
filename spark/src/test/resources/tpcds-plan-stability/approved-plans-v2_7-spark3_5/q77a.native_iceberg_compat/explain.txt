== Physical Plan ==
TakeOrderedAndProject (97)
+- * HashAggregate (96)
   +- Exchange (95)
      +- * HashAggregate (94)
         +- Union (93)
            :- * HashAggregate (82)
            :  +- Exchange (81)
            :     +- * HashAggregate (80)
            :        +- Union (79)
            :           :- * ColumnarToRow (31)
            :           :  +- CometProject (30)
            :           :     +- CometBroadcastHashJoin (29)
            :           :        :- CometHashAggregate (16)
            :           :        :  +- CometExchange (15)
            :           :        :     +- CometHashAggregate (14)
            :           :        :        +- CometProject (13)
            :           :        :           +- CometBroadcastHashJoin (12)
            :           :        :              :- CometProject (8)
            :           :        :              :  +- CometBroadcastHashJoin (7)
            :           :        :              :     :- CometFilter (2)
            :           :        :              :     :  +- CometScan parquet spark_catalog.default.store_sales (1)
            :           :        :              :     +- CometBroadcastExchange (6)
            :           :        :              :        +- CometProject (5)
            :           :        :              :           +- CometFilter (4)
            :           :        :              :              +- CometScan parquet spark_catalog.default.date_dim (3)
            :           :        :              +- CometBroadcastExchange (11)
            :           :        :                 +- CometFilter (10)
            :           :        :                    +- CometScan parquet spark_catalog.default.store (9)
            :           :        +- CometBroadcastExchange (28)
            :           :           +- CometHashAggregate (27)
            :           :              +- CometExchange (26)
            :           :                 +- CometHashAggregate (25)
            :           :                    +- CometProject (24)
            :           :                       +- CometBroadcastHashJoin (23)
            :           :                          :- CometProject (21)
            :           :                          :  +- CometBroadcastHashJoin (20)
            :           :                          :     :- CometFilter (18)
            :           :                          :     :  +- CometScan parquet spark_catalog.default.store_returns (17)
            :           :                          :     +- ReusedExchange (19)
            :           :                          +- ReusedExchange (22)
            :           :- * Project (50)
            :           :  +- * BroadcastNestedLoopJoin Inner BuildLeft (49)
            :           :     :- BroadcastExchange (40)
            :           :     :  +- * ColumnarToRow (39)
            :           :     :     +- CometHashAggregate (38)
            :           :     :        +- CometExchange (37)
            :           :     :           +- CometHashAggregate (36)
            :           :     :              +- CometProject (35)
            :           :     :                 +- CometBroadcastHashJoin (34)
            :           :     :                    :- CometScan parquet spark_catalog.default.catalog_sales (32)
            :           :     :                    +- ReusedExchange (33)
            :           :     +- * ColumnarToRow (48)
            :           :        +- CometHashAggregate (47)
            :           :           +- CometExchange (46)
            :           :              +- CometHashAggregate (45)
            :           :                 +- CometProject (44)
            :           :                    +- CometBroadcastHashJoin (43)
            :           :                       :- CometScan parquet spark_catalog.default.catalog_returns (41)
            :           :                       +- ReusedExchange (42)
            :           +- * ColumnarToRow (78)
            :              +- CometProject (77)
            :                 +- CometBroadcastHashJoin (76)
            :                    :- CometHashAggregate (63)
            :                    :  +- CometExchange (62)
            :                    :     +- CometHashAggregate (61)
            :                    :        +- CometProject (60)
            :                    :           +- CometBroadcastHashJoin (59)
            :                    :              :- CometProject (55)
            :                    :              :  +- CometBroadcastHashJoin (54)
            :                    :              :     :- CometFilter (52)
            :                    :              :     :  +- CometScan parquet spark_catalog.default.web_sales (51)
            :                    :              :     +- ReusedExchange (53)
            :                    :              +- CometBroadcastExchange (58)
            :                    :                 +- CometFilter (57)
            :                    :                    +- CometScan parquet spark_catalog.default.web_page (56)
            :                    +- CometBroadcastExchange (75)
            :                       +- CometHashAggregate (74)
            :                          +- CometExchange (73)
            :                             +- CometHashAggregate (72)
            :                                +- CometProject (71)
            :                                   +- CometBroadcastHashJoin (70)
            :                                      :- CometProject (68)
            :                                      :  +- CometBroadcastHashJoin (67)
            :                                      :     :- CometFilter (65)
            :                                      :     :  +- CometScan parquet spark_catalog.default.web_returns (64)
            :                                      :     +- ReusedExchange (66)
            :                                      +- ReusedExchange (69)
            :- * HashAggregate (87)
            :  +- Exchange (86)
            :     +- * HashAggregate (85)
            :        +- * HashAggregate (84)
            :           +- ReusedExchange (83)
            +- * HashAggregate (92)
               +- Exchange (91)
                  +- * HashAggregate (90)
                     +- * HashAggregate (89)
                        +- ReusedExchange (88)


(1) CometScan parquet spark_catalog.default.store_sales
Output [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4)]
PushedFilters: [IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4]
Condition : isnotnull(ss_store_sk#1)

(3) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#5, d_date#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1998-08-04), LessThanOrEqual(d_date,1998-09-03), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(4) CometFilter
Input [2]: [d_date_sk#5, d_date#6]
Condition : (((isnotnull(d_date#6) AND (d_date#6 >= 1998-08-04)) AND (d_date#6 <= 1998-09-03)) AND isnotnull(d_date_sk#5))

(5) CometProject
Input [2]: [d_date_sk#5, d_date#6]
Arguments: [d_date_sk#5], [d_date_sk#5]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: [d_date_sk#5]

(7) CometBroadcastHashJoin
Left output [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4]
Right output [1]: [d_date_sk#5]
Arguments: [ss_sold_date_sk#4], [d_date_sk#5], Inner, BuildRight

(8) CometProject
Input [5]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4, d_date_sk#5]
Arguments: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3], [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3]

(9) CometScan parquet spark_catalog.default.store
Output [1]: [s_store_sk#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int>

(10) CometFilter
Input [1]: [s_store_sk#7]
Condition : isnotnull(s_store_sk#7)

(11) CometBroadcastExchange
Input [1]: [s_store_sk#7]
Arguments: [s_store_sk#7]

(12) CometBroadcastHashJoin
Left output [3]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3]
Right output [1]: [s_store_sk#7]
Arguments: [ss_store_sk#1], [s_store_sk#7], Inner, BuildRight

(13) CometProject
Input [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, s_store_sk#7]
Arguments: [ss_ext_sales_price#2, ss_net_profit#3, s_store_sk#7], [ss_ext_sales_price#2, ss_net_profit#3, s_store_sk#7]

(14) CometHashAggregate
Input [3]: [ss_ext_sales_price#2, ss_net_profit#3, s_store_sk#7]
Keys [1]: [s_store_sk#7]
Functions [2]: [partial_sum(UnscaledValue(ss_ext_sales_price#2)), partial_sum(UnscaledValue(ss_net_profit#3))]

(15) CometExchange
Input [3]: [s_store_sk#7, sum#8, sum#9]
Arguments: hashpartitioning(s_store_sk#7, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(16) CometHashAggregate
Input [3]: [s_store_sk#7, sum#8, sum#9]
Keys [1]: [s_store_sk#7]
Functions [2]: [sum(UnscaledValue(ss_ext_sales_price#2)), sum(UnscaledValue(ss_net_profit#3))]

(17) CometScan parquet spark_catalog.default.store_returns
Output [4]: [sr_store_sk#10, sr_return_amt#11, sr_net_loss#12, sr_returned_date_sk#13]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(sr_returned_date_sk#13)]
PushedFilters: [IsNotNull(sr_store_sk)]
ReadSchema: struct<sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>

(18) CometFilter
Input [4]: [sr_store_sk#10, sr_return_amt#11, sr_net_loss#12, sr_returned_date_sk#13]
Condition : isnotnull(sr_store_sk#10)

(19) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#14]

(20) CometBroadcastHashJoin
Left output [4]: [sr_store_sk#10, sr_return_amt#11, sr_net_loss#12, sr_returned_date_sk#13]
Right output [1]: [d_date_sk#14]
Arguments: [sr_returned_date_sk#13], [d_date_sk#14], Inner, BuildRight

(21) CometProject
Input [5]: [sr_store_sk#10, sr_return_amt#11, sr_net_loss#12, sr_returned_date_sk#13, d_date_sk#14]
Arguments: [sr_store_sk#10, sr_return_amt#11, sr_net_loss#12], [sr_store_sk#10, sr_return_amt#11, sr_net_loss#12]

(22) ReusedExchange [Reuses operator id: 11]
Output [1]: [s_store_sk#15]

(23) CometBroadcastHashJoin
Left output [3]: [sr_store_sk#10, sr_return_amt#11, sr_net_loss#12]
Right output [1]: [s_store_sk#15]
Arguments: [sr_store_sk#10], [s_store_sk#15], Inner, BuildRight

(24) CometProject
Input [4]: [sr_store_sk#10, sr_return_amt#11, sr_net_loss#12, s_store_sk#15]
Arguments: [sr_return_amt#11, sr_net_loss#12, s_store_sk#15], [sr_return_amt#11, sr_net_loss#12, s_store_sk#15]

(25) CometHashAggregate
Input [3]: [sr_return_amt#11, sr_net_loss#12, s_store_sk#15]
Keys [1]: [s_store_sk#15]
Functions [2]: [partial_sum(UnscaledValue(sr_return_amt#11)), partial_sum(UnscaledValue(sr_net_loss#12))]

(26) CometExchange
Input [3]: [s_store_sk#15, sum#16, sum#17]
Arguments: hashpartitioning(s_store_sk#15, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(27) CometHashAggregate
Input [3]: [s_store_sk#15, sum#16, sum#17]
Keys [1]: [s_store_sk#15]
Functions [2]: [sum(UnscaledValue(sr_return_amt#11)), sum(UnscaledValue(sr_net_loss#12))]

(28) CometBroadcastExchange
Input [3]: [s_store_sk#15, returns#18, profit_loss#19]
Arguments: [s_store_sk#15, returns#18, profit_loss#19]

(29) CometBroadcastHashJoin
Left output [3]: [s_store_sk#7, sales#20, profit#21]
Right output [3]: [s_store_sk#15, returns#18, profit_loss#19]
Arguments: [s_store_sk#7], [s_store_sk#15], LeftOuter, BuildRight

(30) CometProject
Input [6]: [s_store_sk#7, sales#20, profit#21, s_store_sk#15, returns#18, profit_loss#19]
Arguments: [channel#22, id#23, sales#20, returns#24, profit#25], [store channel AS channel#22, s_store_sk#7 AS id#23, sales#20, coalesce(returns#18, 0.00) AS returns#24, (profit#21 - coalesce(profit_loss#19, 0.00)) AS profit#25]

(31) ColumnarToRow [codegen id : 1]
Input [5]: [channel#22, id#23, sales#20, returns#24, profit#25]

(32) CometScan parquet spark_catalog.default.catalog_sales
Output [4]: [cs_call_center_sk#26, cs_ext_sales_price#27, cs_net_profit#28, cs_sold_date_sk#29]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#29)]
ReadSchema: struct<cs_call_center_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>

(33) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#30]

(34) CometBroadcastHashJoin
Left output [4]: [cs_call_center_sk#26, cs_ext_sales_price#27, cs_net_profit#28, cs_sold_date_sk#29]
Right output [1]: [d_date_sk#30]
Arguments: [cs_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight

(35) CometProject
Input [5]: [cs_call_center_sk#26, cs_ext_sales_price#27, cs_net_profit#28, cs_sold_date_sk#29, d_date_sk#30]
Arguments: [cs_call_center_sk#26, cs_ext_sales_price#27, cs_net_profit#28], [cs_call_center_sk#26, cs_ext_sales_price#27, cs_net_profit#28]

(36) CometHashAggregate
Input [3]: [cs_call_center_sk#26, cs_ext_sales_price#27, cs_net_profit#28]
Keys [1]: [cs_call_center_sk#26]
Functions [2]: [partial_sum(UnscaledValue(cs_ext_sales_price#27)), partial_sum(UnscaledValue(cs_net_profit#28))]

(37) CometExchange
Input [3]: [cs_call_center_sk#26, sum#31, sum#32]
Arguments: hashpartitioning(cs_call_center_sk#26, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(38) CometHashAggregate
Input [3]: [cs_call_center_sk#26, sum#31, sum#32]
Keys [1]: [cs_call_center_sk#26]
Functions [2]: [sum(UnscaledValue(cs_ext_sales_price#27)), sum(UnscaledValue(cs_net_profit#28))]

(39) ColumnarToRow [codegen id : 2]
Input [3]: [cs_call_center_sk#26, sales#33, profit#34]

(40) BroadcastExchange
Input [3]: [cs_call_center_sk#26, sales#33, profit#34]
Arguments: IdentityBroadcastMode, [plan_id=4]

(41) CometScan parquet spark_catalog.default.catalog_returns
Output [3]: [cr_return_amount#35, cr_net_loss#36, cr_returned_date_sk#37]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cr_returned_date_sk#37)]
ReadSchema: struct<cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>

(42) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#38]

(43) CometBroadcastHashJoin
Left output [3]: [cr_return_amount#35, cr_net_loss#36, cr_returned_date_sk#37]
Right output [1]: [d_date_sk#38]
Arguments: [cr_returned_date_sk#37], [d_date_sk#38], Inner, BuildRight

(44) CometProject
Input [4]: [cr_return_amount#35, cr_net_loss#36, cr_returned_date_sk#37, d_date_sk#38]
Arguments: [cr_return_amount#35, cr_net_loss#36], [cr_return_amount#35, cr_net_loss#36]

(45) CometHashAggregate
Input [2]: [cr_return_amount#35, cr_net_loss#36]
Keys: []
Functions [2]: [partial_sum(UnscaledValue(cr_return_amount#35)), partial_sum(UnscaledValue(cr_net_loss#36))]

(46) CometExchange
Input [2]: [sum#39, sum#40]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(47) CometHashAggregate
Input [2]: [sum#39, sum#40]
Keys: []
Functions [2]: [sum(UnscaledValue(cr_return_amount#35)), sum(UnscaledValue(cr_net_loss#36))]

(48) ColumnarToRow
Input [2]: [returns#41, profit_loss#42]

(49) BroadcastNestedLoopJoin [codegen id : 3]
Join type: Inner
Join condition: None

(50) Project [codegen id : 3]
Output [5]: [catalog channel AS channel#43, cs_call_center_sk#26 AS id#44, sales#33, returns#41, (profit#34 - profit_loss#42) AS profit#45]
Input [5]: [cs_call_center_sk#26, sales#33, profit#34, returns#41, profit_loss#42]

(51) CometScan parquet spark_catalog.default.web_sales
Output [4]: [ws_web_page_sk#46, ws_ext_sales_price#47, ws_net_profit#48, ws_sold_date_sk#49]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#49)]
PushedFilters: [IsNotNull(ws_web_page_sk)]
ReadSchema: struct<ws_web_page_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>

(52) CometFilter
Input [4]: [ws_web_page_sk#46, ws_ext_sales_price#47, ws_net_profit#48, ws_sold_date_sk#49]
Condition : isnotnull(ws_web_page_sk#46)

(53) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#50]

(54) CometBroadcastHashJoin
Left output [4]: [ws_web_page_sk#46, ws_ext_sales_price#47, ws_net_profit#48, ws_sold_date_sk#49]
Right output [1]: [d_date_sk#50]
Arguments: [ws_sold_date_sk#49], [d_date_sk#50], Inner, BuildRight

(55) CometProject
Input [5]: [ws_web_page_sk#46, ws_ext_sales_price#47, ws_net_profit#48, ws_sold_date_sk#49, d_date_sk#50]
Arguments: [ws_web_page_sk#46, ws_ext_sales_price#47, ws_net_profit#48], [ws_web_page_sk#46, ws_ext_sales_price#47, ws_net_profit#48]

(56) CometScan parquet spark_catalog.default.web_page
Output [1]: [wp_web_page_sk#51]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_page]
PushedFilters: [IsNotNull(wp_web_page_sk)]
ReadSchema: struct<wp_web_page_sk:int>

(57) CometFilter
Input [1]: [wp_web_page_sk#51]
Condition : isnotnull(wp_web_page_sk#51)

(58) CometBroadcastExchange
Input [1]: [wp_web_page_sk#51]
Arguments: [wp_web_page_sk#51]

(59) CometBroadcastHashJoin
Left output [3]: [ws_web_page_sk#46, ws_ext_sales_price#47, ws_net_profit#48]
Right output [1]: [wp_web_page_sk#51]
Arguments: [ws_web_page_sk#46], [wp_web_page_sk#51], Inner, BuildRight

(60) CometProject
Input [4]: [ws_web_page_sk#46, ws_ext_sales_price#47, ws_net_profit#48, wp_web_page_sk#51]
Arguments: [ws_ext_sales_price#47, ws_net_profit#48, wp_web_page_sk#51], [ws_ext_sales_price#47, ws_net_profit#48, wp_web_page_sk#51]

(61) CometHashAggregate
Input [3]: [ws_ext_sales_price#47, ws_net_profit#48, wp_web_page_sk#51]
Keys [1]: [wp_web_page_sk#51]
Functions [2]: [partial_sum(UnscaledValue(ws_ext_sales_price#47)), partial_sum(UnscaledValue(ws_net_profit#48))]

(62) CometExchange
Input [3]: [wp_web_page_sk#51, sum#52, sum#53]
Arguments: hashpartitioning(wp_web_page_sk#51, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(63) CometHashAggregate
Input [3]: [wp_web_page_sk#51, sum#52, sum#53]
Keys [1]: [wp_web_page_sk#51]
Functions [2]: [sum(UnscaledValue(ws_ext_sales_price#47)), sum(UnscaledValue(ws_net_profit#48))]

(64) CometScan parquet spark_catalog.default.web_returns
Output [4]: [wr_web_page_sk#54, wr_return_amt#55, wr_net_loss#56, wr_returned_date_sk#57]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(wr_returned_date_sk#57)]
PushedFilters: [IsNotNull(wr_web_page_sk)]
ReadSchema: struct<wr_web_page_sk:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>

(65) CometFilter
Input [4]: [wr_web_page_sk#54, wr_return_amt#55, wr_net_loss#56, wr_returned_date_sk#57]
Condition : isnotnull(wr_web_page_sk#54)

(66) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#58]

(67) CometBroadcastHashJoin
Left output [4]: [wr_web_page_sk#54, wr_return_amt#55, wr_net_loss#56, wr_returned_date_sk#57]
Right output [1]: [d_date_sk#58]
Arguments: [wr_returned_date_sk#57], [d_date_sk#58], Inner, BuildRight

(68) CometProject
Input [5]: [wr_web_page_sk#54, wr_return_amt#55, wr_net_loss#56, wr_returned_date_sk#57, d_date_sk#58]
Arguments: [wr_web_page_sk#54, wr_return_amt#55, wr_net_loss#56], [wr_web_page_sk#54, wr_return_amt#55, wr_net_loss#56]

(69) ReusedExchange [Reuses operator id: 58]
Output [1]: [wp_web_page_sk#59]

(70) CometBroadcastHashJoin
Left output [3]: [wr_web_page_sk#54, wr_return_amt#55, wr_net_loss#56]
Right output [1]: [wp_web_page_sk#59]
Arguments: [wr_web_page_sk#54], [wp_web_page_sk#59], Inner, BuildRight

(71) CometProject
Input [4]: [wr_web_page_sk#54, wr_return_amt#55, wr_net_loss#56, wp_web_page_sk#59]
Arguments: [wr_return_amt#55, wr_net_loss#56, wp_web_page_sk#59], [wr_return_amt#55, wr_net_loss#56, wp_web_page_sk#59]

(72) CometHashAggregate
Input [3]: [wr_return_amt#55, wr_net_loss#56, wp_web_page_sk#59]
Keys [1]: [wp_web_page_sk#59]
Functions [2]: [partial_sum(UnscaledValue(wr_return_amt#55)), partial_sum(UnscaledValue(wr_net_loss#56))]

(73) CometExchange
Input [3]: [wp_web_page_sk#59, sum#60, sum#61]
Arguments: hashpartitioning(wp_web_page_sk#59, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=7]

(74) CometHashAggregate
Input [3]: [wp_web_page_sk#59, sum#60, sum#61]
Keys [1]: [wp_web_page_sk#59]
Functions [2]: [sum(UnscaledValue(wr_return_amt#55)), sum(UnscaledValue(wr_net_loss#56))]

(75) CometBroadcastExchange
Input [3]: [wp_web_page_sk#59, returns#62, profit_loss#63]
Arguments: [wp_web_page_sk#59, returns#62, profit_loss#63]

(76) CometBroadcastHashJoin
Left output [3]: [wp_web_page_sk#51, sales#64, profit#65]
Right output [3]: [wp_web_page_sk#59, returns#62, profit_loss#63]
Arguments: [wp_web_page_sk#51], [wp_web_page_sk#59], LeftOuter, BuildRight

(77) CometProject
Input [6]: [wp_web_page_sk#51, sales#64, profit#65, wp_web_page_sk#59, returns#62, profit_loss#63]
Arguments: [channel#66, id#67, sales#64, returns#68, profit#69], [web channel AS channel#66, wp_web_page_sk#51 AS id#67, sales#64, coalesce(returns#62, 0.00) AS returns#68, (profit#65 - coalesce(profit_loss#63, 0.00)) AS profit#69]

(78) ColumnarToRow [codegen id : 4]
Input [5]: [channel#66, id#67, sales#64, returns#68, profit#69]

(79) Union

(80) HashAggregate [codegen id : 5]
Input [5]: [channel#22, id#23, sales#20, returns#24, profit#25]
Keys [2]: [channel#22, id#23]
Functions [3]: [partial_sum(sales#20), partial_sum(returns#24), partial_sum(profit#25)]
Aggregate Attributes [6]: [sum#70, isEmpty#71, sum#72, isEmpty#73, sum#74, isEmpty#75]
Results [8]: [channel#22, id#23, sum#76, isEmpty#77, sum#78, isEmpty#79, sum#80, isEmpty#81]

(81) Exchange
Input [8]: [channel#22, id#23, sum#76, isEmpty#77, sum#78, isEmpty#79, sum#80, isEmpty#81]
Arguments: hashpartitioning(channel#22, id#23, 5), ENSURE_REQUIREMENTS, [plan_id=8]

(82) HashAggregate [codegen id : 6]
Input [8]: [channel#22, id#23, sum#76, isEmpty#77, sum#78, isEmpty#79, sum#80, isEmpty#81]
Keys [2]: [channel#22, id#23]
Functions [3]: [sum(sales#20), sum(returns#24), sum(profit#25)]
Aggregate Attributes [3]: [sum(sales#20)#82, sum(returns#24)#83, sum(profit#25)#84]
Results [5]: [channel#22, id#23, cast(sum(sales#20)#82 as decimal(37,2)) AS sales#85, cast(sum(returns#24)#83 as decimal(37,2)) AS returns#86, cast(sum(profit#25)#84 as decimal(38,2)) AS profit#87]

(83) ReusedExchange [Reuses operator id: 81]
Output [8]: [channel#22, id#23, sum#76, isEmpty#77, sum#78, isEmpty#79, sum#80, isEmpty#81]

(84) HashAggregate [codegen id : 12]
Input [8]: [channel#22, id#23, sum#76, isEmpty#77, sum#78, isEmpty#79, sum#80, isEmpty#81]
Keys [2]: [channel#22, id#23]
Functions [3]: [sum(sales#20), sum(returns#24), sum(profit#25)]
Aggregate Attributes [3]: [sum(sales#20)#82, sum(returns#24)#83, sum(profit#25)#84]
Results [4]: [channel#22, sum(sales#20)#82 AS sales#88, sum(returns#24)#83 AS returns#89, sum(profit#25)#84 AS profit#90]

(85) HashAggregate [codegen id : 12]
Input [4]: [channel#22, sales#88, returns#89, profit#90]
Keys [1]: [channel#22]
Functions [3]: [partial_sum(sales#88), partial_sum(returns#89), partial_sum(profit#90)]
Aggregate Attributes [6]: [sum#91, isEmpty#92, sum#93, isEmpty#94, sum#95, isEmpty#96]
Results [7]: [channel#22, sum#97, isEmpty#98, sum#99, isEmpty#100, sum#101, isEmpty#102]

(86) Exchange
Input [7]: [channel#22, sum#97, isEmpty#98, sum#99, isEmpty#100, sum#101, isEmpty#102]
Arguments: hashpartitioning(channel#22, 5), ENSURE_REQUIREMENTS, [plan_id=9]

(87) HashAggregate [codegen id : 13]
Input [7]: [channel#22, sum#97, isEmpty#98, sum#99, isEmpty#100, sum#101, isEmpty#102]
Keys [1]: [channel#22]
Functions [3]: [sum(sales#88), sum(returns#89), sum(profit#90)]
Aggregate Attributes [3]: [sum(sales#88)#103, sum(returns#89)#104, sum(profit#90)#105]
Results [5]: [channel#22, null AS id#106, sum(sales#88)#103 AS sales#107, sum(returns#89)#104 AS returns#108, sum(profit#90)#105 AS profit#109]

(88) ReusedExchange [Reuses operator id: 81]
Output [8]: [channel#22, id#23, sum#76, isEmpty#77, sum#78, isEmpty#79, sum#80, isEmpty#81]

(89) HashAggregate [codegen id : 19]
Input [8]: [channel#22, id#23, sum#76, isEmpty#77, sum#78, isEmpty#79, sum#80, isEmpty#81]
Keys [2]: [channel#22, id#23]
Functions [3]: [sum(sales#20), sum(returns#24), sum(profit#25)]
Aggregate Attributes [3]: [sum(sales#20)#82, sum(returns#24)#83, sum(profit#25)#84]
Results [3]: [sum(sales#20)#82 AS sales#110, sum(returns#24)#83 AS returns#111, sum(profit#25)#84 AS profit#112]

(90) HashAggregate [codegen id : 19]
Input [3]: [sales#110, returns#111, profit#112]
Keys: []
Functions [3]: [partial_sum(sales#110), partial_sum(returns#111), partial_sum(profit#112)]
Aggregate Attributes [6]: [sum#113, isEmpty#114, sum#115, isEmpty#116, sum#117, isEmpty#118]
Results [6]: [sum#119, isEmpty#120, sum#121, isEmpty#122, sum#123, isEmpty#124]

(91) Exchange
Input [6]: [sum#119, isEmpty#120, sum#121, isEmpty#122, sum#123, isEmpty#124]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=10]

(92) HashAggregate [codegen id : 20]
Input [6]: [sum#119, isEmpty#120, sum#121, isEmpty#122, sum#123, isEmpty#124]
Keys: []
Functions [3]: [sum(sales#110), sum(returns#111), sum(profit#112)]
Aggregate Attributes [3]: [sum(sales#110)#125, sum(returns#111)#126, sum(profit#112)#127]
Results [5]: [null AS channel#128, null AS id#129, sum(sales#110)#125 AS sales#130, sum(returns#111)#126 AS returns#131, sum(profit#112)#127 AS profit#132]

(93) Union

(94) HashAggregate [codegen id : 21]
Input [5]: [channel#22, id#23, sales#85, returns#86, profit#87]
Keys [5]: [channel#22, id#23, sales#85, returns#86, profit#87]
Functions: []
Aggregate Attributes: []
Results [5]: [channel#22, id#23, sales#85, returns#86, profit#87]

(95) Exchange
Input [5]: [channel#22, id#23, sales#85, returns#86, profit#87]
Arguments: hashpartitioning(channel#22, id#23, sales#85, returns#86, profit#87, 5), ENSURE_REQUIREMENTS, [plan_id=11]

(96) HashAggregate [codegen id : 22]
Input [5]: [channel#22, id#23, sales#85, returns#86, profit#87]
Keys [5]: [channel#22, id#23, sales#85, returns#86, profit#87]
Functions: []
Aggregate Attributes: []
Results [5]: [channel#22, id#23, sales#85, returns#86, profit#87]

(97) TakeOrderedAndProject
Input [5]: [channel#22, id#23, sales#85, returns#86, profit#87]
Arguments: 100, [channel#22 ASC NULLS FIRST, id#23 ASC NULLS FIRST], [channel#22, id#23, sales#85, returns#86, profit#87]

