== Physical Plan ==
* ColumnarToRow (122)
+- CometTakeOrderedAndProject (121)
   +- CometHashAggregate (120)
      +- CometExchange (119)
         +- CometHashAggregate (118)
            +- CometUnion (117)
               :- CometHashAggregate (96)
               :  +- CometExchange (95)
               :     +- CometHashAggregate (94)
               :        +- CometUnion (93)
               :           :- CometFilter (64)
               :           :  +- CometHashAggregate (63)
               :           :     +- CometExchange (62)
               :           :        +- CometHashAggregate (61)
               :           :           +- CometProject (60)
               :           :              +- CometBroadcastHashJoin (59)
               :           :                 :- CometProject (54)
               :           :                 :  +- CometBroadcastHashJoin (53)
               :           :                 :     :- CometBroadcastHashJoin (47)
               :           :                 :     :  :- CometFilter (2)
               :           :                 :     :  :  +- CometScan parquet spark_catalog.default.store_sales (1)
               :           :                 :     :  +- CometBroadcastExchange (46)
               :           :                 :     :     +- CometProject (45)
               :           :                 :     :        +- CometBroadcastHashJoin (44)
               :           :                 :     :           :- CometFilter (4)
               :           :                 :     :           :  +- CometScan parquet spark_catalog.default.item (3)
               :           :                 :     :           +- CometBroadcastExchange (43)
               :           :                 :     :              +- CometBroadcastHashJoin (42)
               :           :                 :     :                 :- CometHashAggregate (32)
               :           :                 :     :                 :  +- CometExchange (31)
               :           :                 :     :                 :     +- CometHashAggregate (30)
               :           :                 :     :                 :        +- CometProject (29)
               :           :                 :     :                 :           +- CometBroadcastHashJoin (28)
               :           :                 :     :                 :              :- CometProject (26)
               :           :                 :     :                 :              :  +- CometBroadcastHashJoin (25)
               :           :                 :     :                 :              :     :- CometFilter (6)
               :           :                 :     :                 :              :     :  +- CometScan parquet spark_catalog.default.store_sales (5)
               :           :                 :     :                 :              :     +- CometBroadcastExchange (24)
               :           :                 :     :                 :              :        +- CometBroadcastHashJoin (23)
               :           :                 :     :                 :              :           :- CometFilter (8)
               :           :                 :     :                 :              :           :  +- CometScan parquet spark_catalog.default.item (7)
               :           :                 :     :                 :              :           +- CometBroadcastExchange (22)
               :           :                 :     :                 :              :              +- CometProject (21)
               :           :                 :     :                 :              :                 +- CometBroadcastHashJoin (20)
               :           :                 :     :                 :              :                    :- CometProject (15)
               :           :                 :     :                 :              :                    :  +- CometBroadcastHashJoin (14)
               :           :                 :     :                 :              :                    :     :- CometFilter (10)
               :           :                 :     :                 :              :                    :     :  +- CometScan parquet spark_catalog.default.catalog_sales (9)
               :           :                 :     :                 :              :                    :     +- CometBroadcastExchange (13)
               :           :                 :     :                 :              :                    :        +- CometFilter (12)
               :           :                 :     :                 :              :                    :           +- CometScan parquet spark_catalog.default.item (11)
               :           :                 :     :                 :              :                    +- CometBroadcastExchange (19)
               :           :                 :     :                 :              :                       +- CometProject (18)
               :           :                 :     :                 :              :                          +- CometFilter (17)
               :           :                 :     :                 :              :                             +- CometScan parquet spark_catalog.default.date_dim (16)
               :           :                 :     :                 :              +- ReusedExchange (27)
               :           :                 :     :                 +- CometBroadcastExchange (41)
               :           :                 :     :                    +- CometProject (40)
               :           :                 :     :                       +- CometBroadcastHashJoin (39)
               :           :                 :     :                          :- CometProject (37)
               :           :                 :     :                          :  +- CometBroadcastHashJoin (36)
               :           :                 :     :                          :     :- CometFilter (34)
               :           :                 :     :                          :     :  +- CometScan parquet spark_catalog.default.web_sales (33)
               :           :                 :     :                          :     +- ReusedExchange (35)
               :           :                 :     :                          +- ReusedExchange (38)
               :           :                 :     +- CometBroadcastExchange (52)
               :           :                 :        +- CometBroadcastHashJoin (51)
               :           :                 :           :- CometFilter (49)
               :           :                 :           :  +- CometScan parquet spark_catalog.default.item (48)
               :           :                 :           +- ReusedExchange (50)
               :           :                 +- CometBroadcastExchange (58)
               :           :                    +- CometProject (57)
               :           :                       +- CometFilter (56)
               :           :                          +- CometScan parquet spark_catalog.default.date_dim (55)
               :           :- CometFilter (78)
               :           :  +- CometHashAggregate (77)
               :           :     +- CometExchange (76)
               :           :        +- CometHashAggregate (75)
               :           :           +- CometProject (74)
               :           :              +- CometBroadcastHashJoin (73)
               :           :                 :- CometProject (71)
               :           :                 :  +- CometBroadcastHashJoin (70)
               :           :                 :     :- CometBroadcastHashJoin (68)
               :           :                 :     :  :- CometFilter (66)
               :           :                 :     :  :  +- CometScan parquet spark_catalog.default.catalog_sales (65)
               :           :                 :     :  +- ReusedExchange (67)
               :           :                 :     +- ReusedExchange (69)
               :           :                 +- ReusedExchange (72)
               :           +- CometFilter (92)
               :              +- CometHashAggregate (91)
               :                 +- CometExchange (90)
               :                    +- CometHashAggregate (89)
               :                       +- CometProject (88)
               :                          +- CometBroadcastHashJoin (87)
               :                             :- CometProject (85)
               :                             :  +- CometBroadcastHashJoin (84)
               :                             :     :- CometBroadcastHashJoin (82)
               :                             :     :  :- CometFilter (80)
               :                             :     :  :  +- CometScan parquet spark_catalog.default.web_sales (79)
               :                             :     :  +- ReusedExchange (81)
               :                             :     +- ReusedExchange (83)
               :                             +- ReusedExchange (86)
               :- CometHashAggregate (101)
               :  +- CometExchange (100)
               :     +- CometHashAggregate (99)
               :        +- CometHashAggregate (98)
               :           +- ReusedExchange (97)
               :- CometHashAggregate (106)
               :  +- CometExchange (105)
               :     +- CometHashAggregate (104)
               :        +- CometHashAggregate (103)
               :           +- ReusedExchange (102)
               :- CometHashAggregate (111)
               :  +- CometExchange (110)
               :     +- CometHashAggregate (109)
               :        +- CometHashAggregate (108)
               :           +- ReusedExchange (107)
               +- CometHashAggregate (116)
                  +- CometExchange (115)
                     +- CometHashAggregate (114)
                        +- CometHashAggregate (113)
                           +- ReusedExchange (112)


(1) CometScan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4), dynamicpruningexpression(ss_sold_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Condition : isnotnull(ss_item_sk#1)

(3) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(4) CometFilter
Input [4]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9]
Condition : ((isnotnull(i_brand_id#7) AND isnotnull(i_class_id#8)) AND isnotnull(i_category_id#9))

(5) CometScan parquet spark_catalog.default.store_sales
Output [2]: [ss_item_sk#10, ss_sold_date_sk#11]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#11), dynamicpruningexpression(ss_sold_date_sk#11 IN dynamicpruning#12)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int>

(6) CometFilter
Input [2]: [ss_item_sk#10, ss_sold_date_sk#11]
Condition : isnotnull(ss_item_sk#10)

(7) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(8) CometFilter
Input [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Condition : (((isnotnull(i_item_sk#13) AND isnotnull(i_brand_id#14)) AND isnotnull(i_class_id#15)) AND isnotnull(i_category_id#16))

(9) CometScan parquet spark_catalog.default.catalog_sales
Output [2]: [cs_item_sk#17, cs_sold_date_sk#18]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#18), dynamicpruningexpression(cs_sold_date_sk#18 IN dynamicpruning#19)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int>

(10) CometFilter
Input [2]: [cs_item_sk#17, cs_sold_date_sk#18]
Condition : isnotnull(cs_item_sk#17)

(11) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(12) CometFilter
Input [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Condition : isnotnull(i_item_sk#20)

(13) CometBroadcastExchange
Input [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]

(14) CometBroadcastHashJoin
Left output [2]: [cs_item_sk#17, cs_sold_date_sk#18]
Right output [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [cs_item_sk#17], [i_item_sk#20], Inner, BuildRight

(15) CometProject
Input [6]: [cs_item_sk#17, cs_sold_date_sk#18, i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23], [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23]

(16) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#24, d_year#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(17) CometFilter
Input [2]: [d_date_sk#24, d_year#25]
Condition : (((isnotnull(d_year#25) AND (d_year#25 >= 1999)) AND (d_year#25 <= 2001)) AND isnotnull(d_date_sk#24))

(18) CometProject
Input [2]: [d_date_sk#24, d_year#25]
Arguments: [d_date_sk#24], [d_date_sk#24]

(19) CometBroadcastExchange
Input [1]: [d_date_sk#24]
Arguments: [d_date_sk#24]

(20) CometBroadcastHashJoin
Left output [4]: [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23]
Right output [1]: [d_date_sk#24]
Arguments: [cs_sold_date_sk#18], [d_date_sk#24], Inner, BuildRight

(21) CometProject
Input [5]: [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23, d_date_sk#24]
Arguments: [i_brand_id#21, i_class_id#22, i_category_id#23], [i_brand_id#21, i_class_id#22, i_category_id#23]

(22) CometBroadcastExchange
Input [3]: [i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [i_brand_id#21, i_class_id#22, i_category_id#23]

(23) CometBroadcastHashJoin
Left output [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Right output [3]: [i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [coalesce(i_brand_id#14, 0), isnull(i_brand_id#14), coalesce(i_class_id#15, 0), isnull(i_class_id#15), coalesce(i_category_id#16, 0), isnull(i_category_id#16)], [coalesce(i_brand_id#21, 0), isnull(i_brand_id#21), coalesce(i_class_id#22, 0), isnull(i_class_id#22), coalesce(i_category_id#23, 0), isnull(i_category_id#23)], LeftSemi, BuildRight

(24) CometBroadcastExchange
Input [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Arguments: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]

(25) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#10, ss_sold_date_sk#11]
Right output [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Arguments: [ss_item_sk#10], [i_item_sk#13], Inner, BuildRight

(26) CometProject
Input [6]: [ss_item_sk#10, ss_sold_date_sk#11, i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Arguments: [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16], [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16]

(27) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#26]

(28) CometBroadcastHashJoin
Left output [4]: [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16]
Right output [1]: [d_date_sk#26]
Arguments: [ss_sold_date_sk#11], [d_date_sk#26], Inner, BuildRight

(29) CometProject
Input [5]: [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16, d_date_sk#26]
Arguments: [brand_id#27, class_id#28, category_id#29], [i_brand_id#14 AS brand_id#27, i_class_id#15 AS class_id#28, i_category_id#16 AS category_id#29]

(30) CometHashAggregate
Input [3]: [brand_id#27, class_id#28, category_id#29]
Keys [3]: [brand_id#27, class_id#28, category_id#29]
Functions: []

(31) CometExchange
Input [3]: [brand_id#27, class_id#28, category_id#29]
Arguments: hashpartitioning(brand_id#27, class_id#28, category_id#29, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(32) CometHashAggregate
Input [3]: [brand_id#27, class_id#28, category_id#29]
Keys [3]: [brand_id#27, class_id#28, category_id#29]
Functions: []

(33) CometScan parquet spark_catalog.default.web_sales
Output [2]: [ws_item_sk#30, ws_sold_date_sk#31]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#31), dynamicpruningexpression(ws_sold_date_sk#31 IN dynamicpruning#32)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int>

(34) CometFilter
Input [2]: [ws_item_sk#30, ws_sold_date_sk#31]
Condition : isnotnull(ws_item_sk#30)

(35) ReusedExchange [Reuses operator id: 13]
Output [4]: [i_item_sk#33, i_brand_id#34, i_class_id#35, i_category_id#36]

(36) CometBroadcastHashJoin
Left output [2]: [ws_item_sk#30, ws_sold_date_sk#31]
Right output [4]: [i_item_sk#33, i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [ws_item_sk#30], [i_item_sk#33], Inner, BuildRight

(37) CometProject
Input [6]: [ws_item_sk#30, ws_sold_date_sk#31, i_item_sk#33, i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36], [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36]

(38) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#37]

(39) CometBroadcastHashJoin
Left output [4]: [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36]
Right output [1]: [d_date_sk#37]
Arguments: [ws_sold_date_sk#31], [d_date_sk#37], Inner, BuildRight

(40) CometProject
Input [5]: [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36, d_date_sk#37]
Arguments: [i_brand_id#34, i_class_id#35, i_category_id#36], [i_brand_id#34, i_class_id#35, i_category_id#36]

(41) CometBroadcastExchange
Input [3]: [i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [i_brand_id#34, i_class_id#35, i_category_id#36]

(42) CometBroadcastHashJoin
Left output [3]: [brand_id#27, class_id#28, category_id#29]
Right output [3]: [i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [coalesce(brand_id#27, 0), isnull(brand_id#27), coalesce(class_id#28, 0), isnull(class_id#28), coalesce(category_id#29, 0), isnull(category_id#29)], [coalesce(i_brand_id#34, 0), isnull(i_brand_id#34), coalesce(i_class_id#35, 0), isnull(i_class_id#35), coalesce(i_category_id#36, 0), isnull(i_category_id#36)], LeftSemi, BuildRight

(43) CometBroadcastExchange
Input [3]: [brand_id#27, class_id#28, category_id#29]
Arguments: [brand_id#27, class_id#28, category_id#29]

(44) CometBroadcastHashJoin
Left output [4]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9]
Right output [3]: [brand_id#27, class_id#28, category_id#29]
Arguments: [i_brand_id#7, i_class_id#8, i_category_id#9], [brand_id#27, class_id#28, category_id#29], Inner, BuildRight

(45) CometProject
Input [7]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9, brand_id#27, class_id#28, category_id#29]
Arguments: [ss_item_sk#38], [i_item_sk#6 AS ss_item_sk#38]

(46) CometBroadcastExchange
Input [1]: [ss_item_sk#38]
Arguments: [ss_item_sk#38]

(47) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [1]: [ss_item_sk#38]
Arguments: [ss_item_sk#1], [ss_item_sk#38], LeftSemi, BuildRight

(48) CometScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(49) CometFilter
Input [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Condition : isnotnull(i_item_sk#39)

(50) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#38]

(51) CometBroadcastHashJoin
Left output [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Right output [1]: [ss_item_sk#38]
Arguments: [i_item_sk#39], [ss_item_sk#38], LeftSemi, BuildRight

(52) CometBroadcastExchange
Input [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Arguments: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]

(53) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Arguments: [ss_item_sk#1], [i_item_sk#39], Inner, BuildRight

(54) CometProject
Input [8]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Arguments: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42], [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42]

(55) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#43, d_year#44, d_moy#45]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,11), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(56) CometFilter
Input [3]: [d_date_sk#43, d_year#44, d_moy#45]
Condition : ((((isnotnull(d_year#44) AND isnotnull(d_moy#45)) AND (d_year#44 = 2000)) AND (d_moy#45 = 11)) AND isnotnull(d_date_sk#43))

(57) CometProject
Input [3]: [d_date_sk#43, d_year#44, d_moy#45]
Arguments: [d_date_sk#43], [d_date_sk#43]

(58) CometBroadcastExchange
Input [1]: [d_date_sk#43]
Arguments: [d_date_sk#43]

(59) CometBroadcastHashJoin
Left output [6]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42]
Right output [1]: [d_date_sk#43]
Arguments: [ss_sold_date_sk#4], [d_date_sk#43], Inner, BuildRight

(60) CometProject
Input [7]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42, d_date_sk#43]
Arguments: [ss_quantity#2, ss_list_price#3, i_brand_id#40, i_class_id#41, i_category_id#42], [ss_quantity#2, ss_list_price#3, i_brand_id#40, i_class_id#41, i_category_id#42]

(61) CometHashAggregate
Input [5]: [ss_quantity#2, ss_list_price#3, i_brand_id#40, i_class_id#41, i_category_id#42]
Keys [3]: [i_brand_id#40, i_class_id#41, i_category_id#42]
Functions [2]: [partial_sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), partial_count(1)]

(62) CometExchange
Input [6]: [i_brand_id#40, i_class_id#41, i_category_id#42, sum#46, isEmpty#47, count#48]
Arguments: hashpartitioning(i_brand_id#40, i_class_id#41, i_category_id#42, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(63) CometHashAggregate
Input [6]: [i_brand_id#40, i_class_id#41, i_category_id#42, sum#46, isEmpty#47, count#48]
Keys [3]: [i_brand_id#40, i_class_id#41, i_category_id#42]
Functions [2]: [sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), count(1)]

(64) CometFilter
Input [6]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sales#50, number_sales#51]
Condition : (isnotnull(sales#50) AND (cast(sales#50 as decimal(32,6)) > cast(Subquery scalar-subquery#52, [id=#53] as decimal(32,6))))

(65) CometScan parquet spark_catalog.default.catalog_sales
Output [4]: [cs_item_sk#54, cs_quantity#55, cs_list_price#56, cs_sold_date_sk#57]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#57), dynamicpruningexpression(cs_sold_date_sk#57 IN dynamicpruning#58)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>

(66) CometFilter
Input [4]: [cs_item_sk#54, cs_quantity#55, cs_list_price#56, cs_sold_date_sk#57]
Condition : isnotnull(cs_item_sk#54)

(67) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#59]

(68) CometBroadcastHashJoin
Left output [4]: [cs_item_sk#54, cs_quantity#55, cs_list_price#56, cs_sold_date_sk#57]
Right output [1]: [ss_item_sk#59]
Arguments: [cs_item_sk#54], [ss_item_sk#59], LeftSemi, BuildRight

(69) ReusedExchange [Reuses operator id: 52]
Output [4]: [i_item_sk#60, i_brand_id#61, i_class_id#62, i_category_id#63]

(70) CometBroadcastHashJoin
Left output [4]: [cs_item_sk#54, cs_quantity#55, cs_list_price#56, cs_sold_date_sk#57]
Right output [4]: [i_item_sk#60, i_brand_id#61, i_class_id#62, i_category_id#63]
Arguments: [cs_item_sk#54], [i_item_sk#60], Inner, BuildRight

(71) CometProject
Input [8]: [cs_item_sk#54, cs_quantity#55, cs_list_price#56, cs_sold_date_sk#57, i_item_sk#60, i_brand_id#61, i_class_id#62, i_category_id#63]
Arguments: [cs_quantity#55, cs_list_price#56, cs_sold_date_sk#57, i_brand_id#61, i_class_id#62, i_category_id#63], [cs_quantity#55, cs_list_price#56, cs_sold_date_sk#57, i_brand_id#61, i_class_id#62, i_category_id#63]

(72) ReusedExchange [Reuses operator id: 58]
Output [1]: [d_date_sk#64]

(73) CometBroadcastHashJoin
Left output [6]: [cs_quantity#55, cs_list_price#56, cs_sold_date_sk#57, i_brand_id#61, i_class_id#62, i_category_id#63]
Right output [1]: [d_date_sk#64]
Arguments: [cs_sold_date_sk#57], [d_date_sk#64], Inner, BuildRight

(74) CometProject
Input [7]: [cs_quantity#55, cs_list_price#56, cs_sold_date_sk#57, i_brand_id#61, i_class_id#62, i_category_id#63, d_date_sk#64]
Arguments: [cs_quantity#55, cs_list_price#56, i_brand_id#61, i_class_id#62, i_category_id#63], [cs_quantity#55, cs_list_price#56, i_brand_id#61, i_class_id#62, i_category_id#63]

(75) CometHashAggregate
Input [5]: [cs_quantity#55, cs_list_price#56, i_brand_id#61, i_class_id#62, i_category_id#63]
Keys [3]: [i_brand_id#61, i_class_id#62, i_category_id#63]
Functions [2]: [partial_sum((cast(cs_quantity#55 as decimal(10,0)) * cs_list_price#56)), partial_count(1)]

(76) CometExchange
Input [6]: [i_brand_id#61, i_class_id#62, i_category_id#63, sum#65, isEmpty#66, count#67]
Arguments: hashpartitioning(i_brand_id#61, i_class_id#62, i_category_id#63, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(77) CometHashAggregate
Input [6]: [i_brand_id#61, i_class_id#62, i_category_id#63, sum#65, isEmpty#66, count#67]
Keys [3]: [i_brand_id#61, i_class_id#62, i_category_id#63]
Functions [2]: [sum((cast(cs_quantity#55 as decimal(10,0)) * cs_list_price#56)), count(1)]

(78) CometFilter
Input [6]: [channel#68, i_brand_id#61, i_class_id#62, i_category_id#63, sales#69, number_sales#70]
Condition : (isnotnull(sales#69) AND (cast(sales#69 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#52, [id=#53] as decimal(32,6))))

(79) CometScan parquet spark_catalog.default.web_sales
Output [4]: [ws_item_sk#71, ws_quantity#72, ws_list_price#73, ws_sold_date_sk#74]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#74), dynamicpruningexpression(ws_sold_date_sk#74 IN dynamicpruning#75)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>

(80) CometFilter
Input [4]: [ws_item_sk#71, ws_quantity#72, ws_list_price#73, ws_sold_date_sk#74]
Condition : isnotnull(ws_item_sk#71)

(81) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#76]

(82) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#71, ws_quantity#72, ws_list_price#73, ws_sold_date_sk#74]
Right output [1]: [ss_item_sk#76]
Arguments: [ws_item_sk#71], [ss_item_sk#76], LeftSemi, BuildRight

(83) ReusedExchange [Reuses operator id: 52]
Output [4]: [i_item_sk#77, i_brand_id#78, i_class_id#79, i_category_id#80]

(84) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#71, ws_quantity#72, ws_list_price#73, ws_sold_date_sk#74]
Right output [4]: [i_item_sk#77, i_brand_id#78, i_class_id#79, i_category_id#80]
Arguments: [ws_item_sk#71], [i_item_sk#77], Inner, BuildRight

(85) CometProject
Input [8]: [ws_item_sk#71, ws_quantity#72, ws_list_price#73, ws_sold_date_sk#74, i_item_sk#77, i_brand_id#78, i_class_id#79, i_category_id#80]
Arguments: [ws_quantity#72, ws_list_price#73, ws_sold_date_sk#74, i_brand_id#78, i_class_id#79, i_category_id#80], [ws_quantity#72, ws_list_price#73, ws_sold_date_sk#74, i_brand_id#78, i_class_id#79, i_category_id#80]

(86) ReusedExchange [Reuses operator id: 58]
Output [1]: [d_date_sk#81]

(87) CometBroadcastHashJoin
Left output [6]: [ws_quantity#72, ws_list_price#73, ws_sold_date_sk#74, i_brand_id#78, i_class_id#79, i_category_id#80]
Right output [1]: [d_date_sk#81]
Arguments: [ws_sold_date_sk#74], [d_date_sk#81], Inner, BuildRight

(88) CometProject
Input [7]: [ws_quantity#72, ws_list_price#73, ws_sold_date_sk#74, i_brand_id#78, i_class_id#79, i_category_id#80, d_date_sk#81]
Arguments: [ws_quantity#72, ws_list_price#73, i_brand_id#78, i_class_id#79, i_category_id#80], [ws_quantity#72, ws_list_price#73, i_brand_id#78, i_class_id#79, i_category_id#80]

(89) CometHashAggregate
Input [5]: [ws_quantity#72, ws_list_price#73, i_brand_id#78, i_class_id#79, i_category_id#80]
Keys [3]: [i_brand_id#78, i_class_id#79, i_category_id#80]
Functions [2]: [partial_sum((cast(ws_quantity#72 as decimal(10,0)) * ws_list_price#73)), partial_count(1)]

(90) CometExchange
Input [6]: [i_brand_id#78, i_class_id#79, i_category_id#80, sum#82, isEmpty#83, count#84]
Arguments: hashpartitioning(i_brand_id#78, i_class_id#79, i_category_id#80, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(91) CometHashAggregate
Input [6]: [i_brand_id#78, i_class_id#79, i_category_id#80, sum#82, isEmpty#83, count#84]
Keys [3]: [i_brand_id#78, i_class_id#79, i_category_id#80]
Functions [2]: [sum((cast(ws_quantity#72 as decimal(10,0)) * ws_list_price#73)), count(1)]

(92) CometFilter
Input [6]: [channel#85, i_brand_id#78, i_class_id#79, i_category_id#80, sales#86, number_sales#87]
Condition : (isnotnull(sales#86) AND (cast(sales#86 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#52, [id=#53] as decimal(32,6))))

(93) CometUnion
Child 0 Input [6]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sales#50, number_sales#51]
Child 1 Input [6]: [channel#68, i_brand_id#61, i_class_id#62, i_category_id#63, sales#69, number_sales#70]
Child 2 Input [6]: [channel#85, i_brand_id#78, i_class_id#79, i_category_id#80, sales#86, number_sales#87]

(94) CometHashAggregate
Input [6]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sales#50, number_sales#51]
Keys [4]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42]
Functions [2]: [partial_sum(sales#50), partial_sum(number_sales#51)]

(95) CometExchange
Input [7]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sum#88, isEmpty#89, sum#90]
Arguments: hashpartitioning(channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(96) CometHashAggregate
Input [7]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sum#88, isEmpty#89, sum#90]
Keys [4]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42]
Functions [2]: [sum(sales#50), sum(number_sales#51)]

(97) ReusedExchange [Reuses operator id: 95]
Output [7]: [channel#49, i_brand_id#91, i_class_id#92, i_category_id#93, sum#88, isEmpty#89, sum#90]

(98) CometHashAggregate
Input [7]: [channel#49, i_brand_id#91, i_class_id#92, i_category_id#93, sum#88, isEmpty#89, sum#90]
Keys [4]: [channel#49, i_brand_id#91, i_class_id#92, i_category_id#93]
Functions [2]: [sum(sales#50), sum(number_sales#51)]

(99) CometHashAggregate
Input [5]: [channel#49, i_brand_id#91, i_class_id#92, sum_sales#94, number_sales#95]
Keys [3]: [channel#49, i_brand_id#91, i_class_id#92]
Functions [2]: [partial_sum(sum_sales#94), partial_sum(number_sales#95)]

(100) CometExchange
Input [6]: [channel#49, i_brand_id#91, i_class_id#92, sum#96, isEmpty#97, sum#98]
Arguments: hashpartitioning(channel#49, i_brand_id#91, i_class_id#92, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(101) CometHashAggregate
Input [6]: [channel#49, i_brand_id#91, i_class_id#92, sum#96, isEmpty#97, sum#98]
Keys [3]: [channel#49, i_brand_id#91, i_class_id#92]
Functions [2]: [sum(sum_sales#94), sum(number_sales#95)]

(102) ReusedExchange [Reuses operator id: 95]
Output [7]: [channel#49, i_brand_id#99, i_class_id#100, i_category_id#101, sum#88, isEmpty#89, sum#90]

(103) CometHashAggregate
Input [7]: [channel#49, i_brand_id#99, i_class_id#100, i_category_id#101, sum#88, isEmpty#89, sum#90]
Keys [4]: [channel#49, i_brand_id#99, i_class_id#100, i_category_id#101]
Functions [2]: [sum(sales#50), sum(number_sales#51)]

(104) CometHashAggregate
Input [4]: [channel#49, i_brand_id#99, sum_sales#102, number_sales#103]
Keys [2]: [channel#49, i_brand_id#99]
Functions [2]: [partial_sum(sum_sales#102), partial_sum(number_sales#103)]

(105) CometExchange
Input [5]: [channel#49, i_brand_id#99, sum#104, isEmpty#105, sum#106]
Arguments: hashpartitioning(channel#49, i_brand_id#99, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=7]

(106) CometHashAggregate
Input [5]: [channel#49, i_brand_id#99, sum#104, isEmpty#105, sum#106]
Keys [2]: [channel#49, i_brand_id#99]
Functions [2]: [sum(sum_sales#102), sum(number_sales#103)]

(107) ReusedExchange [Reuses operator id: 95]
Output [7]: [channel#49, i_brand_id#107, i_class_id#108, i_category_id#109, sum#88, isEmpty#89, sum#90]

(108) CometHashAggregate
Input [7]: [channel#49, i_brand_id#107, i_class_id#108, i_category_id#109, sum#88, isEmpty#89, sum#90]
Keys [4]: [channel#49, i_brand_id#107, i_class_id#108, i_category_id#109]
Functions [2]: [sum(sales#50), sum(number_sales#51)]

(109) CometHashAggregate
Input [3]: [channel#49, sum_sales#110, number_sales#111]
Keys [1]: [channel#49]
Functions [2]: [partial_sum(sum_sales#110), partial_sum(number_sales#111)]

(110) CometExchange
Input [4]: [channel#49, sum#112, isEmpty#113, sum#114]
Arguments: hashpartitioning(channel#49, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=8]

(111) CometHashAggregate
Input [4]: [channel#49, sum#112, isEmpty#113, sum#114]
Keys [1]: [channel#49]
Functions [2]: [sum(sum_sales#110), sum(number_sales#111)]

(112) ReusedExchange [Reuses operator id: 95]
Output [7]: [channel#49, i_brand_id#115, i_class_id#116, i_category_id#117, sum#88, isEmpty#89, sum#90]

(113) CometHashAggregate
Input [7]: [channel#49, i_brand_id#115, i_class_id#116, i_category_id#117, sum#88, isEmpty#89, sum#90]
Keys [4]: [channel#49, i_brand_id#115, i_class_id#116, i_category_id#117]
Functions [2]: [sum(sales#50), sum(number_sales#51)]

(114) CometHashAggregate
Input [2]: [sum_sales#118, number_sales#119]
Keys: []
Functions [2]: [partial_sum(sum_sales#118), partial_sum(number_sales#119)]

(115) CometExchange
Input [3]: [sum#120, isEmpty#121, sum#122]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=9]

(116) CometHashAggregate
Input [3]: [sum#120, isEmpty#121, sum#122]
Keys: []
Functions [2]: [sum(sum_sales#118), sum(number_sales#119)]

(117) CometUnion
Child 0 Input [6]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sum_sales#123, number_sales#124]
Child 1 Input [6]: [channel#49, i_brand_id#91, i_class_id#92, i_category_id#125, sum(sum_sales)#126, sum(number_sales)#127]
Child 2 Input [6]: [channel#49, i_brand_id#99, i_class_id#128, i_category_id#129, sum(sum_sales)#130, sum(number_sales)#131]
Child 3 Input [6]: [channel#49, i_brand_id#132, i_class_id#133, i_category_id#134, sum(sum_sales)#135, sum(number_sales)#136]
Child 4 Input [6]: [channel#137, i_brand_id#138, i_class_id#139, i_category_id#140, sum(sum_sales)#141, sum(number_sales)#142]

(118) CometHashAggregate
Input [6]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sum_sales#123, number_sales#124]
Keys [6]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sum_sales#123, number_sales#124]
Functions: []

(119) CometExchange
Input [6]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sum_sales#123, number_sales#124]
Arguments: hashpartitioning(channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sum_sales#123, number_sales#124, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=10]

(120) CometHashAggregate
Input [6]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sum_sales#123, number_sales#124]
Keys [6]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sum_sales#123, number_sales#124]
Functions: []

(121) CometTakeOrderedAndProject
Input [6]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sum_sales#123, number_sales#124]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[channel#49 ASC NULLS FIRST,i_brand_id#40 ASC NULLS FIRST,i_class_id#41 ASC NULLS FIRST,i_category_id#42 ASC NULLS FIRST], output=[channel#49,i_brand_id#40,i_class_id#41,i_category_id#42,sum_sales#123,number_sales#124]), [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sum_sales#123, number_sales#124], 100, [channel#49 ASC NULLS FIRST, i_brand_id#40 ASC NULLS FIRST, i_class_id#41 ASC NULLS FIRST, i_category_id#42 ASC NULLS FIRST], [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sum_sales#123, number_sales#124]

(122) ColumnarToRow [codegen id : 1]
Input [6]: [channel#49, i_brand_id#40, i_class_id#41, i_category_id#42, sum_sales#123, number_sales#124]

===== Subqueries =====

Subquery:1 Hosting operator id = 64 Hosting Expression = Subquery scalar-subquery#52, [id=#53]
* ColumnarToRow (142)
+- CometHashAggregate (141)
   +- CometExchange (140)
      +- CometHashAggregate (139)
         +- CometUnion (138)
            :- CometProject (126)
            :  +- CometBroadcastHashJoin (125)
            :     :- CometScan parquet spark_catalog.default.store_sales (123)
            :     +- ReusedExchange (124)
            :- CometProject (133)
            :  +- CometBroadcastHashJoin (132)
            :     :- CometScan parquet spark_catalog.default.catalog_sales (127)
            :     +- CometBroadcastExchange (131)
            :        +- CometProject (130)
            :           +- CometFilter (129)
            :              +- CometScan parquet spark_catalog.default.date_dim (128)
            +- CometProject (137)
               +- CometBroadcastHashJoin (136)
                  :- CometScan parquet spark_catalog.default.web_sales (134)
                  +- ReusedExchange (135)


(123) CometScan parquet spark_catalog.default.store_sales
Output [3]: [ss_quantity#143, ss_list_price#144, ss_sold_date_sk#145]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#145), dynamicpruningexpression(ss_sold_date_sk#145 IN dynamicpruning#146)]
ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>

(124) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#147]

(125) CometBroadcastHashJoin
Left output [3]: [ss_quantity#143, ss_list_price#144, ss_sold_date_sk#145]
Right output [1]: [d_date_sk#147]
Arguments: [ss_sold_date_sk#145], [d_date_sk#147], Inner, BuildRight

(126) CometProject
Input [4]: [ss_quantity#143, ss_list_price#144, ss_sold_date_sk#145, d_date_sk#147]
Arguments: [quantity#148, list_price#149], [ss_quantity#143 AS quantity#148, ss_list_price#144 AS list_price#149]

(127) CometScan parquet spark_catalog.default.catalog_sales
Output [3]: [cs_quantity#150, cs_list_price#151, cs_sold_date_sk#152]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#152), dynamicpruningexpression(cs_sold_date_sk#152 IN dynamicpruning#153)]
ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>

(128) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#154, d_year#155]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(129) CometFilter
Input [2]: [d_date_sk#154, d_year#155]
Condition : (((isnotnull(d_year#155) AND (d_year#155 >= 1998)) AND (d_year#155 <= 2000)) AND isnotnull(d_date_sk#154))

(130) CometProject
Input [2]: [d_date_sk#154, d_year#155]
Arguments: [d_date_sk#154], [d_date_sk#154]

(131) CometBroadcastExchange
Input [1]: [d_date_sk#154]
Arguments: [d_date_sk#154]

(132) CometBroadcastHashJoin
Left output [3]: [cs_quantity#150, cs_list_price#151, cs_sold_date_sk#152]
Right output [1]: [d_date_sk#154]
Arguments: [cs_sold_date_sk#152], [d_date_sk#154], Inner, BuildRight

(133) CometProject
Input [4]: [cs_quantity#150, cs_list_price#151, cs_sold_date_sk#152, d_date_sk#154]
Arguments: [quantity#156, list_price#157], [cs_quantity#150 AS quantity#156, cs_list_price#151 AS list_price#157]

(134) CometScan parquet spark_catalog.default.web_sales
Output [3]: [ws_quantity#158, ws_list_price#159, ws_sold_date_sk#160]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#160), dynamicpruningexpression(ws_sold_date_sk#160 IN dynamicpruning#161)]
ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>

(135) ReusedExchange [Reuses operator id: 131]
Output [1]: [d_date_sk#162]

(136) CometBroadcastHashJoin
Left output [3]: [ws_quantity#158, ws_list_price#159, ws_sold_date_sk#160]
Right output [1]: [d_date_sk#162]
Arguments: [ws_sold_date_sk#160], [d_date_sk#162], Inner, BuildRight

(137) CometProject
Input [4]: [ws_quantity#158, ws_list_price#159, ws_sold_date_sk#160, d_date_sk#162]
Arguments: [quantity#163, list_price#164], [ws_quantity#158 AS quantity#163, ws_list_price#159 AS list_price#164]

(138) CometUnion
Child 0 Input [2]: [quantity#148, list_price#149]
Child 1 Input [2]: [quantity#156, list_price#157]
Child 2 Input [2]: [quantity#163, list_price#164]

(139) CometHashAggregate
Input [2]: [quantity#148, list_price#149]
Keys: []
Functions [1]: [partial_avg((cast(quantity#148 as decimal(10,0)) * list_price#149))]

(140) CometExchange
Input [2]: [sum#165, count#166]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=11]

(141) CometHashAggregate
Input [2]: [sum#165, count#166]
Keys: []
Functions [1]: [avg((cast(quantity#148 as decimal(10,0)) * list_price#149))]

(142) ColumnarToRow [codegen id : 1]
Input [1]: [average_sales#167]

Subquery:2 Hosting operator id = 123 Hosting Expression = ss_sold_date_sk#145 IN dynamicpruning#12

Subquery:3 Hosting operator id = 127 Hosting Expression = cs_sold_date_sk#152 IN dynamicpruning#153
BroadcastExchange (147)
+- * ColumnarToRow (146)
   +- CometProject (145)
      +- CometFilter (144)
         +- CometScan parquet spark_catalog.default.date_dim (143)


(143) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#154, d_year#155]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1998), LessThanOrEqual(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(144) CometFilter
Input [2]: [d_date_sk#154, d_year#155]
Condition : (((isnotnull(d_year#155) AND (d_year#155 >= 1998)) AND (d_year#155 <= 2000)) AND isnotnull(d_date_sk#154))

(145) CometProject
Input [2]: [d_date_sk#154, d_year#155]
Arguments: [d_date_sk#154], [d_date_sk#154]

(146) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#154]

(147) BroadcastExchange
Input [1]: [d_date_sk#154]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=12]

Subquery:4 Hosting operator id = 134 Hosting Expression = ws_sold_date_sk#160 IN dynamicpruning#153

Subquery:5 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#4 IN dynamicpruning#5
BroadcastExchange (152)
+- * ColumnarToRow (151)
   +- CometProject (150)
      +- CometFilter (149)
         +- CometScan parquet spark_catalog.default.date_dim (148)


(148) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#43, d_year#44, d_moy#45]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,11), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(149) CometFilter
Input [3]: [d_date_sk#43, d_year#44, d_moy#45]
Condition : ((((isnotnull(d_year#44) AND isnotnull(d_moy#45)) AND (d_year#44 = 2000)) AND (d_moy#45 = 11)) AND isnotnull(d_date_sk#43))

(150) CometProject
Input [3]: [d_date_sk#43, d_year#44, d_moy#45]
Arguments: [d_date_sk#43], [d_date_sk#43]

(151) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#43]

(152) BroadcastExchange
Input [1]: [d_date_sk#43]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=13]

Subquery:6 Hosting operator id = 5 Hosting Expression = ss_sold_date_sk#11 IN dynamicpruning#12
BroadcastExchange (157)
+- * ColumnarToRow (156)
   +- CometProject (155)
      +- CometFilter (154)
         +- CometScan parquet spark_catalog.default.date_dim (153)


(153) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#26, d_year#168]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(154) CometFilter
Input [2]: [d_date_sk#26, d_year#168]
Condition : (((isnotnull(d_year#168) AND (d_year#168 >= 1999)) AND (d_year#168 <= 2001)) AND isnotnull(d_date_sk#26))

(155) CometProject
Input [2]: [d_date_sk#26, d_year#168]
Arguments: [d_date_sk#26], [d_date_sk#26]

(156) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#26]

(157) BroadcastExchange
Input [1]: [d_date_sk#26]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=14]

Subquery:7 Hosting operator id = 9 Hosting Expression = cs_sold_date_sk#18 IN dynamicpruning#12

Subquery:8 Hosting operator id = 33 Hosting Expression = ws_sold_date_sk#31 IN dynamicpruning#12

Subquery:9 Hosting operator id = 78 Hosting Expression = ReusedSubquery Subquery scalar-subquery#52, [id=#53]

Subquery:10 Hosting operator id = 65 Hosting Expression = cs_sold_date_sk#57 IN dynamicpruning#5

Subquery:11 Hosting operator id = 92 Hosting Expression = ReusedSubquery Subquery scalar-subquery#52, [id=#53]

Subquery:12 Hosting operator id = 79 Hosting Expression = ws_sold_date_sk#74 IN dynamicpruning#5


