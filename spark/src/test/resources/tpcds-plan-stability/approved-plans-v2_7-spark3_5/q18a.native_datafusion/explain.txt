== Physical Plan ==
* CometColumnarToRow (146)
+- CometTakeOrderedAndProject (145)
   +- CometUnion (144)
      :- CometHashAggregate (40)
      :  +- CometExchange (39)
      :     +- CometHashAggregate (38)
      :        +- CometProject (37)
      :           +- CometBroadcastHashJoin (36)
      :              :- CometProject (31)
      :              :  +- CometBroadcastHashJoin (30)
      :              :     :- CometProject (25)
      :              :     :  +- CometBroadcastHashJoin (24)
      :              :     :     :- CometProject (19)
      :              :     :     :  +- CometBroadcastHashJoin (18)
      :              :     :     :     :- CometProject (14)
      :              :     :     :     :  +- CometBroadcastHashJoin (13)
      :              :     :     :     :     :- CometProject (8)
      :              :     :     :     :     :  +- CometBroadcastHashJoin (7)
      :              :     :     :     :     :     :- CometFilter (2)
      :              :     :     :     :     :     :  +- CometNativeScan parquet spark_catalog.default.catalog_sales (1)
      :              :     :     :     :     :     +- CometBroadcastExchange (6)
      :              :     :     :     :     :        +- CometProject (5)
      :              :     :     :     :     :           +- CometFilter (4)
      :              :     :     :     :     :              +- CometNativeScan parquet spark_catalog.default.customer_demographics (3)
      :              :     :     :     :     +- CometBroadcastExchange (12)
      :              :     :     :     :        +- CometProject (11)
      :              :     :     :     :           +- CometFilter (10)
      :              :     :     :     :              +- CometNativeScan parquet spark_catalog.default.customer (9)
      :              :     :     :     +- CometBroadcastExchange (17)
      :              :     :     :        +- CometFilter (16)
      :              :     :     :           +- CometNativeScan parquet spark_catalog.default.customer_demographics (15)
      :              :     :     +- CometBroadcastExchange (23)
      :              :     :        +- CometProject (22)
      :              :     :           +- CometFilter (21)
      :              :     :              +- CometNativeScan parquet spark_catalog.default.customer_address (20)
      :              :     +- CometBroadcastExchange (29)
      :              :        +- CometProject (28)
      :              :           +- CometFilter (27)
      :              :              +- CometNativeScan parquet spark_catalog.default.date_dim (26)
      :              +- CometBroadcastExchange (35)
      :                 +- CometProject (34)
      :                    +- CometFilter (33)
      :                       +- CometNativeScan parquet spark_catalog.default.item (32)
      :- CometHashAggregate (66)
      :  +- CometExchange (65)
      :     +- CometHashAggregate (64)
      :        +- CometProject (63)
      :           +- CometBroadcastHashJoin (62)
      :              :- CometProject (60)
      :              :  +- CometBroadcastHashJoin (59)
      :              :     :- CometProject (57)
      :              :     :  +- CometBroadcastHashJoin (56)
      :              :     :     :- CometProject (51)
      :              :     :     :  +- CometBroadcastHashJoin (50)
      :              :     :     :     :- CometProject (48)
      :              :     :     :     :  +- CometBroadcastHashJoin (47)
      :              :     :     :     :     :- CometProject (45)
      :              :     :     :     :     :  +- CometBroadcastHashJoin (44)
      :              :     :     :     :     :     :- CometFilter (42)
      :              :     :     :     :     :     :  +- CometNativeScan parquet spark_catalog.default.catalog_sales (41)
      :              :     :     :     :     :     +- ReusedExchange (43)
      :              :     :     :     :     +- ReusedExchange (46)
      :              :     :     :     +- ReusedExchange (49)
      :              :     :     +- CometBroadcastExchange (55)
      :              :     :        +- CometProject (54)
      :              :     :           +- CometFilter (53)
      :              :     :              +- CometNativeScan parquet spark_catalog.default.customer_address (52)
      :              :     +- ReusedExchange (58)
      :              +- ReusedExchange (61)
      :- CometHashAggregate (92)
      :  +- CometExchange (91)
      :     +- CometHashAggregate (90)
      :        +- CometProject (89)
      :           +- CometBroadcastHashJoin (88)
      :              :- CometProject (86)
      :              :  +- CometBroadcastHashJoin (85)
      :              :     :- CometProject (83)
      :              :     :  +- CometBroadcastHashJoin (82)
      :              :     :     :- CometProject (77)
      :              :     :     :  +- CometBroadcastHashJoin (76)
      :              :     :     :     :- CometProject (74)
      :              :     :     :     :  +- CometBroadcastHashJoin (73)
      :              :     :     :     :     :- CometProject (71)
      :              :     :     :     :     :  +- CometBroadcastHashJoin (70)
      :              :     :     :     :     :     :- CometFilter (68)
      :              :     :     :     :     :     :  +- CometNativeScan parquet spark_catalog.default.catalog_sales (67)
      :              :     :     :     :     :     +- ReusedExchange (69)
      :              :     :     :     :     +- ReusedExchange (72)
      :              :     :     :     +- ReusedExchange (75)
      :              :     :     +- CometBroadcastExchange (81)
      :              :     :        +- CometProject (80)
      :              :     :           +- CometFilter (79)
      :              :     :              +- CometNativeScan parquet spark_catalog.default.customer_address (78)
      :              :     +- ReusedExchange (84)
      :              +- ReusedExchange (87)
      :- CometHashAggregate (118)
      :  +- CometExchange (117)
      :     +- CometHashAggregate (116)
      :        +- CometProject (115)
      :           +- CometBroadcastHashJoin (114)
      :              :- CometProject (112)
      :              :  +- CometBroadcastHashJoin (111)
      :              :     :- CometProject (109)
      :              :     :  +- CometBroadcastHashJoin (108)
      :              :     :     :- CometProject (103)
      :              :     :     :  +- CometBroadcastHashJoin (102)
      :              :     :     :     :- CometProject (100)
      :              :     :     :     :  +- CometBroadcastHashJoin (99)
      :              :     :     :     :     :- CometProject (97)
      :              :     :     :     :     :  +- CometBroadcastHashJoin (96)
      :              :     :     :     :     :     :- CometFilter (94)
      :              :     :     :     :     :     :  +- CometNativeScan parquet spark_catalog.default.catalog_sales (93)
      :              :     :     :     :     :     +- ReusedExchange (95)
      :              :     :     :     :     +- ReusedExchange (98)
      :              :     :     :     +- ReusedExchange (101)
      :              :     :     +- CometBroadcastExchange (107)
      :              :     :        +- CometProject (106)
      :              :     :           +- CometFilter (105)
      :              :     :              +- CometNativeScan parquet spark_catalog.default.customer_address (104)
      :              :     +- ReusedExchange (110)
      :              +- ReusedExchange (113)
      +- CometHashAggregate (143)
         +- CometExchange (142)
            +- CometHashAggregate (141)
               +- CometProject (140)
                  +- CometBroadcastHashJoin (139)
                     :- CometProject (135)
                     :  +- CometBroadcastHashJoin (134)
                     :     :- CometProject (132)
                     :     :  +- CometBroadcastHashJoin (131)
                     :     :     :- CometProject (129)
                     :     :     :  +- CometBroadcastHashJoin (128)
                     :     :     :     :- CometProject (126)
                     :     :     :     :  +- CometBroadcastHashJoin (125)
                     :     :     :     :     :- CometProject (123)
                     :     :     :     :     :  +- CometBroadcastHashJoin (122)
                     :     :     :     :     :     :- CometFilter (120)
                     :     :     :     :     :     :  +- CometNativeScan parquet spark_catalog.default.catalog_sales (119)
                     :     :     :     :     :     +- ReusedExchange (121)
                     :     :     :     :     +- ReusedExchange (124)
                     :     :     :     +- ReusedExchange (127)
                     :     :     +- ReusedExchange (130)
                     :     +- ReusedExchange (133)
                     +- CometBroadcastExchange (138)
                        +- CometFilter (137)
                           +- CometNativeScan parquet spark_catalog.default.item (136)


(1) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [9]: [cs_bill_customer_sk#1, cs_bill_cdemo_sk#2, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#9)]
PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_net_profit:decimal(7,2)>

(2) CometFilter
Input [9]: [cs_bill_customer_sk#1, cs_bill_cdemo_sk#2, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9]
Condition : ((isnotnull(cs_bill_cdemo_sk#2) AND isnotnull(cs_bill_customer_sk#1)) AND isnotnull(cs_item_sk#3))

(3) CometNativeScan parquet spark_catalog.default.customer_demographics
Output [4]: [cd_demo_sk#10, cd_gender#11, cd_education_status#12, cd_dep_count#13]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_education_status:string,cd_dep_count:int>

(4) CometFilter
Input [4]: [cd_demo_sk#10, cd_gender#11, cd_education_status#12, cd_dep_count#13]
Condition : (((staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, cd_gender#11, 1, true, false, true) = M) AND (staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, cd_education_status#12, 20, true, false, true) = College             )) AND isnotnull(cd_demo_sk#10))

(5) CometProject
Input [4]: [cd_demo_sk#10, cd_gender#11, cd_education_status#12, cd_dep_count#13]
Arguments: [cd_demo_sk#10, cd_dep_count#13], [cd_demo_sk#10, cd_dep_count#13]

(6) CometBroadcastExchange
Input [2]: [cd_demo_sk#10, cd_dep_count#13]
Arguments: [cd_demo_sk#10, cd_dep_count#13]

(7) CometBroadcastHashJoin
Left output [9]: [cs_bill_customer_sk#1, cs_bill_cdemo_sk#2, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9]
Right output [2]: [cd_demo_sk#10, cd_dep_count#13]
Arguments: [cs_bill_cdemo_sk#2], [cd_demo_sk#10], Inner, BuildRight

(8) CometProject
Input [11]: [cs_bill_customer_sk#1, cs_bill_cdemo_sk#2, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_demo_sk#10, cd_dep_count#13]
Arguments: [cs_bill_customer_sk#1, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13], [cs_bill_customer_sk#1, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13]

(9) CometNativeScan parquet spark_catalog.default.customer
Output [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [In(c_birth_month, [1,10,12,4,5,9]), IsNotNull(c_customer_sk), IsNotNull(c_current_cdemo_sk), IsNotNull(c_current_addr_sk)]
ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int,c_birth_month:int,c_birth_year:int>

(10) CometFilter
Input [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]
Condition : (((c_birth_month#17 IN (9,5,12,4,1,10) AND isnotnull(c_customer_sk#14)) AND isnotnull(c_current_cdemo_sk#15)) AND isnotnull(c_current_addr_sk#16))

(11) CometProject
Input [5]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_month#17, c_birth_year#18]
Arguments: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18], [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]

(12) CometBroadcastExchange
Input [4]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Arguments: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]

(13) CometBroadcastHashJoin
Left output [9]: [cs_bill_customer_sk#1, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13]
Right output [4]: [c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Arguments: [cs_bill_customer_sk#1], [c_customer_sk#14], Inner, BuildRight

(14) CometProject
Input [13]: [cs_bill_customer_sk#1, cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13, c_customer_sk#14, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Arguments: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18], [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]

(15) CometNativeScan parquet spark_catalog.default.customer_demographics
Output [1]: [cd_demo_sk#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_demographics]
PushedFilters: [IsNotNull(cd_demo_sk)]
ReadSchema: struct<cd_demo_sk:int>

(16) CometFilter
Input [1]: [cd_demo_sk#19]
Condition : isnotnull(cd_demo_sk#19)

(17) CometBroadcastExchange
Input [1]: [cd_demo_sk#19]
Arguments: [cd_demo_sk#19]

(18) CometBroadcastHashJoin
Left output [11]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18]
Right output [1]: [cd_demo_sk#19]
Arguments: [c_current_cdemo_sk#15], [cd_demo_sk#19], Inner, BuildRight

(19) CometProject
Input [12]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13, c_current_cdemo_sk#15, c_current_addr_sk#16, c_birth_year#18, cd_demo_sk#19]
Arguments: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18], [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18]

(20) CometNativeScan parquet spark_catalog.default.customer_address
Output [4]: [ca_address_sk#20, ca_county#21, ca_state#22, ca_country#23]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string,ca_country:string>

(21) CometFilter
Input [4]: [ca_address_sk#20, ca_county#21, ca_state#22, ca_country#23]
Condition : (staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, ca_state#22, 2, true, false, true) IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#20))

(22) CometProject
Input [4]: [ca_address_sk#20, ca_county#21, ca_state#22, ca_country#23]
Arguments: [ca_address_sk#20, ca_county#21, ca_state#24, ca_country#23], [ca_address_sk#20, ca_county#21, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, ca_state#22, 2, true, false, true) AS ca_state#24, ca_country#23]

(23) CometBroadcastExchange
Input [4]: [ca_address_sk#20, ca_county#21, ca_state#24, ca_country#23]
Arguments: [ca_address_sk#20, ca_county#21, ca_state#24, ca_country#23]

(24) CometBroadcastHashJoin
Left output [10]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18]
Right output [4]: [ca_address_sk#20, ca_county#21, ca_state#24, ca_country#23]
Arguments: [c_current_addr_sk#16], [ca_address_sk#20], Inner, BuildRight

(25) CometProject
Input [14]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13, c_current_addr_sk#16, c_birth_year#18, ca_address_sk#20, ca_county#21, ca_state#24, ca_country#23]
Arguments: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13, c_birth_year#18, ca_county#21, ca_state#24, ca_country#23], [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13, c_birth_year#18, ca_county#21, ca_state#24, ca_country#23]

(26) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#25, d_year#26]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(27) CometFilter
Input [2]: [d_date_sk#25, d_year#26]
Condition : ((isnotnull(d_year#26) AND (d_year#26 = 2001)) AND isnotnull(d_date_sk#25))

(28) CometProject
Input [2]: [d_date_sk#25, d_year#26]
Arguments: [d_date_sk#25], [d_date_sk#25]

(29) CometBroadcastExchange
Input [1]: [d_date_sk#25]
Arguments: [d_date_sk#25]

(30) CometBroadcastHashJoin
Left output [12]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13, c_birth_year#18, ca_county#21, ca_state#24, ca_country#23]
Right output [1]: [d_date_sk#25]
Arguments: [cs_sold_date_sk#9], [d_date_sk#25], Inner, BuildRight

(31) CometProject
Input [13]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cs_sold_date_sk#9, cd_dep_count#13, c_birth_year#18, ca_county#21, ca_state#24, ca_country#23, d_date_sk#25]
Arguments: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cd_dep_count#13, c_birth_year#18, ca_county#21, ca_state#24, ca_country#23], [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cd_dep_count#13, c_birth_year#18, ca_county#21, ca_state#24, ca_country#23]

(32) CometNativeScan parquet spark_catalog.default.item
Output [2]: [i_item_sk#27, i_item_id#28]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(33) CometFilter
Input [2]: [i_item_sk#27, i_item_id#28]
Condition : isnotnull(i_item_sk#27)

(34) CometProject
Input [2]: [i_item_sk#27, i_item_id#28]
Arguments: [i_item_sk#27, i_item_id#29], [i_item_sk#27, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#28, 16, true, false, true) AS i_item_id#29]

(35) CometBroadcastExchange
Input [2]: [i_item_sk#27, i_item_id#29]
Arguments: [i_item_sk#27, i_item_id#29]

(36) CometBroadcastHashJoin
Left output [11]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cd_dep_count#13, c_birth_year#18, ca_county#21, ca_state#24, ca_country#23]
Right output [2]: [i_item_sk#27, i_item_id#29]
Arguments: [cs_item_sk#3], [i_item_sk#27], Inner, BuildRight

(37) CometProject
Input [13]: [cs_item_sk#3, cs_quantity#4, cs_list_price#5, cs_sales_price#6, cs_coupon_amt#7, cs_net_profit#8, cd_dep_count#13, c_birth_year#18, ca_county#21, ca_state#24, ca_country#23, i_item_sk#27, i_item_id#29]
Arguments: [i_item_id#30, ca_country#31, ca_state#32, ca_county#33, agg1#34, agg2#35, agg3#36, agg4#37, agg5#38, agg6#39, agg7#40], [i_item_id#29 AS i_item_id#30, ca_country#23 AS ca_country#31, ca_state#24 AS ca_state#32, ca_county#21 AS ca_county#33, cast(cs_quantity#4 as decimal(12,2)) AS agg1#34, cast(cs_list_price#5 as decimal(12,2)) AS agg2#35, cast(cs_coupon_amt#7 as decimal(12,2)) AS agg3#36, cast(cs_sales_price#6 as decimal(12,2)) AS agg4#37, cast(cs_net_profit#8 as decimal(12,2)) AS agg5#38, cast(c_birth_year#18 as decimal(12,2)) AS agg6#39, cast(cd_dep_count#13 as decimal(12,2)) AS agg7#40]

(38) CometHashAggregate
Input [11]: [i_item_id#30, ca_country#31, ca_state#32, ca_county#33, agg1#34, agg2#35, agg3#36, agg4#37, agg5#38, agg6#39, agg7#40]
Keys [4]: [i_item_id#30, ca_country#31, ca_state#32, ca_county#33]
Functions [7]: [partial_avg(agg1#34), partial_avg(agg2#35), partial_avg(agg3#36), partial_avg(agg4#37), partial_avg(agg5#38), partial_avg(agg6#39), partial_avg(agg7#40)]

(39) CometExchange
Input [18]: [i_item_id#30, ca_country#31, ca_state#32, ca_county#33, sum#41, count#42, sum#43, count#44, sum#45, count#46, sum#47, count#48, sum#49, count#50, sum#51, count#52, sum#53, count#54]
Arguments: hashpartitioning(i_item_id#30, ca_country#31, ca_state#32, ca_county#33, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(40) CometHashAggregate
Input [18]: [i_item_id#30, ca_country#31, ca_state#32, ca_county#33, sum#41, count#42, sum#43, count#44, sum#45, count#46, sum#47, count#48, sum#49, count#50, sum#51, count#52, sum#53, count#54]
Keys [4]: [i_item_id#30, ca_country#31, ca_state#32, ca_county#33]
Functions [7]: [avg(agg1#34), avg(agg2#35), avg(agg3#36), avg(agg4#37), avg(agg5#38), avg(agg6#39), avg(agg7#40)]

(41) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [9]: [cs_bill_customer_sk#55, cs_bill_cdemo_sk#56, cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#63)]
PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_net_profit:decimal(7,2)>

(42) CometFilter
Input [9]: [cs_bill_customer_sk#55, cs_bill_cdemo_sk#56, cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63]
Condition : ((isnotnull(cs_bill_cdemo_sk#56) AND isnotnull(cs_bill_customer_sk#55)) AND isnotnull(cs_item_sk#57))

(43) ReusedExchange [Reuses operator id: 6]
Output [2]: [cd_demo_sk#64, cd_dep_count#65]

(44) CometBroadcastHashJoin
Left output [9]: [cs_bill_customer_sk#55, cs_bill_cdemo_sk#56, cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63]
Right output [2]: [cd_demo_sk#64, cd_dep_count#65]
Arguments: [cs_bill_cdemo_sk#56], [cd_demo_sk#64], Inner, BuildRight

(45) CometProject
Input [11]: [cs_bill_customer_sk#55, cs_bill_cdemo_sk#56, cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_demo_sk#64, cd_dep_count#65]
Arguments: [cs_bill_customer_sk#55, cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65], [cs_bill_customer_sk#55, cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65]

(46) ReusedExchange [Reuses operator id: 12]
Output [4]: [c_customer_sk#66, c_current_cdemo_sk#67, c_current_addr_sk#68, c_birth_year#69]

(47) CometBroadcastHashJoin
Left output [9]: [cs_bill_customer_sk#55, cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65]
Right output [4]: [c_customer_sk#66, c_current_cdemo_sk#67, c_current_addr_sk#68, c_birth_year#69]
Arguments: [cs_bill_customer_sk#55], [c_customer_sk#66], Inner, BuildRight

(48) CometProject
Input [13]: [cs_bill_customer_sk#55, cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65, c_customer_sk#66, c_current_cdemo_sk#67, c_current_addr_sk#68, c_birth_year#69]
Arguments: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65, c_current_cdemo_sk#67, c_current_addr_sk#68, c_birth_year#69], [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65, c_current_cdemo_sk#67, c_current_addr_sk#68, c_birth_year#69]

(49) ReusedExchange [Reuses operator id: 17]
Output [1]: [cd_demo_sk#70]

(50) CometBroadcastHashJoin
Left output [11]: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65, c_current_cdemo_sk#67, c_current_addr_sk#68, c_birth_year#69]
Right output [1]: [cd_demo_sk#70]
Arguments: [c_current_cdemo_sk#67], [cd_demo_sk#70], Inner, BuildRight

(51) CometProject
Input [12]: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65, c_current_cdemo_sk#67, c_current_addr_sk#68, c_birth_year#69, cd_demo_sk#70]
Arguments: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65, c_current_addr_sk#68, c_birth_year#69], [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65, c_current_addr_sk#68, c_birth_year#69]

(52) CometNativeScan parquet spark_catalog.default.customer_address
Output [3]: [ca_address_sk#71, ca_state#72, ca_country#73]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>

(53) CometFilter
Input [3]: [ca_address_sk#71, ca_state#72, ca_country#73]
Condition : (staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, ca_state#72, 2, true, false, true) IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#71))

(54) CometProject
Input [3]: [ca_address_sk#71, ca_state#72, ca_country#73]
Arguments: [ca_address_sk#71, ca_state#24, ca_country#73], [ca_address_sk#71, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, ca_state#72, 2, true, false, true) AS ca_state#24, ca_country#73]

(55) CometBroadcastExchange
Input [3]: [ca_address_sk#71, ca_state#24, ca_country#73]
Arguments: [ca_address_sk#71, ca_state#24, ca_country#73]

(56) CometBroadcastHashJoin
Left output [10]: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65, c_current_addr_sk#68, c_birth_year#69]
Right output [3]: [ca_address_sk#71, ca_state#24, ca_country#73]
Arguments: [c_current_addr_sk#68], [ca_address_sk#71], Inner, BuildRight

(57) CometProject
Input [13]: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65, c_current_addr_sk#68, c_birth_year#69, ca_address_sk#71, ca_state#24, ca_country#73]
Arguments: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65, c_birth_year#69, ca_state#24, ca_country#73], [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65, c_birth_year#69, ca_state#24, ca_country#73]

(58) ReusedExchange [Reuses operator id: 29]
Output [1]: [d_date_sk#74]

(59) CometBroadcastHashJoin
Left output [11]: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65, c_birth_year#69, ca_state#24, ca_country#73]
Right output [1]: [d_date_sk#74]
Arguments: [cs_sold_date_sk#63], [d_date_sk#74], Inner, BuildRight

(60) CometProject
Input [12]: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cs_sold_date_sk#63, cd_dep_count#65, c_birth_year#69, ca_state#24, ca_country#73, d_date_sk#74]
Arguments: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cd_dep_count#65, c_birth_year#69, ca_state#24, ca_country#73], [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cd_dep_count#65, c_birth_year#69, ca_state#24, ca_country#73]

(61) ReusedExchange [Reuses operator id: 35]
Output [2]: [i_item_sk#75, i_item_id#29]

(62) CometBroadcastHashJoin
Left output [10]: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cd_dep_count#65, c_birth_year#69, ca_state#24, ca_country#73]
Right output [2]: [i_item_sk#75, i_item_id#29]
Arguments: [cs_item_sk#57], [i_item_sk#75], Inner, BuildRight

(63) CometProject
Input [12]: [cs_item_sk#57, cs_quantity#58, cs_list_price#59, cs_sales_price#60, cs_coupon_amt#61, cs_net_profit#62, cd_dep_count#65, c_birth_year#69, ca_state#24, ca_country#73, i_item_sk#75, i_item_id#29]
Arguments: [i_item_id#29, ca_country#73, ca_state#24, agg1#76, agg2#77, agg3#78, agg4#79, agg5#80, agg6#81, agg7#82], [i_item_id#29, ca_country#73, ca_state#24, cast(cs_quantity#58 as decimal(12,2)) AS agg1#76, cast(cs_list_price#59 as decimal(12,2)) AS agg2#77, cast(cs_coupon_amt#61 as decimal(12,2)) AS agg3#78, cast(cs_sales_price#60 as decimal(12,2)) AS agg4#79, cast(cs_net_profit#62 as decimal(12,2)) AS agg5#80, cast(c_birth_year#69 as decimal(12,2)) AS agg6#81, cast(cd_dep_count#65 as decimal(12,2)) AS agg7#82]

(64) CometHashAggregate
Input [10]: [i_item_id#29, ca_country#73, ca_state#24, agg1#76, agg2#77, agg3#78, agg4#79, agg5#80, agg6#81, agg7#82]
Keys [3]: [i_item_id#29, ca_country#73, ca_state#24]
Functions [7]: [partial_avg(agg1#76), partial_avg(agg2#77), partial_avg(agg3#78), partial_avg(agg4#79), partial_avg(agg5#80), partial_avg(agg6#81), partial_avg(agg7#82)]

(65) CometExchange
Input [17]: [i_item_id#29, ca_country#73, ca_state#24, sum#83, count#84, sum#85, count#86, sum#87, count#88, sum#89, count#90, sum#91, count#92, sum#93, count#94, sum#95, count#96]
Arguments: hashpartitioning(i_item_id#29, ca_country#73, ca_state#24, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(66) CometHashAggregate
Input [17]: [i_item_id#29, ca_country#73, ca_state#24, sum#83, count#84, sum#85, count#86, sum#87, count#88, sum#89, count#90, sum#91, count#92, sum#93, count#94, sum#95, count#96]
Keys [3]: [i_item_id#29, ca_country#73, ca_state#24]
Functions [7]: [avg(agg1#76), avg(agg2#77), avg(agg3#78), avg(agg4#79), avg(agg5#80), avg(agg6#81), avg(agg7#82)]

(67) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [9]: [cs_bill_customer_sk#97, cs_bill_cdemo_sk#98, cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#105)]
PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_net_profit:decimal(7,2)>

(68) CometFilter
Input [9]: [cs_bill_customer_sk#97, cs_bill_cdemo_sk#98, cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105]
Condition : ((isnotnull(cs_bill_cdemo_sk#98) AND isnotnull(cs_bill_customer_sk#97)) AND isnotnull(cs_item_sk#99))

(69) ReusedExchange [Reuses operator id: 6]
Output [2]: [cd_demo_sk#106, cd_dep_count#107]

(70) CometBroadcastHashJoin
Left output [9]: [cs_bill_customer_sk#97, cs_bill_cdemo_sk#98, cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105]
Right output [2]: [cd_demo_sk#106, cd_dep_count#107]
Arguments: [cs_bill_cdemo_sk#98], [cd_demo_sk#106], Inner, BuildRight

(71) CometProject
Input [11]: [cs_bill_customer_sk#97, cs_bill_cdemo_sk#98, cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_demo_sk#106, cd_dep_count#107]
Arguments: [cs_bill_customer_sk#97, cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107], [cs_bill_customer_sk#97, cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107]

(72) ReusedExchange [Reuses operator id: 12]
Output [4]: [c_customer_sk#108, c_current_cdemo_sk#109, c_current_addr_sk#110, c_birth_year#111]

(73) CometBroadcastHashJoin
Left output [9]: [cs_bill_customer_sk#97, cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107]
Right output [4]: [c_customer_sk#108, c_current_cdemo_sk#109, c_current_addr_sk#110, c_birth_year#111]
Arguments: [cs_bill_customer_sk#97], [c_customer_sk#108], Inner, BuildRight

(74) CometProject
Input [13]: [cs_bill_customer_sk#97, cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107, c_customer_sk#108, c_current_cdemo_sk#109, c_current_addr_sk#110, c_birth_year#111]
Arguments: [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107, c_current_cdemo_sk#109, c_current_addr_sk#110, c_birth_year#111], [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107, c_current_cdemo_sk#109, c_current_addr_sk#110, c_birth_year#111]

(75) ReusedExchange [Reuses operator id: 17]
Output [1]: [cd_demo_sk#112]

(76) CometBroadcastHashJoin
Left output [11]: [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107, c_current_cdemo_sk#109, c_current_addr_sk#110, c_birth_year#111]
Right output [1]: [cd_demo_sk#112]
Arguments: [c_current_cdemo_sk#109], [cd_demo_sk#112], Inner, BuildRight

(77) CometProject
Input [12]: [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107, c_current_cdemo_sk#109, c_current_addr_sk#110, c_birth_year#111, cd_demo_sk#112]
Arguments: [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107, c_current_addr_sk#110, c_birth_year#111], [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107, c_current_addr_sk#110, c_birth_year#111]

(78) CometNativeScan parquet spark_catalog.default.customer_address
Output [3]: [ca_address_sk#113, ca_state#114, ca_country#115]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>

(79) CometFilter
Input [3]: [ca_address_sk#113, ca_state#114, ca_country#115]
Condition : (staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, ca_state#114, 2, true, false, true) IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#113))

(80) CometProject
Input [3]: [ca_address_sk#113, ca_state#114, ca_country#115]
Arguments: [ca_address_sk#113, ca_country#115], [ca_address_sk#113, ca_country#115]

(81) CometBroadcastExchange
Input [2]: [ca_address_sk#113, ca_country#115]
Arguments: [ca_address_sk#113, ca_country#115]

(82) CometBroadcastHashJoin
Left output [10]: [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107, c_current_addr_sk#110, c_birth_year#111]
Right output [2]: [ca_address_sk#113, ca_country#115]
Arguments: [c_current_addr_sk#110], [ca_address_sk#113], Inner, BuildRight

(83) CometProject
Input [12]: [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107, c_current_addr_sk#110, c_birth_year#111, ca_address_sk#113, ca_country#115]
Arguments: [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107, c_birth_year#111, ca_country#115], [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107, c_birth_year#111, ca_country#115]

(84) ReusedExchange [Reuses operator id: 29]
Output [1]: [d_date_sk#116]

(85) CometBroadcastHashJoin
Left output [10]: [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107, c_birth_year#111, ca_country#115]
Right output [1]: [d_date_sk#116]
Arguments: [cs_sold_date_sk#105], [d_date_sk#116], Inner, BuildRight

(86) CometProject
Input [11]: [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cs_sold_date_sk#105, cd_dep_count#107, c_birth_year#111, ca_country#115, d_date_sk#116]
Arguments: [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cd_dep_count#107, c_birth_year#111, ca_country#115], [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cd_dep_count#107, c_birth_year#111, ca_country#115]

(87) ReusedExchange [Reuses operator id: 35]
Output [2]: [i_item_sk#117, i_item_id#29]

(88) CometBroadcastHashJoin
Left output [9]: [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cd_dep_count#107, c_birth_year#111, ca_country#115]
Right output [2]: [i_item_sk#117, i_item_id#29]
Arguments: [cs_item_sk#99], [i_item_sk#117], Inner, BuildRight

(89) CometProject
Input [11]: [cs_item_sk#99, cs_quantity#100, cs_list_price#101, cs_sales_price#102, cs_coupon_amt#103, cs_net_profit#104, cd_dep_count#107, c_birth_year#111, ca_country#115, i_item_sk#117, i_item_id#29]
Arguments: [i_item_id#29, ca_country#115, agg1#118, agg2#119, agg3#120, agg4#121, agg5#122, agg6#123, agg7#124], [i_item_id#29, ca_country#115, cast(cs_quantity#100 as decimal(12,2)) AS agg1#118, cast(cs_list_price#101 as decimal(12,2)) AS agg2#119, cast(cs_coupon_amt#103 as decimal(12,2)) AS agg3#120, cast(cs_sales_price#102 as decimal(12,2)) AS agg4#121, cast(cs_net_profit#104 as decimal(12,2)) AS agg5#122, cast(c_birth_year#111 as decimal(12,2)) AS agg6#123, cast(cd_dep_count#107 as decimal(12,2)) AS agg7#124]

(90) CometHashAggregate
Input [9]: [i_item_id#29, ca_country#115, agg1#118, agg2#119, agg3#120, agg4#121, agg5#122, agg6#123, agg7#124]
Keys [2]: [i_item_id#29, ca_country#115]
Functions [7]: [partial_avg(agg1#118), partial_avg(agg2#119), partial_avg(agg3#120), partial_avg(agg4#121), partial_avg(agg5#122), partial_avg(agg6#123), partial_avg(agg7#124)]

(91) CometExchange
Input [16]: [i_item_id#29, ca_country#115, sum#125, count#126, sum#127, count#128, sum#129, count#130, sum#131, count#132, sum#133, count#134, sum#135, count#136, sum#137, count#138]
Arguments: hashpartitioning(i_item_id#29, ca_country#115, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(92) CometHashAggregate
Input [16]: [i_item_id#29, ca_country#115, sum#125, count#126, sum#127, count#128, sum#129, count#130, sum#131, count#132, sum#133, count#134, sum#135, count#136, sum#137, count#138]
Keys [2]: [i_item_id#29, ca_country#115]
Functions [7]: [avg(agg1#118), avg(agg2#119), avg(agg3#120), avg(agg4#121), avg(agg5#122), avg(agg6#123), avg(agg7#124)]

(93) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [9]: [cs_bill_customer_sk#139, cs_bill_cdemo_sk#140, cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#147)]
PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_net_profit:decimal(7,2)>

(94) CometFilter
Input [9]: [cs_bill_customer_sk#139, cs_bill_cdemo_sk#140, cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147]
Condition : ((isnotnull(cs_bill_cdemo_sk#140) AND isnotnull(cs_bill_customer_sk#139)) AND isnotnull(cs_item_sk#141))

(95) ReusedExchange [Reuses operator id: 6]
Output [2]: [cd_demo_sk#148, cd_dep_count#149]

(96) CometBroadcastHashJoin
Left output [9]: [cs_bill_customer_sk#139, cs_bill_cdemo_sk#140, cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147]
Right output [2]: [cd_demo_sk#148, cd_dep_count#149]
Arguments: [cs_bill_cdemo_sk#140], [cd_demo_sk#148], Inner, BuildRight

(97) CometProject
Input [11]: [cs_bill_customer_sk#139, cs_bill_cdemo_sk#140, cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_demo_sk#148, cd_dep_count#149]
Arguments: [cs_bill_customer_sk#139, cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149], [cs_bill_customer_sk#139, cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149]

(98) ReusedExchange [Reuses operator id: 12]
Output [4]: [c_customer_sk#150, c_current_cdemo_sk#151, c_current_addr_sk#152, c_birth_year#153]

(99) CometBroadcastHashJoin
Left output [9]: [cs_bill_customer_sk#139, cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149]
Right output [4]: [c_customer_sk#150, c_current_cdemo_sk#151, c_current_addr_sk#152, c_birth_year#153]
Arguments: [cs_bill_customer_sk#139], [c_customer_sk#150], Inner, BuildRight

(100) CometProject
Input [13]: [cs_bill_customer_sk#139, cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149, c_customer_sk#150, c_current_cdemo_sk#151, c_current_addr_sk#152, c_birth_year#153]
Arguments: [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149, c_current_cdemo_sk#151, c_current_addr_sk#152, c_birth_year#153], [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149, c_current_cdemo_sk#151, c_current_addr_sk#152, c_birth_year#153]

(101) ReusedExchange [Reuses operator id: 17]
Output [1]: [cd_demo_sk#154]

(102) CometBroadcastHashJoin
Left output [11]: [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149, c_current_cdemo_sk#151, c_current_addr_sk#152, c_birth_year#153]
Right output [1]: [cd_demo_sk#154]
Arguments: [c_current_cdemo_sk#151], [cd_demo_sk#154], Inner, BuildRight

(103) CometProject
Input [12]: [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149, c_current_cdemo_sk#151, c_current_addr_sk#152, c_birth_year#153, cd_demo_sk#154]
Arguments: [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149, c_current_addr_sk#152, c_birth_year#153], [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149, c_current_addr_sk#152, c_birth_year#153]

(104) CometNativeScan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#155, ca_state#156]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_state:string>

(105) CometFilter
Input [2]: [ca_address_sk#155, ca_state#156]
Condition : (staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, ca_state#156, 2, true, false, true) IN (ND,WI,AL,NC,OK,MS,TN) AND isnotnull(ca_address_sk#155))

(106) CometProject
Input [2]: [ca_address_sk#155, ca_state#156]
Arguments: [ca_address_sk#155], [ca_address_sk#155]

(107) CometBroadcastExchange
Input [1]: [ca_address_sk#155]
Arguments: [ca_address_sk#155]

(108) CometBroadcastHashJoin
Left output [10]: [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149, c_current_addr_sk#152, c_birth_year#153]
Right output [1]: [ca_address_sk#155]
Arguments: [c_current_addr_sk#152], [ca_address_sk#155], Inner, BuildRight

(109) CometProject
Input [11]: [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149, c_current_addr_sk#152, c_birth_year#153, ca_address_sk#155]
Arguments: [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149, c_birth_year#153], [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149, c_birth_year#153]

(110) ReusedExchange [Reuses operator id: 29]
Output [1]: [d_date_sk#157]

(111) CometBroadcastHashJoin
Left output [9]: [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149, c_birth_year#153]
Right output [1]: [d_date_sk#157]
Arguments: [cs_sold_date_sk#147], [d_date_sk#157], Inner, BuildRight

(112) CometProject
Input [10]: [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cs_sold_date_sk#147, cd_dep_count#149, c_birth_year#153, d_date_sk#157]
Arguments: [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cd_dep_count#149, c_birth_year#153], [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cd_dep_count#149, c_birth_year#153]

(113) ReusedExchange [Reuses operator id: 35]
Output [2]: [i_item_sk#158, i_item_id#29]

(114) CometBroadcastHashJoin
Left output [8]: [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cd_dep_count#149, c_birth_year#153]
Right output [2]: [i_item_sk#158, i_item_id#29]
Arguments: [cs_item_sk#141], [i_item_sk#158], Inner, BuildRight

(115) CometProject
Input [10]: [cs_item_sk#141, cs_quantity#142, cs_list_price#143, cs_sales_price#144, cs_coupon_amt#145, cs_net_profit#146, cd_dep_count#149, c_birth_year#153, i_item_sk#158, i_item_id#29]
Arguments: [i_item_id#29, agg1#159, agg2#160, agg3#161, agg4#162, agg5#163, agg6#164, agg7#165], [i_item_id#29, cast(cs_quantity#142 as decimal(12,2)) AS agg1#159, cast(cs_list_price#143 as decimal(12,2)) AS agg2#160, cast(cs_coupon_amt#145 as decimal(12,2)) AS agg3#161, cast(cs_sales_price#144 as decimal(12,2)) AS agg4#162, cast(cs_net_profit#146 as decimal(12,2)) AS agg5#163, cast(c_birth_year#153 as decimal(12,2)) AS agg6#164, cast(cd_dep_count#149 as decimal(12,2)) AS agg7#165]

(116) CometHashAggregate
Input [8]: [i_item_id#29, agg1#159, agg2#160, agg3#161, agg4#162, agg5#163, agg6#164, agg7#165]
Keys [1]: [i_item_id#29]
Functions [7]: [partial_avg(agg1#159), partial_avg(agg2#160), partial_avg(agg3#161), partial_avg(agg4#162), partial_avg(agg5#163), partial_avg(agg6#164), partial_avg(agg7#165)]

(117) CometExchange
Input [15]: [i_item_id#29, sum#166, count#167, sum#168, count#169, sum#170, count#171, sum#172, count#173, sum#174, count#175, sum#176, count#177, sum#178, count#179]
Arguments: hashpartitioning(i_item_id#29, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(118) CometHashAggregate
Input [15]: [i_item_id#29, sum#166, count#167, sum#168, count#169, sum#170, count#171, sum#172, count#173, sum#174, count#175, sum#176, count#177, sum#178, count#179]
Keys [1]: [i_item_id#29]
Functions [7]: [avg(agg1#159), avg(agg2#160), avg(agg3#161), avg(agg4#162), avg(agg5#163), avg(agg6#164), avg(agg7#165)]

(119) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [9]: [cs_bill_customer_sk#180, cs_bill_cdemo_sk#181, cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#188)]
PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2),cs_sales_price:decimal(7,2),cs_coupon_amt:decimal(7,2),cs_net_profit:decimal(7,2)>

(120) CometFilter
Input [9]: [cs_bill_customer_sk#180, cs_bill_cdemo_sk#181, cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188]
Condition : ((isnotnull(cs_bill_cdemo_sk#181) AND isnotnull(cs_bill_customer_sk#180)) AND isnotnull(cs_item_sk#182))

(121) ReusedExchange [Reuses operator id: 6]
Output [2]: [cd_demo_sk#189, cd_dep_count#190]

(122) CometBroadcastHashJoin
Left output [9]: [cs_bill_customer_sk#180, cs_bill_cdemo_sk#181, cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188]
Right output [2]: [cd_demo_sk#189, cd_dep_count#190]
Arguments: [cs_bill_cdemo_sk#181], [cd_demo_sk#189], Inner, BuildRight

(123) CometProject
Input [11]: [cs_bill_customer_sk#180, cs_bill_cdemo_sk#181, cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_demo_sk#189, cd_dep_count#190]
Arguments: [cs_bill_customer_sk#180, cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190], [cs_bill_customer_sk#180, cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190]

(124) ReusedExchange [Reuses operator id: 12]
Output [4]: [c_customer_sk#191, c_current_cdemo_sk#192, c_current_addr_sk#193, c_birth_year#194]

(125) CometBroadcastHashJoin
Left output [9]: [cs_bill_customer_sk#180, cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190]
Right output [4]: [c_customer_sk#191, c_current_cdemo_sk#192, c_current_addr_sk#193, c_birth_year#194]
Arguments: [cs_bill_customer_sk#180], [c_customer_sk#191], Inner, BuildRight

(126) CometProject
Input [13]: [cs_bill_customer_sk#180, cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190, c_customer_sk#191, c_current_cdemo_sk#192, c_current_addr_sk#193, c_birth_year#194]
Arguments: [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190, c_current_cdemo_sk#192, c_current_addr_sk#193, c_birth_year#194], [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190, c_current_cdemo_sk#192, c_current_addr_sk#193, c_birth_year#194]

(127) ReusedExchange [Reuses operator id: 17]
Output [1]: [cd_demo_sk#195]

(128) CometBroadcastHashJoin
Left output [11]: [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190, c_current_cdemo_sk#192, c_current_addr_sk#193, c_birth_year#194]
Right output [1]: [cd_demo_sk#195]
Arguments: [c_current_cdemo_sk#192], [cd_demo_sk#195], Inner, BuildRight

(129) CometProject
Input [12]: [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190, c_current_cdemo_sk#192, c_current_addr_sk#193, c_birth_year#194, cd_demo_sk#195]
Arguments: [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190, c_current_addr_sk#193, c_birth_year#194], [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190, c_current_addr_sk#193, c_birth_year#194]

(130) ReusedExchange [Reuses operator id: 107]
Output [1]: [ca_address_sk#196]

(131) CometBroadcastHashJoin
Left output [10]: [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190, c_current_addr_sk#193, c_birth_year#194]
Right output [1]: [ca_address_sk#196]
Arguments: [c_current_addr_sk#193], [ca_address_sk#196], Inner, BuildRight

(132) CometProject
Input [11]: [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190, c_current_addr_sk#193, c_birth_year#194, ca_address_sk#196]
Arguments: [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190, c_birth_year#194], [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190, c_birth_year#194]

(133) ReusedExchange [Reuses operator id: 29]
Output [1]: [d_date_sk#197]

(134) CometBroadcastHashJoin
Left output [9]: [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190, c_birth_year#194]
Right output [1]: [d_date_sk#197]
Arguments: [cs_sold_date_sk#188], [d_date_sk#197], Inner, BuildRight

(135) CometProject
Input [10]: [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cs_sold_date_sk#188, cd_dep_count#190, c_birth_year#194, d_date_sk#197]
Arguments: [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cd_dep_count#190, c_birth_year#194], [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cd_dep_count#190, c_birth_year#194]

(136) CometNativeScan parquet spark_catalog.default.item
Output [1]: [i_item_sk#198]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int>

(137) CometFilter
Input [1]: [i_item_sk#198]
Condition : isnotnull(i_item_sk#198)

(138) CometBroadcastExchange
Input [1]: [i_item_sk#198]
Arguments: [i_item_sk#198]

(139) CometBroadcastHashJoin
Left output [8]: [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cd_dep_count#190, c_birth_year#194]
Right output [1]: [i_item_sk#198]
Arguments: [cs_item_sk#182], [i_item_sk#198], Inner, BuildRight

(140) CometProject
Input [9]: [cs_item_sk#182, cs_quantity#183, cs_list_price#184, cs_sales_price#185, cs_coupon_amt#186, cs_net_profit#187, cd_dep_count#190, c_birth_year#194, i_item_sk#198]
Arguments: [agg1#199, agg2#200, agg3#201, agg4#202, agg5#203, agg6#204, agg7#205], [cast(cs_quantity#183 as decimal(12,2)) AS agg1#199, cast(cs_list_price#184 as decimal(12,2)) AS agg2#200, cast(cs_coupon_amt#186 as decimal(12,2)) AS agg3#201, cast(cs_sales_price#185 as decimal(12,2)) AS agg4#202, cast(cs_net_profit#187 as decimal(12,2)) AS agg5#203, cast(c_birth_year#194 as decimal(12,2)) AS agg6#204, cast(cd_dep_count#190 as decimal(12,2)) AS agg7#205]

(141) CometHashAggregate
Input [7]: [agg1#199, agg2#200, agg3#201, agg4#202, agg5#203, agg6#204, agg7#205]
Keys: []
Functions [7]: [partial_avg(agg1#199), partial_avg(agg2#200), partial_avg(agg3#201), partial_avg(agg4#202), partial_avg(agg5#203), partial_avg(agg6#204), partial_avg(agg7#205)]

(142) CometExchange
Input [14]: [sum#206, count#207, sum#208, count#209, sum#210, count#211, sum#212, count#213, sum#214, count#215, sum#216, count#217, sum#218, count#219]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(143) CometHashAggregate
Input [14]: [sum#206, count#207, sum#208, count#209, sum#210, count#211, sum#212, count#213, sum#214, count#215, sum#216, count#217, sum#218, count#219]
Keys: []
Functions [7]: [avg(agg1#199), avg(agg2#200), avg(agg3#201), avg(agg4#202), avg(agg5#203), avg(agg6#204), avg(agg7#205)]

(144) CometUnion
Child 0 Input [11]: [i_item_id#30, ca_country#31, ca_state#32, ca_county#33, agg1#220, agg2#221, agg3#222, agg4#223, agg5#224, agg6#225, agg7#226]
Child 1 Input [11]: [i_item_id#29, ca_country#73, ca_state#24, county#227, agg1#228, agg2#229, agg3#230, agg4#231, agg5#232, agg6#233, agg7#234]
Child 2 Input [11]: [i_item_id#29, ca_country#115, ca_state#235, county#236, agg1#237, agg2#238, agg3#239, agg4#240, agg5#241, agg6#242, agg7#243]
Child 3 Input [11]: [i_item_id#29, ca_country#244, ca_state#245, county#246, agg1#247, agg2#248, agg3#249, agg4#250, agg5#251, agg6#252, agg7#253]
Child 4 Input [11]: [i_item_id#254, ca_country#255, ca_state#256, county#257, agg1#258, agg2#259, agg3#260, agg4#261, agg5#262, agg6#263, agg7#264]

(145) CometTakeOrderedAndProject
Input [11]: [i_item_id#30, ca_country#31, ca_state#32, ca_county#33, agg1#220, agg2#221, agg3#222, agg4#223, agg5#224, agg6#225, agg7#226]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[ca_country#31 ASC NULLS FIRST,ca_state#32 ASC NULLS FIRST,ca_county#33 ASC NULLS FIRST,i_item_id#30 ASC NULLS FIRST], output=[i_item_id#30,ca_country#31,ca_state#32,ca_county#33,agg1#220,agg2#221,agg3#222,agg4#223,agg5#224,agg6#225,agg7#226]), [i_item_id#30, ca_country#31, ca_state#32, ca_county#33, agg1#220, agg2#221, agg3#222, agg4#223, agg5#224, agg6#225, agg7#226], 100, 0, [ca_country#31 ASC NULLS FIRST, ca_state#32 ASC NULLS FIRST, ca_county#33 ASC NULLS FIRST, i_item_id#30 ASC NULLS FIRST], [i_item_id#30, ca_country#31, ca_state#32, ca_county#33, agg1#220, agg2#221, agg3#222, agg4#223, agg5#224, agg6#225, agg7#226]

(146) CometColumnarToRow [codegen id : 1]
Input [11]: [i_item_id#30, ca_country#31, ca_state#32, ca_county#33, agg1#220, agg2#221, agg3#222, agg4#223, agg5#224, agg6#225, agg7#226]

