== Physical Plan ==
TakeOrderedAndProject (37)
+- * Project (36)
   +- Window (35)
      +- * CometColumnarToRow (34)
         +- CometSort (33)
            +- CometExchange (32)
               +- CometHashAggregate (31)
                  +- CometExchange (30)
                     +- CometHashAggregate (29)
                        +- CometUnion (28)
                           :- CometHashAggregate (17)
                           :  +- CometExchange (16)
                           :     +- CometHashAggregate (15)
                           :        +- CometProject (14)
                           :           +- CometBroadcastHashJoin (13)
                           :              :- CometProject (8)
                           :              :  +- CometBroadcastHashJoin (7)
                           :              :     :- CometFilter (2)
                           :              :     :  +- CometNativeScan parquet spark_catalog.default.web_sales (1)
                           :              :     +- CometBroadcastExchange (6)
                           :              :        +- CometProject (5)
                           :              :           +- CometFilter (4)
                           :              :              +- CometNativeScan parquet spark_catalog.default.date_dim (3)
                           :              +- CometBroadcastExchange (12)
                           :                 +- CometProject (11)
                           :                    +- CometFilter (10)
                           :                       +- CometNativeScan parquet spark_catalog.default.item (9)
                           :- CometHashAggregate (22)
                           :  +- CometExchange (21)
                           :     +- CometHashAggregate (20)
                           :        +- CometHashAggregate (19)
                           :           +- ReusedExchange (18)
                           +- CometHashAggregate (27)
                              +- CometExchange (26)
                                 +- CometHashAggregate (25)
                                    +- CometHashAggregate (24)
                                       +- ReusedExchange (23)


(1) CometNativeScan parquet spark_catalog.default.web_sales
Output [3]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#3)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_net_paid:decimal(7,2)>

(2) CometFilter
Input [3]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3]
Condition : isnotnull(ws_item_sk#1)

(3) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#4, d_month_seq#5]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(4) CometFilter
Input [2]: [d_date_sk#4, d_month_seq#5]
Condition : (((isnotnull(d_month_seq#5) AND (d_month_seq#5 >= 1212)) AND (d_month_seq#5 <= 1223)) AND isnotnull(d_date_sk#4))

(5) CometProject
Input [2]: [d_date_sk#4, d_month_seq#5]
Arguments: [d_date_sk#4], [d_date_sk#4]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#4]
Arguments: [d_date_sk#4]

(7) CometBroadcastHashJoin
Left output [3]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3]
Right output [1]: [d_date_sk#4]
Arguments: [ws_sold_date_sk#3], [d_date_sk#4], Inner, BuildRight

(8) CometProject
Input [4]: [ws_item_sk#1, ws_net_paid#2, ws_sold_date_sk#3, d_date_sk#4]
Arguments: [ws_item_sk#1, ws_net_paid#2], [ws_item_sk#1, ws_net_paid#2]

(9) CometNativeScan parquet spark_catalog.default.item
Output [3]: [i_item_sk#6, i_class#7, i_category#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>

(10) CometFilter
Input [3]: [i_item_sk#6, i_class#7, i_category#8]
Condition : isnotnull(i_item_sk#6)

(11) CometProject
Input [3]: [i_item_sk#6, i_class#7, i_category#8]
Arguments: [i_item_sk#6, i_class#9, i_category#10], [i_item_sk#6, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_class#7, 50, true, false, true) AS i_class#9, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_category#8, 50, true, false, true) AS i_category#10]

(12) CometBroadcastExchange
Input [3]: [i_item_sk#6, i_class#9, i_category#10]
Arguments: [i_item_sk#6, i_class#9, i_category#10]

(13) CometBroadcastHashJoin
Left output [2]: [ws_item_sk#1, ws_net_paid#2]
Right output [3]: [i_item_sk#6, i_class#9, i_category#10]
Arguments: [ws_item_sk#1], [i_item_sk#6], Inner, BuildRight

(14) CometProject
Input [5]: [ws_item_sk#1, ws_net_paid#2, i_item_sk#6, i_class#9, i_category#10]
Arguments: [ws_net_paid#2, i_class#9, i_category#10], [ws_net_paid#2, i_class#9, i_category#10]

(15) CometHashAggregate
Input [3]: [ws_net_paid#2, i_class#9, i_category#10]
Keys [2]: [i_category#10, i_class#9]
Functions [1]: [partial_sum(UnscaledValue(ws_net_paid#2))]

(16) CometExchange
Input [3]: [i_category#10, i_class#9, sum#11]
Arguments: hashpartitioning(i_category#10, i_class#9, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(17) CometHashAggregate
Input [3]: [i_category#10, i_class#9, sum#11]
Keys [2]: [i_category#10, i_class#9]
Functions [1]: [sum(UnscaledValue(ws_net_paid#2))]

(18) ReusedExchange [Reuses operator id: 16]
Output [3]: [i_category#10, i_class#9, sum#12]

(19) CometHashAggregate
Input [3]: [i_category#10, i_class#9, sum#12]
Keys [2]: [i_category#10, i_class#9]
Functions [1]: [sum(UnscaledValue(ws_net_paid#13))]

(20) CometHashAggregate
Input [2]: [total_sum#14, i_category#10]
Keys [1]: [i_category#10]
Functions [1]: [partial_sum(total_sum#14)]

(21) CometExchange
Input [3]: [i_category#10, sum#15, isEmpty#16]
Arguments: hashpartitioning(i_category#10, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(22) CometHashAggregate
Input [3]: [i_category#10, sum#15, isEmpty#16]
Keys [1]: [i_category#10]
Functions [1]: [sum(total_sum#14)]

(23) ReusedExchange [Reuses operator id: 16]
Output [3]: [i_category#10, i_class#9, sum#17]

(24) CometHashAggregate
Input [3]: [i_category#10, i_class#9, sum#17]
Keys [2]: [i_category#10, i_class#9]
Functions [1]: [sum(UnscaledValue(ws_net_paid#18))]

(25) CometHashAggregate
Input [1]: [total_sum#19]
Keys: []
Functions [1]: [partial_sum(total_sum#19)]

(26) CometExchange
Input [2]: [sum#20, isEmpty#21]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(27) CometHashAggregate
Input [2]: [sum#20, isEmpty#21]
Keys: []
Functions [1]: [sum(total_sum#19)]

(28) CometUnion
Child 0 Input [6]: [total_sum#22, i_category#23, i_class#24, g_category#25, g_class#26, lochierarchy#27]
Child 1 Input [6]: [total_sum#28, i_category#10, i_class#29, g_category#30, g_class#31, lochierarchy#32]
Child 2 Input [6]: [total_sum#33, i_category#34, i_class#35, g_category#36, g_class#37, lochierarchy#38]

(29) CometHashAggregate
Input [6]: [total_sum#22, i_category#23, i_class#24, g_category#25, g_class#26, lochierarchy#27]
Keys [6]: [total_sum#22, i_category#23, i_class#24, g_category#25, g_class#26, lochierarchy#27]
Functions: []

(30) CometExchange
Input [6]: [total_sum#22, i_category#23, i_class#24, g_category#25, g_class#26, lochierarchy#27]
Arguments: hashpartitioning(total_sum#22, i_category#23, i_class#24, g_category#25, g_class#26, lochierarchy#27, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(31) CometHashAggregate
Input [6]: [total_sum#22, i_category#23, i_class#24, g_category#25, g_class#26, lochierarchy#27]
Keys [6]: [total_sum#22, i_category#23, i_class#24, g_category#25, g_class#26, lochierarchy#27]
Functions: []

(32) CometExchange
Input [5]: [total_sum#22, i_category#23, i_class#24, lochierarchy#27, _w0#39]
Arguments: hashpartitioning(lochierarchy#27, _w0#39, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(33) CometSort
Input [5]: [total_sum#22, i_category#23, i_class#24, lochierarchy#27, _w0#39]
Arguments: [total_sum#22, i_category#23, i_class#24, lochierarchy#27, _w0#39], [lochierarchy#27 ASC NULLS FIRST, _w0#39 ASC NULLS FIRST, total_sum#22 DESC NULLS LAST]

(34) CometColumnarToRow [codegen id : 1]
Input [5]: [total_sum#22, i_category#23, i_class#24, lochierarchy#27, _w0#39]

(35) Window
Input [5]: [total_sum#22, i_category#23, i_class#24, lochierarchy#27, _w0#39]
Arguments: [rank(total_sum#22) windowspecdefinition(lochierarchy#27, _w0#39, total_sum#22 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#40], [lochierarchy#27, _w0#39], [total_sum#22 DESC NULLS LAST]

(36) Project [codegen id : 2]
Output [5]: [total_sum#22, i_category#23, i_class#24, lochierarchy#27, rank_within_parent#40]
Input [6]: [total_sum#22, i_category#23, i_class#24, lochierarchy#27, _w0#39, rank_within_parent#40]

(37) TakeOrderedAndProject
Input [5]: [total_sum#22, i_category#23, i_class#24, lochierarchy#27, rank_within_parent#40]
Arguments: 100, [lochierarchy#27 DESC NULLS LAST, CASE WHEN (lochierarchy#27 = 0) THEN i_category#23 END ASC NULLS FIRST, rank_within_parent#40 ASC NULLS FIRST], [total_sum#22, i_category#23, i_class#24, lochierarchy#27, rank_within_parent#40]

