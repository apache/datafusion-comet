== Physical Plan ==
* CometColumnarToRow (62)
+- CometTakeOrderedAndProject (61)
   +- CometHashAggregate (60)
      +- CometExchange (59)
         +- CometHashAggregate (58)
            +- CometUnion (57)
               :- CometHashAggregate (28)
               :  +- CometExchange (27)
               :     +- CometHashAggregate (26)
               :        +- CometProject (25)
               :           +- CometBroadcastHashJoin (24)
               :              :- CometProject (14)
               :              :  +- CometBroadcastHashJoin (13)
               :              :     :- CometProject (8)
               :              :     :  +- CometBroadcastHashJoin (7)
               :              :     :     :- CometFilter (2)
               :              :     :     :  +- CometScan parquet spark_catalog.default.store_sales (1)
               :              :     :     +- CometBroadcastExchange (6)
               :              :     :        +- CometProject (5)
               :              :     :           +- CometFilter (4)
               :              :     :              +- CometScan parquet spark_catalog.default.date_dim (3)
               :              :     +- CometBroadcastExchange (12)
               :              :        +- CometProject (11)
               :              :           +- CometFilter (10)
               :              :              +- CometScan parquet spark_catalog.default.customer_address (9)
               :              +- CometBroadcastExchange (23)
               :                 +- CometProject (22)
               :                    +- CometBroadcastHashJoin (21)
               :                       :- CometFilter (16)
               :                       :  +- CometScan parquet spark_catalog.default.item (15)
               :                       +- CometBroadcastExchange (20)
               :                          +- CometProject (19)
               :                             +- CometFilter (18)
               :                                +- CometScan parquet spark_catalog.default.item (17)
               :- CometHashAggregate (42)
               :  +- CometExchange (41)
               :     +- CometHashAggregate (40)
               :        +- CometProject (39)
               :           +- CometBroadcastHashJoin (38)
               :              :- CometProject (36)
               :              :  +- CometBroadcastHashJoin (35)
               :              :     :- CometProject (33)
               :              :     :  +- CometBroadcastHashJoin (32)
               :              :     :     :- CometFilter (30)
               :              :     :     :  +- CometScan parquet spark_catalog.default.catalog_sales (29)
               :              :     :     +- ReusedExchange (31)
               :              :     +- ReusedExchange (34)
               :              +- ReusedExchange (37)
               +- CometHashAggregate (56)
                  +- CometExchange (55)
                     +- CometHashAggregate (54)
                        +- CometProject (53)
                           +- CometBroadcastHashJoin (52)
                              :- CometProject (50)
                              :  +- CometBroadcastHashJoin (49)
                              :     :- CometProject (47)
                              :     :  +- CometBroadcastHashJoin (46)
                              :     :     :- CometFilter (44)
                              :     :     :  +- CometScan parquet spark_catalog.default.web_sales (43)
                              :     :     +- ReusedExchange (45)
                              :     +- ReusedExchange (48)
                              +- ReusedExchange (51)


(1) CometScan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4), dynamicpruningexpression(ss_sold_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Condition : (isnotnull(ss_addr_sk#2) AND isnotnull(ss_item_sk#1))

(3) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#6, d_year#7, d_moy#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,9), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(4) CometFilter
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Condition : ((((isnotnull(d_year#7) AND isnotnull(d_moy#8)) AND (d_year#7 = 1998)) AND (d_moy#8 = 9)) AND isnotnull(d_date_sk#6))

(5) CometProject
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Arguments: [d_date_sk#6], [d_date_sk#6]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: [d_date_sk#6]

(7) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Right output [1]: [d_date_sk#6]
Arguments: [ss_sold_date_sk#4], [d_date_sk#6], Inner, BuildRight

(8) CometProject
Input [5]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, d_date_sk#6]
Arguments: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3], [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]

(9) CometScan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#9, ca_gmt_offset#10]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>

(10) CometFilter
Input [2]: [ca_address_sk#9, ca_gmt_offset#10]
Condition : ((isnotnull(ca_gmt_offset#10) AND (ca_gmt_offset#10 = -5.00)) AND isnotnull(ca_address_sk#9))

(11) CometProject
Input [2]: [ca_address_sk#9, ca_gmt_offset#10]
Arguments: [ca_address_sk#9], [ca_address_sk#9]

(12) CometBroadcastExchange
Input [1]: [ca_address_sk#9]
Arguments: [ca_address_sk#9]

(13) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Right output [1]: [ca_address_sk#9]
Arguments: [ss_addr_sk#2], [ca_address_sk#9], Inner, BuildRight

(14) CometProject
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ca_address_sk#9]
Arguments: [ss_item_sk#1, ss_ext_sales_price#3], [ss_item_sk#1, ss_ext_sales_price#3]

(15) CometScan parquet spark_catalog.default.item
Output [2]: [i_item_sk#11, i_item_id#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(16) CometFilter
Input [2]: [i_item_sk#11, i_item_id#12]
Condition : isnotnull(i_item_sk#11)

(17) CometScan parquet spark_catalog.default.item
Output [2]: [i_item_id#13, i_category#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
ReadSchema: struct<i_item_id:string,i_category:string>

(18) CometFilter
Input [2]: [i_item_id#13, i_category#14]
Condition : (staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_category#14, 50, true, false, true) = Music                                             )

(19) CometProject
Input [2]: [i_item_id#13, i_category#14]
Arguments: [i_item_id#15], [staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#13, 16, true, false, true) AS i_item_id#15]

(20) CometBroadcastExchange
Input [1]: [i_item_id#15]
Arguments: [i_item_id#15]

(21) CometBroadcastHashJoin
Left output [2]: [i_item_sk#11, i_item_id#12]
Right output [1]: [i_item_id#15]
Arguments: [staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#12, 16, true, false, true)], [i_item_id#15], LeftSemi, BuildRight

(22) CometProject
Input [2]: [i_item_sk#11, i_item_id#12]
Arguments: [i_item_sk#11, i_item_id#16], [i_item_sk#11, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#12, 16, true, false, true) AS i_item_id#16]

(23) CometBroadcastExchange
Input [2]: [i_item_sk#11, i_item_id#16]
Arguments: [i_item_sk#11, i_item_id#16]

(24) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#1, ss_ext_sales_price#3]
Right output [2]: [i_item_sk#11, i_item_id#16]
Arguments: [ss_item_sk#1], [i_item_sk#11], Inner, BuildRight

(25) CometProject
Input [4]: [ss_item_sk#1, ss_ext_sales_price#3, i_item_sk#11, i_item_id#16]
Arguments: [ss_ext_sales_price#3, i_item_id#16], [ss_ext_sales_price#3, i_item_id#16]

(26) CometHashAggregate
Input [2]: [ss_ext_sales_price#3, i_item_id#16]
Keys [1]: [i_item_id#16]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#3))]

(27) CometExchange
Input [2]: [i_item_id#16, sum#17]
Arguments: hashpartitioning(i_item_id#16, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(28) CometHashAggregate
Input [2]: [i_item_id#16, sum#17]
Keys [1]: [i_item_id#16]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#3))]

(29) CometScan parquet spark_catalog.default.catalog_sales
Output [4]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, cs_sold_date_sk#21]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#21), dynamicpruningexpression(cs_sold_date_sk#21 IN dynamicpruning#22)]
PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>

(30) CometFilter
Input [4]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, cs_sold_date_sk#21]
Condition : (isnotnull(cs_bill_addr_sk#18) AND isnotnull(cs_item_sk#19))

(31) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#23]

(32) CometBroadcastHashJoin
Left output [4]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, cs_sold_date_sk#21]
Right output [1]: [d_date_sk#23]
Arguments: [cs_sold_date_sk#21], [d_date_sk#23], Inner, BuildRight

(33) CometProject
Input [5]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, cs_sold_date_sk#21, d_date_sk#23]
Arguments: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20], [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20]

(34) ReusedExchange [Reuses operator id: 12]
Output [1]: [ca_address_sk#24]

(35) CometBroadcastHashJoin
Left output [3]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20]
Right output [1]: [ca_address_sk#24]
Arguments: [cs_bill_addr_sk#18], [ca_address_sk#24], Inner, BuildRight

(36) CometProject
Input [4]: [cs_bill_addr_sk#18, cs_item_sk#19, cs_ext_sales_price#20, ca_address_sk#24]
Arguments: [cs_item_sk#19, cs_ext_sales_price#20], [cs_item_sk#19, cs_ext_sales_price#20]

(37) ReusedExchange [Reuses operator id: 23]
Output [2]: [i_item_sk#25, i_item_id#26]

(38) CometBroadcastHashJoin
Left output [2]: [cs_item_sk#19, cs_ext_sales_price#20]
Right output [2]: [i_item_sk#25, i_item_id#26]
Arguments: [cs_item_sk#19], [i_item_sk#25], Inner, BuildRight

(39) CometProject
Input [4]: [cs_item_sk#19, cs_ext_sales_price#20, i_item_sk#25, i_item_id#26]
Arguments: [cs_ext_sales_price#20, i_item_id#26], [cs_ext_sales_price#20, i_item_id#26]

(40) CometHashAggregate
Input [2]: [cs_ext_sales_price#20, i_item_id#26]
Keys [1]: [i_item_id#26]
Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#20))]

(41) CometExchange
Input [2]: [i_item_id#26, sum#27]
Arguments: hashpartitioning(i_item_id#26, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(42) CometHashAggregate
Input [2]: [i_item_id#26, sum#27]
Keys [1]: [i_item_id#26]
Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#20))]

(43) CometScan parquet spark_catalog.default.web_sales
Output [4]: [ws_item_sk#28, ws_bill_addr_sk#29, ws_ext_sales_price#30, ws_sold_date_sk#31]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#31), dynamicpruningexpression(ws_sold_date_sk#31 IN dynamicpruning#32)]
PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(44) CometFilter
Input [4]: [ws_item_sk#28, ws_bill_addr_sk#29, ws_ext_sales_price#30, ws_sold_date_sk#31]
Condition : (isnotnull(ws_bill_addr_sk#29) AND isnotnull(ws_item_sk#28))

(45) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#33]

(46) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#28, ws_bill_addr_sk#29, ws_ext_sales_price#30, ws_sold_date_sk#31]
Right output [1]: [d_date_sk#33]
Arguments: [ws_sold_date_sk#31], [d_date_sk#33], Inner, BuildRight

(47) CometProject
Input [5]: [ws_item_sk#28, ws_bill_addr_sk#29, ws_ext_sales_price#30, ws_sold_date_sk#31, d_date_sk#33]
Arguments: [ws_item_sk#28, ws_bill_addr_sk#29, ws_ext_sales_price#30], [ws_item_sk#28, ws_bill_addr_sk#29, ws_ext_sales_price#30]

(48) ReusedExchange [Reuses operator id: 12]
Output [1]: [ca_address_sk#34]

(49) CometBroadcastHashJoin
Left output [3]: [ws_item_sk#28, ws_bill_addr_sk#29, ws_ext_sales_price#30]
Right output [1]: [ca_address_sk#34]
Arguments: [ws_bill_addr_sk#29], [ca_address_sk#34], Inner, BuildRight

(50) CometProject
Input [4]: [ws_item_sk#28, ws_bill_addr_sk#29, ws_ext_sales_price#30, ca_address_sk#34]
Arguments: [ws_item_sk#28, ws_ext_sales_price#30], [ws_item_sk#28, ws_ext_sales_price#30]

(51) ReusedExchange [Reuses operator id: 23]
Output [2]: [i_item_sk#35, i_item_id#36]

(52) CometBroadcastHashJoin
Left output [2]: [ws_item_sk#28, ws_ext_sales_price#30]
Right output [2]: [i_item_sk#35, i_item_id#36]
Arguments: [ws_item_sk#28], [i_item_sk#35], Inner, BuildRight

(53) CometProject
Input [4]: [ws_item_sk#28, ws_ext_sales_price#30, i_item_sk#35, i_item_id#36]
Arguments: [ws_ext_sales_price#30, i_item_id#36], [ws_ext_sales_price#30, i_item_id#36]

(54) CometHashAggregate
Input [2]: [ws_ext_sales_price#30, i_item_id#36]
Keys [1]: [i_item_id#36]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#30))]

(55) CometExchange
Input [2]: [i_item_id#36, sum#37]
Arguments: hashpartitioning(i_item_id#36, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(56) CometHashAggregate
Input [2]: [i_item_id#36, sum#37]
Keys [1]: [i_item_id#36]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#30))]

(57) CometUnion
Child 0 Input [2]: [i_item_id#38, total_sales#39]
Child 1 Input [2]: [i_item_id#26, total_sales#40]
Child 2 Input [2]: [i_item_id#36, total_sales#41]

(58) CometHashAggregate
Input [2]: [i_item_id#38, total_sales#39]
Keys [1]: [i_item_id#38]
Functions [1]: [partial_sum(total_sales#39)]

(59) CometExchange
Input [3]: [i_item_id#38, sum#42, isEmpty#43]
Arguments: hashpartitioning(i_item_id#38, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(60) CometHashAggregate
Input [3]: [i_item_id#38, sum#42, isEmpty#43]
Keys [1]: [i_item_id#38]
Functions [1]: [sum(total_sales#39)]

(61) CometTakeOrderedAndProject
Input [2]: [i_item_id#38, total_sales#44]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[i_item_id#38 ASC NULLS FIRST,total_sales#44 ASC NULLS FIRST], output=[i_item_id#38,total_sales#44]), [i_item_id#38, total_sales#44], 100, [i_item_id#38 ASC NULLS FIRST, total_sales#44 ASC NULLS FIRST], [i_item_id#38, total_sales#44]

(62) CometColumnarToRow [codegen id : 1]
Input [2]: [i_item_id#38, total_sales#44]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#4 IN dynamicpruning#5
BroadcastExchange (67)
+- * CometColumnarToRow (66)
   +- CometProject (65)
      +- CometFilter (64)
         +- CometScan parquet spark_catalog.default.date_dim (63)


(63) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#6, d_year#7, d_moy#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,9), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(64) CometFilter
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Condition : ((((isnotnull(d_year#7) AND isnotnull(d_moy#8)) AND (d_year#7 = 1998)) AND (d_moy#8 = 9)) AND isnotnull(d_date_sk#6))

(65) CometProject
Input [3]: [d_date_sk#6, d_year#7, d_moy#8]
Arguments: [d_date_sk#6], [d_date_sk#6]

(66) CometColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#6]

(67) BroadcastExchange
Input [1]: [d_date_sk#6]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

Subquery:2 Hosting operator id = 29 Hosting Expression = cs_sold_date_sk#21 IN dynamicpruning#5

Subquery:3 Hosting operator id = 43 Hosting Expression = ws_sold_date_sk#31 IN dynamicpruning#5


