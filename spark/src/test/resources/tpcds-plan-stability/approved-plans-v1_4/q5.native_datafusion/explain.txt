== Physical Plan ==
* CometColumnarToRow (71)
+- CometTakeOrderedAndProject (70)
   +- CometHashAggregate (69)
      +- CometExchange (68)
         +- CometHashAggregate (67)
            +- CometExpand (66)
               +- CometUnion (65)
                  :- CometHashAggregate (22)
                  :  +- CometExchange (21)
                  :     +- CometHashAggregate (20)
                  :        +- CometProject (19)
                  :           +- CometBroadcastHashJoin (18)
                  :              :- CometProject (13)
                  :              :  +- CometBroadcastHashJoin (12)
                  :              :     :- CometUnion (7)
                  :              :     :  :- CometProject (3)
                  :              :     :  :  +- CometFilter (2)
                  :              :     :  :     +- CometNativeScan parquet spark_catalog.default.store_sales (1)
                  :              :     :  +- CometProject (6)
                  :              :     :     +- CometFilter (5)
                  :              :     :        +- CometNativeScan parquet spark_catalog.default.store_returns (4)
                  :              :     +- CometBroadcastExchange (11)
                  :              :        +- CometProject (10)
                  :              :           +- CometFilter (9)
                  :              :              +- CometNativeScan parquet spark_catalog.default.date_dim (8)
                  :              +- CometBroadcastExchange (17)
                  :                 +- CometProject (16)
                  :                    +- CometFilter (15)
                  :                       +- CometNativeScan parquet spark_catalog.default.store (14)
                  :- CometHashAggregate (41)
                  :  +- CometExchange (40)
                  :     +- CometHashAggregate (39)
                  :        +- CometProject (38)
                  :           +- CometBroadcastHashJoin (37)
                  :              :- CometProject (32)
                  :              :  +- CometBroadcastHashJoin (31)
                  :              :     :- CometUnion (29)
                  :              :     :  :- CometProject (25)
                  :              :     :  :  +- CometFilter (24)
                  :              :     :  :     +- CometNativeScan parquet spark_catalog.default.catalog_sales (23)
                  :              :     :  +- CometProject (28)
                  :              :     :     +- CometFilter (27)
                  :              :     :        +- CometNativeScan parquet spark_catalog.default.catalog_returns (26)
                  :              :     +- ReusedExchange (30)
                  :              +- CometBroadcastExchange (36)
                  :                 +- CometProject (35)
                  :                    +- CometFilter (34)
                  :                       +- CometNativeScan parquet spark_catalog.default.catalog_page (33)
                  +- CometHashAggregate (64)
                     +- CometExchange (63)
                        +- CometHashAggregate (62)
                           +- CometProject (61)
                              +- CometBroadcastHashJoin (60)
                                 :- CometProject (55)
                                 :  +- CometBroadcastHashJoin (54)
                                 :     :- CometUnion (52)
                                 :     :  :- CometProject (44)
                                 :     :  :  +- CometFilter (43)
                                 :     :  :     +- CometNativeScan parquet spark_catalog.default.web_sales (42)
                                 :     :  +- CometProject (51)
                                 :     :     +- CometBroadcastHashJoin (50)
                                 :     :        :- CometBroadcastExchange (46)
                                 :     :        :  +- CometNativeScan parquet spark_catalog.default.web_returns (45)
                                 :     :        +- CometProject (49)
                                 :     :           +- CometFilter (48)
                                 :     :              +- CometNativeScan parquet spark_catalog.default.web_sales (47)
                                 :     +- ReusedExchange (53)
                                 +- CometBroadcastExchange (59)
                                    +- CometProject (58)
                                       +- CometFilter (57)
                                          +- CometNativeScan parquet spark_catalog.default.web_site (56)


(1) CometNativeScan parquet spark_catalog.default.store_sales
Output [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#4)]
PushedFilters: [IsNotNull(ss_store_sk)]
ReadSchema: struct<ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4]
Condition : isnotnull(ss_store_sk#1)

(3) CometProject
Input [4]: [ss_store_sk#1, ss_ext_sales_price#2, ss_net_profit#3, ss_sold_date_sk#4]
Arguments: [store_sk#5, date_sk#6, sales_price#7, profit#8, return_amt#9, net_loss#10], [ss_store_sk#1 AS store_sk#5, ss_sold_date_sk#4 AS date_sk#6, ss_ext_sales_price#2 AS sales_price#7, ss_net_profit#3 AS profit#8, 0.00 AS return_amt#9, 0.00 AS net_loss#10]

(4) CometNativeScan parquet spark_catalog.default.store_returns
Output [4]: [sr_store_sk#11, sr_return_amt#12, sr_net_loss#13, sr_returned_date_sk#14]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(sr_returned_date_sk#14)]
PushedFilters: [IsNotNull(sr_store_sk)]
ReadSchema: struct<sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>

(5) CometFilter
Input [4]: [sr_store_sk#11, sr_return_amt#12, sr_net_loss#13, sr_returned_date_sk#14]
Condition : isnotnull(sr_store_sk#11)

(6) CometProject
Input [4]: [sr_store_sk#11, sr_return_amt#12, sr_net_loss#13, sr_returned_date_sk#14]
Arguments: [store_sk#15, date_sk#16, sales_price#17, profit#18, return_amt#19, net_loss#20], [sr_store_sk#11 AS store_sk#15, sr_returned_date_sk#14 AS date_sk#16, 0.00 AS sales_price#17, 0.00 AS profit#18, sr_return_amt#12 AS return_amt#19, sr_net_loss#13 AS net_loss#20]

(7) CometUnion
Child 0 Input [6]: [store_sk#5, date_sk#6, sales_price#7, profit#8, return_amt#9, net_loss#10]
Child 1 Input [6]: [store_sk#15, date_sk#16, sales_price#17, profit#18, return_amt#19, net_loss#20]

(8) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#21, d_date#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-23), LessThanOrEqual(d_date,2000-09-06), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(9) CometFilter
Input [2]: [d_date_sk#21, d_date#22]
Condition : (((isnotnull(d_date#22) AND (d_date#22 >= 2000-08-23)) AND (d_date#22 <= 2000-09-06)) AND isnotnull(d_date_sk#21))

(10) CometProject
Input [2]: [d_date_sk#21, d_date#22]
Arguments: [d_date_sk#21], [d_date_sk#21]

(11) CometBroadcastExchange
Input [1]: [d_date_sk#21]
Arguments: [d_date_sk#21]

(12) CometBroadcastHashJoin
Left output [6]: [store_sk#5, date_sk#6, sales_price#7, profit#8, return_amt#9, net_loss#10]
Right output [1]: [d_date_sk#21]
Arguments: [date_sk#6], [d_date_sk#21], Inner, BuildRight

(13) CometProject
Input [7]: [store_sk#5, date_sk#6, sales_price#7, profit#8, return_amt#9, net_loss#10, d_date_sk#21]
Arguments: [store_sk#5, sales_price#7, profit#8, return_amt#9, net_loss#10], [store_sk#5, sales_price#7, profit#8, return_amt#9, net_loss#10]

(14) CometNativeScan parquet spark_catalog.default.store
Output [2]: [s_store_sk#23, s_store_id#24]
Batched: true
Location [not included in comparison]/{warehouse_dir}/store]
PushedFilters: [IsNotNull(s_store_sk)]
ReadSchema: struct<s_store_sk:int,s_store_id:string>

(15) CometFilter
Input [2]: [s_store_sk#23, s_store_id#24]
Condition : isnotnull(s_store_sk#23)

(16) CometProject
Input [2]: [s_store_sk#23, s_store_id#24]
Arguments: [s_store_sk#23, s_store_id#25], [s_store_sk#23, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, s_store_id#24, 16, true, false, true) AS s_store_id#25]

(17) CometBroadcastExchange
Input [2]: [s_store_sk#23, s_store_id#25]
Arguments: [s_store_sk#23, s_store_id#25]

(18) CometBroadcastHashJoin
Left output [5]: [store_sk#5, sales_price#7, profit#8, return_amt#9, net_loss#10]
Right output [2]: [s_store_sk#23, s_store_id#25]
Arguments: [store_sk#5], [s_store_sk#23], Inner, BuildRight

(19) CometProject
Input [7]: [store_sk#5, sales_price#7, profit#8, return_amt#9, net_loss#10, s_store_sk#23, s_store_id#25]
Arguments: [sales_price#7, profit#8, return_amt#9, net_loss#10, s_store_id#25], [sales_price#7, profit#8, return_amt#9, net_loss#10, s_store_id#25]

(20) CometHashAggregate
Input [5]: [sales_price#7, profit#8, return_amt#9, net_loss#10, s_store_id#25]
Keys [1]: [s_store_id#25]
Functions [4]: [partial_sum(UnscaledValue(sales_price#7)), partial_sum(UnscaledValue(return_amt#9)), partial_sum(UnscaledValue(profit#8)), partial_sum(UnscaledValue(net_loss#10))]

(21) CometExchange
Input [5]: [s_store_id#25, sum#26, sum#27, sum#28, sum#29]
Arguments: hashpartitioning(s_store_id#25, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(22) CometHashAggregate
Input [5]: [s_store_id#25, sum#26, sum#27, sum#28, sum#29]
Keys [1]: [s_store_id#25]
Functions [4]: [sum(UnscaledValue(sales_price#7)), sum(UnscaledValue(return_amt#9)), sum(UnscaledValue(profit#8)), sum(UnscaledValue(net_loss#10))]

(23) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [4]: [cs_catalog_page_sk#30, cs_ext_sales_price#31, cs_net_profit#32, cs_sold_date_sk#33]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#33)]
PushedFilters: [IsNotNull(cs_catalog_page_sk)]
ReadSchema: struct<cs_catalog_page_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:decimal(7,2)>

(24) CometFilter
Input [4]: [cs_catalog_page_sk#30, cs_ext_sales_price#31, cs_net_profit#32, cs_sold_date_sk#33]
Condition : isnotnull(cs_catalog_page_sk#30)

(25) CometProject
Input [4]: [cs_catalog_page_sk#30, cs_ext_sales_price#31, cs_net_profit#32, cs_sold_date_sk#33]
Arguments: [page_sk#34, date_sk#35, sales_price#36, profit#37, return_amt#38, net_loss#39], [cs_catalog_page_sk#30 AS page_sk#34, cs_sold_date_sk#33 AS date_sk#35, cs_ext_sales_price#31 AS sales_price#36, cs_net_profit#32 AS profit#37, 0.00 AS return_amt#38, 0.00 AS net_loss#39]

(26) CometNativeScan parquet spark_catalog.default.catalog_returns
Output [4]: [cr_catalog_page_sk#40, cr_return_amount#41, cr_net_loss#42, cr_returned_date_sk#43]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cr_returned_date_sk#43)]
PushedFilters: [IsNotNull(cr_catalog_page_sk)]
ReadSchema: struct<cr_catalog_page_sk:int,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>

(27) CometFilter
Input [4]: [cr_catalog_page_sk#40, cr_return_amount#41, cr_net_loss#42, cr_returned_date_sk#43]
Condition : isnotnull(cr_catalog_page_sk#40)

(28) CometProject
Input [4]: [cr_catalog_page_sk#40, cr_return_amount#41, cr_net_loss#42, cr_returned_date_sk#43]
Arguments: [page_sk#44, date_sk#45, sales_price#46, profit#47, return_amt#48, net_loss#49], [cr_catalog_page_sk#40 AS page_sk#44, cr_returned_date_sk#43 AS date_sk#45, 0.00 AS sales_price#46, 0.00 AS profit#47, cr_return_amount#41 AS return_amt#48, cr_net_loss#42 AS net_loss#49]

(29) CometUnion
Child 0 Input [6]: [page_sk#34, date_sk#35, sales_price#36, profit#37, return_amt#38, net_loss#39]
Child 1 Input [6]: [page_sk#44, date_sk#45, sales_price#46, profit#47, return_amt#48, net_loss#49]

(30) ReusedExchange [Reuses operator id: 11]
Output [1]: [d_date_sk#50]

(31) CometBroadcastHashJoin
Left output [6]: [page_sk#34, date_sk#35, sales_price#36, profit#37, return_amt#38, net_loss#39]
Right output [1]: [d_date_sk#50]
Arguments: [date_sk#35], [d_date_sk#50], Inner, BuildRight

(32) CometProject
Input [7]: [page_sk#34, date_sk#35, sales_price#36, profit#37, return_amt#38, net_loss#39, d_date_sk#50]
Arguments: [page_sk#34, sales_price#36, profit#37, return_amt#38, net_loss#39], [page_sk#34, sales_price#36, profit#37, return_amt#38, net_loss#39]

(33) CometNativeScan parquet spark_catalog.default.catalog_page
Output [2]: [cp_catalog_page_sk#51, cp_catalog_page_id#52]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_page]
PushedFilters: [IsNotNull(cp_catalog_page_sk)]
ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>

(34) CometFilter
Input [2]: [cp_catalog_page_sk#51, cp_catalog_page_id#52]
Condition : isnotnull(cp_catalog_page_sk#51)

(35) CometProject
Input [2]: [cp_catalog_page_sk#51, cp_catalog_page_id#52]
Arguments: [cp_catalog_page_sk#51, cp_catalog_page_id#53], [cp_catalog_page_sk#51, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, cp_catalog_page_id#52, 16, true, false, true) AS cp_catalog_page_id#53]

(36) CometBroadcastExchange
Input [2]: [cp_catalog_page_sk#51, cp_catalog_page_id#53]
Arguments: [cp_catalog_page_sk#51, cp_catalog_page_id#53]

(37) CometBroadcastHashJoin
Left output [5]: [page_sk#34, sales_price#36, profit#37, return_amt#38, net_loss#39]
Right output [2]: [cp_catalog_page_sk#51, cp_catalog_page_id#53]
Arguments: [page_sk#34], [cp_catalog_page_sk#51], Inner, BuildRight

(38) CometProject
Input [7]: [page_sk#34, sales_price#36, profit#37, return_amt#38, net_loss#39, cp_catalog_page_sk#51, cp_catalog_page_id#53]
Arguments: [sales_price#36, profit#37, return_amt#38, net_loss#39, cp_catalog_page_id#53], [sales_price#36, profit#37, return_amt#38, net_loss#39, cp_catalog_page_id#53]

(39) CometHashAggregate
Input [5]: [sales_price#36, profit#37, return_amt#38, net_loss#39, cp_catalog_page_id#53]
Keys [1]: [cp_catalog_page_id#53]
Functions [4]: [partial_sum(UnscaledValue(sales_price#36)), partial_sum(UnscaledValue(return_amt#38)), partial_sum(UnscaledValue(profit#37)), partial_sum(UnscaledValue(net_loss#39))]

(40) CometExchange
Input [5]: [cp_catalog_page_id#53, sum#54, sum#55, sum#56, sum#57]
Arguments: hashpartitioning(cp_catalog_page_id#53, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(41) CometHashAggregate
Input [5]: [cp_catalog_page_id#53, sum#54, sum#55, sum#56, sum#57]
Keys [1]: [cp_catalog_page_id#53]
Functions [4]: [sum(UnscaledValue(sales_price#36)), sum(UnscaledValue(return_amt#38)), sum(UnscaledValue(profit#37)), sum(UnscaledValue(net_loss#39))]

(42) CometNativeScan parquet spark_catalog.default.web_sales
Output [4]: [ws_web_site_sk#58, ws_ext_sales_price#59, ws_net_profit#60, ws_sold_date_sk#61]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#61)]
PushedFilters: [IsNotNull(ws_web_site_sk)]
ReadSchema: struct<ws_web_site_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decimal(7,2)>

(43) CometFilter
Input [4]: [ws_web_site_sk#58, ws_ext_sales_price#59, ws_net_profit#60, ws_sold_date_sk#61]
Condition : isnotnull(ws_web_site_sk#58)

(44) CometProject
Input [4]: [ws_web_site_sk#58, ws_ext_sales_price#59, ws_net_profit#60, ws_sold_date_sk#61]
Arguments: [wsr_web_site_sk#62, date_sk#63, sales_price#64, profit#65, return_amt#66, net_loss#67], [ws_web_site_sk#58 AS wsr_web_site_sk#62, ws_sold_date_sk#61 AS date_sk#63, ws_ext_sales_price#59 AS sales_price#64, ws_net_profit#60 AS profit#65, 0.00 AS return_amt#66, 0.00 AS net_loss#67]

(45) CometNativeScan parquet spark_catalog.default.web_returns
Output [5]: [wr_item_sk#68, wr_order_number#69, wr_return_amt#70, wr_net_loss#71, wr_returned_date_sk#72]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(wr_returned_date_sk#72)]
ReadSchema: struct<wr_item_sk:int,wr_order_number:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>

(46) CometBroadcastExchange
Input [5]: [wr_item_sk#68, wr_order_number#69, wr_return_amt#70, wr_net_loss#71, wr_returned_date_sk#72]
Arguments: [wr_item_sk#68, wr_order_number#69, wr_return_amt#70, wr_net_loss#71, wr_returned_date_sk#72]

(47) CometNativeScan parquet spark_catalog.default.web_sales
Output [4]: [ws_item_sk#73, ws_web_site_sk#74, ws_order_number#75, ws_sold_date_sk#76]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_sales]
PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_order_number), IsNotNull(ws_web_site_sk)]
ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_order_number:int>

(48) CometFilter
Input [4]: [ws_item_sk#73, ws_web_site_sk#74, ws_order_number#75, ws_sold_date_sk#76]
Condition : ((isnotnull(ws_item_sk#73) AND isnotnull(ws_order_number#75)) AND isnotnull(ws_web_site_sk#74))

(49) CometProject
Input [4]: [ws_item_sk#73, ws_web_site_sk#74, ws_order_number#75, ws_sold_date_sk#76]
Arguments: [ws_item_sk#73, ws_web_site_sk#74, ws_order_number#75], [ws_item_sk#73, ws_web_site_sk#74, ws_order_number#75]

(50) CometBroadcastHashJoin
Left output [5]: [wr_item_sk#68, wr_order_number#69, wr_return_amt#70, wr_net_loss#71, wr_returned_date_sk#72]
Right output [3]: [ws_item_sk#73, ws_web_site_sk#74, ws_order_number#75]
Arguments: [wr_item_sk#68, wr_order_number#69], [ws_item_sk#73, ws_order_number#75], Inner, BuildLeft

(51) CometProject
Input [8]: [wr_item_sk#68, wr_order_number#69, wr_return_amt#70, wr_net_loss#71, wr_returned_date_sk#72, ws_item_sk#73, ws_web_site_sk#74, ws_order_number#75]
Arguments: [wsr_web_site_sk#77, date_sk#78, sales_price#79, profit#80, return_amt#81, net_loss#82], [ws_web_site_sk#74 AS wsr_web_site_sk#77, wr_returned_date_sk#72 AS date_sk#78, 0.00 AS sales_price#79, 0.00 AS profit#80, wr_return_amt#70 AS return_amt#81, wr_net_loss#71 AS net_loss#82]

(52) CometUnion
Child 0 Input [6]: [wsr_web_site_sk#62, date_sk#63, sales_price#64, profit#65, return_amt#66, net_loss#67]
Child 1 Input [6]: [wsr_web_site_sk#77, date_sk#78, sales_price#79, profit#80, return_amt#81, net_loss#82]

(53) ReusedExchange [Reuses operator id: 11]
Output [1]: [d_date_sk#83]

(54) CometBroadcastHashJoin
Left output [6]: [wsr_web_site_sk#62, date_sk#63, sales_price#64, profit#65, return_amt#66, net_loss#67]
Right output [1]: [d_date_sk#83]
Arguments: [date_sk#63], [d_date_sk#83], Inner, BuildRight

(55) CometProject
Input [7]: [wsr_web_site_sk#62, date_sk#63, sales_price#64, profit#65, return_amt#66, net_loss#67, d_date_sk#83]
Arguments: [wsr_web_site_sk#62, sales_price#64, profit#65, return_amt#66, net_loss#67], [wsr_web_site_sk#62, sales_price#64, profit#65, return_amt#66, net_loss#67]

(56) CometNativeScan parquet spark_catalog.default.web_site
Output [2]: [web_site_sk#84, web_site_id#85]
Batched: true
Location [not included in comparison]/{warehouse_dir}/web_site]
PushedFilters: [IsNotNull(web_site_sk)]
ReadSchema: struct<web_site_sk:int,web_site_id:string>

(57) CometFilter
Input [2]: [web_site_sk#84, web_site_id#85]
Condition : isnotnull(web_site_sk#84)

(58) CometProject
Input [2]: [web_site_sk#84, web_site_id#85]
Arguments: [web_site_sk#84, web_site_id#86], [web_site_sk#84, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, web_site_id#85, 16, true, false, true) AS web_site_id#86]

(59) CometBroadcastExchange
Input [2]: [web_site_sk#84, web_site_id#86]
Arguments: [web_site_sk#84, web_site_id#86]

(60) CometBroadcastHashJoin
Left output [5]: [wsr_web_site_sk#62, sales_price#64, profit#65, return_amt#66, net_loss#67]
Right output [2]: [web_site_sk#84, web_site_id#86]
Arguments: [wsr_web_site_sk#62], [web_site_sk#84], Inner, BuildRight

(61) CometProject
Input [7]: [wsr_web_site_sk#62, sales_price#64, profit#65, return_amt#66, net_loss#67, web_site_sk#84, web_site_id#86]
Arguments: [sales_price#64, profit#65, return_amt#66, net_loss#67, web_site_id#86], [sales_price#64, profit#65, return_amt#66, net_loss#67, web_site_id#86]

(62) CometHashAggregate
Input [5]: [sales_price#64, profit#65, return_amt#66, net_loss#67, web_site_id#86]
Keys [1]: [web_site_id#86]
Functions [4]: [partial_sum(UnscaledValue(sales_price#64)), partial_sum(UnscaledValue(return_amt#66)), partial_sum(UnscaledValue(profit#65)), partial_sum(UnscaledValue(net_loss#67))]

(63) CometExchange
Input [5]: [web_site_id#86, sum#87, sum#88, sum#89, sum#90]
Arguments: hashpartitioning(web_site_id#86, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(64) CometHashAggregate
Input [5]: [web_site_id#86, sum#87, sum#88, sum#89, sum#90]
Keys [1]: [web_site_id#86]
Functions [4]: [sum(UnscaledValue(sales_price#64)), sum(UnscaledValue(return_amt#66)), sum(UnscaledValue(profit#65)), sum(UnscaledValue(net_loss#67))]

(65) CometUnion
Child 0 Input [5]: [sales#91, returns#92, profit#93, channel#94, id#95]
Child 1 Input [5]: [sales#96, returns#97, profit#98, channel#99, id#100]
Child 2 Input [5]: [sales#101, returns#102, profit#103, channel#104, id#105]

(66) CometExpand
Input [5]: [sales#91, returns#92, profit#93, channel#94, id#95]
Arguments: [[sales#91, returns#92, profit#93, channel#94, id#95, 0], [sales#91, returns#92, profit#93, channel#94, null, 1], [sales#91, returns#92, profit#93, null, null, 3]], [sales#91, returns#92, profit#93, channel#106, id#107, spark_grouping_id#108]

(67) CometHashAggregate
Input [6]: [sales#91, returns#92, profit#93, channel#106, id#107, spark_grouping_id#108]
Keys [3]: [channel#106, id#107, spark_grouping_id#108]
Functions [3]: [partial_sum(sales#91), partial_sum(returns#92), partial_sum(profit#93)]

(68) CometExchange
Input [9]: [channel#106, id#107, spark_grouping_id#108, sum#109, isEmpty#110, sum#111, isEmpty#112, sum#113, isEmpty#114]
Arguments: hashpartitioning(channel#106, id#107, spark_grouping_id#108, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(69) CometHashAggregate
Input [9]: [channel#106, id#107, spark_grouping_id#108, sum#109, isEmpty#110, sum#111, isEmpty#112, sum#113, isEmpty#114]
Keys [3]: [channel#106, id#107, spark_grouping_id#108]
Functions [3]: [sum(sales#91), sum(returns#92), sum(profit#93)]

(70) CometTakeOrderedAndProject
Input [5]: [channel#106, id#107, sales#115, returns#116, profit#117]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[channel#106 ASC NULLS FIRST,id#107 ASC NULLS FIRST], output=[channel#106,id#107,sales#115,returns#116,profit#117]), [channel#106, id#107, sales#115, returns#116, profit#117], 100, 0, [channel#106 ASC NULLS FIRST, id#107 ASC NULLS FIRST], [channel#106, id#107, sales#115, returns#116, profit#117]

(71) CometColumnarToRow [codegen id : 1]
Input [5]: [channel#106, id#107, sales#115, returns#116, profit#117]

