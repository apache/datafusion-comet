== Physical Plan ==
* CometColumnarToRow (65)
+- CometTakeOrderedAndProject (64)
   +- CometProject (63)
      +- CometBroadcastHashJoin (62)
         :- CometProject (49)
         :  +- CometBroadcastHashJoin (48)
         :     :- CometHashAggregate (26)
         :     :  +- CometExchange (25)
         :     :     +- CometHashAggregate (24)
         :     :        +- CometProject (23)
         :     :           +- CometBroadcastHashJoin (22)
         :     :              :- CometProject (8)
         :     :              :  +- CometBroadcastHashJoin (7)
         :     :              :     :- CometFilter (2)
         :     :              :     :  +- CometNativeScan parquet spark_catalog.default.store_returns (1)
         :     :              :     +- CometBroadcastExchange (6)
         :     :              :        +- CometProject (5)
         :     :              :           +- CometFilter (4)
         :     :              :              +- CometNativeScan parquet spark_catalog.default.item (3)
         :     :              +- CometBroadcastExchange (21)
         :     :                 +- CometProject (20)
         :     :                    +- CometBroadcastHashJoin (19)
         :     :                       :- CometFilter (10)
         :     :                       :  +- CometNativeScan parquet spark_catalog.default.date_dim (9)
         :     :                       +- CometBroadcastExchange (18)
         :     :                          +- CometProject (17)
         :     :                             +- CometBroadcastHashJoin (16)
         :     :                                :- CometNativeScan parquet spark_catalog.default.date_dim (11)
         :     :                                +- CometBroadcastExchange (15)
         :     :                                   +- CometProject (14)
         :     :                                      +- CometFilter (13)
         :     :                                         +- CometNativeScan parquet spark_catalog.default.date_dim (12)
         :     +- CometBroadcastExchange (47)
         :        +- CometHashAggregate (46)
         :           +- CometExchange (45)
         :              +- CometHashAggregate (44)
         :                 +- CometProject (43)
         :                    +- CometBroadcastHashJoin (42)
         :                       :- CometProject (31)
         :                       :  +- CometBroadcastHashJoin (30)
         :                       :     :- CometFilter (28)
         :                       :     :  +- CometNativeScan parquet spark_catalog.default.catalog_returns (27)
         :                       :     +- ReusedExchange (29)
         :                       +- CometBroadcastExchange (41)
         :                          +- CometProject (40)
         :                             +- CometBroadcastHashJoin (39)
         :                                :- CometFilter (33)
         :                                :  +- CometNativeScan parquet spark_catalog.default.date_dim (32)
         :                                +- CometBroadcastExchange (38)
         :                                   +- CometProject (37)
         :                                      +- CometBroadcastHashJoin (36)
         :                                         :- CometNativeScan parquet spark_catalog.default.date_dim (34)
         :                                         +- ReusedExchange (35)
         +- CometBroadcastExchange (61)
            +- CometHashAggregate (60)
               +- CometExchange (59)
                  +- CometHashAggregate (58)
                     +- CometProject (57)
                        +- CometBroadcastHashJoin (56)
                           :- CometProject (54)
                           :  +- CometBroadcastHashJoin (53)
                           :     :- CometFilter (51)
                           :     :  +- CometNativeScan parquet spark_catalog.default.web_returns (50)
                           :     +- ReusedExchange (52)
                           +- ReusedExchange (55)


(1) CometNativeScan parquet spark_catalog.default.store_returns
Output [3]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(sr_returned_date_sk#3)]
PushedFilters: [IsNotNull(sr_item_sk)]
ReadSchema: struct<sr_item_sk:int,sr_return_quantity:int>

(2) CometFilter
Input [3]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3]
Condition : isnotnull(sr_item_sk#1)

(3) CometNativeScan parquet spark_catalog.default.item
Output [2]: [i_item_sk#4, i_item_id#5]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(4) CometFilter
Input [2]: [i_item_sk#4, i_item_id#5]
Condition : (isnotnull(i_item_sk#4) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#5, 16, true, false, true)))

(5) CometProject
Input [2]: [i_item_sk#4, i_item_id#5]
Arguments: [i_item_sk#4, i_item_id#6], [i_item_sk#4, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#5, 16, true, false, true) AS i_item_id#6]

(6) CometBroadcastExchange
Input [2]: [i_item_sk#4, i_item_id#6]
Arguments: [i_item_sk#4, i_item_id#6]

(7) CometBroadcastHashJoin
Left output [3]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3]
Right output [2]: [i_item_sk#4, i_item_id#6]
Arguments: [sr_item_sk#1], [i_item_sk#4], Inner, BuildRight

(8) CometProject
Input [5]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3, i_item_sk#4, i_item_id#6]
Arguments: [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#6], [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#6]

(9) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#7, d_date#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(10) CometFilter
Input [2]: [d_date_sk#7, d_date#8]
Condition : isnotnull(d_date_sk#7)

(11) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date#8, d_week_seq#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date:date,d_week_seq:int>

(12) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date#8, d_week_seq#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date:date,d_week_seq:int>

(13) CometFilter
Input [2]: [d_date#8, d_week_seq#9]
Condition : cast(d_date#8 as string) IN (2000-06-30,2000-09-27,2000-11-17)

(14) CometProject
Input [2]: [d_date#8, d_week_seq#9]
Arguments: [d_week_seq#9#10], [d_week_seq#9 AS d_week_seq#9#10]

(15) CometBroadcastExchange
Input [1]: [d_week_seq#9#10]
Arguments: [d_week_seq#9#10]

(16) CometBroadcastHashJoin
Left output [2]: [d_date#8, d_week_seq#9]
Right output [1]: [d_week_seq#9#10]
Arguments: [d_week_seq#9], [d_week_seq#9#10], LeftSemi, BuildRight

(17) CometProject
Input [2]: [d_date#8, d_week_seq#9]
Arguments: [d_date#8#11], [d_date#8 AS d_date#8#11]

(18) CometBroadcastExchange
Input [1]: [d_date#8#11]
Arguments: [d_date#8#11]

(19) CometBroadcastHashJoin
Left output [2]: [d_date_sk#7, d_date#8]
Right output [1]: [d_date#8#11]
Arguments: [d_date#8], [d_date#8#11], LeftSemi, BuildRight

(20) CometProject
Input [2]: [d_date_sk#7, d_date#8]
Arguments: [d_date_sk#7], [d_date_sk#7]

(21) CometBroadcastExchange
Input [1]: [d_date_sk#7]
Arguments: [d_date_sk#7]

(22) CometBroadcastHashJoin
Left output [3]: [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#6]
Right output [1]: [d_date_sk#7]
Arguments: [sr_returned_date_sk#3], [d_date_sk#7], Inner, BuildRight

(23) CometProject
Input [4]: [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#6, d_date_sk#7]
Arguments: [sr_return_quantity#2, i_item_id#6], [sr_return_quantity#2, i_item_id#6]

(24) CometHashAggregate
Input [2]: [sr_return_quantity#2, i_item_id#6]
Keys [1]: [i_item_id#6]
Functions [1]: [partial_sum(sr_return_quantity#2)]

(25) CometExchange
Input [2]: [i_item_id#6, sum#12]
Arguments: hashpartitioning(i_item_id#6, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(26) CometHashAggregate
Input [2]: [i_item_id#6, sum#12]
Keys [1]: [i_item_id#6]
Functions [1]: [sum(sr_return_quantity#2)]

(27) CometNativeScan parquet spark_catalog.default.catalog_returns
Output [3]: [cr_item_sk#13, cr_return_quantity#14, cr_returned_date_sk#15]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cr_returned_date_sk#15)]
PushedFilters: [IsNotNull(cr_item_sk)]
ReadSchema: struct<cr_item_sk:int,cr_return_quantity:int>

(28) CometFilter
Input [3]: [cr_item_sk#13, cr_return_quantity#14, cr_returned_date_sk#15]
Condition : isnotnull(cr_item_sk#13)

(29) ReusedExchange [Reuses operator id: 6]
Output [2]: [i_item_sk#16, i_item_id#17]

(30) CometBroadcastHashJoin
Left output [3]: [cr_item_sk#13, cr_return_quantity#14, cr_returned_date_sk#15]
Right output [2]: [i_item_sk#16, i_item_id#17]
Arguments: [cr_item_sk#13], [i_item_sk#16], Inner, BuildRight

(31) CometProject
Input [5]: [cr_item_sk#13, cr_return_quantity#14, cr_returned_date_sk#15, i_item_sk#16, i_item_id#17]
Arguments: [cr_return_quantity#14, cr_returned_date_sk#15, i_item_id#17], [cr_return_quantity#14, cr_returned_date_sk#15, i_item_id#17]

(32) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#18, d_date#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(33) CometFilter
Input [2]: [d_date_sk#18, d_date#19]
Condition : isnotnull(d_date_sk#18)

(34) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date#8, d_week_seq#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date:date,d_week_seq:int>

(35) ReusedExchange [Reuses operator id: 15]
Output [1]: [d_week_seq#9#20]

(36) CometBroadcastHashJoin
Left output [2]: [d_date#8, d_week_seq#9]
Right output [1]: [d_week_seq#9#20]
Arguments: [d_week_seq#9], [d_week_seq#9#20], LeftSemi, BuildRight

(37) CometProject
Input [2]: [d_date#8, d_week_seq#9]
Arguments: [d_date#8], [d_date#8]

(38) CometBroadcastExchange
Input [1]: [d_date#8]
Arguments: [d_date#8]

(39) CometBroadcastHashJoin
Left output [2]: [d_date_sk#18, d_date#19]
Right output [1]: [d_date#8]
Arguments: [d_date#19], [d_date#8], LeftSemi, BuildRight

(40) CometProject
Input [2]: [d_date_sk#18, d_date#19]
Arguments: [d_date_sk#18], [d_date_sk#18]

(41) CometBroadcastExchange
Input [1]: [d_date_sk#18]
Arguments: [d_date_sk#18]

(42) CometBroadcastHashJoin
Left output [3]: [cr_return_quantity#14, cr_returned_date_sk#15, i_item_id#17]
Right output [1]: [d_date_sk#18]
Arguments: [cr_returned_date_sk#15], [d_date_sk#18], Inner, BuildRight

(43) CometProject
Input [4]: [cr_return_quantity#14, cr_returned_date_sk#15, i_item_id#17, d_date_sk#18]
Arguments: [cr_return_quantity#14, i_item_id#17], [cr_return_quantity#14, i_item_id#17]

(44) CometHashAggregate
Input [2]: [cr_return_quantity#14, i_item_id#17]
Keys [1]: [i_item_id#17]
Functions [1]: [partial_sum(cr_return_quantity#14)]

(45) CometExchange
Input [2]: [i_item_id#17, sum#21]
Arguments: hashpartitioning(i_item_id#17, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(46) CometHashAggregate
Input [2]: [i_item_id#17, sum#21]
Keys [1]: [i_item_id#17]
Functions [1]: [sum(cr_return_quantity#14)]

(47) CometBroadcastExchange
Input [2]: [item_id#22, cr_item_qty#23]
Arguments: [item_id#22, cr_item_qty#23]

(48) CometBroadcastHashJoin
Left output [2]: [item_id#24, sr_item_qty#25]
Right output [2]: [item_id#22, cr_item_qty#23]
Arguments: [item_id#24], [item_id#22], Inner, BuildRight

(49) CometProject
Input [4]: [item_id#24, sr_item_qty#25, item_id#22, cr_item_qty#23]
Arguments: [item_id#24, sr_item_qty#25, cr_item_qty#23], [item_id#24, sr_item_qty#25, cr_item_qty#23]

(50) CometNativeScan parquet spark_catalog.default.web_returns
Output [3]: [wr_item_sk#26, wr_return_quantity#27, wr_returned_date_sk#28]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(wr_returned_date_sk#28)]
PushedFilters: [IsNotNull(wr_item_sk)]
ReadSchema: struct<wr_item_sk:int,wr_return_quantity:int>

(51) CometFilter
Input [3]: [wr_item_sk#26, wr_return_quantity#27, wr_returned_date_sk#28]
Condition : isnotnull(wr_item_sk#26)

(52) ReusedExchange [Reuses operator id: 6]
Output [2]: [i_item_sk#29, i_item_id#30]

(53) CometBroadcastHashJoin
Left output [3]: [wr_item_sk#26, wr_return_quantity#27, wr_returned_date_sk#28]
Right output [2]: [i_item_sk#29, i_item_id#30]
Arguments: [wr_item_sk#26], [i_item_sk#29], Inner, BuildRight

(54) CometProject
Input [5]: [wr_item_sk#26, wr_return_quantity#27, wr_returned_date_sk#28, i_item_sk#29, i_item_id#30]
Arguments: [wr_return_quantity#27, wr_returned_date_sk#28, i_item_id#30], [wr_return_quantity#27, wr_returned_date_sk#28, i_item_id#30]

(55) ReusedExchange [Reuses operator id: 41]
Output [1]: [d_date_sk#31]

(56) CometBroadcastHashJoin
Left output [3]: [wr_return_quantity#27, wr_returned_date_sk#28, i_item_id#30]
Right output [1]: [d_date_sk#31]
Arguments: [wr_returned_date_sk#28], [d_date_sk#31], Inner, BuildRight

(57) CometProject
Input [4]: [wr_return_quantity#27, wr_returned_date_sk#28, i_item_id#30, d_date_sk#31]
Arguments: [wr_return_quantity#27, i_item_id#30], [wr_return_quantity#27, i_item_id#30]

(58) CometHashAggregate
Input [2]: [wr_return_quantity#27, i_item_id#30]
Keys [1]: [i_item_id#30]
Functions [1]: [partial_sum(wr_return_quantity#27)]

(59) CometExchange
Input [2]: [i_item_id#30, sum#32]
Arguments: hashpartitioning(i_item_id#30, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(60) CometHashAggregate
Input [2]: [i_item_id#30, sum#32]
Keys [1]: [i_item_id#30]
Functions [1]: [sum(wr_return_quantity#27)]

(61) CometBroadcastExchange
Input [2]: [item_id#33, wr_item_qty#34]
Arguments: [item_id#33, wr_item_qty#34]

(62) CometBroadcastHashJoin
Left output [3]: [item_id#24, sr_item_qty#25, cr_item_qty#23]
Right output [2]: [item_id#33, wr_item_qty#34]
Arguments: [item_id#24], [item_id#33], Inner, BuildRight

(63) CometProject
Input [5]: [item_id#24, sr_item_qty#25, cr_item_qty#23, item_id#33, wr_item_qty#34]
Arguments: [item_id#24, sr_item_qty#25, sr_dev#35, cr_item_qty#23, cr_dev#36, wr_item_qty#34, wr_dev#37, average#38], [item_id#24, sr_item_qty#25, (((cast(sr_item_qty#25 as double) / knownfloatingpointnormalized(normalizenanandzero(cast(((sr_item_qty#25 + cr_item_qty#23) + wr_item_qty#34) as double)))) / 3.0) * 100.0) AS sr_dev#35, cr_item_qty#23, (((cast(cr_item_qty#23 as double) / knownfloatingpointnormalized(normalizenanandzero(cast(((sr_item_qty#25 + cr_item_qty#23) + wr_item_qty#34) as double)))) / 3.0) * 100.0) AS cr_dev#36, wr_item_qty#34, (((cast(wr_item_qty#34 as double) / knownfloatingpointnormalized(normalizenanandzero(cast(((sr_item_qty#25 + cr_item_qty#23) + wr_item_qty#34) as double)))) / 3.0) * 100.0) AS wr_dev#37, (cast(((sr_item_qty#25 + cr_item_qty#23) + wr_item_qty#34) as decimal(20,0)) / 3.0) AS average#38]

(64) CometTakeOrderedAndProject
Input [8]: [item_id#24, sr_item_qty#25, sr_dev#35, cr_item_qty#23, cr_dev#36, wr_item_qty#34, wr_dev#37, average#38]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[item_id#24 ASC NULLS FIRST,sr_item_qty#25 ASC NULLS FIRST], output=[item_id#24,sr_item_qty#25,sr_dev#35,cr_item_qty#23,cr_dev#36,wr_item_qty#34,wr_dev#37,average#38]), [item_id#24, sr_item_qty#25, sr_dev#35, cr_item_qty#23, cr_dev#36, wr_item_qty#34, wr_dev#37, average#38], 100, 0, [item_id#24 ASC NULLS FIRST, sr_item_qty#25 ASC NULLS FIRST], [item_id#24, sr_item_qty#25, sr_dev#35, cr_item_qty#23, cr_dev#36, wr_item_qty#34, wr_dev#37, average#38]

(65) CometColumnarToRow [codegen id : 1]
Input [8]: [item_id#24, sr_item_qty#25, sr_dev#35, cr_item_qty#23, cr_dev#36, wr_item_qty#34, wr_dev#37, average#38]

