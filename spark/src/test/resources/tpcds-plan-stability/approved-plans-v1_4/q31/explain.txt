== Physical Plan ==
* ColumnarToRow (90)
+- CometSort (89)
   +- CometColumnarExchange (88)
      +- CometProject (87)
         +- CometBroadcastHashJoin (86)
            :- CometProject (73)
            :  +- CometBroadcastHashJoin (72)
            :     :- CometBroadcastHashJoin (59)
            :     :  :- CometProject (46)
            :     :  :  +- CometBroadcastHashJoin (45)
            :     :  :     :- CometBroadcastHashJoin (30)
            :     :  :     :  :- CometHashAggregate (15)
            :     :  :     :  :  +- CometExchange (14)
            :     :  :     :  :     +- CometHashAggregate (13)
            :     :  :     :  :        +- CometProject (12)
            :     :  :     :  :           +- CometBroadcastHashJoin (11)
            :     :  :     :  :              :- CometProject (7)
            :     :  :     :  :              :  +- CometBroadcastHashJoin (6)
            :     :  :     :  :              :     :- CometFilter (2)
            :     :  :     :  :              :     :  +- CometScan parquet spark_catalog.default.store_sales (1)
            :     :  :     :  :              :     +- CometBroadcastExchange (5)
            :     :  :     :  :              :        +- CometFilter (4)
            :     :  :     :  :              :           +- CometScan parquet spark_catalog.default.date_dim (3)
            :     :  :     :  :              +- CometBroadcastExchange (10)
            :     :  :     :  :                 +- CometFilter (9)
            :     :  :     :  :                    +- CometScan parquet spark_catalog.default.customer_address (8)
            :     :  :     :  +- CometBroadcastExchange (29)
            :     :  :     :     +- CometHashAggregate (28)
            :     :  :     :        +- CometExchange (27)
            :     :  :     :           +- CometHashAggregate (26)
            :     :  :     :              +- CometProject (25)
            :     :  :     :                 +- CometBroadcastHashJoin (24)
            :     :  :     :                    :- CometProject (22)
            :     :  :     :                    :  +- CometBroadcastHashJoin (21)
            :     :  :     :                    :     :- CometFilter (17)
            :     :  :     :                    :     :  +- CometScan parquet spark_catalog.default.store_sales (16)
            :     :  :     :                    :     +- CometBroadcastExchange (20)
            :     :  :     :                    :        +- CometFilter (19)
            :     :  :     :                    :           +- CometScan parquet spark_catalog.default.date_dim (18)
            :     :  :     :                    +- ReusedExchange (23)
            :     :  :     +- CometBroadcastExchange (44)
            :     :  :        +- CometHashAggregate (43)
            :     :  :           +- CometExchange (42)
            :     :  :              +- CometHashAggregate (41)
            :     :  :                 +- CometProject (40)
            :     :  :                    +- CometBroadcastHashJoin (39)
            :     :  :                       :- CometProject (37)
            :     :  :                       :  +- CometBroadcastHashJoin (36)
            :     :  :                       :     :- CometFilter (32)
            :     :  :                       :     :  +- CometScan parquet spark_catalog.default.store_sales (31)
            :     :  :                       :     +- CometBroadcastExchange (35)
            :     :  :                       :        +- CometFilter (34)
            :     :  :                       :           +- CometScan parquet spark_catalog.default.date_dim (33)
            :     :  :                       +- ReusedExchange (38)
            :     :  +- CometBroadcastExchange (58)
            :     :     +- CometHashAggregate (57)
            :     :        +- CometExchange (56)
            :     :           +- CometHashAggregate (55)
            :     :              +- CometProject (54)
            :     :                 +- CometBroadcastHashJoin (53)
            :     :                    :- CometProject (51)
            :     :                    :  +- CometBroadcastHashJoin (50)
            :     :                    :     :- CometFilter (48)
            :     :                    :     :  +- CometScan parquet spark_catalog.default.web_sales (47)
            :     :                    :     +- ReusedExchange (49)
            :     :                    +- ReusedExchange (52)
            :     +- CometBroadcastExchange (71)
            :        +- CometHashAggregate (70)
            :           +- CometExchange (69)
            :              +- CometHashAggregate (68)
            :                 +- CometProject (67)
            :                    +- CometBroadcastHashJoin (66)
            :                       :- CometProject (64)
            :                       :  +- CometBroadcastHashJoin (63)
            :                       :     :- CometFilter (61)
            :                       :     :  +- CometScan parquet spark_catalog.default.web_sales (60)
            :                       :     +- ReusedExchange (62)
            :                       +- ReusedExchange (65)
            +- CometBroadcastExchange (85)
               +- CometHashAggregate (84)
                  +- CometExchange (83)
                     +- CometHashAggregate (82)
                        +- CometProject (81)
                           +- CometBroadcastHashJoin (80)
                              :- CometProject (78)
                              :  +- CometBroadcastHashJoin (77)
                              :     :- CometFilter (75)
                              :     :  +- CometScan parquet spark_catalog.default.web_sales (74)
                              :     +- ReusedExchange (76)
                              +- ReusedExchange (79)


(1) CometScan parquet spark_catalog.default.store_sales
Output [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#3), dynamicpruningexpression(ss_sold_date_sk#3 IN dynamicpruning#4)]
PushedFilters: [IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) CometFilter
Input [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Condition : isnotnull(ss_addr_sk#1)

(3) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#5, d_year#6, d_qoy#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(4) CometFilter
Input [3]: [d_date_sk#5, d_year#6, d_qoy#7]
Condition : ((((isnotnull(d_qoy#7) AND isnotnull(d_year#6)) AND (d_qoy#7 = 1)) AND (d_year#6 = 2000)) AND isnotnull(d_date_sk#5))

(5) CometBroadcastExchange
Input [3]: [d_date_sk#5, d_year#6, d_qoy#7]
Arguments: [d_date_sk#5, d_year#6, d_qoy#7]

(6) CometBroadcastHashJoin
Left output [3]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3]
Right output [3]: [d_date_sk#5, d_year#6, d_qoy#7]
Arguments: [ss_sold_date_sk#3], [d_date_sk#5], Inner, BuildRight

(7) CometProject
Input [6]: [ss_addr_sk#1, ss_ext_sales_price#2, ss_sold_date_sk#3, d_date_sk#5, d_year#6, d_qoy#7]
Arguments: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#6, d_qoy#7], [ss_addr_sk#1, ss_ext_sales_price#2, d_year#6, d_qoy#7]

(8) CometScan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#8, ca_county#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county)]
ReadSchema: struct<ca_address_sk:int,ca_county:string>

(9) CometFilter
Input [2]: [ca_address_sk#8, ca_county#9]
Condition : (isnotnull(ca_address_sk#8) AND isnotnull(ca_county#9))

(10) CometBroadcastExchange
Input [2]: [ca_address_sk#8, ca_county#9]
Arguments: [ca_address_sk#8, ca_county#9]

(11) CometBroadcastHashJoin
Left output [4]: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#6, d_qoy#7]
Right output [2]: [ca_address_sk#8, ca_county#9]
Arguments: [ss_addr_sk#1], [ca_address_sk#8], Inner, BuildRight

(12) CometProject
Input [6]: [ss_addr_sk#1, ss_ext_sales_price#2, d_year#6, d_qoy#7, ca_address_sk#8, ca_county#9]
Arguments: [ss_ext_sales_price#2, d_year#6, d_qoy#7, ca_county#9], [ss_ext_sales_price#2, d_year#6, d_qoy#7, ca_county#9]

(13) CometHashAggregate
Input [4]: [ss_ext_sales_price#2, d_year#6, d_qoy#7, ca_county#9]
Keys [3]: [ca_county#9, d_qoy#7, d_year#6]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#2))]

(14) CometExchange
Input [4]: [ca_county#9, d_qoy#7, d_year#6, sum#10]
Arguments: hashpartitioning(ca_county#9, d_qoy#7, d_year#6, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(15) CometHashAggregate
Input [4]: [ca_county#9, d_qoy#7, d_year#6, sum#10]
Keys [3]: [ca_county#9, d_qoy#7, d_year#6]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#2))]

(16) CometScan parquet spark_catalog.default.store_sales
Output [3]: [ss_addr_sk#11, ss_ext_sales_price#12, ss_sold_date_sk#13]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#13), dynamicpruningexpression(ss_sold_date_sk#13 IN dynamicpruning#14)]
PushedFilters: [IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(17) CometFilter
Input [3]: [ss_addr_sk#11, ss_ext_sales_price#12, ss_sold_date_sk#13]
Condition : isnotnull(ss_addr_sk#11)

(18) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#15, d_year#16, d_qoy#17]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(19) CometFilter
Input [3]: [d_date_sk#15, d_year#16, d_qoy#17]
Condition : ((((isnotnull(d_qoy#17) AND isnotnull(d_year#16)) AND (d_qoy#17 = 2)) AND (d_year#16 = 2000)) AND isnotnull(d_date_sk#15))

(20) CometBroadcastExchange
Input [3]: [d_date_sk#15, d_year#16, d_qoy#17]
Arguments: [d_date_sk#15, d_year#16, d_qoy#17]

(21) CometBroadcastHashJoin
Left output [3]: [ss_addr_sk#11, ss_ext_sales_price#12, ss_sold_date_sk#13]
Right output [3]: [d_date_sk#15, d_year#16, d_qoy#17]
Arguments: [ss_sold_date_sk#13], [d_date_sk#15], Inner, BuildRight

(22) CometProject
Input [6]: [ss_addr_sk#11, ss_ext_sales_price#12, ss_sold_date_sk#13, d_date_sk#15, d_year#16, d_qoy#17]
Arguments: [ss_addr_sk#11, ss_ext_sales_price#12, d_year#16, d_qoy#17], [ss_addr_sk#11, ss_ext_sales_price#12, d_year#16, d_qoy#17]

(23) ReusedExchange [Reuses operator id: 10]
Output [2]: [ca_address_sk#18, ca_county#19]

(24) CometBroadcastHashJoin
Left output [4]: [ss_addr_sk#11, ss_ext_sales_price#12, d_year#16, d_qoy#17]
Right output [2]: [ca_address_sk#18, ca_county#19]
Arguments: [ss_addr_sk#11], [ca_address_sk#18], Inner, BuildRight

(25) CometProject
Input [6]: [ss_addr_sk#11, ss_ext_sales_price#12, d_year#16, d_qoy#17, ca_address_sk#18, ca_county#19]
Arguments: [ss_ext_sales_price#12, d_year#16, d_qoy#17, ca_county#19], [ss_ext_sales_price#12, d_year#16, d_qoy#17, ca_county#19]

(26) CometHashAggregate
Input [4]: [ss_ext_sales_price#12, d_year#16, d_qoy#17, ca_county#19]
Keys [3]: [ca_county#19, d_qoy#17, d_year#16]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#12))]

(27) CometExchange
Input [4]: [ca_county#19, d_qoy#17, d_year#16, sum#20]
Arguments: hashpartitioning(ca_county#19, d_qoy#17, d_year#16, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(28) CometHashAggregate
Input [4]: [ca_county#19, d_qoy#17, d_year#16, sum#20]
Keys [3]: [ca_county#19, d_qoy#17, d_year#16]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#12))]

(29) CometBroadcastExchange
Input [2]: [ca_county#19, store_sales#21]
Arguments: [ca_county#19, store_sales#21]

(30) CometBroadcastHashJoin
Left output [3]: [ca_county#9, d_year#6, store_sales#22]
Right output [2]: [ca_county#19, store_sales#21]
Arguments: [ca_county#9], [ca_county#19], Inner, BuildRight

(31) CometScan parquet spark_catalog.default.store_sales
Output [3]: [ss_addr_sk#23, ss_ext_sales_price#24, ss_sold_date_sk#25]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#25), dynamicpruningexpression(ss_sold_date_sk#25 IN dynamicpruning#26)]
PushedFilters: [IsNotNull(ss_addr_sk)]
ReadSchema: struct<ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(32) CometFilter
Input [3]: [ss_addr_sk#23, ss_ext_sales_price#24, ss_sold_date_sk#25]
Condition : isnotnull(ss_addr_sk#23)

(33) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#27, d_year#28, d_qoy#29]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(34) CometFilter
Input [3]: [d_date_sk#27, d_year#28, d_qoy#29]
Condition : ((((isnotnull(d_qoy#29) AND isnotnull(d_year#28)) AND (d_qoy#29 = 3)) AND (d_year#28 = 2000)) AND isnotnull(d_date_sk#27))

(35) CometBroadcastExchange
Input [3]: [d_date_sk#27, d_year#28, d_qoy#29]
Arguments: [d_date_sk#27, d_year#28, d_qoy#29]

(36) CometBroadcastHashJoin
Left output [3]: [ss_addr_sk#23, ss_ext_sales_price#24, ss_sold_date_sk#25]
Right output [3]: [d_date_sk#27, d_year#28, d_qoy#29]
Arguments: [ss_sold_date_sk#25], [d_date_sk#27], Inner, BuildRight

(37) CometProject
Input [6]: [ss_addr_sk#23, ss_ext_sales_price#24, ss_sold_date_sk#25, d_date_sk#27, d_year#28, d_qoy#29]
Arguments: [ss_addr_sk#23, ss_ext_sales_price#24, d_year#28, d_qoy#29], [ss_addr_sk#23, ss_ext_sales_price#24, d_year#28, d_qoy#29]

(38) ReusedExchange [Reuses operator id: 10]
Output [2]: [ca_address_sk#30, ca_county#31]

(39) CometBroadcastHashJoin
Left output [4]: [ss_addr_sk#23, ss_ext_sales_price#24, d_year#28, d_qoy#29]
Right output [2]: [ca_address_sk#30, ca_county#31]
Arguments: [ss_addr_sk#23], [ca_address_sk#30], Inner, BuildRight

(40) CometProject
Input [6]: [ss_addr_sk#23, ss_ext_sales_price#24, d_year#28, d_qoy#29, ca_address_sk#30, ca_county#31]
Arguments: [ss_ext_sales_price#24, d_year#28, d_qoy#29, ca_county#31], [ss_ext_sales_price#24, d_year#28, d_qoy#29, ca_county#31]

(41) CometHashAggregate
Input [4]: [ss_ext_sales_price#24, d_year#28, d_qoy#29, ca_county#31]
Keys [3]: [ca_county#31, d_qoy#29, d_year#28]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#24))]

(42) CometExchange
Input [4]: [ca_county#31, d_qoy#29, d_year#28, sum#32]
Arguments: hashpartitioning(ca_county#31, d_qoy#29, d_year#28, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(43) CometHashAggregate
Input [4]: [ca_county#31, d_qoy#29, d_year#28, sum#32]
Keys [3]: [ca_county#31, d_qoy#29, d_year#28]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#24))]

(44) CometBroadcastExchange
Input [2]: [ca_county#31, store_sales#33]
Arguments: [ca_county#31, store_sales#33]

(45) CometBroadcastHashJoin
Left output [5]: [ca_county#9, d_year#6, store_sales#22, ca_county#19, store_sales#21]
Right output [2]: [ca_county#31, store_sales#33]
Arguments: [ca_county#19], [ca_county#31], Inner, BuildRight

(46) CometProject
Input [7]: [ca_county#9, d_year#6, store_sales#22, ca_county#19, store_sales#21, ca_county#31, store_sales#33]
Arguments: [ca_county#9, d_year#6, store_sales#22, store_sales#21, store_sales#33], [ca_county#9, d_year#6, store_sales#22, store_sales#21, store_sales#33]

(47) CometScan parquet spark_catalog.default.web_sales
Output [3]: [ws_bill_addr_sk#34, ws_ext_sales_price#35, ws_sold_date_sk#36]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#36), dynamicpruningexpression(ws_sold_date_sk#36 IN dynamicpruning#37)]
PushedFilters: [IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(48) CometFilter
Input [3]: [ws_bill_addr_sk#34, ws_ext_sales_price#35, ws_sold_date_sk#36]
Condition : isnotnull(ws_bill_addr_sk#34)

(49) ReusedExchange [Reuses operator id: 5]
Output [3]: [d_date_sk#38, d_year#39, d_qoy#40]

(50) CometBroadcastHashJoin
Left output [3]: [ws_bill_addr_sk#34, ws_ext_sales_price#35, ws_sold_date_sk#36]
Right output [3]: [d_date_sk#38, d_year#39, d_qoy#40]
Arguments: [ws_sold_date_sk#36], [d_date_sk#38], Inner, BuildRight

(51) CometProject
Input [6]: [ws_bill_addr_sk#34, ws_ext_sales_price#35, ws_sold_date_sk#36, d_date_sk#38, d_year#39, d_qoy#40]
Arguments: [ws_bill_addr_sk#34, ws_ext_sales_price#35, d_year#39, d_qoy#40], [ws_bill_addr_sk#34, ws_ext_sales_price#35, d_year#39, d_qoy#40]

(52) ReusedExchange [Reuses operator id: 10]
Output [2]: [ca_address_sk#41, ca_county#42]

(53) CometBroadcastHashJoin
Left output [4]: [ws_bill_addr_sk#34, ws_ext_sales_price#35, d_year#39, d_qoy#40]
Right output [2]: [ca_address_sk#41, ca_county#42]
Arguments: [ws_bill_addr_sk#34], [ca_address_sk#41], Inner, BuildRight

(54) CometProject
Input [6]: [ws_bill_addr_sk#34, ws_ext_sales_price#35, d_year#39, d_qoy#40, ca_address_sk#41, ca_county#42]
Arguments: [ws_ext_sales_price#35, d_year#39, d_qoy#40, ca_county#42], [ws_ext_sales_price#35, d_year#39, d_qoy#40, ca_county#42]

(55) CometHashAggregate
Input [4]: [ws_ext_sales_price#35, d_year#39, d_qoy#40, ca_county#42]
Keys [3]: [ca_county#42, d_qoy#40, d_year#39]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#35))]

(56) CometExchange
Input [4]: [ca_county#42, d_qoy#40, d_year#39, sum#43]
Arguments: hashpartitioning(ca_county#42, d_qoy#40, d_year#39, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(57) CometHashAggregate
Input [4]: [ca_county#42, d_qoy#40, d_year#39, sum#43]
Keys [3]: [ca_county#42, d_qoy#40, d_year#39]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#35))]

(58) CometBroadcastExchange
Input [2]: [ca_county#42, web_sales#44]
Arguments: [ca_county#42, web_sales#44]

(59) CometBroadcastHashJoin
Left output [5]: [ca_county#9, d_year#6, store_sales#22, store_sales#21, store_sales#33]
Right output [2]: [ca_county#42, web_sales#44]
Arguments: [ca_county#9], [ca_county#42], Inner, BuildRight

(60) CometScan parquet spark_catalog.default.web_sales
Output [3]: [ws_bill_addr_sk#45, ws_ext_sales_price#46, ws_sold_date_sk#47]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#47), dynamicpruningexpression(ws_sold_date_sk#47 IN dynamicpruning#48)]
PushedFilters: [IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(61) CometFilter
Input [3]: [ws_bill_addr_sk#45, ws_ext_sales_price#46, ws_sold_date_sk#47]
Condition : isnotnull(ws_bill_addr_sk#45)

(62) ReusedExchange [Reuses operator id: 20]
Output [3]: [d_date_sk#49, d_year#50, d_qoy#51]

(63) CometBroadcastHashJoin
Left output [3]: [ws_bill_addr_sk#45, ws_ext_sales_price#46, ws_sold_date_sk#47]
Right output [3]: [d_date_sk#49, d_year#50, d_qoy#51]
Arguments: [ws_sold_date_sk#47], [d_date_sk#49], Inner, BuildRight

(64) CometProject
Input [6]: [ws_bill_addr_sk#45, ws_ext_sales_price#46, ws_sold_date_sk#47, d_date_sk#49, d_year#50, d_qoy#51]
Arguments: [ws_bill_addr_sk#45, ws_ext_sales_price#46, d_year#50, d_qoy#51], [ws_bill_addr_sk#45, ws_ext_sales_price#46, d_year#50, d_qoy#51]

(65) ReusedExchange [Reuses operator id: 10]
Output [2]: [ca_address_sk#52, ca_county#53]

(66) CometBroadcastHashJoin
Left output [4]: [ws_bill_addr_sk#45, ws_ext_sales_price#46, d_year#50, d_qoy#51]
Right output [2]: [ca_address_sk#52, ca_county#53]
Arguments: [ws_bill_addr_sk#45], [ca_address_sk#52], Inner, BuildRight

(67) CometProject
Input [6]: [ws_bill_addr_sk#45, ws_ext_sales_price#46, d_year#50, d_qoy#51, ca_address_sk#52, ca_county#53]
Arguments: [ws_ext_sales_price#46, d_year#50, d_qoy#51, ca_county#53], [ws_ext_sales_price#46, d_year#50, d_qoy#51, ca_county#53]

(68) CometHashAggregate
Input [4]: [ws_ext_sales_price#46, d_year#50, d_qoy#51, ca_county#53]
Keys [3]: [ca_county#53, d_qoy#51, d_year#50]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#46))]

(69) CometExchange
Input [4]: [ca_county#53, d_qoy#51, d_year#50, sum#54]
Arguments: hashpartitioning(ca_county#53, d_qoy#51, d_year#50, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(70) CometHashAggregate
Input [4]: [ca_county#53, d_qoy#51, d_year#50, sum#54]
Keys [3]: [ca_county#53, d_qoy#51, d_year#50]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#46))]

(71) CometBroadcastExchange
Input [2]: [ca_county#53, web_sales#55]
Arguments: [ca_county#53, web_sales#55]

(72) CometBroadcastHashJoin
Left output [7]: [ca_county#9, d_year#6, store_sales#22, store_sales#21, store_sales#33, ca_county#42, web_sales#44]
Right output [2]: [ca_county#53, web_sales#55]
Arguments: [ca_county#42], [ca_county#53], Inner, (CASE WHEN (web_sales#44 > 0.00) THEN (web_sales#55 / web_sales#44) END > CASE WHEN (store_sales#22 > 0.00) THEN (store_sales#21 / store_sales#22) END), BuildRight

(73) CometProject
Input [9]: [ca_county#9, d_year#6, store_sales#22, store_sales#21, store_sales#33, ca_county#42, web_sales#44, ca_county#53, web_sales#55]
Arguments: [ca_county#9, d_year#6, store_sales#22, store_sales#21, store_sales#33, ca_county#42, web_sales#44, web_sales#55], [ca_county#9, d_year#6, store_sales#22, store_sales#21, store_sales#33, ca_county#42, web_sales#44, web_sales#55]

(74) CometScan parquet spark_catalog.default.web_sales
Output [3]: [ws_bill_addr_sk#56, ws_ext_sales_price#57, ws_sold_date_sk#58]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#58), dynamicpruningexpression(ws_sold_date_sk#58 IN dynamicpruning#59)]
PushedFilters: [IsNotNull(ws_bill_addr_sk)]
ReadSchema: struct<ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(75) CometFilter
Input [3]: [ws_bill_addr_sk#56, ws_ext_sales_price#57, ws_sold_date_sk#58]
Condition : isnotnull(ws_bill_addr_sk#56)

(76) ReusedExchange [Reuses operator id: 35]
Output [3]: [d_date_sk#60, d_year#61, d_qoy#62]

(77) CometBroadcastHashJoin
Left output [3]: [ws_bill_addr_sk#56, ws_ext_sales_price#57, ws_sold_date_sk#58]
Right output [3]: [d_date_sk#60, d_year#61, d_qoy#62]
Arguments: [ws_sold_date_sk#58], [d_date_sk#60], Inner, BuildRight

(78) CometProject
Input [6]: [ws_bill_addr_sk#56, ws_ext_sales_price#57, ws_sold_date_sk#58, d_date_sk#60, d_year#61, d_qoy#62]
Arguments: [ws_bill_addr_sk#56, ws_ext_sales_price#57, d_year#61, d_qoy#62], [ws_bill_addr_sk#56, ws_ext_sales_price#57, d_year#61, d_qoy#62]

(79) ReusedExchange [Reuses operator id: 10]
Output [2]: [ca_address_sk#63, ca_county#64]

(80) CometBroadcastHashJoin
Left output [4]: [ws_bill_addr_sk#56, ws_ext_sales_price#57, d_year#61, d_qoy#62]
Right output [2]: [ca_address_sk#63, ca_county#64]
Arguments: [ws_bill_addr_sk#56], [ca_address_sk#63], Inner, BuildRight

(81) CometProject
Input [6]: [ws_bill_addr_sk#56, ws_ext_sales_price#57, d_year#61, d_qoy#62, ca_address_sk#63, ca_county#64]
Arguments: [ws_ext_sales_price#57, d_year#61, d_qoy#62, ca_county#64], [ws_ext_sales_price#57, d_year#61, d_qoy#62, ca_county#64]

(82) CometHashAggregate
Input [4]: [ws_ext_sales_price#57, d_year#61, d_qoy#62, ca_county#64]
Keys [3]: [ca_county#64, d_qoy#62, d_year#61]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#57))]

(83) CometExchange
Input [4]: [ca_county#64, d_qoy#62, d_year#61, sum#65]
Arguments: hashpartitioning(ca_county#64, d_qoy#62, d_year#61, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(84) CometHashAggregate
Input [4]: [ca_county#64, d_qoy#62, d_year#61, sum#65]
Keys [3]: [ca_county#64, d_qoy#62, d_year#61]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#57))]

(85) CometBroadcastExchange
Input [2]: [ca_county#64, web_sales#66]
Arguments: [ca_county#64, web_sales#66]

(86) CometBroadcastHashJoin
Left output [8]: [ca_county#9, d_year#6, store_sales#22, store_sales#21, store_sales#33, ca_county#42, web_sales#44, web_sales#55]
Right output [2]: [ca_county#64, web_sales#66]
Arguments: [ca_county#42], [ca_county#64], Inner, (CASE WHEN (web_sales#55 > 0.00) THEN (web_sales#66 / web_sales#55) END > CASE WHEN (store_sales#21 > 0.00) THEN (store_sales#33 / store_sales#21) END), BuildRight

(87) CometProject
Input [10]: [ca_county#9, d_year#6, store_sales#22, store_sales#21, store_sales#33, ca_county#42, web_sales#44, web_sales#55, ca_county#64, web_sales#66]
Arguments: [ca_county#9, d_year#6, web_q1_q2_increase#67, store_q1_q2_increase#68, web_q2_q3_increase#69, store_q2_q3_increase#70], [ca_county#9, d_year#6, (web_sales#55 / web_sales#44) AS web_q1_q2_increase#67, (store_sales#21 / store_sales#22) AS store_q1_q2_increase#68, (web_sales#66 / web_sales#55) AS web_q2_q3_increase#69, (store_sales#33 / store_sales#21) AS store_q2_q3_increase#70]

(88) CometColumnarExchange
Input [6]: [ca_county#9, d_year#6, web_q1_q2_increase#67, store_q1_q2_increase#68, web_q2_q3_increase#69, store_q2_q3_increase#70]
Arguments: rangepartitioning(ca_county#9 ASC NULLS FIRST, 5), ENSURE_REQUIREMENTS, CometColumnarShuffle, [plan_id=7]

(89) CometSort
Input [6]: [ca_county#9, d_year#6, web_q1_q2_increase#67, store_q1_q2_increase#68, web_q2_q3_increase#69, store_q2_q3_increase#70]
Arguments: [ca_county#9, d_year#6, web_q1_q2_increase#67, store_q1_q2_increase#68, web_q2_q3_increase#69, store_q2_q3_increase#70], [ca_county#9 ASC NULLS FIRST]

(90) ColumnarToRow [codegen id : 1]
Input [6]: [ca_county#9, d_year#6, web_q1_q2_increase#67, store_q1_q2_increase#68, web_q2_q3_increase#69, store_q2_q3_increase#70]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#3 IN dynamicpruning#4
BroadcastExchange (94)
+- * ColumnarToRow (93)
   +- CometFilter (92)
      +- CometScan parquet spark_catalog.default.date_dim (91)


(91) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#5, d_year#6, d_qoy#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(92) CometFilter
Input [3]: [d_date_sk#5, d_year#6, d_qoy#7]
Condition : ((((isnotnull(d_qoy#7) AND isnotnull(d_year#6)) AND (d_qoy#7 = 1)) AND (d_year#6 = 2000)) AND isnotnull(d_date_sk#5))

(93) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#5, d_year#6, d_qoy#7]

(94) BroadcastExchange
Input [3]: [d_date_sk#5, d_year#6, d_qoy#7]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=8]

Subquery:2 Hosting operator id = 16 Hosting Expression = ss_sold_date_sk#13 IN dynamicpruning#14
BroadcastExchange (98)
+- * ColumnarToRow (97)
   +- CometFilter (96)
      +- CometScan parquet spark_catalog.default.date_dim (95)


(95) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#15, d_year#16, d_qoy#17]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(96) CometFilter
Input [3]: [d_date_sk#15, d_year#16, d_qoy#17]
Condition : ((((isnotnull(d_qoy#17) AND isnotnull(d_year#16)) AND (d_qoy#17 = 2)) AND (d_year#16 = 2000)) AND isnotnull(d_date_sk#15))

(97) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#15, d_year#16, d_qoy#17]

(98) BroadcastExchange
Input [3]: [d_date_sk#15, d_year#16, d_qoy#17]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=9]

Subquery:3 Hosting operator id = 31 Hosting Expression = ss_sold_date_sk#25 IN dynamicpruning#26
BroadcastExchange (102)
+- * ColumnarToRow (101)
   +- CometFilter (100)
      +- CometScan parquet spark_catalog.default.date_dim (99)


(99) CometScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#27, d_year#28, d_qoy#29]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>

(100) CometFilter
Input [3]: [d_date_sk#27, d_year#28, d_qoy#29]
Condition : ((((isnotnull(d_qoy#29) AND isnotnull(d_year#28)) AND (d_qoy#29 = 3)) AND (d_year#28 = 2000)) AND isnotnull(d_date_sk#27))

(101) ColumnarToRow [codegen id : 1]
Input [3]: [d_date_sk#27, d_year#28, d_qoy#29]

(102) BroadcastExchange
Input [3]: [d_date_sk#27, d_year#28, d_qoy#29]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=10]

Subquery:4 Hosting operator id = 47 Hosting Expression = ws_sold_date_sk#36 IN dynamicpruning#4

Subquery:5 Hosting operator id = 60 Hosting Expression = ws_sold_date_sk#47 IN dynamicpruning#14

Subquery:6 Hosting operator id = 74 Hosting Expression = ws_sold_date_sk#58 IN dynamicpruning#26


