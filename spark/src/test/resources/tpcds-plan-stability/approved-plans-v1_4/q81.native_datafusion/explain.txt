== Physical Plan ==
* ColumnarToRow (47)
+- CometTakeOrderedAndProject (46)
   +- CometProject (45)
      +- CometBroadcastHashJoin (44)
         :- CometProject (40)
         :  +- CometBroadcastHashJoin (39)
         :     :- CometProject (35)
         :     :  +- CometBroadcastHashJoin (34)
         :     :     :- CometFilter (17)
         :     :     :  +- CometHashAggregate (16)
         :     :     :     +- CometExchange (15)
         :     :     :        +- CometHashAggregate (14)
         :     :     :           +- CometProject (13)
         :     :     :              +- CometBroadcastHashJoin (12)
         :     :     :                 :- CometProject (8)
         :     :     :                 :  +- CometBroadcastHashJoin (7)
         :     :     :                 :     :- CometFilter (2)
         :     :     :                 :     :  +- CometNativeScan: `spark_catalog`.`default`.`catalog_returns` (1)
         :     :     :                 :     +- CometBroadcastExchange (6)
         :     :     :                 :        +- CometProject (5)
         :     :     :                 :           +- CometFilter (4)
         :     :     :                 :              +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (3)
         :     :     :                 +- CometBroadcastExchange (11)
         :     :     :                    +- CometFilter (10)
         :     :     :                       +- CometNativeScan: `spark_catalog`.`default`.`customer_address` (9)
         :     :     +- CometBroadcastExchange (33)
         :     :        +- CometFilter (32)
         :     :           +- CometHashAggregate (31)
         :     :              +- CometExchange (30)
         :     :                 +- CometHashAggregate (29)
         :     :                    +- CometHashAggregate (28)
         :     :                       +- CometExchange (27)
         :     :                          +- CometHashAggregate (26)
         :     :                             +- CometProject (25)
         :     :                                +- CometBroadcastHashJoin (24)
         :     :                                   :- CometProject (22)
         :     :                                   :  +- CometBroadcastHashJoin (21)
         :     :                                   :     :- CometFilter (19)
         :     :                                   :     :  +- CometNativeScan: `spark_catalog`.`default`.`catalog_returns` (18)
         :     :                                   :     +- ReusedExchange (20)
         :     :                                   +- ReusedExchange (23)
         :     +- CometBroadcastExchange (38)
         :        +- CometFilter (37)
         :           +- CometNativeScan: `spark_catalog`.`default`.`customer` (36)
         +- CometBroadcastExchange (43)
            +- CometFilter (42)
               +- CometNativeScan: `spark_catalog`.`default`.`customer_address` (41)


(1) CometNativeScan: `spark_catalog`.`default`.`catalog_returns`
Output [4]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]
Arguments: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]

(2) CometFilter
Input [4]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]
Condition : (isnotnull(cr_returning_addr_sk#2) AND isnotnull(cr_returning_customer_sk#1))

(3) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [2]: [d_date_sk#5, d_year#6]
Arguments: [d_date_sk#5, d_year#6]

(4) CometFilter
Input [2]: [d_date_sk#5, d_year#6]
Condition : ((isnotnull(d_year#6) AND (d_year#6 = 2000)) AND isnotnull(d_date_sk#5))

(5) CometProject
Input [2]: [d_date_sk#5, d_year#6]
Arguments: [d_date_sk#5], [d_date_sk#5]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: [d_date_sk#5]

(7) CometBroadcastHashJoin
Left output [4]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]
Right output [1]: [d_date_sk#5]
Arguments: [cr_returned_date_sk#4], [d_date_sk#5], Inner, BuildRight

(8) CometProject
Input [5]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4, d_date_sk#5]
Arguments: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3], [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3]

(9) CometNativeScan: `spark_catalog`.`default`.`customer_address`
Output [2]: [ca_address_sk#7, ca_state#8]
Arguments: [ca_address_sk#7, ca_state#8]

(10) CometFilter
Input [2]: [ca_address_sk#7, ca_state#8]
Condition : (isnotnull(ca_address_sk#7) AND isnotnull(ca_state#8))

(11) CometBroadcastExchange
Input [2]: [ca_address_sk#7, ca_state#8]
Arguments: [ca_address_sk#7, ca_state#8]

(12) CometBroadcastHashJoin
Left output [3]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3]
Right output [2]: [ca_address_sk#7, ca_state#8]
Arguments: [cr_returning_addr_sk#2], [ca_address_sk#7], Inner, BuildRight

(13) CometProject
Input [5]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, ca_address_sk#7, ca_state#8]
Arguments: [cr_returning_customer_sk#1, cr_return_amt_inc_tax#3, ca_state#8], [cr_returning_customer_sk#1, cr_return_amt_inc_tax#3, ca_state#8]

(14) CometHashAggregate
Input [3]: [cr_returning_customer_sk#1, cr_return_amt_inc_tax#3, ca_state#8]
Keys [2]: [cr_returning_customer_sk#1, ca_state#8]
Functions [1]: [partial_sum(UnscaledValue(cr_return_amt_inc_tax#3))]

(15) CometExchange
Input [3]: [cr_returning_customer_sk#1, ca_state#8, sum#9]
Arguments: hashpartitioning(cr_returning_customer_sk#1, ca_state#8, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(16) CometHashAggregate
Input [3]: [cr_returning_customer_sk#1, ca_state#8, sum#9]
Keys [2]: [cr_returning_customer_sk#1, ca_state#8]
Functions [1]: [sum(UnscaledValue(cr_return_amt_inc_tax#3))]

(17) CometFilter
Input [3]: [ctr_customer_sk#10, ctr_state#11, ctr_total_return#12]
Condition : isnotnull(ctr_total_return#12)

(18) CometNativeScan: `spark_catalog`.`default`.`catalog_returns`
Output [4]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]
Arguments: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]

(19) CometFilter
Input [4]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]
Condition : isnotnull(cr_returning_addr_sk#2)

(20) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#5]

(21) CometBroadcastHashJoin
Left output [4]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4]
Right output [1]: [d_date_sk#5]
Arguments: [cr_returned_date_sk#4], [d_date_sk#5], Inner, BuildRight

(22) CometProject
Input [5]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, cr_returned_date_sk#4, d_date_sk#5]
Arguments: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3], [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3]

(23) ReusedExchange [Reuses operator id: 11]
Output [2]: [ca_address_sk#7, ca_state#8]

(24) CometBroadcastHashJoin
Left output [3]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3]
Right output [2]: [ca_address_sk#7, ca_state#8]
Arguments: [cr_returning_addr_sk#2], [ca_address_sk#7], Inner, BuildRight

(25) CometProject
Input [5]: [cr_returning_customer_sk#1, cr_returning_addr_sk#2, cr_return_amt_inc_tax#3, ca_address_sk#7, ca_state#8]
Arguments: [cr_returning_customer_sk#1, cr_return_amt_inc_tax#3, ca_state#8], [cr_returning_customer_sk#1, cr_return_amt_inc_tax#3, ca_state#8]

(26) CometHashAggregate
Input [3]: [cr_returning_customer_sk#1, cr_return_amt_inc_tax#3, ca_state#8]
Keys [2]: [cr_returning_customer_sk#1, ca_state#8]
Functions [1]: [partial_sum(UnscaledValue(cr_return_amt_inc_tax#3))]

(27) CometExchange
Input [3]: [cr_returning_customer_sk#1, ca_state#8, sum#13]
Arguments: hashpartitioning(cr_returning_customer_sk#1, ca_state#8, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(28) CometHashAggregate
Input [3]: [cr_returning_customer_sk#1, ca_state#8, sum#13]
Keys [2]: [cr_returning_customer_sk#1, ca_state#8]
Functions [1]: [sum(UnscaledValue(cr_return_amt_inc_tax#3))]

(29) CometHashAggregate
Input [2]: [ctr_state#11, ctr_total_return#12]
Keys [1]: [ctr_state#11]
Functions [1]: [partial_avg(ctr_total_return#12)]

(30) CometExchange
Input [3]: [ctr_state#11, sum#14, count#15]
Arguments: hashpartitioning(ctr_state#11, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(31) CometHashAggregate
Input [3]: [ctr_state#11, sum#14, count#15]
Keys [1]: [ctr_state#11]
Functions [1]: [avg(ctr_total_return#12)]

(32) CometFilter
Input [2]: [(avg(ctr_total_return) * 1.2)#16, ctr_state#11#17]
Condition : isnotnull((avg(ctr_total_return) * 1.2)#16)

(33) CometBroadcastExchange
Input [2]: [(avg(ctr_total_return) * 1.2)#16, ctr_state#11#17]
Arguments: [(avg(ctr_total_return) * 1.2)#16, ctr_state#11#17]

(34) CometBroadcastHashJoin
Left output [3]: [ctr_customer_sk#10, ctr_state#11, ctr_total_return#12]
Right output [2]: [(avg(ctr_total_return) * 1.2)#16, ctr_state#11#17]
Arguments: [ctr_state#11], [ctr_state#11#17], Inner, (cast(ctr_total_return#12 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#16), BuildRight

(35) CometProject
Input [5]: [ctr_customer_sk#10, ctr_state#11, ctr_total_return#12, (avg(ctr_total_return) * 1.2)#16, ctr_state#11#17]
Arguments: [ctr_customer_sk#10, ctr_total_return#12], [ctr_customer_sk#10, ctr_total_return#12]

(36) CometNativeScan: `spark_catalog`.`default`.`customer`
Output [6]: [c_customer_sk#18, c_customer_id#19, c_current_addr_sk#20, c_salutation#21, c_first_name#22, c_last_name#23]
Arguments: [c_customer_sk#18, c_customer_id#19, c_current_addr_sk#20, c_salutation#21, c_first_name#22, c_last_name#23]

(37) CometFilter
Input [6]: [c_customer_sk#18, c_customer_id#19, c_current_addr_sk#20, c_salutation#21, c_first_name#22, c_last_name#23]
Condition : (isnotnull(c_customer_sk#18) AND isnotnull(c_current_addr_sk#20))

(38) CometBroadcastExchange
Input [6]: [c_customer_sk#18, c_customer_id#19, c_current_addr_sk#20, c_salutation#21, c_first_name#22, c_last_name#23]
Arguments: [c_customer_sk#18, c_customer_id#19, c_current_addr_sk#20, c_salutation#21, c_first_name#22, c_last_name#23]

(39) CometBroadcastHashJoin
Left output [2]: [ctr_customer_sk#10, ctr_total_return#12]
Right output [6]: [c_customer_sk#18, c_customer_id#19, c_current_addr_sk#20, c_salutation#21, c_first_name#22, c_last_name#23]
Arguments: [ctr_customer_sk#10], [c_customer_sk#18], Inner, BuildRight

(40) CometProject
Input [8]: [ctr_customer_sk#10, ctr_total_return#12, c_customer_sk#18, c_customer_id#19, c_current_addr_sk#20, c_salutation#21, c_first_name#22, c_last_name#23]
Arguments: [ctr_total_return#12, c_customer_id#19, c_current_addr_sk#20, c_salutation#21, c_first_name#22, c_last_name#23], [ctr_total_return#12, c_customer_id#19, c_current_addr_sk#20, c_salutation#21, c_first_name#22, c_last_name#23]

(41) CometNativeScan: `spark_catalog`.`default`.`customer_address`
Output [12]: [ca_address_sk#24, ca_street_number#25, ca_street_name#26, ca_street_type#27, ca_suite_number#28, ca_city#29, ca_county#30, ca_state#31, ca_zip#32, ca_country#33, ca_gmt_offset#34, ca_location_type#35]
Arguments: [ca_address_sk#24, ca_street_number#25, ca_street_name#26, ca_street_type#27, ca_suite_number#28, ca_city#29, ca_county#30, ca_state#31, ca_zip#32, ca_country#33, ca_gmt_offset#34, ca_location_type#35]

(42) CometFilter
Input [12]: [ca_address_sk#24, ca_street_number#25, ca_street_name#26, ca_street_type#27, ca_suite_number#28, ca_city#29, ca_county#30, ca_state#31, ca_zip#32, ca_country#33, ca_gmt_offset#34, ca_location_type#35]
Condition : ((isnotnull(ca_state#31) AND (ca_state#31 = GA)) AND isnotnull(ca_address_sk#24))

(43) CometBroadcastExchange
Input [12]: [ca_address_sk#24, ca_street_number#25, ca_street_name#26, ca_street_type#27, ca_suite_number#28, ca_city#29, ca_county#30, ca_state#31, ca_zip#32, ca_country#33, ca_gmt_offset#34, ca_location_type#35]
Arguments: [ca_address_sk#24, ca_street_number#25, ca_street_name#26, ca_street_type#27, ca_suite_number#28, ca_city#29, ca_county#30, ca_state#31, ca_zip#32, ca_country#33, ca_gmt_offset#34, ca_location_type#35]

(44) CometBroadcastHashJoin
Left output [6]: [ctr_total_return#12, c_customer_id#19, c_current_addr_sk#20, c_salutation#21, c_first_name#22, c_last_name#23]
Right output [12]: [ca_address_sk#24, ca_street_number#25, ca_street_name#26, ca_street_type#27, ca_suite_number#28, ca_city#29, ca_county#30, ca_state#31, ca_zip#32, ca_country#33, ca_gmt_offset#34, ca_location_type#35]
Arguments: [c_current_addr_sk#20], [ca_address_sk#24], Inner, BuildRight

(45) CometProject
Input [18]: [ctr_total_return#12, c_customer_id#19, c_current_addr_sk#20, c_salutation#21, c_first_name#22, c_last_name#23, ca_address_sk#24, ca_street_number#25, ca_street_name#26, ca_street_type#27, ca_suite_number#28, ca_city#29, ca_county#30, ca_state#31, ca_zip#32, ca_country#33, ca_gmt_offset#34, ca_location_type#35]
Arguments: [c_customer_id#19, c_salutation#21, c_first_name#22, c_last_name#23, ca_street_number#25, ca_street_name#26, ca_street_type#27, ca_suite_number#28, ca_city#29, ca_county#30, ca_state#31, ca_zip#32, ca_country#33, ca_gmt_offset#34, ca_location_type#35, ctr_total_return#12], [c_customer_id#19, c_salutation#21, c_first_name#22, c_last_name#23, ca_street_number#25, ca_street_name#26, ca_street_type#27, ca_suite_number#28, ca_city#29, ca_county#30, ca_state#31, ca_zip#32, ca_country#33, ca_gmt_offset#34, ca_location_type#35, ctr_total_return#12]

(46) CometTakeOrderedAndProject
Input [16]: [c_customer_id#19, c_salutation#21, c_first_name#22, c_last_name#23, ca_street_number#25, ca_street_name#26, ca_street_type#27, ca_suite_number#28, ca_city#29, ca_county#30, ca_state#31, ca_zip#32, ca_country#33, ca_gmt_offset#34, ca_location_type#35, ctr_total_return#12]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#19 ASC NULLS FIRST,c_salutation#21 ASC NULLS FIRST,c_first_name#22 ASC NULLS FIRST,c_last_name#23 ASC NULLS FIRST,ca_street_number#25 ASC NULLS FIRST,ca_street_name#26 ASC NULLS FIRST,ca_street_type#27 ASC NULLS FIRST,ca_suite_number#28 ASC NULLS FIRST,ca_city#29 ASC NULLS FIRST,ca_county#30 ASC NULLS FIRST,ca_state#31 ASC NULLS FIRST,ca_zip#32 ASC NULLS FIRST,ca_country#33 ASC NULLS FIRST,ca_gmt_offset#34 ASC NULLS FIRST,ca_location_type#35 ASC NULLS FIRST,ctr_total_return#12 ASC NULLS FIRST], output=[c_customer_id#19,c_salutation#21,c_first_name#22,c_last_name#23,ca_street_number#25,ca_street_name#26,ca_street_type#27,ca_suite_number#28,ca_city#29,ca_county#30,ca_state#31,ca_zip#32,ca_country#33,ca_gmt_offset#34,ca_location_type#35,ctr_total_return#12]), [c_customer_id#19, c_salutation#21, c_first_name#22, c_last_name#23, ca_street_number#25, ca_street_name#26, ca_street_type#27, ca_suite_number#28, ca_city#29, ca_county#30, ca_state#31, ca_zip#32, ca_country#33, ca_gmt_offset#34, ca_location_type#35, ctr_total_return#12], 100, [c_customer_id#19 ASC NULLS FIRST, c_salutation#21 ASC NULLS FIRST, c_first_name#22 ASC NULLS FIRST, c_last_name#23 ASC NULLS FIRST, ca_street_number#25 ASC NULLS FIRST, ca_street_name#26 ASC NULLS FIRST, ca_street_type#27 ASC NULLS FIRST, ca_suite_number#28 ASC NULLS FIRST, ca_city#29 ASC NULLS FIRST, ca_county#30 ASC NULLS FIRST, ca_state#31 ASC NULLS FIRST, ca_zip#32 ASC NULLS FIRST, ca_country#33 ASC NULLS FIRST, ca_gmt_offset#34 ASC NULLS FIRST, ca_location_type#35 ASC NULLS FIRST, ctr_total_return#12 ASC NULLS FIRST], [c_customer_id#19, c_salutation#21, c_first_name#22, c_last_name#23, ca_street_number#25, ca_street_name#26, ca_street_type#27, ca_suite_number#28, ca_city#29, ca_county#30, ca_state#31, ca_zip#32, ca_country#33, ca_gmt_offset#34, ca_location_type#35, ctr_total_return#12]

(47) ColumnarToRow [codegen id : 1]
Input [16]: [c_customer_id#19, c_salutation#21, c_first_name#22, c_last_name#23, ca_street_number#25, ca_street_name#26, ca_street_type#27, ca_suite_number#28, ca_city#29, ca_county#30, ca_state#31, ca_zip#32, ca_country#33, ca_gmt_offset#34, ca_location_type#35, ctr_total_return#12]

