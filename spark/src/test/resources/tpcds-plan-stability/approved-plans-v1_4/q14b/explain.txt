== Physical Plan ==
* ColumnarToRow (85)
+- CometTakeOrderedAndProject (84)
   +- CometBroadcastHashJoin (83)
      :- CometFilter (64)
      :  +- CometHashAggregate (63)
      :     +- CometExchange (62)
      :        +- CometHashAggregate (61)
      :           +- CometProject (60)
      :              +- CometBroadcastHashJoin (59)
      :                 :- CometProject (54)
      :                 :  +- CometBroadcastHashJoin (53)
      :                 :     :- CometBroadcastHashJoin (47)
      :                 :     :  :- CometFilter (2)
      :                 :     :  :  +- CometScan parquet spark_catalog.default.store_sales (1)
      :                 :     :  +- CometBroadcastExchange (46)
      :                 :     :     +- CometProject (45)
      :                 :     :        +- CometBroadcastHashJoin (44)
      :                 :     :           :- CometFilter (4)
      :                 :     :           :  +- CometScan parquet spark_catalog.default.item (3)
      :                 :     :           +- CometBroadcastExchange (43)
      :                 :     :              +- CometBroadcastHashJoin (42)
      :                 :     :                 :- CometHashAggregate (32)
      :                 :     :                 :  +- CometExchange (31)
      :                 :     :                 :     +- CometHashAggregate (30)
      :                 :     :                 :        +- CometProject (29)
      :                 :     :                 :           +- CometBroadcastHashJoin (28)
      :                 :     :                 :              :- CometProject (26)
      :                 :     :                 :              :  +- CometBroadcastHashJoin (25)
      :                 :     :                 :              :     :- CometFilter (6)
      :                 :     :                 :              :     :  +- CometScan parquet spark_catalog.default.store_sales (5)
      :                 :     :                 :              :     +- CometBroadcastExchange (24)
      :                 :     :                 :              :        +- CometBroadcastHashJoin (23)
      :                 :     :                 :              :           :- CometFilter (8)
      :                 :     :                 :              :           :  +- CometScan parquet spark_catalog.default.item (7)
      :                 :     :                 :              :           +- CometBroadcastExchange (22)
      :                 :     :                 :              :              +- CometProject (21)
      :                 :     :                 :              :                 +- CometBroadcastHashJoin (20)
      :                 :     :                 :              :                    :- CometProject (15)
      :                 :     :                 :              :                    :  +- CometBroadcastHashJoin (14)
      :                 :     :                 :              :                    :     :- CometFilter (10)
      :                 :     :                 :              :                    :     :  +- CometScan parquet spark_catalog.default.catalog_sales (9)
      :                 :     :                 :              :                    :     +- CometBroadcastExchange (13)
      :                 :     :                 :              :                    :        +- CometFilter (12)
      :                 :     :                 :              :                    :           +- CometScan parquet spark_catalog.default.item (11)
      :                 :     :                 :              :                    +- CometBroadcastExchange (19)
      :                 :     :                 :              :                       +- CometProject (18)
      :                 :     :                 :              :                          +- CometFilter (17)
      :                 :     :                 :              :                             +- CometScan parquet spark_catalog.default.date_dim (16)
      :                 :     :                 :              +- ReusedExchange (27)
      :                 :     :                 +- CometBroadcastExchange (41)
      :                 :     :                    +- CometProject (40)
      :                 :     :                       +- CometBroadcastHashJoin (39)
      :                 :     :                          :- CometProject (37)
      :                 :     :                          :  +- CometBroadcastHashJoin (36)
      :                 :     :                          :     :- CometFilter (34)
      :                 :     :                          :     :  +- CometScan parquet spark_catalog.default.web_sales (33)
      :                 :     :                          :     +- ReusedExchange (35)
      :                 :     :                          +- ReusedExchange (38)
      :                 :     +- CometBroadcastExchange (52)
      :                 :        +- CometBroadcastHashJoin (51)
      :                 :           :- CometFilter (49)
      :                 :           :  +- CometScan parquet spark_catalog.default.item (48)
      :                 :           +- ReusedExchange (50)
      :                 +- CometBroadcastExchange (58)
      :                    +- CometProject (57)
      :                       +- CometFilter (56)
      :                          +- CometScan parquet spark_catalog.default.date_dim (55)
      +- CometBroadcastExchange (82)
         +- CometFilter (81)
            +- CometHashAggregate (80)
               +- CometExchange (79)
                  +- CometHashAggregate (78)
                     +- CometProject (77)
                        +- CometBroadcastHashJoin (76)
                           :- CometProject (71)
                           :  +- CometBroadcastHashJoin (70)
                           :     :- CometBroadcastHashJoin (68)
                           :     :  :- CometFilter (66)
                           :     :  :  +- CometScan parquet spark_catalog.default.store_sales (65)
                           :     :  +- ReusedExchange (67)
                           :     +- ReusedExchange (69)
                           +- CometBroadcastExchange (75)
                              +- CometProject (74)
                                 +- CometFilter (73)
                                    +- CometScan parquet spark_catalog.default.date_dim (72)


(1) Scan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#4), dynamicpruningexpression(ss_sold_date_sk#4 IN dynamicpruning#5)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Condition : isnotnull(ss_item_sk#1)

(3) Scan parquet spark_catalog.default.item
Output [4]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(4) CometFilter
Input [4]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9]
Condition : ((isnotnull(i_brand_id#7) AND isnotnull(i_class_id#8)) AND isnotnull(i_category_id#9))

(5) Scan parquet spark_catalog.default.store_sales
Output [2]: [ss_item_sk#10, ss_sold_date_sk#11]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#11), dynamicpruningexpression(ss_sold_date_sk#11 IN dynamicpruning#12)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int>

(6) CometFilter
Input [2]: [ss_item_sk#10, ss_sold_date_sk#11]
Condition : isnotnull(ss_item_sk#10)

(7) Scan parquet spark_catalog.default.item
Output [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(8) CometFilter
Input [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Condition : (((isnotnull(i_item_sk#13) AND isnotnull(i_brand_id#14)) AND isnotnull(i_class_id#15)) AND isnotnull(i_category_id#16))

(9) Scan parquet spark_catalog.default.catalog_sales
Output [2]: [cs_item_sk#17, cs_sold_date_sk#18]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#18), dynamicpruningexpression(cs_sold_date_sk#18 IN dynamicpruning#19)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int>

(10) CometFilter
Input [2]: [cs_item_sk#17, cs_sold_date_sk#18]
Condition : isnotnull(cs_item_sk#17)

(11) Scan parquet spark_catalog.default.item
Output [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(12) CometFilter
Input [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Condition : isnotnull(i_item_sk#20)

(13) CometBroadcastExchange
Input [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]

(14) CometBroadcastHashJoin
Left output [2]: [cs_item_sk#17, cs_sold_date_sk#18]
Right output [4]: [i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [cs_item_sk#17], [i_item_sk#20], Inner, BuildRight

(15) CometProject
Input [6]: [cs_item_sk#17, cs_sold_date_sk#18, i_item_sk#20, i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23], [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23]

(16) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#24, d_year#25]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(17) CometFilter
Input [2]: [d_date_sk#24, d_year#25]
Condition : (((isnotnull(d_year#25) AND (d_year#25 >= 1999)) AND (d_year#25 <= 2001)) AND isnotnull(d_date_sk#24))

(18) CometProject
Input [2]: [d_date_sk#24, d_year#25]
Arguments: [d_date_sk#24], [d_date_sk#24]

(19) CometBroadcastExchange
Input [1]: [d_date_sk#24]
Arguments: [d_date_sk#24]

(20) CometBroadcastHashJoin
Left output [4]: [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23]
Right output [1]: [d_date_sk#24]
Arguments: [cs_sold_date_sk#18], [d_date_sk#24], Inner, BuildRight

(21) CometProject
Input [5]: [cs_sold_date_sk#18, i_brand_id#21, i_class_id#22, i_category_id#23, d_date_sk#24]
Arguments: [i_brand_id#21, i_class_id#22, i_category_id#23], [i_brand_id#21, i_class_id#22, i_category_id#23]

(22) CometBroadcastExchange
Input [3]: [i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [i_brand_id#21, i_class_id#22, i_category_id#23]

(23) CometBroadcastHashJoin
Left output [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Right output [3]: [i_brand_id#21, i_class_id#22, i_category_id#23]
Arguments: [coalesce(i_brand_id#14, 0), isnull(i_brand_id#14), coalesce(i_class_id#15, 0), isnull(i_class_id#15), coalesce(i_category_id#16, 0), isnull(i_category_id#16)], [coalesce(i_brand_id#21, 0), isnull(i_brand_id#21), coalesce(i_class_id#22, 0), isnull(i_class_id#22), coalesce(i_category_id#23, 0), isnull(i_category_id#23)], LeftSemi, BuildRight

(24) CometBroadcastExchange
Input [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Arguments: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]

(25) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#10, ss_sold_date_sk#11]
Right output [4]: [i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Arguments: [ss_item_sk#10], [i_item_sk#13], Inner, BuildRight

(26) CometProject
Input [6]: [ss_item_sk#10, ss_sold_date_sk#11, i_item_sk#13, i_brand_id#14, i_class_id#15, i_category_id#16]
Arguments: [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16], [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16]

(27) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#26]

(28) CometBroadcastHashJoin
Left output [4]: [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16]
Right output [1]: [d_date_sk#26]
Arguments: [ss_sold_date_sk#11], [d_date_sk#26], Inner, BuildRight

(29) CometProject
Input [5]: [ss_sold_date_sk#11, i_brand_id#14, i_class_id#15, i_category_id#16, d_date_sk#26]
Arguments: [brand_id#27, class_id#28, category_id#29], [i_brand_id#14 AS brand_id#27, i_class_id#15 AS class_id#28, i_category_id#16 AS category_id#29]

(30) CometHashAggregate
Input [3]: [brand_id#27, class_id#28, category_id#29]
Keys [3]: [brand_id#27, class_id#28, category_id#29]
Functions: []

(31) CometExchange
Input [3]: [brand_id#27, class_id#28, category_id#29]
Arguments: hashpartitioning(brand_id#27, class_id#28, category_id#29, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(32) CometHashAggregate
Input [3]: [brand_id#27, class_id#28, category_id#29]
Keys [3]: [brand_id#27, class_id#28, category_id#29]
Functions: []

(33) Scan parquet spark_catalog.default.web_sales
Output [2]: [ws_item_sk#30, ws_sold_date_sk#31]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#31), dynamicpruningexpression(ws_sold_date_sk#31 IN dynamicpruning#32)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int>

(34) CometFilter
Input [2]: [ws_item_sk#30, ws_sold_date_sk#31]
Condition : isnotnull(ws_item_sk#30)

(35) ReusedExchange [Reuses operator id: 13]
Output [4]: [i_item_sk#33, i_brand_id#34, i_class_id#35, i_category_id#36]

(36) CometBroadcastHashJoin
Left output [2]: [ws_item_sk#30, ws_sold_date_sk#31]
Right output [4]: [i_item_sk#33, i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [ws_item_sk#30], [i_item_sk#33], Inner, BuildRight

(37) CometProject
Input [6]: [ws_item_sk#30, ws_sold_date_sk#31, i_item_sk#33, i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36], [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36]

(38) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#37]

(39) CometBroadcastHashJoin
Left output [4]: [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36]
Right output [1]: [d_date_sk#37]
Arguments: [ws_sold_date_sk#31], [d_date_sk#37], Inner, BuildRight

(40) CometProject
Input [5]: [ws_sold_date_sk#31, i_brand_id#34, i_class_id#35, i_category_id#36, d_date_sk#37]
Arguments: [i_brand_id#34, i_class_id#35, i_category_id#36], [i_brand_id#34, i_class_id#35, i_category_id#36]

(41) CometBroadcastExchange
Input [3]: [i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [i_brand_id#34, i_class_id#35, i_category_id#36]

(42) CometBroadcastHashJoin
Left output [3]: [brand_id#27, class_id#28, category_id#29]
Right output [3]: [i_brand_id#34, i_class_id#35, i_category_id#36]
Arguments: [coalesce(brand_id#27, 0), isnull(brand_id#27), coalesce(class_id#28, 0), isnull(class_id#28), coalesce(category_id#29, 0), isnull(category_id#29)], [coalesce(i_brand_id#34, 0), isnull(i_brand_id#34), coalesce(i_class_id#35, 0), isnull(i_class_id#35), coalesce(i_category_id#36, 0), isnull(i_category_id#36)], LeftSemi, BuildRight

(43) CometBroadcastExchange
Input [3]: [brand_id#27, class_id#28, category_id#29]
Arguments: [brand_id#27, class_id#28, category_id#29]

(44) CometBroadcastHashJoin
Left output [4]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9]
Right output [3]: [brand_id#27, class_id#28, category_id#29]
Arguments: [i_brand_id#7, i_class_id#8, i_category_id#9], [brand_id#27, class_id#28, category_id#29], Inner, BuildRight

(45) CometProject
Input [7]: [i_item_sk#6, i_brand_id#7, i_class_id#8, i_category_id#9, brand_id#27, class_id#28, category_id#29]
Arguments: [ss_item_sk#38], [i_item_sk#6 AS ss_item_sk#38]

(46) CometBroadcastExchange
Input [1]: [ss_item_sk#38]
Arguments: [ss_item_sk#38]

(47) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [1]: [ss_item_sk#38]
Arguments: [ss_item_sk#1], [ss_item_sk#38], LeftSemi, BuildRight

(48) Scan parquet spark_catalog.default.item
Output [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(49) CometFilter
Input [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Condition : (((isnotnull(i_item_sk#39) AND isnotnull(i_brand_id#40)) AND isnotnull(i_class_id#41)) AND isnotnull(i_category_id#42))

(50) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#38]

(51) CometBroadcastHashJoin
Left output [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Right output [1]: [ss_item_sk#38]
Arguments: [i_item_sk#39], [ss_item_sk#38], LeftSemi, BuildRight

(52) CometBroadcastExchange
Input [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Arguments: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]

(53) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [4]: [i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Arguments: [ss_item_sk#1], [i_item_sk#39], Inner, BuildRight

(54) CometProject
Input [8]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_item_sk#39, i_brand_id#40, i_class_id#41, i_category_id#42]
Arguments: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42], [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42]

(55) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#43, d_week_seq#44]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_week_seq:int>

(56) CometFilter
Input [2]: [d_date_sk#43, d_week_seq#44]
Condition : ((isnotnull(d_week_seq#44) AND (d_week_seq#44 = ReusedSubquery Subquery scalar-subquery#45, [id=#46])) AND isnotnull(d_date_sk#43))

(57) CometProject
Input [2]: [d_date_sk#43, d_week_seq#44]
Arguments: [d_date_sk#43], [d_date_sk#43]

(58) CometBroadcastExchange
Input [1]: [d_date_sk#43]
Arguments: [d_date_sk#43]

(59) CometBroadcastHashJoin
Left output [6]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42]
Right output [1]: [d_date_sk#43]
Arguments: [ss_sold_date_sk#4], [d_date_sk#43], Inner, BuildRight

(60) CometProject
Input [7]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#40, i_class_id#41, i_category_id#42, d_date_sk#43]
Arguments: [ss_quantity#2, ss_list_price#3, i_brand_id#40, i_class_id#41, i_category_id#42], [ss_quantity#2, ss_list_price#3, i_brand_id#40, i_class_id#41, i_category_id#42]

(61) CometHashAggregate
Input [5]: [ss_quantity#2, ss_list_price#3, i_brand_id#40, i_class_id#41, i_category_id#42]
Keys [3]: [i_brand_id#40, i_class_id#41, i_category_id#42]
Functions [2]: [partial_sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), partial_count(1)]

(62) CometExchange
Input [6]: [i_brand_id#40, i_class_id#41, i_category_id#42, sum#47, isEmpty#48, count#49]
Arguments: hashpartitioning(i_brand_id#40, i_class_id#41, i_category_id#42, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(63) CometHashAggregate
Input [6]: [i_brand_id#40, i_class_id#41, i_category_id#42, sum#47, isEmpty#48, count#49]
Keys [3]: [i_brand_id#40, i_class_id#41, i_category_id#42]
Functions [2]: [sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), count(1)]

(64) CometFilter
Input [6]: [channel#50, i_brand_id#40, i_class_id#41, i_category_id#42, sales#51, number_sales#52]
Condition : (isnotnull(sales#51) AND (cast(sales#51 as decimal(32,6)) > cast(Subquery scalar-subquery#53, [id=#54] as decimal(32,6))))

(65) Scan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#55, ss_quantity#56, ss_list_price#57, ss_sold_date_sk#58]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#58), dynamicpruningexpression(ss_sold_date_sk#58 IN dynamicpruning#59)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>

(66) CometFilter
Input [4]: [ss_item_sk#55, ss_quantity#56, ss_list_price#57, ss_sold_date_sk#58]
Condition : isnotnull(ss_item_sk#55)

(67) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#38]

(68) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#55, ss_quantity#56, ss_list_price#57, ss_sold_date_sk#58]
Right output [1]: [ss_item_sk#38]
Arguments: [ss_item_sk#55], [ss_item_sk#38], LeftSemi, BuildRight

(69) ReusedExchange [Reuses operator id: 52]
Output [4]: [i_item_sk#60, i_brand_id#61, i_class_id#62, i_category_id#63]

(70) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#55, ss_quantity#56, ss_list_price#57, ss_sold_date_sk#58]
Right output [4]: [i_item_sk#60, i_brand_id#61, i_class_id#62, i_category_id#63]
Arguments: [ss_item_sk#55], [i_item_sk#60], Inner, BuildRight

(71) CometProject
Input [8]: [ss_item_sk#55, ss_quantity#56, ss_list_price#57, ss_sold_date_sk#58, i_item_sk#60, i_brand_id#61, i_class_id#62, i_category_id#63]
Arguments: [ss_quantity#56, ss_list_price#57, ss_sold_date_sk#58, i_brand_id#61, i_class_id#62, i_category_id#63], [ss_quantity#56, ss_list_price#57, ss_sold_date_sk#58, i_brand_id#61, i_class_id#62, i_category_id#63]

(72) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#64, d_week_seq#65]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_week_seq:int>

(73) CometFilter
Input [2]: [d_date_sk#64, d_week_seq#65]
Condition : ((isnotnull(d_week_seq#65) AND (d_week_seq#65 = ReusedSubquery Subquery scalar-subquery#66, [id=#67])) AND isnotnull(d_date_sk#64))

(74) CometProject
Input [2]: [d_date_sk#64, d_week_seq#65]
Arguments: [d_date_sk#64], [d_date_sk#64]

(75) CometBroadcastExchange
Input [1]: [d_date_sk#64]
Arguments: [d_date_sk#64]

(76) CometBroadcastHashJoin
Left output [6]: [ss_quantity#56, ss_list_price#57, ss_sold_date_sk#58, i_brand_id#61, i_class_id#62, i_category_id#63]
Right output [1]: [d_date_sk#64]
Arguments: [ss_sold_date_sk#58], [d_date_sk#64], Inner, BuildRight

(77) CometProject
Input [7]: [ss_quantity#56, ss_list_price#57, ss_sold_date_sk#58, i_brand_id#61, i_class_id#62, i_category_id#63, d_date_sk#64]
Arguments: [ss_quantity#56, ss_list_price#57, i_brand_id#61, i_class_id#62, i_category_id#63], [ss_quantity#56, ss_list_price#57, i_brand_id#61, i_class_id#62, i_category_id#63]

(78) CometHashAggregate
Input [5]: [ss_quantity#56, ss_list_price#57, i_brand_id#61, i_class_id#62, i_category_id#63]
Keys [3]: [i_brand_id#61, i_class_id#62, i_category_id#63]
Functions [2]: [partial_sum((cast(ss_quantity#56 as decimal(10,0)) * ss_list_price#57)), partial_count(1)]

(79) CometExchange
Input [6]: [i_brand_id#61, i_class_id#62, i_category_id#63, sum#68, isEmpty#69, count#70]
Arguments: hashpartitioning(i_brand_id#61, i_class_id#62, i_category_id#63, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(80) CometHashAggregate
Input [6]: [i_brand_id#61, i_class_id#62, i_category_id#63, sum#68, isEmpty#69, count#70]
Keys [3]: [i_brand_id#61, i_class_id#62, i_category_id#63]
Functions [2]: [sum((cast(ss_quantity#56 as decimal(10,0)) * ss_list_price#57)), count(1)]

(81) CometFilter
Input [6]: [channel#71, i_brand_id#61, i_class_id#62, i_category_id#63, sales#72, number_sales#73]
Condition : (isnotnull(sales#72) AND (cast(sales#72 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#53, [id=#54] as decimal(32,6))))

(82) CometBroadcastExchange
Input [6]: [channel#71, i_brand_id#61, i_class_id#62, i_category_id#63, sales#72, number_sales#73]
Arguments: [channel#71, i_brand_id#61, i_class_id#62, i_category_id#63, sales#72, number_sales#73]

(83) CometBroadcastHashJoin
Left output [6]: [channel#50, i_brand_id#40, i_class_id#41, i_category_id#42, sales#51, number_sales#52]
Right output [6]: [channel#71, i_brand_id#61, i_class_id#62, i_category_id#63, sales#72, number_sales#73]
Arguments: [i_brand_id#40, i_class_id#41, i_category_id#42], [i_brand_id#61, i_class_id#62, i_category_id#63], Inner, BuildRight

(84) CometTakeOrderedAndProject
Input [12]: [channel#50, i_brand_id#40, i_class_id#41, i_category_id#42, sales#51, number_sales#52, channel#71, i_brand_id#61, i_class_id#62, i_category_id#63, sales#72, number_sales#73]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[i_brand_id#40 ASC NULLS FIRST,i_class_id#41 ASC NULLS FIRST,i_category_id#42 ASC NULLS FIRST], output=[channel#50,i_brand_id#40,i_class_id#41,i_category_id#42,sales#51,number_sales#52,channel#71,i_brand_id#61,i_class_id#62,i_category_id#63,sales#72,number_sales#73]), [channel#50, i_brand_id#40, i_class_id#41, i_category_id#42, sales#51, number_sales#52, channel#71, i_brand_id#61, i_class_id#62, i_category_id#63, sales#72, number_sales#73], 100, [i_brand_id#40 ASC NULLS FIRST, i_class_id#41 ASC NULLS FIRST, i_category_id#42 ASC NULLS FIRST], [channel#50, i_brand_id#40, i_class_id#41, i_category_id#42, sales#51, number_sales#52, channel#71, i_brand_id#61, i_class_id#62, i_category_id#63, sales#72, number_sales#73]

(85) ColumnarToRow [codegen id : 1]
Input [12]: [channel#50, i_brand_id#40, i_class_id#41, i_category_id#42, sales#51, number_sales#52, channel#71, i_brand_id#61, i_class_id#62, i_category_id#63, sales#72, number_sales#73]

===== Subqueries =====

Subquery:1 Hosting operator id = 64 Hosting Expression = Subquery scalar-subquery#53, [id=#54]
* ColumnarToRow (102)
+- CometHashAggregate (101)
   +- CometExchange (100)
      +- CometHashAggregate (99)
         +- CometUnion (98)
            :- CometProject (89)
            :  +- CometBroadcastHashJoin (88)
            :     :- CometScan parquet spark_catalog.default.store_sales (86)
            :     +- ReusedExchange (87)
            :- CometProject (93)
            :  +- CometBroadcastHashJoin (92)
            :     :- CometScan parquet spark_catalog.default.catalog_sales (90)
            :     +- ReusedExchange (91)
            +- CometProject (97)
               +- CometBroadcastHashJoin (96)
                  :- CometScan parquet spark_catalog.default.web_sales (94)
                  +- ReusedExchange (95)


(86) Scan parquet spark_catalog.default.store_sales
Output [3]: [ss_quantity#74, ss_list_price#75, ss_sold_date_sk#76]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ss_sold_date_sk#76), dynamicpruningexpression(ss_sold_date_sk#76 IN dynamicpruning#77)]
ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>

(87) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#78]

(88) CometBroadcastHashJoin
Left output [3]: [ss_quantity#74, ss_list_price#75, ss_sold_date_sk#76]
Right output [1]: [d_date_sk#78]
Arguments: [ss_sold_date_sk#76], [d_date_sk#78], Inner, BuildRight

(89) CometProject
Input [4]: [ss_quantity#74, ss_list_price#75, ss_sold_date_sk#76, d_date_sk#78]
Arguments: [quantity#79, list_price#80], [ss_quantity#74 AS quantity#79, ss_list_price#75 AS list_price#80]

(90) Scan parquet spark_catalog.default.catalog_sales
Output [3]: [cs_quantity#81, cs_list_price#82, cs_sold_date_sk#83]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cs_sold_date_sk#83), dynamicpruningexpression(cs_sold_date_sk#83 IN dynamicpruning#84)]
ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>

(91) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#85]

(92) CometBroadcastHashJoin
Left output [3]: [cs_quantity#81, cs_list_price#82, cs_sold_date_sk#83]
Right output [1]: [d_date_sk#85]
Arguments: [cs_sold_date_sk#83], [d_date_sk#85], Inner, BuildRight

(93) CometProject
Input [4]: [cs_quantity#81, cs_list_price#82, cs_sold_date_sk#83, d_date_sk#85]
Arguments: [quantity#86, list_price#87], [cs_quantity#81 AS quantity#86, cs_list_price#82 AS list_price#87]

(94) Scan parquet spark_catalog.default.web_sales
Output [3]: [ws_quantity#88, ws_list_price#89, ws_sold_date_sk#90]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(ws_sold_date_sk#90), dynamicpruningexpression(ws_sold_date_sk#90 IN dynamicpruning#91)]
ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>

(95) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#92]

(96) CometBroadcastHashJoin
Left output [3]: [ws_quantity#88, ws_list_price#89, ws_sold_date_sk#90]
Right output [1]: [d_date_sk#92]
Arguments: [ws_sold_date_sk#90], [d_date_sk#92], Inner, BuildRight

(97) CometProject
Input [4]: [ws_quantity#88, ws_list_price#89, ws_sold_date_sk#90, d_date_sk#92]
Arguments: [quantity#93, list_price#94], [ws_quantity#88 AS quantity#93, ws_list_price#89 AS list_price#94]

(98) CometUnion
Child 0 Input [2]: [quantity#79, list_price#80]
Child 1 Input [2]: [quantity#86, list_price#87]
Child 2 Input [2]: [quantity#93, list_price#94]

(99) CometHashAggregate
Input [2]: [quantity#79, list_price#80]
Keys: []
Functions [1]: [partial_avg((cast(quantity#79 as decimal(10,0)) * list_price#80))]

(100) CometExchange
Input [2]: [sum#95, count#96]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(101) CometHashAggregate
Input [2]: [sum#95, count#96]
Keys: []
Functions [1]: [avg((cast(quantity#79 as decimal(10,0)) * list_price#80))]

(102) ColumnarToRow [codegen id : 1]
Input [1]: [average_sales#97]

Subquery:2 Hosting operator id = 86 Hosting Expression = ss_sold_date_sk#76 IN dynamicpruning#12

Subquery:3 Hosting operator id = 90 Hosting Expression = cs_sold_date_sk#83 IN dynamicpruning#12

Subquery:4 Hosting operator id = 94 Hosting Expression = ws_sold_date_sk#90 IN dynamicpruning#12

Subquery:5 Hosting operator id = 1 Hosting Expression = ss_sold_date_sk#4 IN dynamicpruning#5
BroadcastExchange (107)
+- * ColumnarToRow (106)
   +- CometProject (105)
      +- CometFilter (104)
         +- CometScan parquet spark_catalog.default.date_dim (103)


(103) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#43, d_week_seq#44]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_week_seq:int>

(104) CometFilter
Input [2]: [d_date_sk#43, d_week_seq#44]
Condition : ((isnotnull(d_week_seq#44) AND (d_week_seq#44 = Subquery scalar-subquery#45, [id=#46])) AND isnotnull(d_date_sk#43))

(105) CometProject
Input [2]: [d_date_sk#43, d_week_seq#44]
Arguments: [d_date_sk#43], [d_date_sk#43]

(106) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#43]

(107) BroadcastExchange
Input [1]: [d_date_sk#43]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

Subquery:6 Hosting operator id = 104 Hosting Expression = Subquery scalar-subquery#45, [id=#46]
* ColumnarToRow (111)
+- CometProject (110)
   +- CometFilter (109)
      +- CometScan parquet spark_catalog.default.date_dim (108)


(108) Scan parquet spark_catalog.default.date_dim
Output [4]: [d_week_seq#98, d_year#99, d_moy#100, d_dom#101]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,2000), EqualTo(d_moy,12), EqualTo(d_dom,11)]
ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>

(109) CometFilter
Input [4]: [d_week_seq#98, d_year#99, d_moy#100, d_dom#101]
Condition : (((((isnotnull(d_year#99) AND isnotnull(d_moy#100)) AND isnotnull(d_dom#101)) AND (d_year#99 = 2000)) AND (d_moy#100 = 12)) AND (d_dom#101 = 11))

(110) CometProject
Input [4]: [d_week_seq#98, d_year#99, d_moy#100, d_dom#101]
Arguments: [d_week_seq#98], [d_week_seq#98]

(111) ColumnarToRow [codegen id : 1]
Input [1]: [d_week_seq#98]

Subquery:7 Hosting operator id = 5 Hosting Expression = ss_sold_date_sk#11 IN dynamicpruning#12
BroadcastExchange (116)
+- * ColumnarToRow (115)
   +- CometProject (114)
      +- CometFilter (113)
         +- CometScan parquet spark_catalog.default.date_dim (112)


(112) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#26, d_year#102]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(113) CometFilter
Input [2]: [d_date_sk#26, d_year#102]
Condition : (((isnotnull(d_year#102) AND (d_year#102 >= 1999)) AND (d_year#102 <= 2001)) AND isnotnull(d_date_sk#26))

(114) CometProject
Input [2]: [d_date_sk#26, d_year#102]
Arguments: [d_date_sk#26], [d_date_sk#26]

(115) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#26]

(116) BroadcastExchange
Input [1]: [d_date_sk#26]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6]

Subquery:8 Hosting operator id = 9 Hosting Expression = cs_sold_date_sk#18 IN dynamicpruning#12

Subquery:9 Hosting operator id = 33 Hosting Expression = ws_sold_date_sk#31 IN dynamicpruning#12

Subquery:10 Hosting operator id = 56 Hosting Expression = ReusedSubquery Subquery scalar-subquery#45, [id=#46]

Subquery:11 Hosting operator id = 81 Hosting Expression = ReusedSubquery Subquery scalar-subquery#53, [id=#54]

Subquery:12 Hosting operator id = 65 Hosting Expression = ss_sold_date_sk#58 IN dynamicpruning#59
BroadcastExchange (121)
+- * ColumnarToRow (120)
   +- CometProject (119)
      +- CometFilter (118)
         +- CometScan parquet spark_catalog.default.date_dim (117)


(117) Scan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#64, d_week_seq#65]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_week_seq:int>

(118) CometFilter
Input [2]: [d_date_sk#64, d_week_seq#65]
Condition : ((isnotnull(d_week_seq#65) AND (d_week_seq#65 = Subquery scalar-subquery#66, [id=#67])) AND isnotnull(d_date_sk#64))

(119) CometProject
Input [2]: [d_date_sk#64, d_week_seq#65]
Arguments: [d_date_sk#64], [d_date_sk#64]

(120) ColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#64]

(121) BroadcastExchange
Input [1]: [d_date_sk#64]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7]

Subquery:13 Hosting operator id = 118 Hosting Expression = Subquery scalar-subquery#66, [id=#67]
* ColumnarToRow (125)
+- CometProject (124)
   +- CometFilter (123)
      +- CometScan parquet spark_catalog.default.date_dim (122)


(122) Scan parquet spark_catalog.default.date_dim
Output [4]: [d_week_seq#103, d_year#104, d_moy#105, d_dom#106]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), EqualTo(d_dom,11)]
ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>

(123) CometFilter
Input [4]: [d_week_seq#103, d_year#104, d_moy#105, d_dom#106]
Condition : (((((isnotnull(d_year#104) AND isnotnull(d_moy#105)) AND isnotnull(d_dom#106)) AND (d_year#104 = 1999)) AND (d_moy#105 = 12)) AND (d_dom#106 = 11))

(124) CometProject
Input [4]: [d_week_seq#103, d_year#104, d_moy#105, d_dom#106]
Arguments: [d_week_seq#103], [d_week_seq#103]

(125) ColumnarToRow [codegen id : 1]
Input [1]: [d_week_seq#103]

Subquery:14 Hosting operator id = 73 Hosting Expression = ReusedSubquery Subquery scalar-subquery#66, [id=#67]


