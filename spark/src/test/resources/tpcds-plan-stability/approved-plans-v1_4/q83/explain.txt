== Physical Plan ==
* CometColumnarToRow (54)
+- CometTakeOrderedAndProject (53)
   +- CometProject (52)
      +- CometBroadcastHashJoin (51)
         :- CometProject (38)
         :  +- CometBroadcastHashJoin (37)
         :     :- CometHashAggregate (19)
         :     :  +- CometExchange (18)
         :     :     +- CometHashAggregate (17)
         :     :        +- CometProject (16)
         :     :           +- CometBroadcastHashJoin (15)
         :     :              :- CometProject (8)
         :     :              :  +- CometBroadcastHashJoin (7)
         :     :              :     :- CometFilter (2)
         :     :              :     :  +- CometScan parquet spark_catalog.default.store_returns (1)
         :     :              :     +- CometBroadcastExchange (6)
         :     :              :        +- CometProject (5)
         :     :              :           +- CometFilter (4)
         :     :              :              +- CometScan parquet spark_catalog.default.item (3)
         :     :              +- CometBroadcastExchange (14)
         :     :                 +- CometProject (13)
         :     :                    +- CometBroadcastHashJoin (12)
         :     :                       :- CometFilter (10)
         :     :                       :  +- CometScan parquet spark_catalog.default.date_dim (9)
         :     :                       +- ReusedExchange (11)
         :     +- CometBroadcastExchange (36)
         :        +- CometHashAggregate (35)
         :           +- CometExchange (34)
         :              +- CometHashAggregate (33)
         :                 +- CometProject (32)
         :                    +- CometBroadcastHashJoin (31)
         :                       :- CometProject (24)
         :                       :  +- CometBroadcastHashJoin (23)
         :                       :     :- CometFilter (21)
         :                       :     :  +- CometScan parquet spark_catalog.default.catalog_returns (20)
         :                       :     +- ReusedExchange (22)
         :                       +- CometBroadcastExchange (30)
         :                          +- CometProject (29)
         :                             +- CometBroadcastHashJoin (28)
         :                                :- CometFilter (26)
         :                                :  +- CometScan parquet spark_catalog.default.date_dim (25)
         :                                +- ReusedExchange (27)
         +- CometBroadcastExchange (50)
            +- CometHashAggregate (49)
               +- CometExchange (48)
                  +- CometHashAggregate (47)
                     +- CometProject (46)
                        +- CometBroadcastHashJoin (45)
                           :- CometProject (43)
                           :  +- CometBroadcastHashJoin (42)
                           :     :- CometFilter (40)
                           :     :  +- CometScan parquet spark_catalog.default.web_returns (39)
                           :     +- ReusedExchange (41)
                           +- ReusedExchange (44)


(1) CometScan parquet spark_catalog.default.store_returns
Output [3]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(sr_returned_date_sk#3), dynamicpruningexpression(sr_returned_date_sk#3 IN dynamicpruning#4)]
PushedFilters: [IsNotNull(sr_item_sk)]
ReadSchema: struct<sr_item_sk:int,sr_return_quantity:int>

(2) CometFilter
Input [3]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3]
Condition : isnotnull(sr_item_sk#1)

(3) CometScan parquet spark_catalog.default.item
Output [2]: [i_item_sk#5, i_item_id#6]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(4) CometFilter
Input [2]: [i_item_sk#5, i_item_id#6]
Condition : (isnotnull(i_item_sk#5) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#6, 16, true, false, true)))

(5) CometProject
Input [2]: [i_item_sk#5, i_item_id#6]
Arguments: [i_item_sk#5, i_item_id#7], [i_item_sk#5, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#6, 16, true, false, true) AS i_item_id#7]

(6) CometBroadcastExchange
Input [2]: [i_item_sk#5, i_item_id#7]
Arguments: [i_item_sk#5, i_item_id#7]

(7) CometBroadcastHashJoin
Left output [3]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3]
Right output [2]: [i_item_sk#5, i_item_id#7]
Arguments: [sr_item_sk#1], [i_item_sk#5], Inner, BuildRight

(8) CometProject
Input [5]: [sr_item_sk#1, sr_return_quantity#2, sr_returned_date_sk#3, i_item_sk#5, i_item_id#7]
Arguments: [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#7], [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#7]

(9) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#8, d_date#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(10) CometFilter
Input [2]: [d_date_sk#8, d_date#9]
Condition : isnotnull(d_date_sk#8)

(11) ReusedExchange [Reuses operator id: 64]
Output [1]: [d_date#9#10]

(12) CometBroadcastHashJoin
Left output [2]: [d_date_sk#8, d_date#9]
Right output [1]: [d_date#9#10]
Arguments: [d_date#9], [d_date#9#10], LeftSemi, BuildRight

(13) CometProject
Input [2]: [d_date_sk#8, d_date#9]
Arguments: [d_date_sk#8], [d_date_sk#8]

(14) CometBroadcastExchange
Input [1]: [d_date_sk#8]
Arguments: [d_date_sk#8]

(15) CometBroadcastHashJoin
Left output [3]: [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#7]
Right output [1]: [d_date_sk#8]
Arguments: [sr_returned_date_sk#3], [d_date_sk#8], Inner, BuildRight

(16) CometProject
Input [4]: [sr_return_quantity#2, sr_returned_date_sk#3, i_item_id#7, d_date_sk#8]
Arguments: [sr_return_quantity#2, i_item_id#7], [sr_return_quantity#2, i_item_id#7]

(17) CometHashAggregate
Input [2]: [sr_return_quantity#2, i_item_id#7]
Keys [1]: [i_item_id#7]
Functions [1]: [partial_sum(sr_return_quantity#2)]

(18) CometExchange
Input [2]: [i_item_id#7, sum#11]
Arguments: hashpartitioning(i_item_id#7, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(19) CometHashAggregate
Input [2]: [i_item_id#7, sum#11]
Keys [1]: [i_item_id#7]
Functions [1]: [sum(sr_return_quantity#2)]

(20) CometScan parquet spark_catalog.default.catalog_returns
Output [3]: [cr_item_sk#12, cr_return_quantity#13, cr_returned_date_sk#14]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(cr_returned_date_sk#14), dynamicpruningexpression(cr_returned_date_sk#14 IN dynamicpruning#15)]
PushedFilters: [IsNotNull(cr_item_sk)]
ReadSchema: struct<cr_item_sk:int,cr_return_quantity:int>

(21) CometFilter
Input [3]: [cr_item_sk#12, cr_return_quantity#13, cr_returned_date_sk#14]
Condition : isnotnull(cr_item_sk#12)

(22) ReusedExchange [Reuses operator id: 6]
Output [2]: [i_item_sk#16, i_item_id#17]

(23) CometBroadcastHashJoin
Left output [3]: [cr_item_sk#12, cr_return_quantity#13, cr_returned_date_sk#14]
Right output [2]: [i_item_sk#16, i_item_id#17]
Arguments: [cr_item_sk#12], [i_item_sk#16], Inner, BuildRight

(24) CometProject
Input [5]: [cr_item_sk#12, cr_return_quantity#13, cr_returned_date_sk#14, i_item_sk#16, i_item_id#17]
Arguments: [cr_return_quantity#13, cr_returned_date_sk#14, i_item_id#17], [cr_return_quantity#13, cr_returned_date_sk#14, i_item_id#17]

(25) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#18, d_date#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(26) CometFilter
Input [2]: [d_date_sk#18, d_date#19]
Condition : isnotnull(d_date_sk#18)

(27) ReusedExchange [Reuses operator id: 75]
Output [1]: [d_date#9]

(28) CometBroadcastHashJoin
Left output [2]: [d_date_sk#18, d_date#19]
Right output [1]: [d_date#9]
Arguments: [d_date#19], [d_date#9], LeftSemi, BuildRight

(29) CometProject
Input [2]: [d_date_sk#18, d_date#19]
Arguments: [d_date_sk#18], [d_date_sk#18]

(30) CometBroadcastExchange
Input [1]: [d_date_sk#18]
Arguments: [d_date_sk#18]

(31) CometBroadcastHashJoin
Left output [3]: [cr_return_quantity#13, cr_returned_date_sk#14, i_item_id#17]
Right output [1]: [d_date_sk#18]
Arguments: [cr_returned_date_sk#14], [d_date_sk#18], Inner, BuildRight

(32) CometProject
Input [4]: [cr_return_quantity#13, cr_returned_date_sk#14, i_item_id#17, d_date_sk#18]
Arguments: [cr_return_quantity#13, i_item_id#17], [cr_return_quantity#13, i_item_id#17]

(33) CometHashAggregate
Input [2]: [cr_return_quantity#13, i_item_id#17]
Keys [1]: [i_item_id#17]
Functions [1]: [partial_sum(cr_return_quantity#13)]

(34) CometExchange
Input [2]: [i_item_id#17, sum#20]
Arguments: hashpartitioning(i_item_id#17, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(35) CometHashAggregate
Input [2]: [i_item_id#17, sum#20]
Keys [1]: [i_item_id#17]
Functions [1]: [sum(cr_return_quantity#13)]

(36) CometBroadcastExchange
Input [2]: [item_id#21, cr_item_qty#22]
Arguments: [item_id#21, cr_item_qty#22]

(37) CometBroadcastHashJoin
Left output [2]: [item_id#23, sr_item_qty#24]
Right output [2]: [item_id#21, cr_item_qty#22]
Arguments: [item_id#23], [item_id#21], Inner, BuildRight

(38) CometProject
Input [4]: [item_id#23, sr_item_qty#24, item_id#21, cr_item_qty#22]
Arguments: [item_id#23, sr_item_qty#24, cr_item_qty#22], [item_id#23, sr_item_qty#24, cr_item_qty#22]

(39) CometScan parquet spark_catalog.default.web_returns
Output [3]: [wr_item_sk#25, wr_return_quantity#26, wr_returned_date_sk#27]
Batched: true
Location: InMemoryFileIndex []
PartitionFilters: [isnotnull(wr_returned_date_sk#27), dynamicpruningexpression(wr_returned_date_sk#27 IN dynamicpruning#28)]
PushedFilters: [IsNotNull(wr_item_sk)]
ReadSchema: struct<wr_item_sk:int,wr_return_quantity:int>

(40) CometFilter
Input [3]: [wr_item_sk#25, wr_return_quantity#26, wr_returned_date_sk#27]
Condition : isnotnull(wr_item_sk#25)

(41) ReusedExchange [Reuses operator id: 6]
Output [2]: [i_item_sk#29, i_item_id#30]

(42) CometBroadcastHashJoin
Left output [3]: [wr_item_sk#25, wr_return_quantity#26, wr_returned_date_sk#27]
Right output [2]: [i_item_sk#29, i_item_id#30]
Arguments: [wr_item_sk#25], [i_item_sk#29], Inner, BuildRight

(43) CometProject
Input [5]: [wr_item_sk#25, wr_return_quantity#26, wr_returned_date_sk#27, i_item_sk#29, i_item_id#30]
Arguments: [wr_return_quantity#26, wr_returned_date_sk#27, i_item_id#30], [wr_return_quantity#26, wr_returned_date_sk#27, i_item_id#30]

(44) ReusedExchange [Reuses operator id: 30]
Output [1]: [d_date_sk#31]

(45) CometBroadcastHashJoin
Left output [3]: [wr_return_quantity#26, wr_returned_date_sk#27, i_item_id#30]
Right output [1]: [d_date_sk#31]
Arguments: [wr_returned_date_sk#27], [d_date_sk#31], Inner, BuildRight

(46) CometProject
Input [4]: [wr_return_quantity#26, wr_returned_date_sk#27, i_item_id#30, d_date_sk#31]
Arguments: [wr_return_quantity#26, i_item_id#30], [wr_return_quantity#26, i_item_id#30]

(47) CometHashAggregate
Input [2]: [wr_return_quantity#26, i_item_id#30]
Keys [1]: [i_item_id#30]
Functions [1]: [partial_sum(wr_return_quantity#26)]

(48) CometExchange
Input [2]: [i_item_id#30, sum#32]
Arguments: hashpartitioning(i_item_id#30, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(49) CometHashAggregate
Input [2]: [i_item_id#30, sum#32]
Keys [1]: [i_item_id#30]
Functions [1]: [sum(wr_return_quantity#26)]

(50) CometBroadcastExchange
Input [2]: [item_id#33, wr_item_qty#34]
Arguments: [item_id#33, wr_item_qty#34]

(51) CometBroadcastHashJoin
Left output [3]: [item_id#23, sr_item_qty#24, cr_item_qty#22]
Right output [2]: [item_id#33, wr_item_qty#34]
Arguments: [item_id#23], [item_id#33], Inner, BuildRight

(52) CometProject
Input [5]: [item_id#23, sr_item_qty#24, cr_item_qty#22, item_id#33, wr_item_qty#34]
Arguments: [item_id#23, sr_item_qty#24, sr_dev#35, cr_item_qty#22, cr_dev#36, wr_item_qty#34, wr_dev#37, average#38], [item_id#23, sr_item_qty#24, (((cast(sr_item_qty#24 as double) / knownfloatingpointnormalized(normalizenanandzero(cast(((sr_item_qty#24 + cr_item_qty#22) + wr_item_qty#34) as double)))) / 3.0) * 100.0) AS sr_dev#35, cr_item_qty#22, (((cast(cr_item_qty#22 as double) / knownfloatingpointnormalized(normalizenanandzero(cast(((sr_item_qty#24 + cr_item_qty#22) + wr_item_qty#34) as double)))) / 3.0) * 100.0) AS cr_dev#36, wr_item_qty#34, (((cast(wr_item_qty#34 as double) / knownfloatingpointnormalized(normalizenanandzero(cast(((sr_item_qty#24 + cr_item_qty#22) + wr_item_qty#34) as double)))) / 3.0) * 100.0) AS wr_dev#37, (cast(((sr_item_qty#24 + cr_item_qty#22) + wr_item_qty#34) as decimal(20,0)) / 3.0) AS average#38]

(53) CometTakeOrderedAndProject
Input [8]: [item_id#23, sr_item_qty#24, sr_dev#35, cr_item_qty#22, cr_dev#36, wr_item_qty#34, wr_dev#37, average#38]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[item_id#23 ASC NULLS FIRST,sr_item_qty#24 ASC NULLS FIRST], output=[item_id#23,sr_item_qty#24,sr_dev#35,cr_item_qty#22,cr_dev#36,wr_item_qty#34,wr_dev#37,average#38]), [item_id#23, sr_item_qty#24, sr_dev#35, cr_item_qty#22, cr_dev#36, wr_item_qty#34, wr_dev#37, average#38], 100, [item_id#23 ASC NULLS FIRST, sr_item_qty#24 ASC NULLS FIRST], [item_id#23, sr_item_qty#24, sr_dev#35, cr_item_qty#22, cr_dev#36, wr_item_qty#34, wr_dev#37, average#38]

(54) CometColumnarToRow [codegen id : 1]
Input [8]: [item_id#23, sr_item_qty#24, sr_dev#35, cr_item_qty#22, cr_dev#36, wr_item_qty#34, wr_dev#37, average#38]

===== Subqueries =====

Subquery:1 Hosting operator id = 1 Hosting Expression = sr_returned_date_sk#3 IN dynamicpruning#4
BroadcastExchange (68)
+- * CometColumnarToRow (67)
   +- CometProject (66)
      +- CometBroadcastHashJoin (65)
         :- CometFilter (56)
         :  +- CometScan parquet spark_catalog.default.date_dim (55)
         +- CometBroadcastExchange (64)
            +- CometProject (63)
               +- CometBroadcastHashJoin (62)
                  :- CometScan parquet spark_catalog.default.date_dim (57)
                  +- CometBroadcastExchange (61)
                     +- CometProject (60)
                        +- CometFilter (59)
                           +- CometScan parquet spark_catalog.default.date_dim (58)


(55) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#8, d_date#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(56) CometFilter
Input [2]: [d_date_sk#8, d_date#9]
Condition : isnotnull(d_date_sk#8)

(57) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date#9, d_week_seq#39]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date:date,d_week_seq:int>

(58) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date#9, d_week_seq#39]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date:date,d_week_seq:int>

(59) CometFilter
Input [2]: [d_date#9, d_week_seq#39]
Condition : cast(d_date#9 as string) IN (2000-06-30,2000-09-27,2000-11-17)

(60) CometProject
Input [2]: [d_date#9, d_week_seq#39]
Arguments: [d_week_seq#39#40], [d_week_seq#39 AS d_week_seq#39#40]

(61) CometBroadcastExchange
Input [1]: [d_week_seq#39#40]
Arguments: [d_week_seq#39#40]

(62) CometBroadcastHashJoin
Left output [2]: [d_date#9, d_week_seq#39]
Right output [1]: [d_week_seq#39#40]
Arguments: [d_week_seq#39], [d_week_seq#39#40], LeftSemi, BuildRight

(63) CometProject
Input [2]: [d_date#9, d_week_seq#39]
Arguments: [d_date#9#10], [d_date#9 AS d_date#9#10]

(64) CometBroadcastExchange
Input [1]: [d_date#9#10]
Arguments: [d_date#9#10]

(65) CometBroadcastHashJoin
Left output [2]: [d_date_sk#8, d_date#9]
Right output [1]: [d_date#9#10]
Arguments: [d_date#9], [d_date#9#10], LeftSemi, BuildRight

(66) CometProject
Input [2]: [d_date_sk#8, d_date#9]
Arguments: [d_date_sk#8], [d_date_sk#8]

(67) CometColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#8]

(68) BroadcastExchange
Input [1]: [d_date_sk#8]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=4]

Subquery:2 Hosting operator id = 20 Hosting Expression = cr_returned_date_sk#14 IN dynamicpruning#15
BroadcastExchange (79)
+- * CometColumnarToRow (78)
   +- CometProject (77)
      +- CometBroadcastHashJoin (76)
         :- CometFilter (70)
         :  +- CometScan parquet spark_catalog.default.date_dim (69)
         +- CometBroadcastExchange (75)
            +- CometProject (74)
               +- CometBroadcastHashJoin (73)
                  :- CometScan parquet spark_catalog.default.date_dim (71)
                  +- ReusedExchange (72)


(69) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#18, d_date#19]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_date:date>

(70) CometFilter
Input [2]: [d_date_sk#18, d_date#19]
Condition : isnotnull(d_date_sk#18)

(71) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date#9, d_week_seq#39]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
ReadSchema: struct<d_date:date,d_week_seq:int>

(72) ReusedExchange [Reuses operator id: 61]
Output [1]: [d_week_seq#39#41]

(73) CometBroadcastHashJoin
Left output [2]: [d_date#9, d_week_seq#39]
Right output [1]: [d_week_seq#39#41]
Arguments: [d_week_seq#39], [d_week_seq#39#41], LeftSemi, BuildRight

(74) CometProject
Input [2]: [d_date#9, d_week_seq#39]
Arguments: [d_date#9], [d_date#9]

(75) CometBroadcastExchange
Input [1]: [d_date#9]
Arguments: [d_date#9]

(76) CometBroadcastHashJoin
Left output [2]: [d_date_sk#18, d_date#19]
Right output [1]: [d_date#9]
Arguments: [d_date#19], [d_date#9], LeftSemi, BuildRight

(77) CometProject
Input [2]: [d_date_sk#18, d_date#19]
Arguments: [d_date_sk#18], [d_date_sk#18]

(78) CometColumnarToRow [codegen id : 1]
Input [1]: [d_date_sk#18]

(79) BroadcastExchange
Input [1]: [d_date_sk#18]
Arguments: HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=5]

Subquery:3 Hosting operator id = 39 Hosting Expression = wr_returned_date_sk#27 IN dynamicpruning#15


