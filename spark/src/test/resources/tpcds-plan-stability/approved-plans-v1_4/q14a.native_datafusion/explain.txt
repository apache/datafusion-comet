== Physical Plan ==
* CometColumnarToRow (102)
+- CometTakeOrderedAndProject (101)
   +- CometHashAggregate (100)
      +- CometExchange (99)
         +- CometHashAggregate (98)
            +- CometExpand (97)
               +- CometUnion (96)
                  :- CometProject (65)
                  :  +- CometFilter (64)
                  :     +- CometHashAggregate (63)
                  :        +- CometExchange (62)
                  :           +- CometHashAggregate (61)
                  :              +- CometProject (60)
                  :                 +- CometBroadcastHashJoin (59)
                  :                    :- CometProject (54)
                  :                    :  +- CometBroadcastHashJoin (53)
                  :                    :     :- CometBroadcastHashJoin (47)
                  :                    :     :  :- CometFilter (2)
                  :                    :     :  :  +- CometNativeScan parquet spark_catalog.default.store_sales (1)
                  :                    :     :  +- CometBroadcastExchange (46)
                  :                    :     :     +- CometProject (45)
                  :                    :     :        +- CometBroadcastHashJoin (44)
                  :                    :     :           :- CometFilter (4)
                  :                    :     :           :  +- CometNativeScan parquet spark_catalog.default.item (3)
                  :                    :     :           +- CometBroadcastExchange (43)
                  :                    :     :              +- CometBroadcastHashJoin (42)
                  :                    :     :                 :- CometHashAggregate (32)
                  :                    :     :                 :  +- CometExchange (31)
                  :                    :     :                 :     +- CometHashAggregate (30)
                  :                    :     :                 :        +- CometProject (29)
                  :                    :     :                 :           +- CometBroadcastHashJoin (28)
                  :                    :     :                 :              :- CometProject (26)
                  :                    :     :                 :              :  +- CometBroadcastHashJoin (25)
                  :                    :     :                 :              :     :- CometFilter (6)
                  :                    :     :                 :              :     :  +- CometNativeScan parquet spark_catalog.default.store_sales (5)
                  :                    :     :                 :              :     +- CometBroadcastExchange (24)
                  :                    :     :                 :              :        +- CometBroadcastHashJoin (23)
                  :                    :     :                 :              :           :- CometFilter (8)
                  :                    :     :                 :              :           :  +- CometNativeScan parquet spark_catalog.default.item (7)
                  :                    :     :                 :              :           +- CometBroadcastExchange (22)
                  :                    :     :                 :              :              +- CometProject (21)
                  :                    :     :                 :              :                 +- CometBroadcastHashJoin (20)
                  :                    :     :                 :              :                    :- CometProject (15)
                  :                    :     :                 :              :                    :  +- CometBroadcastHashJoin (14)
                  :                    :     :                 :              :                    :     :- CometFilter (10)
                  :                    :     :                 :              :                    :     :  +- CometNativeScan parquet spark_catalog.default.catalog_sales (9)
                  :                    :     :                 :              :                    :     +- CometBroadcastExchange (13)
                  :                    :     :                 :              :                    :        +- CometFilter (12)
                  :                    :     :                 :              :                    :           +- CometNativeScan parquet spark_catalog.default.item (11)
                  :                    :     :                 :              :                    +- CometBroadcastExchange (19)
                  :                    :     :                 :              :                       +- CometProject (18)
                  :                    :     :                 :              :                          +- CometFilter (17)
                  :                    :     :                 :              :                             +- CometNativeScan parquet spark_catalog.default.date_dim (16)
                  :                    :     :                 :              +- ReusedExchange (27)
                  :                    :     :                 +- CometBroadcastExchange (41)
                  :                    :     :                    +- CometProject (40)
                  :                    :     :                       +- CometBroadcastHashJoin (39)
                  :                    :     :                          :- CometProject (37)
                  :                    :     :                          :  +- CometBroadcastHashJoin (36)
                  :                    :     :                          :     :- CometFilter (34)
                  :                    :     :                          :     :  +- CometNativeScan parquet spark_catalog.default.web_sales (33)
                  :                    :     :                          :     +- ReusedExchange (35)
                  :                    :     :                          +- ReusedExchange (38)
                  :                    :     +- CometBroadcastExchange (52)
                  :                    :        +- CometBroadcastHashJoin (51)
                  :                    :           :- CometFilter (49)
                  :                    :           :  +- CometNativeScan parquet spark_catalog.default.item (48)
                  :                    :           +- ReusedExchange (50)
                  :                    +- CometBroadcastExchange (58)
                  :                       +- CometProject (57)
                  :                          +- CometFilter (56)
                  :                             +- CometNativeScan parquet spark_catalog.default.date_dim (55)
                  :- CometProject (80)
                  :  +- CometFilter (79)
                  :     +- CometHashAggregate (78)
                  :        +- CometExchange (77)
                  :           +- CometHashAggregate (76)
                  :              +- CometProject (75)
                  :                 +- CometBroadcastHashJoin (74)
                  :                    :- CometProject (72)
                  :                    :  +- CometBroadcastHashJoin (71)
                  :                    :     :- CometBroadcastHashJoin (69)
                  :                    :     :  :- CometFilter (67)
                  :                    :     :  :  +- CometNativeScan parquet spark_catalog.default.catalog_sales (66)
                  :                    :     :  +- ReusedExchange (68)
                  :                    :     +- ReusedExchange (70)
                  :                    +- ReusedExchange (73)
                  +- CometProject (95)
                     +- CometFilter (94)
                        +- CometHashAggregate (93)
                           +- CometExchange (92)
                              +- CometHashAggregate (91)
                                 +- CometProject (90)
                                    +- CometBroadcastHashJoin (89)
                                       :- CometProject (87)
                                       :  +- CometBroadcastHashJoin (86)
                                       :     :- CometBroadcastHashJoin (84)
                                       :     :  :- CometFilter (82)
                                       :     :  :  +- CometNativeScan parquet spark_catalog.default.web_sales (81)
                                       :     :  +- ReusedExchange (83)
                                       :     +- ReusedExchange (85)
                                       +- ReusedExchange (88)


(1) CometNativeScan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#4)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Condition : isnotnull(ss_item_sk#1)

(3) CometNativeScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(4) CometFilter
Input [4]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8]
Condition : ((isnotnull(i_brand_id#6) AND isnotnull(i_class_id#7)) AND isnotnull(i_category_id#8))

(5) CometNativeScan parquet spark_catalog.default.store_sales
Output [2]: [ss_item_sk#9, ss_sold_date_sk#10]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#10)]
PushedFilters: [IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int>

(6) CometFilter
Input [2]: [ss_item_sk#9, ss_sold_date_sk#10]
Condition : isnotnull(ss_item_sk#9)

(7) CometNativeScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(8) CometFilter
Input [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Condition : (((isnotnull(i_item_sk#11) AND isnotnull(i_brand_id#12)) AND isnotnull(i_class_id#13)) AND isnotnull(i_category_id#14))

(9) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [2]: [cs_item_sk#15, cs_sold_date_sk#16]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#16)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int>

(10) CometFilter
Input [2]: [cs_item_sk#15, cs_sold_date_sk#16]
Condition : isnotnull(cs_item_sk#15)

(11) CometNativeScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(12) CometFilter
Input [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Condition : isnotnull(i_item_sk#17)

(13) CometBroadcastExchange
Input [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]

(14) CometBroadcastHashJoin
Left output [2]: [cs_item_sk#15, cs_sold_date_sk#16]
Right output [4]: [i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [cs_item_sk#15], [i_item_sk#17], Inner, BuildRight

(15) CometProject
Input [6]: [cs_item_sk#15, cs_sold_date_sk#16, i_item_sk#17, i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20], [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20]

(16) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#21, d_year#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(17) CometFilter
Input [2]: [d_date_sk#21, d_year#22]
Condition : (((isnotnull(d_year#22) AND (d_year#22 >= 1999)) AND (d_year#22 <= 2001)) AND isnotnull(d_date_sk#21))

(18) CometProject
Input [2]: [d_date_sk#21, d_year#22]
Arguments: [d_date_sk#21], [d_date_sk#21]

(19) CometBroadcastExchange
Input [1]: [d_date_sk#21]
Arguments: [d_date_sk#21]

(20) CometBroadcastHashJoin
Left output [4]: [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20]
Right output [1]: [d_date_sk#21]
Arguments: [cs_sold_date_sk#16], [d_date_sk#21], Inner, BuildRight

(21) CometProject
Input [5]: [cs_sold_date_sk#16, i_brand_id#18, i_class_id#19, i_category_id#20, d_date_sk#21]
Arguments: [i_brand_id#18, i_class_id#19, i_category_id#20], [i_brand_id#18, i_class_id#19, i_category_id#20]

(22) CometBroadcastExchange
Input [3]: [i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [i_brand_id#18, i_class_id#19, i_category_id#20]

(23) CometBroadcastHashJoin
Left output [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Right output [3]: [i_brand_id#18, i_class_id#19, i_category_id#20]
Arguments: [coalesce(i_brand_id#12, 0), isnull(i_brand_id#12), coalesce(i_class_id#13, 0), isnull(i_class_id#13), coalesce(i_category_id#14, 0), isnull(i_category_id#14)], [coalesce(i_brand_id#18, 0), isnull(i_brand_id#18), coalesce(i_class_id#19, 0), isnull(i_class_id#19), coalesce(i_category_id#20, 0), isnull(i_category_id#20)], LeftSemi, BuildRight

(24) CometBroadcastExchange
Input [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Arguments: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]

(25) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#9, ss_sold_date_sk#10]
Right output [4]: [i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Arguments: [ss_item_sk#9], [i_item_sk#11], Inner, BuildRight

(26) CometProject
Input [6]: [ss_item_sk#9, ss_sold_date_sk#10, i_item_sk#11, i_brand_id#12, i_class_id#13, i_category_id#14]
Arguments: [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14], [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14]

(27) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#23]

(28) CometBroadcastHashJoin
Left output [4]: [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14]
Right output [1]: [d_date_sk#23]
Arguments: [ss_sold_date_sk#10], [d_date_sk#23], Inner, BuildRight

(29) CometProject
Input [5]: [ss_sold_date_sk#10, i_brand_id#12, i_class_id#13, i_category_id#14, d_date_sk#23]
Arguments: [brand_id#24, class_id#25, category_id#26], [i_brand_id#12 AS brand_id#24, i_class_id#13 AS class_id#25, i_category_id#14 AS category_id#26]

(30) CometHashAggregate
Input [3]: [brand_id#24, class_id#25, category_id#26]
Keys [3]: [brand_id#24, class_id#25, category_id#26]
Functions: []

(31) CometExchange
Input [3]: [brand_id#24, class_id#25, category_id#26]
Arguments: hashpartitioning(brand_id#24, class_id#25, category_id#26, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(32) CometHashAggregate
Input [3]: [brand_id#24, class_id#25, category_id#26]
Keys [3]: [brand_id#24, class_id#25, category_id#26]
Functions: []

(33) CometNativeScan parquet spark_catalog.default.web_sales
Output [2]: [ws_item_sk#27, ws_sold_date_sk#28]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#28)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int>

(34) CometFilter
Input [2]: [ws_item_sk#27, ws_sold_date_sk#28]
Condition : isnotnull(ws_item_sk#27)

(35) ReusedExchange [Reuses operator id: 13]
Output [4]: [i_item_sk#29, i_brand_id#30, i_class_id#31, i_category_id#32]

(36) CometBroadcastHashJoin
Left output [2]: [ws_item_sk#27, ws_sold_date_sk#28]
Right output [4]: [i_item_sk#29, i_brand_id#30, i_class_id#31, i_category_id#32]
Arguments: [ws_item_sk#27], [i_item_sk#29], Inner, BuildRight

(37) CometProject
Input [6]: [ws_item_sk#27, ws_sold_date_sk#28, i_item_sk#29, i_brand_id#30, i_class_id#31, i_category_id#32]
Arguments: [ws_sold_date_sk#28, i_brand_id#30, i_class_id#31, i_category_id#32], [ws_sold_date_sk#28, i_brand_id#30, i_class_id#31, i_category_id#32]

(38) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#33]

(39) CometBroadcastHashJoin
Left output [4]: [ws_sold_date_sk#28, i_brand_id#30, i_class_id#31, i_category_id#32]
Right output [1]: [d_date_sk#33]
Arguments: [ws_sold_date_sk#28], [d_date_sk#33], Inner, BuildRight

(40) CometProject
Input [5]: [ws_sold_date_sk#28, i_brand_id#30, i_class_id#31, i_category_id#32, d_date_sk#33]
Arguments: [i_brand_id#30, i_class_id#31, i_category_id#32], [i_brand_id#30, i_class_id#31, i_category_id#32]

(41) CometBroadcastExchange
Input [3]: [i_brand_id#30, i_class_id#31, i_category_id#32]
Arguments: [i_brand_id#30, i_class_id#31, i_category_id#32]

(42) CometBroadcastHashJoin
Left output [3]: [brand_id#24, class_id#25, category_id#26]
Right output [3]: [i_brand_id#30, i_class_id#31, i_category_id#32]
Arguments: [coalesce(brand_id#24, 0), isnull(brand_id#24), coalesce(class_id#25, 0), isnull(class_id#25), coalesce(category_id#26, 0), isnull(category_id#26)], [coalesce(i_brand_id#30, 0), isnull(i_brand_id#30), coalesce(i_class_id#31, 0), isnull(i_class_id#31), coalesce(i_category_id#32, 0), isnull(i_category_id#32)], LeftSemi, BuildRight

(43) CometBroadcastExchange
Input [3]: [brand_id#24, class_id#25, category_id#26]
Arguments: [brand_id#24, class_id#25, category_id#26]

(44) CometBroadcastHashJoin
Left output [4]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8]
Right output [3]: [brand_id#24, class_id#25, category_id#26]
Arguments: [i_brand_id#6, i_class_id#7, i_category_id#8], [brand_id#24, class_id#25, category_id#26], Inner, BuildRight

(45) CometProject
Input [7]: [i_item_sk#5, i_brand_id#6, i_class_id#7, i_category_id#8, brand_id#24, class_id#25, category_id#26]
Arguments: [ss_item_sk#34], [i_item_sk#5 AS ss_item_sk#34]

(46) CometBroadcastExchange
Input [1]: [ss_item_sk#34]
Arguments: [ss_item_sk#34]

(47) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [1]: [ss_item_sk#34]
Arguments: [ss_item_sk#1], [ss_item_sk#34], LeftSemi, BuildRight

(48) CometNativeScan parquet spark_catalog.default.item
Output [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>

(49) CometFilter
Input [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Condition : isnotnull(i_item_sk#35)

(50) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#34]

(51) CometBroadcastHashJoin
Left output [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Right output [1]: [ss_item_sk#34]
Arguments: [i_item_sk#35], [ss_item_sk#34], LeftSemi, BuildRight

(52) CometBroadcastExchange
Input [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Arguments: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]

(53) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4]
Right output [4]: [i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Arguments: [ss_item_sk#1], [i_item_sk#35], Inner, BuildRight

(54) CometProject
Input [8]: [ss_item_sk#1, ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_item_sk#35, i_brand_id#36, i_class_id#37, i_category_id#38]
Arguments: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#36, i_class_id#37, i_category_id#38], [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#36, i_class_id#37, i_category_id#38]

(55) CometNativeScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#39, d_year#40, d_moy#41]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,11), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(56) CometFilter
Input [3]: [d_date_sk#39, d_year#40, d_moy#41]
Condition : ((((isnotnull(d_year#40) AND isnotnull(d_moy#41)) AND (d_year#40 = 2001)) AND (d_moy#41 = 11)) AND isnotnull(d_date_sk#39))

(57) CometProject
Input [3]: [d_date_sk#39, d_year#40, d_moy#41]
Arguments: [d_date_sk#39], [d_date_sk#39]

(58) CometBroadcastExchange
Input [1]: [d_date_sk#39]
Arguments: [d_date_sk#39]

(59) CometBroadcastHashJoin
Left output [6]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#36, i_class_id#37, i_category_id#38]
Right output [1]: [d_date_sk#39]
Arguments: [ss_sold_date_sk#4], [d_date_sk#39], Inner, BuildRight

(60) CometProject
Input [7]: [ss_quantity#2, ss_list_price#3, ss_sold_date_sk#4, i_brand_id#36, i_class_id#37, i_category_id#38, d_date_sk#39]
Arguments: [ss_quantity#2, ss_list_price#3, i_brand_id#36, i_class_id#37, i_category_id#38], [ss_quantity#2, ss_list_price#3, i_brand_id#36, i_class_id#37, i_category_id#38]

(61) CometHashAggregate
Input [5]: [ss_quantity#2, ss_list_price#3, i_brand_id#36, i_class_id#37, i_category_id#38]
Keys [3]: [i_brand_id#36, i_class_id#37, i_category_id#38]
Functions [2]: [partial_sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), partial_count(1)]

(62) CometExchange
Input [6]: [i_brand_id#36, i_class_id#37, i_category_id#38, sum#42, isEmpty#43, count#44]
Arguments: hashpartitioning(i_brand_id#36, i_class_id#37, i_category_id#38, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(63) CometHashAggregate
Input [6]: [i_brand_id#36, i_class_id#37, i_category_id#38, sum#42, isEmpty#43, count#44]
Keys [3]: [i_brand_id#36, i_class_id#37, i_category_id#38]
Functions [2]: [sum((cast(ss_quantity#2 as decimal(10,0)) * ss_list_price#3)), count(1)]

(64) CometFilter
Input [5]: [i_brand_id#36, i_class_id#37, i_category_id#38, sales#45, number_sales#46]
Condition : (isnotnull(sales#45) AND (cast(sales#45 as decimal(32,6)) > cast(Subquery scalar-subquery#47, [id=#48] as decimal(32,6))))

(65) CometProject
Input [5]: [i_brand_id#36, i_class_id#37, i_category_id#38, sales#45, number_sales#46]
Arguments: [sales#45, number_sales#46, channel#49, i_brand_id#50, i_class_id#51, i_category_id#52], [sales#45, number_sales#46, store AS channel#49, i_brand_id#36 AS i_brand_id#50, i_class_id#37 AS i_class_id#51, i_category_id#38 AS i_category_id#52]

(66) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [4]: [cs_item_sk#53, cs_quantity#54, cs_list_price#55, cs_sold_date_sk#56]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#56)]
PushedFilters: [IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>

(67) CometFilter
Input [4]: [cs_item_sk#53, cs_quantity#54, cs_list_price#55, cs_sold_date_sk#56]
Condition : isnotnull(cs_item_sk#53)

(68) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#34]

(69) CometBroadcastHashJoin
Left output [4]: [cs_item_sk#53, cs_quantity#54, cs_list_price#55, cs_sold_date_sk#56]
Right output [1]: [ss_item_sk#34]
Arguments: [cs_item_sk#53], [ss_item_sk#34], LeftSemi, BuildRight

(70) ReusedExchange [Reuses operator id: 52]
Output [4]: [i_item_sk#57, i_brand_id#58, i_class_id#59, i_category_id#60]

(71) CometBroadcastHashJoin
Left output [4]: [cs_item_sk#53, cs_quantity#54, cs_list_price#55, cs_sold_date_sk#56]
Right output [4]: [i_item_sk#57, i_brand_id#58, i_class_id#59, i_category_id#60]
Arguments: [cs_item_sk#53], [i_item_sk#57], Inner, BuildRight

(72) CometProject
Input [8]: [cs_item_sk#53, cs_quantity#54, cs_list_price#55, cs_sold_date_sk#56, i_item_sk#57, i_brand_id#58, i_class_id#59, i_category_id#60]
Arguments: [cs_quantity#54, cs_list_price#55, cs_sold_date_sk#56, i_brand_id#58, i_class_id#59, i_category_id#60], [cs_quantity#54, cs_list_price#55, cs_sold_date_sk#56, i_brand_id#58, i_class_id#59, i_category_id#60]

(73) ReusedExchange [Reuses operator id: 58]
Output [1]: [d_date_sk#61]

(74) CometBroadcastHashJoin
Left output [6]: [cs_quantity#54, cs_list_price#55, cs_sold_date_sk#56, i_brand_id#58, i_class_id#59, i_category_id#60]
Right output [1]: [d_date_sk#61]
Arguments: [cs_sold_date_sk#56], [d_date_sk#61], Inner, BuildRight

(75) CometProject
Input [7]: [cs_quantity#54, cs_list_price#55, cs_sold_date_sk#56, i_brand_id#58, i_class_id#59, i_category_id#60, d_date_sk#61]
Arguments: [cs_quantity#54, cs_list_price#55, i_brand_id#58, i_class_id#59, i_category_id#60], [cs_quantity#54, cs_list_price#55, i_brand_id#58, i_class_id#59, i_category_id#60]

(76) CometHashAggregate
Input [5]: [cs_quantity#54, cs_list_price#55, i_brand_id#58, i_class_id#59, i_category_id#60]
Keys [3]: [i_brand_id#58, i_class_id#59, i_category_id#60]
Functions [2]: [partial_sum((cast(cs_quantity#54 as decimal(10,0)) * cs_list_price#55)), partial_count(1)]

(77) CometExchange
Input [6]: [i_brand_id#58, i_class_id#59, i_category_id#60, sum#62, isEmpty#63, count#64]
Arguments: hashpartitioning(i_brand_id#58, i_class_id#59, i_category_id#60, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(78) CometHashAggregate
Input [6]: [i_brand_id#58, i_class_id#59, i_category_id#60, sum#62, isEmpty#63, count#64]
Keys [3]: [i_brand_id#58, i_class_id#59, i_category_id#60]
Functions [2]: [sum((cast(cs_quantity#54 as decimal(10,0)) * cs_list_price#55)), count(1)]

(79) CometFilter
Input [5]: [i_brand_id#58, i_class_id#59, i_category_id#60, sales#65, number_sales#66]
Condition : (isnotnull(sales#65) AND (cast(sales#65 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#47, [id=#48] as decimal(32,6))))

(80) CometProject
Input [5]: [i_brand_id#58, i_class_id#59, i_category_id#60, sales#65, number_sales#66]
Arguments: [sales#65, number_sales#66, channel#67, i_brand_id#58, i_class_id#59, i_category_id#60], [sales#65, number_sales#66, catalog AS channel#67, i_brand_id#58, i_class_id#59, i_category_id#60]

(81) CometNativeScan parquet spark_catalog.default.web_sales
Output [4]: [ws_item_sk#68, ws_quantity#69, ws_list_price#70, ws_sold_date_sk#71]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#71)]
PushedFilters: [IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>

(82) CometFilter
Input [4]: [ws_item_sk#68, ws_quantity#69, ws_list_price#70, ws_sold_date_sk#71]
Condition : isnotnull(ws_item_sk#68)

(83) ReusedExchange [Reuses operator id: 46]
Output [1]: [ss_item_sk#34]

(84) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#68, ws_quantity#69, ws_list_price#70, ws_sold_date_sk#71]
Right output [1]: [ss_item_sk#34]
Arguments: [ws_item_sk#68], [ss_item_sk#34], LeftSemi, BuildRight

(85) ReusedExchange [Reuses operator id: 52]
Output [4]: [i_item_sk#72, i_brand_id#73, i_class_id#74, i_category_id#75]

(86) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#68, ws_quantity#69, ws_list_price#70, ws_sold_date_sk#71]
Right output [4]: [i_item_sk#72, i_brand_id#73, i_class_id#74, i_category_id#75]
Arguments: [ws_item_sk#68], [i_item_sk#72], Inner, BuildRight

(87) CometProject
Input [8]: [ws_item_sk#68, ws_quantity#69, ws_list_price#70, ws_sold_date_sk#71, i_item_sk#72, i_brand_id#73, i_class_id#74, i_category_id#75]
Arguments: [ws_quantity#69, ws_list_price#70, ws_sold_date_sk#71, i_brand_id#73, i_class_id#74, i_category_id#75], [ws_quantity#69, ws_list_price#70, ws_sold_date_sk#71, i_brand_id#73, i_class_id#74, i_category_id#75]

(88) ReusedExchange [Reuses operator id: 58]
Output [1]: [d_date_sk#76]

(89) CometBroadcastHashJoin
Left output [6]: [ws_quantity#69, ws_list_price#70, ws_sold_date_sk#71, i_brand_id#73, i_class_id#74, i_category_id#75]
Right output [1]: [d_date_sk#76]
Arguments: [ws_sold_date_sk#71], [d_date_sk#76], Inner, BuildRight

(90) CometProject
Input [7]: [ws_quantity#69, ws_list_price#70, ws_sold_date_sk#71, i_brand_id#73, i_class_id#74, i_category_id#75, d_date_sk#76]
Arguments: [ws_quantity#69, ws_list_price#70, i_brand_id#73, i_class_id#74, i_category_id#75], [ws_quantity#69, ws_list_price#70, i_brand_id#73, i_class_id#74, i_category_id#75]

(91) CometHashAggregate
Input [5]: [ws_quantity#69, ws_list_price#70, i_brand_id#73, i_class_id#74, i_category_id#75]
Keys [3]: [i_brand_id#73, i_class_id#74, i_category_id#75]
Functions [2]: [partial_sum((cast(ws_quantity#69 as decimal(10,0)) * ws_list_price#70)), partial_count(1)]

(92) CometExchange
Input [6]: [i_brand_id#73, i_class_id#74, i_category_id#75, sum#77, isEmpty#78, count#79]
Arguments: hashpartitioning(i_brand_id#73, i_class_id#74, i_category_id#75, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(93) CometHashAggregate
Input [6]: [i_brand_id#73, i_class_id#74, i_category_id#75, sum#77, isEmpty#78, count#79]
Keys [3]: [i_brand_id#73, i_class_id#74, i_category_id#75]
Functions [2]: [sum((cast(ws_quantity#69 as decimal(10,0)) * ws_list_price#70)), count(1)]

(94) CometFilter
Input [5]: [i_brand_id#73, i_class_id#74, i_category_id#75, sales#80, number_sales#81]
Condition : (isnotnull(sales#80) AND (cast(sales#80 as decimal(32,6)) > cast(ReusedSubquery Subquery scalar-subquery#47, [id=#48] as decimal(32,6))))

(95) CometProject
Input [5]: [i_brand_id#73, i_class_id#74, i_category_id#75, sales#80, number_sales#81]
Arguments: [sales#80, number_sales#81, channel#82, i_brand_id#73, i_class_id#74, i_category_id#75], [sales#80, number_sales#81, web AS channel#82, i_brand_id#73, i_class_id#74, i_category_id#75]

(96) CometUnion
Child 0 Input [6]: [sales#45, number_sales#46, channel#49, i_brand_id#50, i_class_id#51, i_category_id#52]
Child 1 Input [6]: [sales#65, number_sales#66, channel#67, i_brand_id#58, i_class_id#59, i_category_id#60]
Child 2 Input [6]: [sales#80, number_sales#81, channel#82, i_brand_id#73, i_class_id#74, i_category_id#75]

(97) CometExpand
Input [6]: [sales#45, number_sales#46, channel#49, i_brand_id#50, i_class_id#51, i_category_id#52]
Arguments: [[sales#45, number_sales#46, channel#49, i_brand_id#50, i_class_id#51, i_category_id#52, 0], [sales#45, number_sales#46, channel#49, i_brand_id#50, i_class_id#51, null, 1], [sales#45, number_sales#46, channel#49, i_brand_id#50, null, null, 3], [sales#45, number_sales#46, channel#49, null, null, null, 7], [sales#45, number_sales#46, null, null, null, null, 15]], [sales#45, number_sales#46, channel#83, i_brand_id#84, i_class_id#85, i_category_id#86, spark_grouping_id#87]

(98) CometHashAggregate
Input [7]: [sales#45, number_sales#46, channel#83, i_brand_id#84, i_class_id#85, i_category_id#86, spark_grouping_id#87]
Keys [5]: [channel#83, i_brand_id#84, i_class_id#85, i_category_id#86, spark_grouping_id#87]
Functions [2]: [partial_sum(sales#45), partial_sum(number_sales#46)]

(99) CometExchange
Input [8]: [channel#83, i_brand_id#84, i_class_id#85, i_category_id#86, spark_grouping_id#87, sum#88, isEmpty#89, sum#90]
Arguments: hashpartitioning(channel#83, i_brand_id#84, i_class_id#85, i_category_id#86, spark_grouping_id#87, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(100) CometHashAggregate
Input [8]: [channel#83, i_brand_id#84, i_class_id#85, i_category_id#86, spark_grouping_id#87, sum#88, isEmpty#89, sum#90]
Keys [5]: [channel#83, i_brand_id#84, i_class_id#85, i_category_id#86, spark_grouping_id#87]
Functions [2]: [sum(sales#45), sum(number_sales#46)]

(101) CometTakeOrderedAndProject
Input [6]: [channel#83, i_brand_id#84, i_class_id#85, i_category_id#86, sum(sales)#91, sum(number_sales)#92]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[channel#83 ASC NULLS FIRST,i_brand_id#84 ASC NULLS FIRST,i_class_id#85 ASC NULLS FIRST,i_category_id#86 ASC NULLS FIRST], output=[channel#83,i_brand_id#84,i_class_id#85,i_category_id#86,sum(sales)#91,sum(number_sales)#92]), [channel#83, i_brand_id#84, i_class_id#85, i_category_id#86, sum(sales)#91, sum(number_sales)#92], 100, 0, [channel#83 ASC NULLS FIRST, i_brand_id#84 ASC NULLS FIRST, i_class_id#85 ASC NULLS FIRST, i_category_id#86 ASC NULLS FIRST], [channel#83, i_brand_id#84, i_class_id#85, i_category_id#86, sum(sales)#91, sum(number_sales)#92]

(102) CometColumnarToRow [codegen id : 1]
Input [6]: [channel#83, i_brand_id#84, i_class_id#85, i_category_id#86, sum(sales)#91, sum(number_sales)#92]

===== Subqueries =====

Subquery:1 Hosting operator id = 64 Hosting Expression = Subquery scalar-subquery#47, [id=#48]
* CometColumnarToRow (119)
+- CometHashAggregate (118)
   +- CometExchange (117)
      +- CometHashAggregate (116)
         +- CometUnion (115)
            :- CometProject (106)
            :  +- CometBroadcastHashJoin (105)
            :     :- CometNativeScan parquet spark_catalog.default.store_sales (103)
            :     +- ReusedExchange (104)
            :- CometProject (110)
            :  +- CometBroadcastHashJoin (109)
            :     :- CometNativeScan parquet spark_catalog.default.catalog_sales (107)
            :     +- ReusedExchange (108)
            +- CometProject (114)
               +- CometBroadcastHashJoin (113)
                  :- CometNativeScan parquet spark_catalog.default.web_sales (111)
                  +- ReusedExchange (112)


(103) CometNativeScan parquet spark_catalog.default.store_sales
Output [3]: [ss_quantity#93, ss_list_price#94, ss_sold_date_sk#95]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#95)]
ReadSchema: struct<ss_quantity:int,ss_list_price:decimal(7,2)>

(104) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#96]

(105) CometBroadcastHashJoin
Left output [3]: [ss_quantity#93, ss_list_price#94, ss_sold_date_sk#95]
Right output [1]: [d_date_sk#96]
Arguments: [ss_sold_date_sk#95], [d_date_sk#96], Inner, BuildRight

(106) CometProject
Input [4]: [ss_quantity#93, ss_list_price#94, ss_sold_date_sk#95, d_date_sk#96]
Arguments: [quantity#97, list_price#98], [ss_quantity#93 AS quantity#97, ss_list_price#94 AS list_price#98]

(107) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [3]: [cs_quantity#99, cs_list_price#100, cs_sold_date_sk#101]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#101)]
ReadSchema: struct<cs_quantity:int,cs_list_price:decimal(7,2)>

(108) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#102]

(109) CometBroadcastHashJoin
Left output [3]: [cs_quantity#99, cs_list_price#100, cs_sold_date_sk#101]
Right output [1]: [d_date_sk#102]
Arguments: [cs_sold_date_sk#101], [d_date_sk#102], Inner, BuildRight

(110) CometProject
Input [4]: [cs_quantity#99, cs_list_price#100, cs_sold_date_sk#101, d_date_sk#102]
Arguments: [quantity#103, list_price#104], [cs_quantity#99 AS quantity#103, cs_list_price#100 AS list_price#104]

(111) CometNativeScan parquet spark_catalog.default.web_sales
Output [3]: [ws_quantity#105, ws_list_price#106, ws_sold_date_sk#107]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#107)]
ReadSchema: struct<ws_quantity:int,ws_list_price:decimal(7,2)>

(112) ReusedExchange [Reuses operator id: 19]
Output [1]: [d_date_sk#108]

(113) CometBroadcastHashJoin
Left output [3]: [ws_quantity#105, ws_list_price#106, ws_sold_date_sk#107]
Right output [1]: [d_date_sk#108]
Arguments: [ws_sold_date_sk#107], [d_date_sk#108], Inner, BuildRight

(114) CometProject
Input [4]: [ws_quantity#105, ws_list_price#106, ws_sold_date_sk#107, d_date_sk#108]
Arguments: [quantity#109, list_price#110], [ws_quantity#105 AS quantity#109, ws_list_price#106 AS list_price#110]

(115) CometUnion
Child 0 Input [2]: [quantity#97, list_price#98]
Child 1 Input [2]: [quantity#103, list_price#104]
Child 2 Input [2]: [quantity#109, list_price#110]

(116) CometHashAggregate
Input [2]: [quantity#97, list_price#98]
Keys: []
Functions [1]: [partial_avg((cast(quantity#97 as decimal(10,0)) * list_price#98))]

(117) CometExchange
Input [2]: [sum#111, count#112]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(118) CometHashAggregate
Input [2]: [sum#111, count#112]
Keys: []
Functions [1]: [avg((cast(quantity#97 as decimal(10,0)) * list_price#98))]

(119) CometColumnarToRow [codegen id : 1]
Input [1]: [average_sales#113]

Subquery:2 Hosting operator id = 79 Hosting Expression = ReusedSubquery Subquery scalar-subquery#47, [id=#48]

Subquery:3 Hosting operator id = 94 Hosting Expression = ReusedSubquery Subquery scalar-subquery#47, [id=#48]


