== Physical Plan ==
* CometColumnarToRow (101)
+- CometTakeOrderedAndProject (100)
   +- CometProject (99)
      +- CometBroadcastHashJoin (98)
         :- CometProject (84)
         :  +- CometBroadcastHashJoin (83)
         :     :- CometProject (66)
         :     :  +- CometBroadcastHashJoin (65)
         :     :     :- CometProject (51)
         :     :     :  +- CometBroadcastHashJoin (50)
         :     :     :     :- CometBroadcastHashJoin (33)
         :     :     :     :  :- CometFilter (17)
         :     :     :     :  :  +- CometHashAggregate (16)
         :     :     :     :  :     +- CometExchange (15)
         :     :     :     :  :        +- CometHashAggregate (14)
         :     :     :     :  :           +- CometProject (13)
         :     :     :     :  :              +- CometBroadcastHashJoin (12)
         :     :     :     :  :                 :- CometProject (8)
         :     :     :     :  :                 :  +- CometBroadcastHashJoin (7)
         :     :     :     :  :                 :     :- CometProject (3)
         :     :     :     :  :                 :     :  +- CometFilter (2)
         :     :     :     :  :                 :     :     +- CometNativeScan parquet spark_catalog.default.customer (1)
         :     :     :     :  :                 :     +- CometBroadcastExchange (6)
         :     :     :     :  :                 :        +- CometFilter (5)
         :     :     :     :  :                 :           +- CometNativeScan parquet spark_catalog.default.store_sales (4)
         :     :     :     :  :                 +- CometBroadcastExchange (11)
         :     :     :     :  :                    +- CometFilter (10)
         :     :     :     :  :                       +- CometNativeScan parquet spark_catalog.default.date_dim (9)
         :     :     :     :  +- CometBroadcastExchange (32)
         :     :     :     :     +- CometHashAggregate (31)
         :     :     :     :        +- CometExchange (30)
         :     :     :     :           +- CometHashAggregate (29)
         :     :     :     :              +- CometProject (28)
         :     :     :     :                 +- CometBroadcastHashJoin (27)
         :     :     :     :                    :- CometProject (23)
         :     :     :     :                    :  +- CometBroadcastHashJoin (22)
         :     :     :     :                    :     :- CometProject (20)
         :     :     :     :                    :     :  +- CometFilter (19)
         :     :     :     :                    :     :     +- CometNativeScan parquet spark_catalog.default.customer (18)
         :     :     :     :                    :     +- ReusedExchange (21)
         :     :     :     :                    +- CometBroadcastExchange (26)
         :     :     :     :                       +- CometFilter (25)
         :     :     :     :                          +- CometNativeScan parquet spark_catalog.default.date_dim (24)
         :     :     :     +- CometBroadcastExchange (49)
         :     :     :        +- CometFilter (48)
         :     :     :           +- CometHashAggregate (47)
         :     :     :              +- CometExchange (46)
         :     :     :                 +- CometHashAggregate (45)
         :     :     :                    +- CometProject (44)
         :     :     :                       +- CometBroadcastHashJoin (43)
         :     :     :                          :- CometProject (41)
         :     :     :                          :  +- CometBroadcastHashJoin (40)
         :     :     :                          :     :- CometProject (36)
         :     :     :                          :     :  +- CometFilter (35)
         :     :     :                          :     :     +- CometNativeScan parquet spark_catalog.default.customer (34)
         :     :     :                          :     +- CometBroadcastExchange (39)
         :     :     :                          :        +- CometFilter (38)
         :     :     :                          :           +- CometNativeScan parquet spark_catalog.default.catalog_sales (37)
         :     :     :                          +- ReusedExchange (42)
         :     :     +- CometBroadcastExchange (64)
         :     :        +- CometHashAggregate (63)
         :     :           +- CometExchange (62)
         :     :              +- CometHashAggregate (61)
         :     :                 +- CometProject (60)
         :     :                    +- CometBroadcastHashJoin (59)
         :     :                       :- CometProject (57)
         :     :                       :  +- CometBroadcastHashJoin (56)
         :     :                       :     :- CometProject (54)
         :     :                       :     :  +- CometFilter (53)
         :     :                       :     :     +- CometNativeScan parquet spark_catalog.default.customer (52)
         :     :                       :     +- ReusedExchange (55)
         :     :                       +- ReusedExchange (58)
         :     +- CometBroadcastExchange (82)
         :        +- CometFilter (81)
         :           +- CometHashAggregate (80)
         :              +- CometExchange (79)
         :                 +- CometHashAggregate (78)
         :                    +- CometProject (77)
         :                       +- CometBroadcastHashJoin (76)
         :                          :- CometProject (74)
         :                          :  +- CometBroadcastHashJoin (73)
         :                          :     :- CometProject (69)
         :                          :     :  +- CometFilter (68)
         :                          :     :     +- CometNativeScan parquet spark_catalog.default.customer (67)
         :                          :     +- CometBroadcastExchange (72)
         :                          :        +- CometFilter (71)
         :                          :           +- CometNativeScan parquet spark_catalog.default.web_sales (70)
         :                          +- ReusedExchange (75)
         +- CometBroadcastExchange (97)
            +- CometHashAggregate (96)
               +- CometExchange (95)
                  +- CometHashAggregate (94)
                     +- CometProject (93)
                        +- CometBroadcastHashJoin (92)
                           :- CometProject (90)
                           :  +- CometBroadcastHashJoin (89)
                           :     :- CometProject (87)
                           :     :  +- CometFilter (86)
                           :     :     +- CometNativeScan parquet spark_catalog.default.customer (85)
                           :     +- ReusedExchange (88)
                           +- ReusedExchange (91)


(1) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(2) CometFilter
Input [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Condition : (isnotnull(c_customer_sk#1) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#2, 16, true, false, true)))

(3) CometProject
Input [8]: [c_customer_sk#1, c_customer_id#2, c_first_name#3, c_last_name#4, c_preferred_cust_flag#5, c_birth_country#6, c_login#7, c_email_address#8]
Arguments: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14], [c_customer_sk#1, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#2, 16, true, false, true) AS c_customer_id#9, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#3, 20, true, false, true) AS c_first_name#10, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#4, 30, true, false, true) AS c_last_name#11, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#5, 1, true, false, true) AS c_preferred_cust_flag#12, c_birth_country#6, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#7, 13, true, false, true) AS c_login#13, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#8, 50, true, false, true) AS c_email_address#14]

(4) CometNativeScan parquet spark_catalog.default.store_sales
Output [6]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#20)]
PushedFilters: [IsNotNull(ss_customer_sk)]
ReadSchema: struct<ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price:decimal(7,2),ss_ext_wholesale_cost:decimal(7,2),ss_ext_list_price:decimal(7,2)>

(5) CometFilter
Input [6]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Condition : isnotnull(ss_customer_sk#15)

(6) CometBroadcastExchange
Input [6]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Arguments: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]

(7) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14]
Right output [6]: [ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Arguments: [c_customer_sk#1], [ss_customer_sk#15], Inner, BuildRight

(8) CometProject
Input [14]: [c_customer_sk#1, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_customer_sk#15, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]

(9) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#21, d_year#22]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(10) CometFilter
Input [2]: [d_date_sk#21, d_year#22]
Condition : ((isnotnull(d_year#22) AND (d_year#22 = 2001)) AND isnotnull(d_date_sk#21))

(11) CometBroadcastExchange
Input [2]: [d_date_sk#21, d_year#22]
Arguments: [d_date_sk#21, d_year#22]

(12) CometBroadcastHashJoin
Left output [12]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20]
Right output [2]: [d_date_sk#21, d_year#22]
Arguments: [ss_sold_date_sk#20], [d_date_sk#21], Inner, BuildRight

(13) CometProject
Input [14]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, ss_sold_date_sk#20, d_date_sk#21, d_year#22]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, d_year#22], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, d_year#22]

(14) CometHashAggregate
Input [12]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, ss_ext_discount_amt#16, ss_ext_sales_price#17, ss_ext_wholesale_cost#18, ss_ext_list_price#19, d_year#22]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#22]
Functions [1]: [partial_sum(((((ss_ext_list_price#19 - ss_ext_wholesale_cost#18) - ss_ext_discount_amt#16) + ss_ext_sales_price#17) / 2))]

(15) CometExchange
Input [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#22, sum#23, isEmpty#24]
Arguments: hashpartitioning(c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#22, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(16) CometHashAggregate
Input [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#22, sum#23, isEmpty#24]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#6, c_login#13, c_email_address#14, d_year#22]
Functions [1]: [sum(((((ss_ext_list_price#19 - ss_ext_wholesale_cost#18) - ss_ext_discount_amt#16) + ss_ext_sales_price#17) / 2))]

(17) CometFilter
Input [2]: [customer_id#25, year_total#26]
Condition : (isnotnull(year_total#26) AND (year_total#26 > 0.000000))

(18) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#27, c_customer_id#28, c_first_name#29, c_last_name#30, c_preferred_cust_flag#31, c_birth_country#32, c_login#33, c_email_address#34]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(19) CometFilter
Input [8]: [c_customer_sk#27, c_customer_id#28, c_first_name#29, c_last_name#30, c_preferred_cust_flag#31, c_birth_country#32, c_login#33, c_email_address#34]
Condition : (isnotnull(c_customer_sk#27) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#28, 16, true, false, true)))

(20) CometProject
Input [8]: [c_customer_sk#27, c_customer_id#28, c_first_name#29, c_last_name#30, c_preferred_cust_flag#31, c_birth_country#32, c_login#33, c_email_address#34]
Arguments: [c_customer_sk#27, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14], [c_customer_sk#27, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#28, 16, true, false, true) AS c_customer_id#9, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#29, 20, true, false, true) AS c_first_name#10, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#30, 30, true, false, true) AS c_last_name#11, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#31, 1, true, false, true) AS c_preferred_cust_flag#12, c_birth_country#32, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#33, 13, true, false, true) AS c_login#13, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#34, 50, true, false, true) AS c_email_address#14]

(21) ReusedExchange [Reuses operator id: 6]
Output [6]: [ss_customer_sk#35, ss_ext_discount_amt#36, ss_ext_sales_price#37, ss_ext_wholesale_cost#38, ss_ext_list_price#39, ss_sold_date_sk#40]

(22) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#27, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14]
Right output [6]: [ss_customer_sk#35, ss_ext_discount_amt#36, ss_ext_sales_price#37, ss_ext_wholesale_cost#38, ss_ext_list_price#39, ss_sold_date_sk#40]
Arguments: [c_customer_sk#27], [ss_customer_sk#35], Inner, BuildRight

(23) CometProject
Input [14]: [c_customer_sk#27, c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14, ss_customer_sk#35, ss_ext_discount_amt#36, ss_ext_sales_price#37, ss_ext_wholesale_cost#38, ss_ext_list_price#39, ss_sold_date_sk#40]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14, ss_ext_discount_amt#36, ss_ext_sales_price#37, ss_ext_wholesale_cost#38, ss_ext_list_price#39, ss_sold_date_sk#40], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14, ss_ext_discount_amt#36, ss_ext_sales_price#37, ss_ext_wholesale_cost#38, ss_ext_list_price#39, ss_sold_date_sk#40]

(24) CometNativeScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#41, d_year#42]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int>

(25) CometFilter
Input [2]: [d_date_sk#41, d_year#42]
Condition : ((isnotnull(d_year#42) AND (d_year#42 = 2002)) AND isnotnull(d_date_sk#41))

(26) CometBroadcastExchange
Input [2]: [d_date_sk#41, d_year#42]
Arguments: [d_date_sk#41, d_year#42]

(27) CometBroadcastHashJoin
Left output [12]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14, ss_ext_discount_amt#36, ss_ext_sales_price#37, ss_ext_wholesale_cost#38, ss_ext_list_price#39, ss_sold_date_sk#40]
Right output [2]: [d_date_sk#41, d_year#42]
Arguments: [ss_sold_date_sk#40], [d_date_sk#41], Inner, BuildRight

(28) CometProject
Input [14]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14, ss_ext_discount_amt#36, ss_ext_sales_price#37, ss_ext_wholesale_cost#38, ss_ext_list_price#39, ss_sold_date_sk#40, d_date_sk#41, d_year#42]
Arguments: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14, ss_ext_discount_amt#36, ss_ext_sales_price#37, ss_ext_wholesale_cost#38, ss_ext_list_price#39, d_year#42], [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14, ss_ext_discount_amt#36, ss_ext_sales_price#37, ss_ext_wholesale_cost#38, ss_ext_list_price#39, d_year#42]

(29) CometHashAggregate
Input [12]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14, ss_ext_discount_amt#36, ss_ext_sales_price#37, ss_ext_wholesale_cost#38, ss_ext_list_price#39, d_year#42]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14, d_year#42]
Functions [1]: [partial_sum(((((ss_ext_list_price#39 - ss_ext_wholesale_cost#38) - ss_ext_discount_amt#36) + ss_ext_sales_price#37) / 2))]

(30) CometExchange
Input [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14, d_year#42, sum#43, isEmpty#44]
Arguments: hashpartitioning(c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14, d_year#42, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(31) CometHashAggregate
Input [10]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14, d_year#42, sum#43, isEmpty#44]
Keys [8]: [c_customer_id#9, c_first_name#10, c_last_name#11, c_preferred_cust_flag#12, c_birth_country#32, c_login#13, c_email_address#14, d_year#42]
Functions [1]: [sum(((((ss_ext_list_price#39 - ss_ext_wholesale_cost#38) - ss_ext_discount_amt#36) + ss_ext_sales_price#37) / 2))]

(32) CometBroadcastExchange
Input [8]: [customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#52]
Arguments: [customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#52]

(33) CometBroadcastHashJoin
Left output [2]: [customer_id#25, year_total#26]
Right output [8]: [customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#52]
Arguments: [customer_id#25], [customer_id#45], Inner, BuildRight

(34) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#53, c_customer_id#54, c_first_name#55, c_last_name#56, c_preferred_cust_flag#57, c_birth_country#58, c_login#59, c_email_address#60]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(35) CometFilter
Input [8]: [c_customer_sk#53, c_customer_id#54, c_first_name#55, c_last_name#56, c_preferred_cust_flag#57, c_birth_country#58, c_login#59, c_email_address#60]
Condition : (isnotnull(c_customer_sk#53) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#54, 16, true, false, true)))

(36) CometProject
Input [8]: [c_customer_sk#53, c_customer_id#54, c_first_name#55, c_last_name#56, c_preferred_cust_flag#57, c_birth_country#58, c_login#59, c_email_address#60]
Arguments: [c_customer_sk#53, c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66], [c_customer_sk#53, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#54, 16, true, false, true) AS c_customer_id#61, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#55, 20, true, false, true) AS c_first_name#62, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#56, 30, true, false, true) AS c_last_name#63, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#57, 1, true, false, true) AS c_preferred_cust_flag#64, c_birth_country#58, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#59, 13, true, false, true) AS c_login#65, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#60, 50, true, false, true) AS c_email_address#66]

(37) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [6]: [cs_bill_customer_sk#67, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_sold_date_sk#72]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#72)]
PushedFilters: [IsNotNull(cs_bill_customer_sk)]
ReadSchema: struct<cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_price:decimal(7,2),cs_ext_wholesale_cost:decimal(7,2),cs_ext_list_price:decimal(7,2)>

(38) CometFilter
Input [6]: [cs_bill_customer_sk#67, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_sold_date_sk#72]
Condition : isnotnull(cs_bill_customer_sk#67)

(39) CometBroadcastExchange
Input [6]: [cs_bill_customer_sk#67, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_sold_date_sk#72]
Arguments: [cs_bill_customer_sk#67, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_sold_date_sk#72]

(40) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#53, c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66]
Right output [6]: [cs_bill_customer_sk#67, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_sold_date_sk#72]
Arguments: [c_customer_sk#53], [cs_bill_customer_sk#67], Inner, BuildRight

(41) CometProject
Input [14]: [c_customer_sk#53, c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66, cs_bill_customer_sk#67, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_sold_date_sk#72]
Arguments: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_sold_date_sk#72], [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_sold_date_sk#72]

(42) ReusedExchange [Reuses operator id: 11]
Output [2]: [d_date_sk#73, d_year#74]

(43) CometBroadcastHashJoin
Left output [12]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_sold_date_sk#72]
Right output [2]: [d_date_sk#73, d_year#74]
Arguments: [cs_sold_date_sk#72], [d_date_sk#73], Inner, BuildRight

(44) CometProject
Input [14]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, cs_sold_date_sk#72, d_date_sk#73, d_year#74]
Arguments: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, d_year#74], [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, d_year#74]

(45) CometHashAggregate
Input [12]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66, cs_ext_discount_amt#68, cs_ext_sales_price#69, cs_ext_wholesale_cost#70, cs_ext_list_price#71, d_year#74]
Keys [8]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66, d_year#74]
Functions [1]: [partial_sum(((((cs_ext_list_price#71 - cs_ext_wholesale_cost#70) - cs_ext_discount_amt#68) + cs_ext_sales_price#69) / 2))]

(46) CometExchange
Input [10]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66, d_year#74, sum#75, isEmpty#76]
Arguments: hashpartitioning(c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66, d_year#74, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(47) CometHashAggregate
Input [10]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66, d_year#74, sum#75, isEmpty#76]
Keys [8]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#58, c_login#65, c_email_address#66, d_year#74]
Functions [1]: [sum(((((cs_ext_list_price#71 - cs_ext_wholesale_cost#70) - cs_ext_discount_amt#68) + cs_ext_sales_price#69) / 2))]

(48) CometFilter
Input [2]: [customer_id#77, year_total#78]
Condition : (isnotnull(year_total#78) AND (year_total#78 > 0.000000))

(49) CometBroadcastExchange
Input [2]: [customer_id#77, year_total#78]
Arguments: [customer_id#77, year_total#78]

(50) CometBroadcastHashJoin
Left output [10]: [customer_id#25, year_total#26, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#52]
Right output [2]: [customer_id#77, year_total#78]
Arguments: [customer_id#25], [customer_id#77], Inner, BuildRight

(51) CometProject
Input [12]: [customer_id#25, year_total#26, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#52, customer_id#77, year_total#78]
Arguments: [customer_id#25, year_total#26, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#52, year_total#78], [customer_id#25, year_total#26, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#52, year_total#78]

(52) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#79, c_customer_id#80, c_first_name#81, c_last_name#82, c_preferred_cust_flag#83, c_birth_country#84, c_login#85, c_email_address#86]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(53) CometFilter
Input [8]: [c_customer_sk#79, c_customer_id#80, c_first_name#81, c_last_name#82, c_preferred_cust_flag#83, c_birth_country#84, c_login#85, c_email_address#86]
Condition : (isnotnull(c_customer_sk#79) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#80, 16, true, false, true)))

(54) CometProject
Input [8]: [c_customer_sk#79, c_customer_id#80, c_first_name#81, c_last_name#82, c_preferred_cust_flag#83, c_birth_country#84, c_login#85, c_email_address#86]
Arguments: [c_customer_sk#79, c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66], [c_customer_sk#79, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#80, 16, true, false, true) AS c_customer_id#61, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#81, 20, true, false, true) AS c_first_name#62, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#82, 30, true, false, true) AS c_last_name#63, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#83, 1, true, false, true) AS c_preferred_cust_flag#64, c_birth_country#84, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#85, 13, true, false, true) AS c_login#65, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#86, 50, true, false, true) AS c_email_address#66]

(55) ReusedExchange [Reuses operator id: 39]
Output [6]: [cs_bill_customer_sk#87, cs_ext_discount_amt#88, cs_ext_sales_price#89, cs_ext_wholesale_cost#90, cs_ext_list_price#91, cs_sold_date_sk#92]

(56) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#79, c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66]
Right output [6]: [cs_bill_customer_sk#87, cs_ext_discount_amt#88, cs_ext_sales_price#89, cs_ext_wholesale_cost#90, cs_ext_list_price#91, cs_sold_date_sk#92]
Arguments: [c_customer_sk#79], [cs_bill_customer_sk#87], Inner, BuildRight

(57) CometProject
Input [14]: [c_customer_sk#79, c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66, cs_bill_customer_sk#87, cs_ext_discount_amt#88, cs_ext_sales_price#89, cs_ext_wholesale_cost#90, cs_ext_list_price#91, cs_sold_date_sk#92]
Arguments: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66, cs_ext_discount_amt#88, cs_ext_sales_price#89, cs_ext_wholesale_cost#90, cs_ext_list_price#91, cs_sold_date_sk#92], [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66, cs_ext_discount_amt#88, cs_ext_sales_price#89, cs_ext_wholesale_cost#90, cs_ext_list_price#91, cs_sold_date_sk#92]

(58) ReusedExchange [Reuses operator id: 26]
Output [2]: [d_date_sk#93, d_year#94]

(59) CometBroadcastHashJoin
Left output [12]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66, cs_ext_discount_amt#88, cs_ext_sales_price#89, cs_ext_wholesale_cost#90, cs_ext_list_price#91, cs_sold_date_sk#92]
Right output [2]: [d_date_sk#93, d_year#94]
Arguments: [cs_sold_date_sk#92], [d_date_sk#93], Inner, BuildRight

(60) CometProject
Input [14]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66, cs_ext_discount_amt#88, cs_ext_sales_price#89, cs_ext_wholesale_cost#90, cs_ext_list_price#91, cs_sold_date_sk#92, d_date_sk#93, d_year#94]
Arguments: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66, cs_ext_discount_amt#88, cs_ext_sales_price#89, cs_ext_wholesale_cost#90, cs_ext_list_price#91, d_year#94], [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66, cs_ext_discount_amt#88, cs_ext_sales_price#89, cs_ext_wholesale_cost#90, cs_ext_list_price#91, d_year#94]

(61) CometHashAggregate
Input [12]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66, cs_ext_discount_amt#88, cs_ext_sales_price#89, cs_ext_wholesale_cost#90, cs_ext_list_price#91, d_year#94]
Keys [8]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66, d_year#94]
Functions [1]: [partial_sum(((((cs_ext_list_price#91 - cs_ext_wholesale_cost#90) - cs_ext_discount_amt#88) + cs_ext_sales_price#89) / 2))]

(62) CometExchange
Input [10]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66, d_year#94, sum#95, isEmpty#96]
Arguments: hashpartitioning(c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66, d_year#94, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(63) CometHashAggregate
Input [10]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66, d_year#94, sum#95, isEmpty#96]
Keys [8]: [c_customer_id#61, c_first_name#62, c_last_name#63, c_preferred_cust_flag#64, c_birth_country#84, c_login#65, c_email_address#66, d_year#94]
Functions [1]: [sum(((((cs_ext_list_price#91 - cs_ext_wholesale_cost#90) - cs_ext_discount_amt#88) + cs_ext_sales_price#89) / 2))]

(64) CometBroadcastExchange
Input [2]: [customer_id#97, year_total#98]
Arguments: [customer_id#97, year_total#98]

(65) CometBroadcastHashJoin
Left output [11]: [customer_id#25, year_total#26, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#52, year_total#78]
Right output [2]: [customer_id#97, year_total#98]
Arguments: [customer_id#25], [customer_id#97], Inner, (CASE WHEN (year_total#78 > 0.000000) THEN (year_total#98 / year_total#78) END > CASE WHEN (year_total#26 > 0.000000) THEN (year_total#52 / year_total#26) END), BuildRight

(66) CometProject
Input [13]: [customer_id#25, year_total#26, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#52, year_total#78, customer_id#97, year_total#98]
Arguments: [customer_id#25, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#78, year_total#98], [customer_id#25, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#78, year_total#98]

(67) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#99, c_customer_id#100, c_first_name#101, c_last_name#102, c_preferred_cust_flag#103, c_birth_country#104, c_login#105, c_email_address#106]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(68) CometFilter
Input [8]: [c_customer_sk#99, c_customer_id#100, c_first_name#101, c_last_name#102, c_preferred_cust_flag#103, c_birth_country#104, c_login#105, c_email_address#106]
Condition : (isnotnull(c_customer_sk#99) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#100, 16, true, false, true)))

(69) CometProject
Input [8]: [c_customer_sk#99, c_customer_id#100, c_first_name#101, c_last_name#102, c_preferred_cust_flag#103, c_birth_country#104, c_login#105, c_email_address#106]
Arguments: [c_customer_sk#99, c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112], [c_customer_sk#99, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#100, 16, true, false, true) AS c_customer_id#107, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#101, 20, true, false, true) AS c_first_name#108, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#102, 30, true, false, true) AS c_last_name#109, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#103, 1, true, false, true) AS c_preferred_cust_flag#110, c_birth_country#104, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#105, 13, true, false, true) AS c_login#111, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#106, 50, true, false, true) AS c_email_address#112]

(70) CometNativeScan parquet spark_catalog.default.web_sales
Output [6]: [ws_bill_customer_sk#113, ws_ext_discount_amt#114, ws_ext_sales_price#115, ws_ext_wholesale_cost#116, ws_ext_list_price#117, ws_sold_date_sk#118]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#118)]
PushedFilters: [IsNotNull(ws_bill_customer_sk)]
ReadSchema: struct<ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_price:decimal(7,2),ws_ext_wholesale_cost:decimal(7,2),ws_ext_list_price:decimal(7,2)>

(71) CometFilter
Input [6]: [ws_bill_customer_sk#113, ws_ext_discount_amt#114, ws_ext_sales_price#115, ws_ext_wholesale_cost#116, ws_ext_list_price#117, ws_sold_date_sk#118]
Condition : isnotnull(ws_bill_customer_sk#113)

(72) CometBroadcastExchange
Input [6]: [ws_bill_customer_sk#113, ws_ext_discount_amt#114, ws_ext_sales_price#115, ws_ext_wholesale_cost#116, ws_ext_list_price#117, ws_sold_date_sk#118]
Arguments: [ws_bill_customer_sk#113, ws_ext_discount_amt#114, ws_ext_sales_price#115, ws_ext_wholesale_cost#116, ws_ext_list_price#117, ws_sold_date_sk#118]

(73) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#99, c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112]
Right output [6]: [ws_bill_customer_sk#113, ws_ext_discount_amt#114, ws_ext_sales_price#115, ws_ext_wholesale_cost#116, ws_ext_list_price#117, ws_sold_date_sk#118]
Arguments: [c_customer_sk#99], [ws_bill_customer_sk#113], Inner, BuildRight

(74) CometProject
Input [14]: [c_customer_sk#99, c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112, ws_bill_customer_sk#113, ws_ext_discount_amt#114, ws_ext_sales_price#115, ws_ext_wholesale_cost#116, ws_ext_list_price#117, ws_sold_date_sk#118]
Arguments: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112, ws_ext_discount_amt#114, ws_ext_sales_price#115, ws_ext_wholesale_cost#116, ws_ext_list_price#117, ws_sold_date_sk#118], [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112, ws_ext_discount_amt#114, ws_ext_sales_price#115, ws_ext_wholesale_cost#116, ws_ext_list_price#117, ws_sold_date_sk#118]

(75) ReusedExchange [Reuses operator id: 11]
Output [2]: [d_date_sk#119, d_year#120]

(76) CometBroadcastHashJoin
Left output [12]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112, ws_ext_discount_amt#114, ws_ext_sales_price#115, ws_ext_wholesale_cost#116, ws_ext_list_price#117, ws_sold_date_sk#118]
Right output [2]: [d_date_sk#119, d_year#120]
Arguments: [ws_sold_date_sk#118], [d_date_sk#119], Inner, BuildRight

(77) CometProject
Input [14]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112, ws_ext_discount_amt#114, ws_ext_sales_price#115, ws_ext_wholesale_cost#116, ws_ext_list_price#117, ws_sold_date_sk#118, d_date_sk#119, d_year#120]
Arguments: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112, ws_ext_discount_amt#114, ws_ext_sales_price#115, ws_ext_wholesale_cost#116, ws_ext_list_price#117, d_year#120], [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112, ws_ext_discount_amt#114, ws_ext_sales_price#115, ws_ext_wholesale_cost#116, ws_ext_list_price#117, d_year#120]

(78) CometHashAggregate
Input [12]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112, ws_ext_discount_amt#114, ws_ext_sales_price#115, ws_ext_wholesale_cost#116, ws_ext_list_price#117, d_year#120]
Keys [8]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112, d_year#120]
Functions [1]: [partial_sum(((((ws_ext_list_price#117 - ws_ext_wholesale_cost#116) - ws_ext_discount_amt#114) + ws_ext_sales_price#115) / 2))]

(79) CometExchange
Input [10]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112, d_year#120, sum#121, isEmpty#122]
Arguments: hashpartitioning(c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112, d_year#120, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(80) CometHashAggregate
Input [10]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112, d_year#120, sum#121, isEmpty#122]
Keys [8]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#104, c_login#111, c_email_address#112, d_year#120]
Functions [1]: [sum(((((ws_ext_list_price#117 - ws_ext_wholesale_cost#116) - ws_ext_discount_amt#114) + ws_ext_sales_price#115) / 2))]

(81) CometFilter
Input [2]: [customer_id#123, year_total#124]
Condition : (isnotnull(year_total#124) AND (year_total#124 > 0.000000))

(82) CometBroadcastExchange
Input [2]: [customer_id#123, year_total#124]
Arguments: [customer_id#123, year_total#124]

(83) CometBroadcastHashJoin
Left output [10]: [customer_id#25, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#78, year_total#98]
Right output [2]: [customer_id#123, year_total#124]
Arguments: [customer_id#25], [customer_id#123], Inner, BuildRight

(84) CometProject
Input [12]: [customer_id#25, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#78, year_total#98, customer_id#123, year_total#124]
Arguments: [customer_id#25, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#78, year_total#98, year_total#124], [customer_id#25, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#78, year_total#98, year_total#124]

(85) CometNativeScan parquet spark_catalog.default.customer
Output [8]: [c_customer_sk#125, c_customer_id#126, c_first_name#127, c_last_name#128, c_preferred_cust_flag#129, c_birth_country#130, c_login#131, c_email_address#132]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer]
PushedFilters: [IsNotNull(c_customer_sk)]
ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_cust_flag:string,c_birth_country:string,c_login:string,c_email_address:string>

(86) CometFilter
Input [8]: [c_customer_sk#125, c_customer_id#126, c_first_name#127, c_last_name#128, c_preferred_cust_flag#129, c_birth_country#130, c_login#131, c_email_address#132]
Condition : (isnotnull(c_customer_sk#125) AND isnotnull(staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#126, 16, true, false, true)))

(87) CometProject
Input [8]: [c_customer_sk#125, c_customer_id#126, c_first_name#127, c_last_name#128, c_preferred_cust_flag#129, c_birth_country#130, c_login#131, c_email_address#132]
Arguments: [c_customer_sk#125, c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112], [c_customer_sk#125, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_customer_id#126, 16, true, false, true) AS c_customer_id#107, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_first_name#127, 20, true, false, true) AS c_first_name#108, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_last_name#128, 30, true, false, true) AS c_last_name#109, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_preferred_cust_flag#129, 1, true, false, true) AS c_preferred_cust_flag#110, c_birth_country#130, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_login#131, 13, true, false, true) AS c_login#111, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, c_email_address#132, 50, true, false, true) AS c_email_address#112]

(88) ReusedExchange [Reuses operator id: 72]
Output [6]: [ws_bill_customer_sk#133, ws_ext_discount_amt#134, ws_ext_sales_price#135, ws_ext_wholesale_cost#136, ws_ext_list_price#137, ws_sold_date_sk#138]

(89) CometBroadcastHashJoin
Left output [8]: [c_customer_sk#125, c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112]
Right output [6]: [ws_bill_customer_sk#133, ws_ext_discount_amt#134, ws_ext_sales_price#135, ws_ext_wholesale_cost#136, ws_ext_list_price#137, ws_sold_date_sk#138]
Arguments: [c_customer_sk#125], [ws_bill_customer_sk#133], Inner, BuildRight

(90) CometProject
Input [14]: [c_customer_sk#125, c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112, ws_bill_customer_sk#133, ws_ext_discount_amt#134, ws_ext_sales_price#135, ws_ext_wholesale_cost#136, ws_ext_list_price#137, ws_sold_date_sk#138]
Arguments: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112, ws_ext_discount_amt#134, ws_ext_sales_price#135, ws_ext_wholesale_cost#136, ws_ext_list_price#137, ws_sold_date_sk#138], [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112, ws_ext_discount_amt#134, ws_ext_sales_price#135, ws_ext_wholesale_cost#136, ws_ext_list_price#137, ws_sold_date_sk#138]

(91) ReusedExchange [Reuses operator id: 26]
Output [2]: [d_date_sk#139, d_year#140]

(92) CometBroadcastHashJoin
Left output [12]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112, ws_ext_discount_amt#134, ws_ext_sales_price#135, ws_ext_wholesale_cost#136, ws_ext_list_price#137, ws_sold_date_sk#138]
Right output [2]: [d_date_sk#139, d_year#140]
Arguments: [ws_sold_date_sk#138], [d_date_sk#139], Inner, BuildRight

(93) CometProject
Input [14]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112, ws_ext_discount_amt#134, ws_ext_sales_price#135, ws_ext_wholesale_cost#136, ws_ext_list_price#137, ws_sold_date_sk#138, d_date_sk#139, d_year#140]
Arguments: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112, ws_ext_discount_amt#134, ws_ext_sales_price#135, ws_ext_wholesale_cost#136, ws_ext_list_price#137, d_year#140], [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112, ws_ext_discount_amt#134, ws_ext_sales_price#135, ws_ext_wholesale_cost#136, ws_ext_list_price#137, d_year#140]

(94) CometHashAggregate
Input [12]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112, ws_ext_discount_amt#134, ws_ext_sales_price#135, ws_ext_wholesale_cost#136, ws_ext_list_price#137, d_year#140]
Keys [8]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112, d_year#140]
Functions [1]: [partial_sum(((((ws_ext_list_price#137 - ws_ext_wholesale_cost#136) - ws_ext_discount_amt#134) + ws_ext_sales_price#135) / 2))]

(95) CometExchange
Input [10]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112, d_year#140, sum#141, isEmpty#142]
Arguments: hashpartitioning(c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112, d_year#140, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=6]

(96) CometHashAggregate
Input [10]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112, d_year#140, sum#141, isEmpty#142]
Keys [8]: [c_customer_id#107, c_first_name#108, c_last_name#109, c_preferred_cust_flag#110, c_birth_country#130, c_login#111, c_email_address#112, d_year#140]
Functions [1]: [sum(((((ws_ext_list_price#137 - ws_ext_wholesale_cost#136) - ws_ext_discount_amt#134) + ws_ext_sales_price#135) / 2))]

(97) CometBroadcastExchange
Input [2]: [customer_id#143, year_total#144]
Arguments: [customer_id#143, year_total#144]

(98) CometBroadcastHashJoin
Left output [11]: [customer_id#25, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#78, year_total#98, year_total#124]
Right output [2]: [customer_id#143, year_total#144]
Arguments: [customer_id#25], [customer_id#143], Inner, (CASE WHEN (year_total#78 > 0.000000) THEN (year_total#98 / year_total#78) END > CASE WHEN (year_total#124 > 0.000000) THEN (year_total#144 / year_total#124) END), BuildRight

(99) CometProject
Input [13]: [customer_id#25, customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51, year_total#78, year_total#98, year_total#124, customer_id#143, year_total#144]
Arguments: [customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51], [customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51]

(100) CometTakeOrderedAndProject
Input [7]: [customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[customer_id#45 ASC NULLS FIRST,customer_first_name#46 ASC NULLS FIRST,customer_last_name#47 ASC NULLS FIRST,customer_preferred_cust_flag#48 ASC NULLS FIRST,customer_birth_country#49 ASC NULLS FIRST,customer_login#50 ASC NULLS FIRST,customer_email_address#51 ASC NULLS FIRST], output=[customer_id#45,customer_first_name#46,customer_last_name#47,customer_preferred_cust_flag#48,customer_birth_country#49,customer_login#50,customer_email_address#51]), [customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51], 100, 0, [customer_id#45 ASC NULLS FIRST, customer_first_name#46 ASC NULLS FIRST, customer_last_name#47 ASC NULLS FIRST, customer_preferred_cust_flag#48 ASC NULLS FIRST, customer_birth_country#49 ASC NULLS FIRST, customer_login#50 ASC NULLS FIRST, customer_email_address#51 ASC NULLS FIRST], [customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51]

(101) CometColumnarToRow [codegen id : 1]
Input [7]: [customer_id#45, customer_first_name#46, customer_last_name#47, customer_preferred_cust_flag#48, customer_birth_country#49, customer_login#50, customer_email_address#51]

