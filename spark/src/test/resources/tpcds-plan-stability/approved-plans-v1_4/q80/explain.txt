== Physical Plan ==
TakeOrderedAndProject (71)
+- * HashAggregate (70)
   +- Exchange (69)
      +- * HashAggregate (68)
         +- * Expand (67)
            +- Union (66)
               :- * HashAggregate (38)
               :  +- * ColumnarToRow (37)
               :     +- CometExchange (36)
               :        +- CometHashAggregate (35)
               :           +- CometProject (34)
               :              +- CometBroadcastHashJoin (33)
               :                 :- CometProject (28)
               :                 :  +- CometBroadcastHashJoin (27)
               :                 :     :- CometProject (22)
               :                 :     :  +- CometBroadcastHashJoin (21)
               :                 :     :     :- CometProject (17)
               :                 :     :     :  +- CometBroadcastHashJoin (16)
               :                 :     :     :     :- CometProject (11)
               :                 :     :     :     :  +- CometSortMergeJoin (10)
               :                 :     :     :     :     :- CometSort (4)
               :                 :     :     :     :     :  +- CometExchange (3)
               :                 :     :     :     :     :     +- CometFilter (2)
               :                 :     :     :     :     :        +- CometNativeScan: `spark_catalog`.`default`.`store_sales` (1)
               :                 :     :     :     :     +- CometSort (9)
               :                 :     :     :     :        +- CometExchange (8)
               :                 :     :     :     :           +- CometProject (7)
               :                 :     :     :     :              +- CometFilter (6)
               :                 :     :     :     :                 +- CometNativeScan: `spark_catalog`.`default`.`store_returns` (5)
               :                 :     :     :     +- CometBroadcastExchange (15)
               :                 :     :     :        +- CometProject (14)
               :                 :     :     :           +- CometFilter (13)
               :                 :     :     :              +- CometNativeScan: `spark_catalog`.`default`.`date_dim` (12)
               :                 :     :     +- CometBroadcastExchange (20)
               :                 :     :        +- CometFilter (19)
               :                 :     :           +- CometNativeScan: `spark_catalog`.`default`.`store` (18)
               :                 :     +- CometBroadcastExchange (26)
               :                 :        +- CometProject (25)
               :                 :           +- CometFilter (24)
               :                 :              +- CometNativeScan: `spark_catalog`.`default`.`item` (23)
               :                 +- CometBroadcastExchange (32)
               :                    +- CometProject (31)
               :                       +- CometFilter (30)
               :                          +- CometNativeScan: `spark_catalog`.`default`.`promotion` (29)
               :- * HashAggregate (62)
               :  +- * ColumnarToRow (61)
               :     +- CometExchange (60)
               :        +- CometHashAggregate (59)
               :           +- CometProject (58)
               :              +- CometBroadcastHashJoin (57)
               :                 :- CometProject (55)
               :                 :  +- CometBroadcastHashJoin (54)
               :                 :     :- CometProject (52)
               :                 :     :  +- CometBroadcastHashJoin (51)
               :                 :     :     :- CometProject (49)
               :                 :     :     :  +- CometBroadcastHashJoin (48)
               :                 :     :     :     :- CometProject (46)
               :                 :     :     :     :  +- CometSortMergeJoin (45)
               :                 :     :     :     :     :- CometSort (42)
               :                 :     :     :     :     :  +- CometExchange (41)
               :                 :     :     :     :     :     +- CometFilter (40)
               :                 :     :     :     :     :        +- CometNativeScan: `spark_catalog`.`default`.`catalog_sales` (39)
               :                 :     :     :     :     +- CometSort (44)
               :                 :     :     :     :        +- ReusedExchange (43)
               :                 :     :     :     +- ReusedExchange (47)
               :                 :     :     +- ReusedExchange (50)
               :                 :     +- ReusedExchange (53)
               :                 +- ReusedExchange (56)
               +- * HashAggregate (65)
                  +- * ColumnarToRow (64)
                     +- ReusedExchange (63)


(1) CometNativeScan: `spark_catalog`.`default`.`store_sales`
Output [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Arguments: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]

(2) CometFilter
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Condition : ((isnotnull(ss_store_sk#2) AND isnotnull(ss_item_sk#1)) AND isnotnull(ss_promo_sk#3))

(3) CometExchange
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Arguments: hashpartitioning(ss_item_sk#1, ss_ticket_number#4, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(4) CometSort
Input [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Arguments: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7], [ss_item_sk#1 ASC NULLS FIRST, ss_ticket_number#4 ASC NULLS FIRST]

(5) CometNativeScan: `spark_catalog`.`default`.`store_returns`
Output [5]: [sr_item_sk#8, sr_ticket_number#9, sr_return_amt#10, sr_net_loss#11, sr_returned_date_sk#12]
Arguments: [sr_item_sk#8, sr_ticket_number#9, sr_return_amt#10, sr_net_loss#11, sr_returned_date_sk#12]

(6) CometFilter
Input [5]: [sr_item_sk#8, sr_ticket_number#9, sr_return_amt#10, sr_net_loss#11, sr_returned_date_sk#12]
Condition : (isnotnull(sr_item_sk#8) AND isnotnull(sr_ticket_number#9))

(7) CometProject
Input [5]: [sr_item_sk#8, sr_ticket_number#9, sr_return_amt#10, sr_net_loss#11, sr_returned_date_sk#12]
Arguments: [sr_item_sk#8, sr_ticket_number#9, sr_return_amt#10, sr_net_loss#11], [sr_item_sk#8, sr_ticket_number#9, sr_return_amt#10, sr_net_loss#11]

(8) CometExchange
Input [4]: [sr_item_sk#8, sr_ticket_number#9, sr_return_amt#10, sr_net_loss#11]
Arguments: hashpartitioning(sr_item_sk#8, sr_ticket_number#9, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(9) CometSort
Input [4]: [sr_item_sk#8, sr_ticket_number#9, sr_return_amt#10, sr_net_loss#11]
Arguments: [sr_item_sk#8, sr_ticket_number#9, sr_return_amt#10, sr_net_loss#11], [sr_item_sk#8 ASC NULLS FIRST, sr_ticket_number#9 ASC NULLS FIRST]

(10) CometSortMergeJoin
Left output [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7]
Right output [4]: [sr_item_sk#8, sr_ticket_number#9, sr_return_amt#10, sr_net_loss#11]
Arguments: [ss_item_sk#1, ss_ticket_number#4], [sr_item_sk#8, sr_ticket_number#9], LeftOuter

(11) CometProject
Input [11]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ticket_number#4, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_item_sk#8, sr_ticket_number#9, sr_return_amt#10, sr_net_loss#11]
Arguments: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#10, sr_net_loss#11], [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#10, sr_net_loss#11]

(12) CometNativeScan: `spark_catalog`.`default`.`date_dim`
Output [2]: [d_date_sk#13, d_date#14]
Arguments: [d_date_sk#13, d_date#14]

(13) CometFilter
Input [2]: [d_date_sk#13, d_date#14]
Condition : (((isnotnull(d_date#14) AND (d_date#14 >= 2000-08-23)) AND (d_date#14 <= 2000-09-22)) AND isnotnull(d_date_sk#13))

(14) CometProject
Input [2]: [d_date_sk#13, d_date#14]
Arguments: [d_date_sk#13], [d_date_sk#13]

(15) CometBroadcastExchange
Input [1]: [d_date_sk#13]
Arguments: [d_date_sk#13]

(16) CometBroadcastHashJoin
Left output [8]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#10, sr_net_loss#11]
Right output [1]: [d_date_sk#13]
Arguments: [ss_sold_date_sk#7], [d_date_sk#13], Inner, BuildRight

(17) CometProject
Input [9]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, ss_sold_date_sk#7, sr_return_amt#10, sr_net_loss#11, d_date_sk#13]
Arguments: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11], [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11]

(18) CometNativeScan: `spark_catalog`.`default`.`store`
Output [2]: [s_store_sk#15, s_store_id#16]
Arguments: [s_store_sk#15, s_store_id#16]

(19) CometFilter
Input [2]: [s_store_sk#15, s_store_id#16]
Condition : isnotnull(s_store_sk#15)

(20) CometBroadcastExchange
Input [2]: [s_store_sk#15, s_store_id#16]
Arguments: [s_store_sk#15, s_store_id#16]

(21) CometBroadcastHashJoin
Left output [7]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11]
Right output [2]: [s_store_sk#15, s_store_id#16]
Arguments: [ss_store_sk#2], [s_store_sk#15], Inner, BuildRight

(22) CometProject
Input [9]: [ss_item_sk#1, ss_store_sk#2, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11, s_store_sk#15, s_store_id#16]
Arguments: [ss_item_sk#1, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11, s_store_id#16], [ss_item_sk#1, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11, s_store_id#16]

(23) CometNativeScan: `spark_catalog`.`default`.`item`
Output [2]: [i_item_sk#17, i_current_price#18]
Arguments: [i_item_sk#17, i_current_price#18]

(24) CometFilter
Input [2]: [i_item_sk#17, i_current_price#18]
Condition : ((isnotnull(i_current_price#18) AND (i_current_price#18 > 50.00)) AND isnotnull(i_item_sk#17))

(25) CometProject
Input [2]: [i_item_sk#17, i_current_price#18]
Arguments: [i_item_sk#17], [i_item_sk#17]

(26) CometBroadcastExchange
Input [1]: [i_item_sk#17]
Arguments: [i_item_sk#17]

(27) CometBroadcastHashJoin
Left output [7]: [ss_item_sk#1, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11, s_store_id#16]
Right output [1]: [i_item_sk#17]
Arguments: [ss_item_sk#1], [i_item_sk#17], Inner, BuildRight

(28) CometProject
Input [8]: [ss_item_sk#1, ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11, s_store_id#16, i_item_sk#17]
Arguments: [ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11, s_store_id#16], [ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11, s_store_id#16]

(29) CometNativeScan: `spark_catalog`.`default`.`promotion`
Output [2]: [p_promo_sk#19, p_channel_tv#20]
Arguments: [p_promo_sk#19, p_channel_tv#20]

(30) CometFilter
Input [2]: [p_promo_sk#19, p_channel_tv#20]
Condition : ((isnotnull(p_channel_tv#20) AND (p_channel_tv#20 = N)) AND isnotnull(p_promo_sk#19))

(31) CometProject
Input [2]: [p_promo_sk#19, p_channel_tv#20]
Arguments: [p_promo_sk#19], [p_promo_sk#19]

(32) CometBroadcastExchange
Input [1]: [p_promo_sk#19]
Arguments: [p_promo_sk#19]

(33) CometBroadcastHashJoin
Left output [6]: [ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11, s_store_id#16]
Right output [1]: [p_promo_sk#19]
Arguments: [ss_promo_sk#3], [p_promo_sk#19], Inner, BuildRight

(34) CometProject
Input [7]: [ss_promo_sk#3, ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11, s_store_id#16, p_promo_sk#19]
Arguments: [ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11, s_store_id#16], [ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11, s_store_id#16]

(35) CometHashAggregate
Input [5]: [ss_ext_sales_price#5, ss_net_profit#6, sr_return_amt#10, sr_net_loss#11, s_store_id#16]
Keys [1]: [s_store_id#16]
Functions [3]: [partial_sum(UnscaledValue(ss_ext_sales_price#5)), partial_sum(coalesce(cast(sr_return_amt#10 as decimal(12,2)), 0.00)), partial_sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#11 as decimal(12,2)), 0.00)))]

(36) CometExchange
Input [6]: [s_store_id#16, sum#21, sum#22, isEmpty#23, sum#24, isEmpty#25]
Arguments: hashpartitioning(s_store_id#16, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(37) ColumnarToRow [codegen id : 1]
Input [6]: [s_store_id#16, sum#21, sum#22, isEmpty#23, sum#24, isEmpty#25]

(38) HashAggregate [codegen id : 1]
Input [6]: [s_store_id#16, sum#21, sum#22, isEmpty#23, sum#24, isEmpty#25]
Keys [1]: [s_store_id#16]
Functions [3]: [sum(UnscaledValue(ss_ext_sales_price#5)), sum(coalesce(cast(sr_return_amt#10 as decimal(12,2)), 0.00)), sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#11 as decimal(12,2)), 0.00)))]
Aggregate Attributes [3]: [sum(UnscaledValue(ss_ext_sales_price#5))#26, sum(coalesce(cast(sr_return_amt#10 as decimal(12,2)), 0.00))#27, sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#11 as decimal(12,2)), 0.00)))#28]
Results [5]: [MakeDecimal(sum(UnscaledValue(ss_ext_sales_price#5))#26,17,2) AS sales#29, sum(coalesce(cast(sr_return_amt#10 as decimal(12,2)), 0.00))#27 AS returns#30, sum((ss_net_profit#6 - coalesce(cast(sr_net_loss#11 as decimal(12,2)), 0.00)))#28 AS profit#31, store channel AS channel#32, concat(store, s_store_id#16) AS id#33]

(39) CometNativeScan: `spark_catalog`.`default`.`catalog_sales`
Output [7]: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_order_number#37, cs_ext_sales_price#38, cs_net_profit#39, cs_sold_date_sk#40]
Arguments: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_order_number#37, cs_ext_sales_price#38, cs_net_profit#39, cs_sold_date_sk#40]

(40) CometFilter
Input [7]: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_order_number#37, cs_ext_sales_price#38, cs_net_profit#39, cs_sold_date_sk#40]
Condition : ((isnotnull(cs_catalog_page_sk#34) AND isnotnull(cs_item_sk#35)) AND isnotnull(cs_promo_sk#36))

(41) CometExchange
Input [7]: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_order_number#37, cs_ext_sales_price#38, cs_net_profit#39, cs_sold_date_sk#40]
Arguments: hashpartitioning(cs_item_sk#35, cs_order_number#37, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(42) CometSort
Input [7]: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_order_number#37, cs_ext_sales_price#38, cs_net_profit#39, cs_sold_date_sk#40]
Arguments: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_order_number#37, cs_ext_sales_price#38, cs_net_profit#39, cs_sold_date_sk#40], [cs_item_sk#35 ASC NULLS FIRST, cs_order_number#37 ASC NULLS FIRST]

(43) ReusedExchange [Reuses operator id: 8]
Output [4]: [cr_item_sk#41, cr_order_number#42, cr_return_amount#43, cr_net_loss#44]

(44) CometSort
Input [4]: [cr_item_sk#41, cr_order_number#42, cr_return_amount#43, cr_net_loss#44]
Arguments: [cr_item_sk#41, cr_order_number#42, cr_return_amount#43, cr_net_loss#44], [cr_item_sk#41 ASC NULLS FIRST, cr_order_number#42 ASC NULLS FIRST]

(45) CometSortMergeJoin
Left output [7]: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_order_number#37, cs_ext_sales_price#38, cs_net_profit#39, cs_sold_date_sk#40]
Right output [4]: [cr_item_sk#41, cr_order_number#42, cr_return_amount#43, cr_net_loss#44]
Arguments: [cs_item_sk#35, cs_order_number#37], [cr_item_sk#41, cr_order_number#42], LeftOuter

(46) CometProject
Input [11]: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_order_number#37, cs_ext_sales_price#38, cs_net_profit#39, cs_sold_date_sk#40, cr_item_sk#41, cr_order_number#42, cr_return_amount#43, cr_net_loss#44]
Arguments: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cs_sold_date_sk#40, cr_return_amount#43, cr_net_loss#44], [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cs_sold_date_sk#40, cr_return_amount#43, cr_net_loss#44]

(47) ReusedExchange [Reuses operator id: 15]
Output [1]: [d_date_sk#45]

(48) CometBroadcastHashJoin
Left output [8]: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cs_sold_date_sk#40, cr_return_amount#43, cr_net_loss#44]
Right output [1]: [d_date_sk#45]
Arguments: [cs_sold_date_sk#40], [d_date_sk#45], Inner, BuildRight

(49) CometProject
Input [9]: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cs_sold_date_sk#40, cr_return_amount#43, cr_net_loss#44, d_date_sk#45]
Arguments: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44], [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44]

(50) ReusedExchange [Reuses operator id: 20]
Output [2]: [cp_catalog_page_sk#46, cp_catalog_page_id#47]

(51) CometBroadcastHashJoin
Left output [7]: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44]
Right output [2]: [cp_catalog_page_sk#46, cp_catalog_page_id#47]
Arguments: [cs_catalog_page_sk#34], [cp_catalog_page_sk#46], Inner, BuildRight

(52) CometProject
Input [9]: [cs_catalog_page_sk#34, cs_item_sk#35, cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44, cp_catalog_page_sk#46, cp_catalog_page_id#47]
Arguments: [cs_item_sk#35, cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44, cp_catalog_page_id#47], [cs_item_sk#35, cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44, cp_catalog_page_id#47]

(53) ReusedExchange [Reuses operator id: 26]
Output [1]: [i_item_sk#48]

(54) CometBroadcastHashJoin
Left output [7]: [cs_item_sk#35, cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44, cp_catalog_page_id#47]
Right output [1]: [i_item_sk#48]
Arguments: [cs_item_sk#35], [i_item_sk#48], Inner, BuildRight

(55) CometProject
Input [8]: [cs_item_sk#35, cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44, cp_catalog_page_id#47, i_item_sk#48]
Arguments: [cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44, cp_catalog_page_id#47], [cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44, cp_catalog_page_id#47]

(56) ReusedExchange [Reuses operator id: 32]
Output [1]: [p_promo_sk#49]

(57) CometBroadcastHashJoin
Left output [6]: [cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44, cp_catalog_page_id#47]
Right output [1]: [p_promo_sk#49]
Arguments: [cs_promo_sk#36], [p_promo_sk#49], Inner, BuildRight

(58) CometProject
Input [7]: [cs_promo_sk#36, cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44, cp_catalog_page_id#47, p_promo_sk#49]
Arguments: [cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44, cp_catalog_page_id#47], [cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44, cp_catalog_page_id#47]

(59) CometHashAggregate
Input [5]: [cs_ext_sales_price#38, cs_net_profit#39, cr_return_amount#43, cr_net_loss#44, cp_catalog_page_id#47]
Keys [1]: [cp_catalog_page_id#47]
Functions [3]: [partial_sum(UnscaledValue(cs_ext_sales_price#38)), partial_sum(coalesce(cast(cr_return_amount#43 as decimal(12,2)), 0.00)), partial_sum((cs_net_profit#39 - coalesce(cast(cr_net_loss#44 as decimal(12,2)), 0.00)))]

(60) CometExchange
Input [6]: [cp_catalog_page_id#47, sum#50, sum#51, isEmpty#52, sum#53, isEmpty#54]
Arguments: hashpartitioning(cp_catalog_page_id#47, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=5]

(61) ColumnarToRow [codegen id : 2]
Input [6]: [cp_catalog_page_id#47, sum#50, sum#51, isEmpty#52, sum#53, isEmpty#54]

(62) HashAggregate [codegen id : 2]
Input [6]: [cp_catalog_page_id#47, sum#50, sum#51, isEmpty#52, sum#53, isEmpty#54]
Keys [1]: [cp_catalog_page_id#47]
Functions [3]: [sum(UnscaledValue(cs_ext_sales_price#38)), sum(coalesce(cast(cr_return_amount#43 as decimal(12,2)), 0.00)), sum((cs_net_profit#39 - coalesce(cast(cr_net_loss#44 as decimal(12,2)), 0.00)))]
Aggregate Attributes [3]: [sum(UnscaledValue(cs_ext_sales_price#38))#55, sum(coalesce(cast(cr_return_amount#43 as decimal(12,2)), 0.00))#56, sum((cs_net_profit#39 - coalesce(cast(cr_net_loss#44 as decimal(12,2)), 0.00)))#57]
Results [5]: [MakeDecimal(sum(UnscaledValue(cs_ext_sales_price#38))#55,17,2) AS sales#58, sum(coalesce(cast(cr_return_amount#43 as decimal(12,2)), 0.00))#56 AS returns#59, sum((cs_net_profit#39 - coalesce(cast(cr_net_loss#44 as decimal(12,2)), 0.00)))#57 AS profit#60, catalog channel AS channel#61, concat(catalog_page, cp_catalog_page_id#47) AS id#62]

(63) ReusedExchange [Reuses operator id: 36]
Output [6]: [web_site_id#63, sum#64, sum#65, isEmpty#66, sum#67, isEmpty#68]

(64) ColumnarToRow [codegen id : 3]
Input [6]: [web_site_id#63, sum#64, sum#65, isEmpty#66, sum#67, isEmpty#68]

(65) HashAggregate [codegen id : 3]
Input [6]: [web_site_id#63, sum#64, sum#65, isEmpty#66, sum#67, isEmpty#68]
Keys [1]: [web_site_id#63]
Functions [3]: [sum(UnscaledValue(ws_ext_sales_price#69)), sum(coalesce(cast(wr_return_amt#70 as decimal(12,2)), 0.00)), sum((ws_net_profit#71 - coalesce(cast(wr_net_loss#72 as decimal(12,2)), 0.00)))]
Aggregate Attributes [3]: [sum(UnscaledValue(ws_ext_sales_price#69))#73, sum(coalesce(cast(wr_return_amt#70 as decimal(12,2)), 0.00))#74, sum((ws_net_profit#71 - coalesce(cast(wr_net_loss#72 as decimal(12,2)), 0.00)))#75]
Results [5]: [MakeDecimal(sum(UnscaledValue(ws_ext_sales_price#69))#73,17,2) AS sales#76, sum(coalesce(cast(wr_return_amt#70 as decimal(12,2)), 0.00))#74 AS returns#77, sum((ws_net_profit#71 - coalesce(cast(wr_net_loss#72 as decimal(12,2)), 0.00)))#75 AS profit#78, web channel AS channel#79, concat(web_site, web_site_id#63) AS id#80]

(66) Union

(67) Expand [codegen id : 4]
Input [5]: [sales#29, returns#30, profit#31, channel#32, id#33]
Arguments: [[sales#29, returns#30, profit#31, channel#32, id#33, 0], [sales#29, returns#30, profit#31, channel#32, null, 1], [sales#29, returns#30, profit#31, null, null, 3]], [sales#29, returns#30, profit#31, channel#81, id#82, spark_grouping_id#83]

(68) HashAggregate [codegen id : 4]
Input [6]: [sales#29, returns#30, profit#31, channel#81, id#82, spark_grouping_id#83]
Keys [3]: [channel#81, id#82, spark_grouping_id#83]
Functions [3]: [partial_sum(sales#29), partial_sum(returns#30), partial_sum(profit#31)]
Aggregate Attributes [6]: [sum#84, isEmpty#85, sum#86, isEmpty#87, sum#88, isEmpty#89]
Results [9]: [channel#81, id#82, spark_grouping_id#83, sum#90, isEmpty#91, sum#92, isEmpty#93, sum#94, isEmpty#95]

(69) Exchange
Input [9]: [channel#81, id#82, spark_grouping_id#83, sum#90, isEmpty#91, sum#92, isEmpty#93, sum#94, isEmpty#95]
Arguments: hashpartitioning(channel#81, id#82, spark_grouping_id#83, 5), ENSURE_REQUIREMENTS, [plan_id=6]

(70) HashAggregate [codegen id : 5]
Input [9]: [channel#81, id#82, spark_grouping_id#83, sum#90, isEmpty#91, sum#92, isEmpty#93, sum#94, isEmpty#95]
Keys [3]: [channel#81, id#82, spark_grouping_id#83]
Functions [3]: [sum(sales#29), sum(returns#30), sum(profit#31)]
Aggregate Attributes [3]: [sum(sales#29)#96, sum(returns#30)#97, sum(profit#31)#98]
Results [5]: [channel#81, id#82, sum(sales#29)#96 AS sales#99, sum(returns#30)#97 AS returns#100, sum(profit#31)#98 AS profit#101]

(71) TakeOrderedAndProject
Input [5]: [channel#81, id#82, sales#99, returns#100, profit#101]
Arguments: 100, [channel#81 ASC NULLS FIRST, id#82 ASC NULLS FIRST], [channel#81, id#82, sales#99, returns#100, profit#101]

