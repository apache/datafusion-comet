== Physical Plan ==
* CometColumnarToRow (62)
+- CometTakeOrderedAndProject (61)
   +- CometHashAggregate (60)
      +- CometExchange (59)
         +- CometHashAggregate (58)
            +- CometUnion (57)
               :- CometHashAggregate (28)
               :  +- CometExchange (27)
               :     +- CometHashAggregate (26)
               :        +- CometProject (25)
               :           +- CometBroadcastHashJoin (24)
               :              :- CometProject (14)
               :              :  +- CometBroadcastHashJoin (13)
               :              :     :- CometProject (8)
               :              :     :  +- CometBroadcastHashJoin (7)
               :              :     :     :- CometFilter (2)
               :              :     :     :  +- CometNativeScan parquet spark_catalog.default.store_sales (1)
               :              :     :     +- CometBroadcastExchange (6)
               :              :     :        +- CometProject (5)
               :              :     :           +- CometFilter (4)
               :              :     :              +- CometNativeScan parquet spark_catalog.default.date_dim (3)
               :              :     +- CometBroadcastExchange (12)
               :              :        +- CometProject (11)
               :              :           +- CometFilter (10)
               :              :              +- CometNativeScan parquet spark_catalog.default.customer_address (9)
               :              +- CometBroadcastExchange (23)
               :                 +- CometProject (22)
               :                    +- CometBroadcastHashJoin (21)
               :                       :- CometFilter (16)
               :                       :  +- CometNativeScan parquet spark_catalog.default.item (15)
               :                       +- CometBroadcastExchange (20)
               :                          +- CometProject (19)
               :                             +- CometFilter (18)
               :                                +- CometNativeScan parquet spark_catalog.default.item (17)
               :- CometHashAggregate (42)
               :  +- CometExchange (41)
               :     +- CometHashAggregate (40)
               :        +- CometProject (39)
               :           +- CometBroadcastHashJoin (38)
               :              :- CometProject (36)
               :              :  +- CometBroadcastHashJoin (35)
               :              :     :- CometProject (33)
               :              :     :  +- CometBroadcastHashJoin (32)
               :              :     :     :- CometFilter (30)
               :              :     :     :  +- CometNativeScan parquet spark_catalog.default.catalog_sales (29)
               :              :     :     +- ReusedExchange (31)
               :              :     +- ReusedExchange (34)
               :              +- ReusedExchange (37)
               +- CometHashAggregate (56)
                  +- CometExchange (55)
                     +- CometHashAggregate (54)
                        +- CometProject (53)
                           +- CometBroadcastHashJoin (52)
                              :- CometProject (50)
                              :  +- CometBroadcastHashJoin (49)
                              :     :- CometProject (47)
                              :     :  +- CometBroadcastHashJoin (46)
                              :     :     :- CometFilter (44)
                              :     :     :  +- CometNativeScan parquet spark_catalog.default.web_sales (43)
                              :     :     +- ReusedExchange (45)
                              :     +- ReusedExchange (48)
                              +- ReusedExchange (51)


(1) CometNativeScan parquet spark_catalog.default.store_sales
Output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ss_sold_date_sk#4)]
PushedFilters: [IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)]
ReadSchema: struct<ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>

(2) CometFilter
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Condition : (isnotnull(ss_addr_sk#2) AND isnotnull(ss_item_sk#1))

(3) CometNativeScan parquet spark_catalog.default.date_dim
Output [3]: [d_date_sk#5, d_year#6, d_moy#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,2), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

(4) CometFilter
Input [3]: [d_date_sk#5, d_year#6, d_moy#7]
Condition : ((((isnotnull(d_year#6) AND isnotnull(d_moy#7)) AND (d_year#6 = 2001)) AND (d_moy#7 = 2)) AND isnotnull(d_date_sk#5))

(5) CometProject
Input [3]: [d_date_sk#5, d_year#6, d_moy#7]
Arguments: [d_date_sk#5], [d_date_sk#5]

(6) CometBroadcastExchange
Input [1]: [d_date_sk#5]
Arguments: [d_date_sk#5]

(7) CometBroadcastHashJoin
Left output [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4]
Right output [1]: [d_date_sk#5]
Arguments: [ss_sold_date_sk#4], [d_date_sk#5], Inner, BuildRight

(8) CometProject
Input [5]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ss_sold_date_sk#4, d_date_sk#5]
Arguments: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3], [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]

(9) CometNativeScan parquet spark_catalog.default.customer_address
Output [2]: [ca_address_sk#8, ca_gmt_offset#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/customer_address]
PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)]
ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>

(10) CometFilter
Input [2]: [ca_address_sk#8, ca_gmt_offset#9]
Condition : ((isnotnull(ca_gmt_offset#9) AND (ca_gmt_offset#9 = -5.00)) AND isnotnull(ca_address_sk#8))

(11) CometProject
Input [2]: [ca_address_sk#8, ca_gmt_offset#9]
Arguments: [ca_address_sk#8], [ca_address_sk#8]

(12) CometBroadcastExchange
Input [1]: [ca_address_sk#8]
Arguments: [ca_address_sk#8]

(13) CometBroadcastHashJoin
Left output [3]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3]
Right output [1]: [ca_address_sk#8]
Arguments: [ss_addr_sk#2], [ca_address_sk#8], Inner, BuildRight

(14) CometProject
Input [4]: [ss_item_sk#1, ss_addr_sk#2, ss_ext_sales_price#3, ca_address_sk#8]
Arguments: [ss_item_sk#1, ss_ext_sales_price#3], [ss_item_sk#1, ss_ext_sales_price#3]

(15) CometNativeScan parquet spark_catalog.default.item
Output [2]: [i_item_sk#10, i_item_id#11]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
PushedFilters: [IsNotNull(i_item_sk)]
ReadSchema: struct<i_item_sk:int,i_item_id:string>

(16) CometFilter
Input [2]: [i_item_sk#10, i_item_id#11]
Condition : isnotnull(i_item_sk#10)

(17) CometNativeScan parquet spark_catalog.default.item
Output [2]: [i_item_id#12, i_color#13]
Batched: true
Location [not included in comparison]/{warehouse_dir}/item]
ReadSchema: struct<i_item_id:string,i_color:string>

(18) CometFilter
Input [2]: [i_item_id#12, i_color#13]
Condition : staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_color#13, 20, true, false, true) IN (slate               ,blanched            ,burnished           )

(19) CometProject
Input [2]: [i_item_id#12, i_color#13]
Arguments: [i_item_id#14], [staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#12, 16, true, false, true) AS i_item_id#14]

(20) CometBroadcastExchange
Input [1]: [i_item_id#14]
Arguments: [i_item_id#14]

(21) CometBroadcastHashJoin
Left output [2]: [i_item_sk#10, i_item_id#11]
Right output [1]: [i_item_id#14]
Arguments: [staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#11, 16, true, false, true)], [i_item_id#14], LeftSemi, BuildRight

(22) CometProject
Input [2]: [i_item_sk#10, i_item_id#11]
Arguments: [i_item_sk#10, i_item_id#15], [i_item_sk#10, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, i_item_id#11, 16, true, false, true) AS i_item_id#15]

(23) CometBroadcastExchange
Input [2]: [i_item_sk#10, i_item_id#15]
Arguments: [i_item_sk#10, i_item_id#15]

(24) CometBroadcastHashJoin
Left output [2]: [ss_item_sk#1, ss_ext_sales_price#3]
Right output [2]: [i_item_sk#10, i_item_id#15]
Arguments: [ss_item_sk#1], [i_item_sk#10], Inner, BuildRight

(25) CometProject
Input [4]: [ss_item_sk#1, ss_ext_sales_price#3, i_item_sk#10, i_item_id#15]
Arguments: [ss_ext_sales_price#3, i_item_id#15], [ss_ext_sales_price#3, i_item_id#15]

(26) CometHashAggregate
Input [2]: [ss_ext_sales_price#3, i_item_id#15]
Keys [1]: [i_item_id#15]
Functions [1]: [partial_sum(UnscaledValue(ss_ext_sales_price#3))]

(27) CometExchange
Input [2]: [i_item_id#15, sum#16]
Arguments: hashpartitioning(i_item_id#15, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(28) CometHashAggregate
Input [2]: [i_item_id#15, sum#16]
Keys [1]: [i_item_id#15]
Functions [1]: [sum(UnscaledValue(ss_ext_sales_price#3))]

(29) CometNativeScan parquet spark_catalog.default.catalog_sales
Output [4]: [cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19, cs_sold_date_sk#20]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(cs_sold_date_sk#20)]
PushedFilters: [IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)]
ReadSchema: struct<cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>

(30) CometFilter
Input [4]: [cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19, cs_sold_date_sk#20]
Condition : (isnotnull(cs_bill_addr_sk#17) AND isnotnull(cs_item_sk#18))

(31) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#21]

(32) CometBroadcastHashJoin
Left output [4]: [cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19, cs_sold_date_sk#20]
Right output [1]: [d_date_sk#21]
Arguments: [cs_sold_date_sk#20], [d_date_sk#21], Inner, BuildRight

(33) CometProject
Input [5]: [cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19, cs_sold_date_sk#20, d_date_sk#21]
Arguments: [cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19], [cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19]

(34) ReusedExchange [Reuses operator id: 12]
Output [1]: [ca_address_sk#22]

(35) CometBroadcastHashJoin
Left output [3]: [cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19]
Right output [1]: [ca_address_sk#22]
Arguments: [cs_bill_addr_sk#17], [ca_address_sk#22], Inner, BuildRight

(36) CometProject
Input [4]: [cs_bill_addr_sk#17, cs_item_sk#18, cs_ext_sales_price#19, ca_address_sk#22]
Arguments: [cs_item_sk#18, cs_ext_sales_price#19], [cs_item_sk#18, cs_ext_sales_price#19]

(37) ReusedExchange [Reuses operator id: 23]
Output [2]: [i_item_sk#23, i_item_id#24]

(38) CometBroadcastHashJoin
Left output [2]: [cs_item_sk#18, cs_ext_sales_price#19]
Right output [2]: [i_item_sk#23, i_item_id#24]
Arguments: [cs_item_sk#18], [i_item_sk#23], Inner, BuildRight

(39) CometProject
Input [4]: [cs_item_sk#18, cs_ext_sales_price#19, i_item_sk#23, i_item_id#24]
Arguments: [cs_ext_sales_price#19, i_item_id#24], [cs_ext_sales_price#19, i_item_id#24]

(40) CometHashAggregate
Input [2]: [cs_ext_sales_price#19, i_item_id#24]
Keys [1]: [i_item_id#24]
Functions [1]: [partial_sum(UnscaledValue(cs_ext_sales_price#19))]

(41) CometExchange
Input [2]: [i_item_id#24, sum#25]
Arguments: hashpartitioning(i_item_id#24, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=2]

(42) CometHashAggregate
Input [2]: [i_item_id#24, sum#25]
Keys [1]: [i_item_id#24]
Functions [1]: [sum(UnscaledValue(cs_ext_sales_price#19))]

(43) CometNativeScan parquet spark_catalog.default.web_sales
Output [4]: [ws_item_sk#26, ws_bill_addr_sk#27, ws_ext_sales_price#28, ws_sold_date_sk#29]
Batched: true
Location: InMemoryFileIndex(0 paths)[]
PartitionFilters: [isnotnull(ws_sold_date_sk#29)]
PushedFilters: [IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)]
ReadSchema: struct<ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>

(44) CometFilter
Input [4]: [ws_item_sk#26, ws_bill_addr_sk#27, ws_ext_sales_price#28, ws_sold_date_sk#29]
Condition : (isnotnull(ws_bill_addr_sk#27) AND isnotnull(ws_item_sk#26))

(45) ReusedExchange [Reuses operator id: 6]
Output [1]: [d_date_sk#30]

(46) CometBroadcastHashJoin
Left output [4]: [ws_item_sk#26, ws_bill_addr_sk#27, ws_ext_sales_price#28, ws_sold_date_sk#29]
Right output [1]: [d_date_sk#30]
Arguments: [ws_sold_date_sk#29], [d_date_sk#30], Inner, BuildRight

(47) CometProject
Input [5]: [ws_item_sk#26, ws_bill_addr_sk#27, ws_ext_sales_price#28, ws_sold_date_sk#29, d_date_sk#30]
Arguments: [ws_item_sk#26, ws_bill_addr_sk#27, ws_ext_sales_price#28], [ws_item_sk#26, ws_bill_addr_sk#27, ws_ext_sales_price#28]

(48) ReusedExchange [Reuses operator id: 12]
Output [1]: [ca_address_sk#31]

(49) CometBroadcastHashJoin
Left output [3]: [ws_item_sk#26, ws_bill_addr_sk#27, ws_ext_sales_price#28]
Right output [1]: [ca_address_sk#31]
Arguments: [ws_bill_addr_sk#27], [ca_address_sk#31], Inner, BuildRight

(50) CometProject
Input [4]: [ws_item_sk#26, ws_bill_addr_sk#27, ws_ext_sales_price#28, ca_address_sk#31]
Arguments: [ws_item_sk#26, ws_ext_sales_price#28], [ws_item_sk#26, ws_ext_sales_price#28]

(51) ReusedExchange [Reuses operator id: 23]
Output [2]: [i_item_sk#32, i_item_id#33]

(52) CometBroadcastHashJoin
Left output [2]: [ws_item_sk#26, ws_ext_sales_price#28]
Right output [2]: [i_item_sk#32, i_item_id#33]
Arguments: [ws_item_sk#26], [i_item_sk#32], Inner, BuildRight

(53) CometProject
Input [4]: [ws_item_sk#26, ws_ext_sales_price#28, i_item_sk#32, i_item_id#33]
Arguments: [ws_ext_sales_price#28, i_item_id#33], [ws_ext_sales_price#28, i_item_id#33]

(54) CometHashAggregate
Input [2]: [ws_ext_sales_price#28, i_item_id#33]
Keys [1]: [i_item_id#33]
Functions [1]: [partial_sum(UnscaledValue(ws_ext_sales_price#28))]

(55) CometExchange
Input [2]: [i_item_id#33, sum#34]
Arguments: hashpartitioning(i_item_id#33, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=3]

(56) CometHashAggregate
Input [2]: [i_item_id#33, sum#34]
Keys [1]: [i_item_id#33]
Functions [1]: [sum(UnscaledValue(ws_ext_sales_price#28))]

(57) CometUnion
Child 0 Input [2]: [i_item_id#35, total_sales#36]
Child 1 Input [2]: [i_item_id#24, total_sales#37]
Child 2 Input [2]: [i_item_id#33, total_sales#38]

(58) CometHashAggregate
Input [2]: [i_item_id#35, total_sales#36]
Keys [1]: [i_item_id#35]
Functions [1]: [partial_sum(total_sales#36)]

(59) CometExchange
Input [3]: [i_item_id#35, sum#39, isEmpty#40]
Arguments: hashpartitioning(i_item_id#35, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=4]

(60) CometHashAggregate
Input [3]: [i_item_id#35, sum#39, isEmpty#40]
Keys [1]: [i_item_id#35]
Functions [1]: [sum(total_sales#36)]

(61) CometTakeOrderedAndProject
Input [2]: [i_item_id#35, total_sales#41]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[total_sales#41 ASC NULLS FIRST], output=[i_item_id#35,total_sales#41]), [i_item_id#35, total_sales#41], 100, 0, [total_sales#41 ASC NULLS FIRST], [i_item_id#35, total_sales#41]

(62) CometColumnarToRow [codegen id : 1]
Input [2]: [i_item_id#35, total_sales#41]

