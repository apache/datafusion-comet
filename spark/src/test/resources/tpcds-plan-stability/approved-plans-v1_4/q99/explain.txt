== Physical Plan ==
* CometColumnarToRow (29)
+- CometTakeOrderedAndProject (28)
   +- CometHashAggregate (27)
      +- CometExchange (26)
         +- CometHashAggregate (25)
            +- CometProject (24)
               +- CometBroadcastHashJoin (23)
                  :- CometProject (18)
                  :  +- CometBroadcastHashJoin (17)
                  :     :- CometProject (13)
                  :     :  +- CometBroadcastHashJoin (12)
                  :     :     :- CometProject (7)
                  :     :     :  +- CometBroadcastHashJoin (6)
                  :     :     :     :- CometFilter (2)
                  :     :     :     :  +- CometScan parquet spark_catalog.default.catalog_sales (1)
                  :     :     :     +- CometBroadcastExchange (5)
                  :     :     :        +- CometFilter (4)
                  :     :     :           +- CometScan parquet spark_catalog.default.warehouse (3)
                  :     :     +- CometBroadcastExchange (11)
                  :     :        +- CometProject (10)
                  :     :           +- CometFilter (9)
                  :     :              +- CometScan parquet spark_catalog.default.ship_mode (8)
                  :     +- CometBroadcastExchange (16)
                  :        +- CometFilter (15)
                  :           +- CometScan parquet spark_catalog.default.call_center (14)
                  +- CometBroadcastExchange (22)
                     +- CometProject (21)
                        +- CometFilter (20)
                           +- CometScan parquet spark_catalog.default.date_dim (19)


(1) CometScan parquet spark_catalog.default.catalog_sales
Output [5]: [cs_ship_date_sk#1, cs_call_center_sk#2, cs_ship_mode_sk#3, cs_warehouse_sk#4, cs_sold_date_sk#5]
Batched: true
Location [not included in comparison]/{warehouse_dir}/catalog_sales]
PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_ship_mode_sk), IsNotNull(cs_call_center_sk), IsNotNull(cs_ship_date_sk)]
ReadSchema: struct<cs_ship_date_sk:int,cs_call_center_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int>

(2) CometFilter
Input [5]: [cs_ship_date_sk#1, cs_call_center_sk#2, cs_ship_mode_sk#3, cs_warehouse_sk#4, cs_sold_date_sk#5]
Condition : (((isnotnull(cs_warehouse_sk#4) AND isnotnull(cs_ship_mode_sk#3)) AND isnotnull(cs_call_center_sk#2)) AND isnotnull(cs_ship_date_sk#1))

(3) CometScan parquet spark_catalog.default.warehouse
Output [2]: [w_warehouse_sk#6, w_warehouse_name#7]
Batched: true
Location [not included in comparison]/{warehouse_dir}/warehouse]
PushedFilters: [IsNotNull(w_warehouse_sk)]
ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>

(4) CometFilter
Input [2]: [w_warehouse_sk#6, w_warehouse_name#7]
Condition : isnotnull(w_warehouse_sk#6)

(5) CometBroadcastExchange
Input [2]: [w_warehouse_sk#6, w_warehouse_name#7]
Arguments: [w_warehouse_sk#6, w_warehouse_name#7]

(6) CometBroadcastHashJoin
Left output [5]: [cs_ship_date_sk#1, cs_call_center_sk#2, cs_ship_mode_sk#3, cs_warehouse_sk#4, cs_sold_date_sk#5]
Right output [2]: [w_warehouse_sk#6, w_warehouse_name#7]
Arguments: [cs_warehouse_sk#4], [w_warehouse_sk#6], Inner, BuildRight

(7) CometProject
Input [7]: [cs_ship_date_sk#1, cs_call_center_sk#2, cs_ship_mode_sk#3, cs_warehouse_sk#4, cs_sold_date_sk#5, w_warehouse_sk#6, w_warehouse_name#7]
Arguments: [cs_ship_date_sk#1, cs_call_center_sk#2, cs_ship_mode_sk#3, cs_sold_date_sk#5, w_warehouse_name#7], [cs_ship_date_sk#1, cs_call_center_sk#2, cs_ship_mode_sk#3, cs_sold_date_sk#5, w_warehouse_name#7]

(8) CometScan parquet spark_catalog.default.ship_mode
Output [2]: [sm_ship_mode_sk#8, sm_type#9]
Batched: true
Location [not included in comparison]/{warehouse_dir}/ship_mode]
PushedFilters: [IsNotNull(sm_ship_mode_sk)]
ReadSchema: struct<sm_ship_mode_sk:int,sm_type:string>

(9) CometFilter
Input [2]: [sm_ship_mode_sk#8, sm_type#9]
Condition : isnotnull(sm_ship_mode_sk#8)

(10) CometProject
Input [2]: [sm_ship_mode_sk#8, sm_type#9]
Arguments: [sm_ship_mode_sk#8, sm_type#10], [sm_ship_mode_sk#8, staticinvoke(class org.apache.spark.sql.catalyst.util.CharVarcharCodegenUtils, StringType, readSidePadding, sm_type#9, 30, true, false, true) AS sm_type#10]

(11) CometBroadcastExchange
Input [2]: [sm_ship_mode_sk#8, sm_type#10]
Arguments: [sm_ship_mode_sk#8, sm_type#10]

(12) CometBroadcastHashJoin
Left output [5]: [cs_ship_date_sk#1, cs_call_center_sk#2, cs_ship_mode_sk#3, cs_sold_date_sk#5, w_warehouse_name#7]
Right output [2]: [sm_ship_mode_sk#8, sm_type#10]
Arguments: [cs_ship_mode_sk#3], [sm_ship_mode_sk#8], Inner, BuildRight

(13) CometProject
Input [7]: [cs_ship_date_sk#1, cs_call_center_sk#2, cs_ship_mode_sk#3, cs_sold_date_sk#5, w_warehouse_name#7, sm_ship_mode_sk#8, sm_type#10]
Arguments: [cs_ship_date_sk#1, cs_call_center_sk#2, cs_sold_date_sk#5, w_warehouse_name#7, sm_type#10], [cs_ship_date_sk#1, cs_call_center_sk#2, cs_sold_date_sk#5, w_warehouse_name#7, sm_type#10]

(14) CometScan parquet spark_catalog.default.call_center
Output [2]: [cc_call_center_sk#11, cc_name#12]
Batched: true
Location [not included in comparison]/{warehouse_dir}/call_center]
PushedFilters: [IsNotNull(cc_call_center_sk)]
ReadSchema: struct<cc_call_center_sk:int,cc_name:string>

(15) CometFilter
Input [2]: [cc_call_center_sk#11, cc_name#12]
Condition : isnotnull(cc_call_center_sk#11)

(16) CometBroadcastExchange
Input [2]: [cc_call_center_sk#11, cc_name#12]
Arguments: [cc_call_center_sk#11, cc_name#12]

(17) CometBroadcastHashJoin
Left output [5]: [cs_ship_date_sk#1, cs_call_center_sk#2, cs_sold_date_sk#5, w_warehouse_name#7, sm_type#10]
Right output [2]: [cc_call_center_sk#11, cc_name#12]
Arguments: [cs_call_center_sk#2], [cc_call_center_sk#11], Inner, BuildRight

(18) CometProject
Input [7]: [cs_ship_date_sk#1, cs_call_center_sk#2, cs_sold_date_sk#5, w_warehouse_name#7, sm_type#10, cc_call_center_sk#11, cc_name#12]
Arguments: [cs_ship_date_sk#1, cs_sold_date_sk#5, w_warehouse_name#7, sm_type#10, cc_name#12], [cs_ship_date_sk#1, cs_sold_date_sk#5, w_warehouse_name#7, sm_type#10, cc_name#12]

(19) CometScan parquet spark_catalog.default.date_dim
Output [2]: [d_date_sk#13, d_month_seq#14]
Batched: true
Location [not included in comparison]/{warehouse_dir}/date_dim]
PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211), IsNotNull(d_date_sk)]
ReadSchema: struct<d_date_sk:int,d_month_seq:int>

(20) CometFilter
Input [2]: [d_date_sk#13, d_month_seq#14]
Condition : (((isnotnull(d_month_seq#14) AND (d_month_seq#14 >= 1200)) AND (d_month_seq#14 <= 1211)) AND isnotnull(d_date_sk#13))

(21) CometProject
Input [2]: [d_date_sk#13, d_month_seq#14]
Arguments: [d_date_sk#13], [d_date_sk#13]

(22) CometBroadcastExchange
Input [1]: [d_date_sk#13]
Arguments: [d_date_sk#13]

(23) CometBroadcastHashJoin
Left output [5]: [cs_ship_date_sk#1, cs_sold_date_sk#5, w_warehouse_name#7, sm_type#10, cc_name#12]
Right output [1]: [d_date_sk#13]
Arguments: [cs_ship_date_sk#1], [d_date_sk#13], Inner, BuildRight

(24) CometProject
Input [6]: [cs_ship_date_sk#1, cs_sold_date_sk#5, w_warehouse_name#7, sm_type#10, cc_name#12, d_date_sk#13]
Arguments: [cs_ship_date_sk#1, cs_sold_date_sk#5, sm_type#10, cc_name#12, _groupingexpression#15], [cs_ship_date_sk#1, cs_sold_date_sk#5, sm_type#10, cc_name#12, substr(w_warehouse_name#7, 1, 20) AS _groupingexpression#15]

(25) CometHashAggregate
Input [5]: [cs_ship_date_sk#1, cs_sold_date_sk#5, sm_type#10, cc_name#12, _groupingexpression#15]
Keys [3]: [_groupingexpression#15, sm_type#10, cc_name#12]
Functions [5]: [partial_sum(CASE WHEN ((cs_ship_date_sk#1 - cs_sold_date_sk#5) <= 30) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((cs_ship_date_sk#1 - cs_sold_date_sk#5) > 30) AND ((cs_ship_date_sk#1 - cs_sold_date_sk#5) <= 60)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((cs_ship_date_sk#1 - cs_sold_date_sk#5) > 60) AND ((cs_ship_date_sk#1 - cs_sold_date_sk#5) <= 90)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((cs_ship_date_sk#1 - cs_sold_date_sk#5) > 90) AND ((cs_ship_date_sk#1 - cs_sold_date_sk#5) <= 120)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN ((cs_ship_date_sk#1 - cs_sold_date_sk#5) > 120) THEN 1 ELSE 0 END)]

(26) CometExchange
Input [8]: [_groupingexpression#15, sm_type#10, cc_name#12, sum#16, sum#17, sum#18, sum#19, sum#20]
Arguments: hashpartitioning(_groupingexpression#15, sm_type#10, cc_name#12, 5), ENSURE_REQUIREMENTS, CometNativeShuffle, [plan_id=1]

(27) CometHashAggregate
Input [8]: [_groupingexpression#15, sm_type#10, cc_name#12, sum#16, sum#17, sum#18, sum#19, sum#20]
Keys [3]: [_groupingexpression#15, sm_type#10, cc_name#12]
Functions [5]: [sum(CASE WHEN ((cs_ship_date_sk#1 - cs_sold_date_sk#5) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((cs_ship_date_sk#1 - cs_sold_date_sk#5) > 30) AND ((cs_ship_date_sk#1 - cs_sold_date_sk#5) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((cs_ship_date_sk#1 - cs_sold_date_sk#5) > 60) AND ((cs_ship_date_sk#1 - cs_sold_date_sk#5) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((cs_ship_date_sk#1 - cs_sold_date_sk#5) > 90) AND ((cs_ship_date_sk#1 - cs_sold_date_sk#5) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((cs_ship_date_sk#1 - cs_sold_date_sk#5) > 120) THEN 1 ELSE 0 END)]

(28) CometTakeOrderedAndProject
Input [8]: [substr(w_warehouse_name, 1, 20)#21, sm_type#10, cc_name#12, 30 days #22, 31 - 60 days #23, 61 - 90 days #24, 91 - 120 days #25, >120 days #26]
Arguments: TakeOrderedAndProject(limit=100, orderBy=[substr(w_warehouse_name, 1, 20)#21 ASC NULLS FIRST,sm_type#10 ASC NULLS FIRST,cc_name#12 ASC NULLS FIRST], output=[substr(w_warehouse_name, 1, 20)#21,sm_type#10,cc_name#12,30 days #22,31 - 60 days #23,61 - 90 days #24,91 - 120 days #25,>120 days #26]), [substr(w_warehouse_name, 1, 20)#21, sm_type#10, cc_name#12, 30 days #22, 31 - 60 days #23, 61 - 90 days #24, 91 - 120 days #25, >120 days #26], 100, [substr(w_warehouse_name, 1, 20)#21 ASC NULLS FIRST, sm_type#10 ASC NULLS FIRST, cc_name#12 ASC NULLS FIRST], [substr(w_warehouse_name, 1, 20)#21, sm_type#10, cc_name#12, 30 days #22, 31 - 60 days #23, 61 - 90 days #24, 91 - 120 days #25, >120 days #26]

(29) CometColumnarToRow [codegen id : 1]
Input [8]: [substr(w_warehouse_name, 1, 20)#21, sm_type#10, cc_name#12, 30 days #22, 31 - 60 days #23, 61 - 90 days #24, 91 - 120 days #25, >120 days #26]

