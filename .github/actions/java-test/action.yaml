# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: "Java Test"
description: "Run Java tests"
inputs:
  artifact_name:
    description: "Unique name for uploaded artifacts for this run"
    required: true
  suites:
    description: 'Which Scalatest test suites to run'
    required: false
    default: ''
  maven_opts:
    description: 'Maven options passed to the mvn command'
    required: false
    default: ''
  scan_impl:
    description: 'The default Parquet scan implementation'
    required: false
    default: 'native_comet'
  upload-test-reports:
    description: 'Whether to upload test results including coverage to GitHub'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Run Cargo build
      shell: bash
      run: |
        cd native
        cargo build

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.m2/repository
          /root/.m2/repository
        key: ${{ runner.os }}-java-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-java-maven-

    - name: Run Maven compile
      shell: bash
      run: |
        ./mvnw -B compile test-compile scalafix:scalafix -Dscalafix.mode=CHECK -Psemanticdb ${{ inputs.maven_opts }}

    - name: Run all tests
      shell: bash
      if: ${{ inputs.suites == '' }}
      env:
        COMET_PARQUET_SCAN_IMPL: ${{ inputs.scan_impl }}
      run: |
        MAVEN_OPTS="-Xmx4G -Xms2G -XX:+UnlockDiagnosticVMOptions -XX:+ShowMessageBoxOnError -XX:+HeapDumpOnOutOfMemoryError -XX:ErrorFile=./hs_err_pid%p.log" SPARK_HOME=`pwd` ./mvnw -B clean install ${{ inputs.maven_opts }}
    - name: Run specified tests
      shell: bash
      if: ${{ inputs.suites != '' }}
      env:
        COMET_PARQUET_SCAN_IMPL: ${{ inputs.scan_impl }}
      run: |
        MAVEN_SUITES="$(echo "${{ inputs.suites }}" | paste -sd, -)"
        echo "Running with MAVEN_SUITES=$MAVEN_SUITES"
        MAVEN_OPTS="-Xmx4G -Xms2G -DwildcardSuites=$MAVEN_SUITES -XX:+UnlockDiagnosticVMOptions -XX:+ShowMessageBoxOnError -XX:+HeapDumpOnOutOfMemoryError -XX:ErrorFile=./hs_err_pid%p.log" SPARK_HOME=`pwd` ./mvnw -B clean install ${{ inputs.maven_opts }}
    - name: Upload crash logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: crash-logs-${{ inputs.artifact_name }}
        path: "**/hs_err_pid*.log"
    - name: Debug listing
      if: failure()
      shell: bash
      run: |  
        echo "CWD: $(pwd)"
        ls -lah .
        ls -lah target
        find . -name 'unit-tests.log'
    - name: Upload unit-tests.log
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: unit-tests-${{ inputs.artifact_name }}
        path: "**/target/unit-tests.log"
    - name: Upload test results
      if: ${{ inputs.upload-test-reports == 'true' }}
      uses: actions/upload-artifact@v4
      with:
         name: java-test-reports-${{ inputs.artifact_name }}
         path: "**/target/surefire-reports/*.txt"
         retention-days: 7 # 1 week for test reports
         overwrite: true

    - name: Upload coverage results
      if: ${{ inputs.upload-test-reports == 'true' }}
      uses: codecov/codecov-action@v5
