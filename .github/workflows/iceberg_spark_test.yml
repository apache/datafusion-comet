# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Iceberg Spark SQL Tests

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

on:
  push:
    paths-ignore:
      - "doc/**"
      - "docs/**"
      - "**.md"
  pull_request:
    paths-ignore:
      - "doc/**"
      - "docs/**"
      - "**.md"
  # manual trigger
  # https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
  workflow_dispatch:

env:
  RUST_VERSION: stable

jobs:
  iceberg-spark:
    if: contains(github.event.pull_request.title, '[iceberg]')
    strategy:
      matrix:
        os: [ubuntu-24.04]
        java-version: [11, 17]
        iceberg-version: [{short: '1.8', full: '1.8.1'}]
        spark-version: [{short: '3.5', full: '3.5.6'}]
        scala-version: ['2.13']
      fail-fast: false
    name: iceberg-spark/${{ matrix.os }}/iceberg-${{ matrix.iceberg-version.full }}/spark-${{ matrix.spark-version.full }}/scala-${{ matrix.scala-version }}/java-${{ matrix.java-version }}
    runs-on: ${{ matrix.os }}
    container:
      image: amd64/rust
    env:
      SPARK_LOCAL_IP: localhost
    steps:
      - uses: actions/checkout@v5
      - name: Setup Rust & Java toolchain
        uses: ./.github/actions/setup-builder
        with:
          rust-version: ${{env.RUST_VERSION}}
          jdk-version: ${{ matrix.java-version }}
      - name: Build Comet
        shell: bash
        run: |
          PROFILES="-Pspark-${{matrix.spark-version.short}} -Pscala-${{matrix.scala-version}}" make release
      - name: Setup Iceberg
        uses: ./.github/actions/setup-iceberg-builder
        with:
          iceberg-version: ${{ matrix.iceberg-version.full }}
      - name: Run Iceberg Spark tests
        run: |
          cd apache-iceberg
          rm -rf /root/.m2/repository/org/apache/parquet # somehow parquet cache requires cleanups
          ENABLE_COMET=true ./gradlew -DsparkVersions=${{ matrix.spark-version.short }} -DscalaVersion=${{ matrix.scala-version }} -DflinkVersions= -DkafkaVersions= \
            :iceberg-spark:iceberg-spark-${{ matrix.spark-version.short }}_${{ matrix.scala-version }}:test \
            -Pquick=true -x javadoc

  iceberg-spark-extensions:
    if: contains(github.event.pull_request.title, '[iceberg]')
    strategy:
      matrix:
        os: [ubuntu-24.04]
        java-version: [11, 17]
        iceberg-version: [{short: '1.8', full: '1.8.1'}]
        spark-version: [{short: '3.5', full: '3.5.6'}]
        scala-version: ['2.13']
      fail-fast: false
    name: iceberg-spark-extensions/${{ matrix.os }}/iceberg-${{ matrix.iceberg-version.full }}/spark-${{ matrix.spark-version.full }}/scala-${{ matrix.scala-version }}/java-${{ matrix.java-version }}
    runs-on: ${{ matrix.os }}
    container:
      image: amd64/rust
    env:
      SPARK_LOCAL_IP: localhost
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust & Java toolchain
        uses: ./.github/actions/setup-builder
        with:
          rust-version: ${{env.RUST_VERSION}}
          jdk-version: ${{ matrix.java-version }}
      - name: Build Comet
        shell: bash
        run: |
          PROFILES="-Pspark-${{matrix.spark-version.short}} -Pscala-${{matrix.scala-version}}" make release
      - name: Setup Iceberg
        uses: ./.github/actions/setup-iceberg-builder
        with:
          iceberg-version: ${{ matrix.iceberg-version.full }}
      - name: Run Iceberg Spark extensions tests
        run: |
          cd apache-iceberg
          rm -rf /root/.m2/repository/org/apache/parquet # somehow parquet cache requires cleanups
          ENABLE_COMET=true ./gradlew -DsparkVersions=${{ matrix.spark-version.short }} -DscalaVersion=${{ matrix.scala-version }} -DflinkVersions= -DkafkaVersions= \
            :iceberg-spark:iceberg-spark-extensions-${{ matrix.spark-version.short }}_${{ matrix.scala-version }}:test \
            -Pquick=true -x javadoc

  iceberg-spark-runtime:
    if: contains(github.event.pull_request.title, '[iceberg]')
    strategy:
      matrix:
        os: [ubuntu-24.04]
        java-version: [11, 17]
        iceberg-version: [{short: '1.8', full: '1.8.1'}]
        spark-version: [{short: '3.5', full: '3.5.6'}]
        scala-version: ['2.13']
      fail-fast: false
    name: iceberg-spark-runtime/${{ matrix.os }}/iceberg-${{ matrix.iceberg-version.full }}/spark-${{ matrix.spark-version.full }}/scala-${{ matrix.scala-version }}/java-${{ matrix.java-version }}
    runs-on: ${{ matrix.os }}
    container:
      image: amd64/rust
    env:
      SPARK_LOCAL_IP: localhost
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust & Java toolchain
        uses: ./.github/actions/setup-builder
        with:
          rust-version: ${{env.RUST_VERSION}}
          jdk-version: ${{ matrix.java-version }}
      - name: Build Comet
        shell: bash
        run: |
          PROFILES="-Pspark-${{matrix.spark-version.short}} -Pscala-${{matrix.scala-version}}" make release
      - name: Setup Iceberg
        uses: ./.github/actions/setup-iceberg-builder
        with:
          iceberg-version: ${{ matrix.iceberg-version.full }}
      - name: Run Iceberg Spark runtime tests
        run: |
          cd apache-iceberg
          rm -rf /root/.m2/repository/org/apache/parquet # somehow parquet cache requires cleanups
          ENABLE_COMET=true ./gradlew -DsparkVersions=${{ matrix.spark-version.short }} -DscalaVersion=${{ matrix.scala-version }} -DflinkVersions= -DkafkaVersions= \
            :iceberg-spark:iceberg-spark-runtime-${{ matrix.spark-version.short }}_${{ matrix.scala-version }}:integrationTest \
            -Pquick=true -x javadoc